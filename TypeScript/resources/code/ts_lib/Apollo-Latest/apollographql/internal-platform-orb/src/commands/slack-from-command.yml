description: >
  Post a Slack message where the message content is from running a command. That command MUST output /tmp/notification.txt. If no (or blank) file execution is halted

  NOTE: Must be run with the slack-orb context

parameters:
  channel:
    type: string
    default: ''
    description: The name of the channel you want to post to. Can also be set by exporting "export CHANNEL=<...> >> $BASH_ENV"
  command:
    type: string
    description: A command which must produce a /tmp/notification.txt file

steps:
  - run:
      name: Init...
      command: |
        PARAMETERS_CHANNEL="<< parameters.channel >>"
        echo "export NOTIFICATION_CHANNEL=${PARAMETERS_CHANNEL:-$CHANNEL}" >> $BASH_ENV
  - run:
      name: Verify input...
      command: |
        if [ -z "$NOTIFICATION_CHANNEL" ];
        then
          echo No parameters.channel provided, and no CHANNEL env var found...
          exit 1
        fi
  - run:
      name: Run command
      command: |
        << parameters.command >>
  - run:
      name: Halt if no changes
      command: |
        if [ ! -f /tmp/notification.txt ]
        then
          circleci-agent step halt
        fi

        if [ ! -s /tmp/notification.txt ]
        then
          # file IS zero size. Like you piped to a file but never wrote to it
          circleci-agent step halt
        fi
  - run:
      name: Command result to environment variable
      command: |
        echo "export NOTIFICATION_TEXT='$(cat /tmp/notification.txt)'" >> $BASH_ENV
  - slack-notify-compact:
      channel: "$NOTIFICATION_CHANNEL"
      custom: |
        {
          "blocks": [{
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "$NOTIFICATION_TEXT"
            }
          }]
        }
