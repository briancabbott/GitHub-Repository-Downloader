description: >
  Blatant slimmed down version of the traditional Slack Orb's `notify` command.

  https://github.com/CircleCI-Public/slack-orb/blob/master/src/commands/notify.yml

  The regular `notify` command comes in at a whopping 12K for processed config
  size _every_ time you call it or reference it. This version aims to be far
  more lightweight, but _will not_ hold your hand. If you need more features,
  use the regular Orb. If you are having trouble debugging, use the regular Orb.

  All parameters, env vars, and spiritual influences herein will follow the
  regular Orb _heavily_.

  NOTES:
  - Must be run with the slack-orb context
  - Must be run on a system with JQ and Curl installed
parameters:
  event:
    description: |
      In what event should this message send? Options: ["fail", "pass", "always"]
    type: enum
    enum: ["fail", "pass", "always"]
    default: "always"
  channel:
    type: string
    description: The name of the SINGLE channel you want to post to.
  custom:
    type: string
    description: |
      Enter a custom message template.
      1. Create your message template using the Block Kit Builder: https://app.slack.com/block-kit-builder/.
      2. Insert any desired environment variables.
      3. Paste value here.
steps:
  - run:
      when: on_fail
      name: Slack - Detecting Job Status (FAIL)
      command: |
        echo 'export CCI_STATUS="fail"' > /tmp/SLACK_JOB_STATUS
  - run:
      when: on_success
      name: Slack - Detecting Job Status (PASS)
      command: |
        echo 'export CCI_STATUS="pass"' > /tmp/SLACK_JOB_STATUS
  - setup
  - run:
      when: always
      name: Slack - Sending Notification
      environment:
        SLACK_PARAM_EVENT: "<<parameters.event>>"
        SLACK_PARAM_CHANNEL: "<<parameters.channel>>"
        SLACK_PARAM_CUSTOM: "<<parameters.custom>>"
      command: bash /tmp/apollo_internal_platform_orb/src/scripts/alert-slack-notify.sh
