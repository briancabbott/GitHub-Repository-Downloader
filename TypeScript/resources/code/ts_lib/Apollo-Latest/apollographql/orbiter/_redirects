# Netlify's functions are invoked at `/.netlify/functions/fn-name`, which is
# definitely not ideal, and we'd like to also hide the provider (netlify) in the
# url. This adds a transparent "200" proxy from root locations to actual functions
https://rover.apollo.dev/tar/* /.netlify/functions/tar 200!
https://rover.apollo.dev/win/* /.netlify/functions/install-rover 200!
https://rover.apollo.dev/nix/* /.netlify/functions/install-rover 200!

https://rover.apollo.dev/plugins/* /.netlify/functions/install-plugin 200!

# Doesn't yet have a specific host.  Probably going to be used for Rover AND Router.
/telemetry /.netlify/functions/telemetry 200!

https://install.apollographql.com/legacy-cli/* /.netlify/functions/legacy-cli 200!

# These are for the Router despite the `/download/` prefix.
# Working plan is to use domain-based redirects to accomplish this.
https://router.apollo.dev/download/nix/* /.netlify/functions/download-router 200!

# Non-Functions
https://router.apollo.dev/ https://www.apollographql.com/docs/router/quickstart 302
https://rover.apollo.dev/ https://www.apollographql.com/docs/rover 302

https://rover.apollo.dev/quickstart https://www.apollographql.com/docs/federation/quickstart
https://rover.apollo.dev/quickstart/products/graphql https://7bssbnldib.execute-api.us-east-1.amazonaws.com/Prod/graphql 200!
https://rover.apollo.dev/quickstart/reviews/graphql https://w0jtezo2pa.execute-api.us-east-1.amazonaws.com/Prod/graphql 200!
https://rover.apollo.dev/templates https://main--apollo-dx.apollographos.net/graphql 200!
