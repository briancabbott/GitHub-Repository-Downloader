instances:

    ## @param host - string - required
    ## Resin host to connect to.
    #
  - host: localhost

    ## @param port - integer - required
    ## Resin port to connect to.
    #
    port: 7199

    ## @param user - string - optional
    ## Username from the credentials needed to connect to the host.
    #
    # user: <USERNAME>

    ## @param password - string - optional
    ## Password from the credentials needed to connect to the host.
    #
    # password: <PASSWORD>

    ## @param process_name_regex - string - optional
    ## Instead of specifying a host, and port. The agent can connect using the attach api.
    ## This requires the JDK to be installed and the path to `tools.jar` to be set below in `tools_jar_path` parameter.
    #
    # process_name_regex: .*process_name.*

    ## @param tools_jar_path - string - optional
    ## Needs to be set when process_name_regex parameter is set.
    #
    # tools_jar_path: /usr/lib/jvm/java-7-openjdk-amd64/lib/tools.jar

    ## @param name - string - optional
    ## Set your instance name
    #
    # name: resin_instance

    ## @param java_bin_path - string - optional
    ## java_bin_path should be set if the agent cannot find your java executable
    #
    # java_bin_path: <JAVA_PATH>

    ## @param java_options - string - optional
    ## List of Java JVM options.
    #
    # java_options: "-Xmx200m -Xms50m"

    ## @param trust_store_path - string - optional
    ## trust_store_path should be set if "com.sun.management.jmxremote.ssl" is
    ## set to true on the target JVM.
    ## It's the path to your trusted store
    #
    # trust_store_path: <TRUSTSTORE.JKS_PATH>

    ## @param trust_store_password - string - optional
    ## `trust_store_password` should be set if "com.sun.management.jmxremote.ssl" is
    ## set to true on the target JVM. It's the password for your TrustStore.jks file.
    #
    # trust_store_password: <PASSWORD>

    ## @param key_store_path - string - optional
    ## key_store_path should be set if "com.sun.management.jmxremote.ssl.need.client.auth"
    ## is set to true on the target JVM.
    ## It's the path to your key store.
    #
    # key_store_path: <KEYSTORE.JKS_PATH>

    ## @param key_store_password - string - optional
    ## key_store_password should be set if "com.sun.management.jmxremote.ssl.need.client.auth"
    ## is set to true on the target JVM.
    ## It's the password for your KeyStore.jks file.
    #
    # key_store_password: <PASSWORD>

    ## @param rmi_registry_ssl - boolean - optional
    ## Whether or not the agent should connect to the rmi registry using ssl.
    ## should be set to true if "com.sun.management.jmxremote.registry.ssl" is set to true on the target JVM.
    #
    # rmi_registry_ssl: false

    ## @param tags - list of key:value element - optional
    ## List of tags to attach to every metric, event and service check emitted by this integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

init_config:
  ## @param is_jmx - boolean - required
  ## Whether or not this file is a configuration for a JMX integration.
  #
  is_jmx: true

  ## @param collect_default_metrics - boolean - required
  ## Whether or not the check should collect all default metrics for this integration.
  #
  collect_default_metrics: true

  ## @param conf - list of objects - required
  ## List of metrics to be collected by the integration
  ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
  ## Agent 5: Customize all your metrics below
  ## Agent 6: The default metrics to be collected are kept in metrics.yaml, but you can still add your own metrics here
  #
  conf:
    - include:
      domain: resin
      type: ConnectionPool
      attribute:
        ConnectionCount:
          alias: resin.connection_pool.connection_count
          metric_type: gauge
        ConnectionActiveCount:
          alias: resin.connection_pool.connection_active_count
          metric_type: gauge
        ConnectionIdleCount:
          alias: resin.connection_pool.connection_idle_count
          metric_type: gauge
        ConnectionCreateCount:
          alias: resin.connection_pool.connection_create_count
          metric_type: gauge
        MaxConnections:
          alias: resin.connection_pool.max_connections
          metric_type: gauge
        MaxOverflowConnections:
          alias: resin.connection_pool.max_overflow_connections
          metric_type: gauge
        MaxCreateConnections:
          alias: resin.connection_pool.max_create_connections
          metric_type: gauge

    - include:
      domain: resin
      type: ThreadPool
      attribute:
        ThreadActiveCount:
          alias: resin.thread_pool.thread_active_count
          metric_type: gauge
        ThreadCount:
          alias: resin.thread_pool.thread_count
          metric_type: gauge
        ThreadIdleCount:
          alias: resin.thread_pool.thread_idle_count
          metric_type: gauge
        ThreadMax:
          alias: resin.thread_pool.thread_max
          metric_type: gauge
        ThreadWaitCount:
          alias: resin.thread_pool.thread_wait_count
          metric_type: gauge

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /var/opt/resin/log/*.log
#     source: resin
#     service: <SERVICE_NAME>
