variables:
  TAGGER_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/integrations-core:tagger
  TAGGER_EMAIL: packages@datadoghq.com
  TAGGER_NAME: ci.integrations-extras

stages:
  - release

release-auto:
  stage: release
  image: $TAGGER_IMAGE
  only:
    - master
  except:
    - schedules
  script:
    - ddev --version
    - ddev config set repos.extras .
    - ddev config set repo extras
    # ssh-agent performed in the main script to be persisted
    - eval "$(ssh-agent -s)"
    - ./.gitlab/release/git-auth.sh
    # Prefix every line with a timestamp
    - ./.gitlab/release/tag-release.sh 2>&1 | ts "[%H:%M:%S %Z]  "
  tags: [ "runner:main", "size:large" ]

release-manual:
  stage: release
  image: $TAGGER_IMAGE
  only:
    # Integration release tags e.g. any_check-X.Y.Z-rc.N
    - /.*-\d+\.\d+\.\d+(-(rc|pre|alpha|beta)\.\d+)?$/
  except:
  - schedules
  script:
    - ddev --version
    - ddev config set repos.extras .
    - ddev config set repo extras
    - ./.gitlab/release/git-auth.sh
    # Get tagger info
    - tagger=$(git for-each-ref refs/tags/$CI_COMMIT_TAG  --format='%(taggername) %(taggeremail)')
    # The automatic release builder will trigger this job as a side-effect of
    # tagging releases. To prevent multiple redundant builds we don't trigger
    # the pipeline unless the tag was applied manually.
    - |
      if [[ "$tagger" =~ "$TAGGER_NAME <$TAGGER_EMAIL>" ]]; then
          echo "Skipping, packages have already been built"
      else
          ./.gitlab/release/sign-release.sh
          ./.gitlab/release/build-packages.sh
      fi
  tags: [ "runner:main", "size:large" ]
