namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// An individual vulnerability within an Advisory
    /// </summary>
    public class SecurityVulnerability : QueryableValue<SecurityVulnerability>
    {
        internal SecurityVulnerability(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// The Advisory associated with this Vulnerability
        /// </summary>
        public SecurityAdvisory Advisory => this.CreateProperty(x => x.Advisory, Octokit.GraphQL.Model.SecurityAdvisory.Create);

        /// <summary>
        /// The first version containing a fix for the vulnerability
        /// </summary>
        public SecurityAdvisoryPackageVersion FirstPatchedVersion => this.CreateProperty(x => x.FirstPatchedVersion, Octokit.GraphQL.Model.SecurityAdvisoryPackageVersion.Create);

        /// <summary>
        /// A description of the vulnerable package
        /// </summary>
        public SecurityAdvisoryPackage Package => this.CreateProperty(x => x.Package, Octokit.GraphQL.Model.SecurityAdvisoryPackage.Create);

        /// <summary>
        /// The severity of the vulnerability within this package
        /// </summary>
        public SecurityAdvisorySeverity Severity { get; }

        /// <summary>
        /// When the vulnerability was last updated
        /// </summary>
        public DateTimeOffset UpdatedAt { get; }

        /// <summary>
        /// A string that describes the vulnerable package versions.
        /// This string follows a basic syntax with a few forms.
        /// + `= 0.2.0` denotes a single vulnerable version.
        /// + `&lt;= 1.0.8` denotes a version range up to and including the specified version
        /// + `&lt; 0.1.11` denotes a version range up to, but excluding, the specified version
        /// + `&gt;= 4.3.0, &lt; 4.3.5` denotes a version range with a known minimum and maximum version.
        /// + `&gt;= 0.0.1` denotes a version range with a known minimum, but no known maximum
        /// </summary>
        public string VulnerableVersionRange { get; }

        internal static SecurityVulnerability Create(Expression expression)
        {
            return new SecurityVulnerability(expression);
        }
    }
}