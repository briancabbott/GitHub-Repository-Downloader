namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// Autogenerated return type of AddProjectCard
    /// </summary>
    public class AddProjectCardPayload : QueryableValue<AddProjectCardPayload>
    {
        internal AddProjectCardPayload(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// The edge from the ProjectColumn's card connection.
        /// </summary>
        public ProjectCardEdge CardEdge => this.CreateProperty(x => x.CardEdge, Octokit.GraphQL.Model.ProjectCardEdge.Create);

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// The ProjectColumn
        /// </summary>
        public ProjectColumn ProjectColumn => this.CreateProperty(x => x.ProjectColumn, Octokit.GraphQL.Model.ProjectColumn.Create);

        internal static AddProjectCardPayload Create(Expression expression)
        {
            return new AddProjectCardPayload(expression);
        }
    }
}