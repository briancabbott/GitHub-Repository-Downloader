namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// Autogenerated return type of CreateCommitOnBranch
    /// </summary>
    public class CreateCommitOnBranchPayload : QueryableValue<CreateCommitOnBranchPayload>
    {
        internal CreateCommitOnBranchPayload(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// The new commit.
        /// </summary>
        public Commit Commit => this.CreateProperty(x => x.Commit, Octokit.GraphQL.Model.Commit.Create);

        /// <summary>
        /// The ref which has been updated to point to the new commit.
        /// </summary>
        public Ref Ref => this.CreateProperty(x => x.Ref, Octokit.GraphQL.Model.Ref.Create);

        internal static CreateCommitOnBranchPayload Create(Expression expression)
        {
            return new CreateCommitOnBranchPayload(expression);
        }
    }
}