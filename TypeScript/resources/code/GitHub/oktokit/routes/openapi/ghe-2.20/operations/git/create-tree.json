{
  "summary": "Create a tree",
  "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://developer.github.com/enterprise/2.20/v3/git/commits/#create-a-commit)\" and \"[Update a reference](https://developer.github.com/enterprise/2.20/v3/git/refs/#update-a-reference).\"",
  "operationId": "git/create-tree",
  "tags": ["git"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/enterprise/2.20/v3/git/trees/#create-a-tree"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    }
  ],
  "responses": {
    "201": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "url": { "type": "string" },
              "tree": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": { "type": "string" },
                    "mode": { "type": "string" },
                    "type": { "type": "string" },
                    "size": { "type": "number" },
                    "sha": { "type": "string" },
                    "url": { "type": "string" }
                  }
                }
              }
            }
          },
          "example": {
            "sha": "cd8274d15fa3ae2ab983129fb037999f264ba9a7",
            "url": "https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7",
            "tree": [
              {
                "path": "file.rb",
                "mode": "100644",
                "type": "blob",
                "size": 132,
                "sha": "7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b"
              }
            ]
          }
        }
      },
      "headers": {
        "Location": {
          "example": "https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7",
          "schema": { "type": "string" }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -XPOST \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  http://{hostname}/repos/octocat/hello-world/git/trees \\\n  -d '{\"tree\":[{\"path\":\"path\",\"mode\":\"mode\",\"type\":\"type\",\"sha\":\"sha\",\"content\":\"content\"}]}'"
    },
    {
      "lang": "JS",
      "source": "octokit.git.createTree({\n  owner: 'octocat',\n  repo: 'hello-world',\n  tree: [\n    {\n      path: 'path',\n      mode: 'mode',\n      type: 'type',\n      sha: 'sha',\n      content: 'content'\n    }\n  ]\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.create_tree(\n  'hello-world',\n  [\n    {\n      path: 'path',\n      mode: 'mode',\n      type: 'type',\n      sha: 'sha',\n      content: 'content'\n    }\n  ]\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": []
  },
  "x-changes": [],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "type": "object",
          "properties": {
            "tree": {
              "type": "array",
              "description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The file referenced in the tree."
                  },
                  "mode": {
                    "type": "string",
                    "description": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
                    "enum": ["100644", "100755", "040000", "160000", "120000"]
                  },
                  "type": {
                    "type": "string",
                    "description": "Either `blob`, `tree`, or `commit`.",
                    "enum": ["blob", "tree", "commit"]
                  },
                  "sha": {
                    "type": "string",
                    "description": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`. If the value is `null` then the file will be deleted.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
                    "nullable": true
                  },
                  "content": {
                    "type": "string",
                    "description": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error."
                  }
                }
              }
            },
            "base_tree": {
              "type": "string",
              "description": "The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted."
            }
          },
          "required": ["tree"]
        },
        "example": {
          "base_tree": "9fb037999f264ba9a7fc6274d15fa3ae2ab98312",
          "tree": [
            {
              "path": "file.rb",
              "mode": "100644",
              "type": "blob",
              "sha": "44b4fc6d56897b048c772eb4087f854f46256132"
            }
          ]
        }
      }
    }
  }
}
