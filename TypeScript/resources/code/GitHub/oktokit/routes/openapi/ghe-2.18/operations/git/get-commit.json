{
  "summary": "Get a commit",
  "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
  "operationId": "git/get-commit",
  "tags": ["git"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/enterprise/2.18/v3/git/commits/#get-a-commit"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "commit_sha",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    }
  ],
  "responses": {
    "200": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "node_id": { "type": "string" },
              "url": { "type": "string" },
              "author": {
                "type": "object",
                "properties": {
                  "date": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              },
              "committer": {
                "type": "object",
                "properties": {
                  "date": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              },
              "message": { "type": "string" },
              "tree": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "sha": { "type": "string" }
                }
              },
              "parents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": { "type": "string" },
                    "sha": { "type": "string" }
                  }
                }
              },
              "verification": {
                "type": "object",
                "properties": {
                  "verified": { "type": "boolean" },
                  "reason": { "type": "string" },
                  "signature": { "type": "string" },
                  "payload": { "type": "string" }
                }
              }
            }
          },
          "example": {
            "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
            "author": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "committer": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "message": "added readme, because im a good github citizen",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
              "sha": "691272480426f78a0138979dd3ce63b77f706feb"
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
              }
            ],
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  http://{hostname}/repos/octocat/hello-world/git/commits/COMMIT_SHA"
    },
    {
      "lang": "JS",
      "source": "octokit.git.getCommit({\n  owner: 'octocat',\n  repo: 'hello-world',\n  commit_sha: 'commit_sha'\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.commit(\n  'hello-world',\n  'commit_sha'\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": []
  },
  "x-changes": []
}
