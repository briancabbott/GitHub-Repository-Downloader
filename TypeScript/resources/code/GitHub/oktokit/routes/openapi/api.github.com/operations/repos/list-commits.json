{
  "summary": "List commits",
  "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
  "operationId": "repos/list-commits",
  "tags": ["repos"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/v3/repos/commits/#list-commits"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "sha",
      "description": "SHA or branch to start listing commits from. Default: the repositoryâ€™s default branch (usually `master`).",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "path",
      "description": "Only commits containing this file path will be returned.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "author",
      "description": "GitHub login or email address by which to filter by commit author.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "since",
      "description": "Only commits after this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "until",
      "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "per_page",
      "description": "Results per page (max 100)",
      "in": "query",
      "schema": { "type": "integer", "default": 30 }
    },
    {
      "name": "page",
      "description": "Page number of the results to fetch.",
      "in": "query",
      "schema": { "type": "integer", "default": 1 }
    }
  ],
  "responses": {
    "200": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "sha": { "type": "string" },
                "node_id": { "type": "string" },
                "html_url": { "type": "string" },
                "comments_url": { "type": "string" },
                "commit": {
                  "type": "object",
                  "properties": {
                    "url": { "type": "string" },
                    "author": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "date": { "type": "string" }
                      }
                    },
                    "committer": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "date": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" },
                    "tree": {
                      "type": "object",
                      "properties": {
                        "url": { "type": "string" },
                        "sha": { "type": "string" }
                      }
                    },
                    "comment_count": { "type": "number" },
                    "verification": {
                      "type": "object",
                      "properties": {
                        "verified": { "type": "boolean" },
                        "reason": { "type": "string" },
                        "signature": { "type": "string" },
                        "payload": { "type": "string" }
                      }
                    }
                  }
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "login": { "type": "string" },
                    "id": { "type": "number" },
                    "node_id": { "type": "string" },
                    "avatar_url": { "type": "string" },
                    "gravatar_id": { "type": "string" },
                    "url": { "type": "string" },
                    "html_url": { "type": "string" },
                    "followers_url": { "type": "string" },
                    "following_url": { "type": "string" },
                    "gists_url": { "type": "string" },
                    "starred_url": { "type": "string" },
                    "subscriptions_url": { "type": "string" },
                    "organizations_url": { "type": "string" },
                    "repos_url": { "type": "string" },
                    "events_url": { "type": "string" },
                    "received_events_url": { "type": "string" },
                    "type": { "type": "string" },
                    "site_admin": { "type": "boolean" }
                  }
                },
                "committer": {
                  "type": "object",
                  "properties": {
                    "login": { "type": "string" },
                    "id": { "type": "number" },
                    "node_id": { "type": "string" },
                    "avatar_url": { "type": "string" },
                    "gravatar_id": { "type": "string" },
                    "url": { "type": "string" },
                    "html_url": { "type": "string" },
                    "followers_url": { "type": "string" },
                    "following_url": { "type": "string" },
                    "gists_url": { "type": "string" },
                    "starred_url": { "type": "string" },
                    "subscriptions_url": { "type": "string" },
                    "organizations_url": { "type": "string" },
                    "repos_url": { "type": "string" },
                    "events_url": { "type": "string" },
                    "received_events_url": { "type": "string" },
                    "type": { "type": "string" },
                    "site_admin": { "type": "boolean" }
                  }
                },
                "parents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": { "type": "string" },
                      "sha": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "example": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
              "commit": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "author": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "message": "Fix all the bugs",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                },
                "comment_count": 0,
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              },
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "committer": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              ]
            }
          ]
        }
      },
      "headers": {
        "Link": {
          "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
          "schema": { "type": "string" }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  https://api.github.com/repos/octocat/hello-world/commits"
    },
    {
      "lang": "JS",
      "source": "octokit.repos.listCommits({\n  owner: 'octocat',\n  repo: 'hello-world'\n})"
    },
    { "lang": "Ruby", "source": "octokit.commits(\n  'hello-world'\n)" }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": []
  },
  "x-changes": []
}
