{
  "summary": "List review comments in a repository",
  "description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nLists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.",
  "operationId": "pulls/list-review-comments-for-repo",
  "tags": ["pulls"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/v3/pulls/comments/#list-review-comments-in-a-repository"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "sort",
      "description": "Can be either `created` or `updated` comments.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "enum": ["created", "updated"],
        "default": "created"
      }
    },
    {
      "name": "direction",
      "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
      "in": "query",
      "required": false,
      "schema": { "type": "string", "enum": ["asc", "desc"] }
    },
    {
      "name": "since",
      "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only returns comments `updated` at or after this time.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "per_page",
      "description": "Results per page (max 100)",
      "in": "query",
      "schema": { "type": "integer", "default": 30 }
    },
    {
      "name": "page",
      "description": "Page number of the results to fetch.",
      "in": "query",
      "schema": { "type": "integer", "default": 1 }
    }
  ],
  "responses": {
    "200": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "pull_request_review_id": { "type": "number" },
                "id": { "type": "number" },
                "node_id": { "type": "string" },
                "diff_hunk": { "type": "string" },
                "path": { "type": "string" },
                "position": { "type": "number" },
                "original_position": { "type": "number" },
                "commit_id": { "type": "string" },
                "original_commit_id": { "type": "string" },
                "in_reply_to_id": { "type": "number" },
                "user": {
                  "type": "object",
                  "properties": {
                    "login": { "type": "string" },
                    "id": { "type": "number" },
                    "node_id": { "type": "string" },
                    "avatar_url": { "type": "string" },
                    "gravatar_id": { "type": "string" },
                    "url": { "type": "string" },
                    "html_url": { "type": "string" },
                    "followers_url": { "type": "string" },
                    "following_url": { "type": "string" },
                    "gists_url": { "type": "string" },
                    "starred_url": { "type": "string" },
                    "subscriptions_url": { "type": "string" },
                    "organizations_url": { "type": "string" },
                    "repos_url": { "type": "string" },
                    "events_url": { "type": "string" },
                    "received_events_url": { "type": "string" },
                    "type": { "type": "string" },
                    "site_admin": { "type": "boolean" }
                  }
                },
                "body": { "type": "string" },
                "created_at": { "type": "string" },
                "updated_at": { "type": "string" },
                "html_url": { "type": "string" },
                "pull_request_url": { "type": "string" },
                "author_association": { "type": "string" },
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": { "href": { "type": "string" } }
                    },
                    "html": {
                      "type": "object",
                      "properties": { "href": { "type": "string" } }
                    },
                    "pull_request": {
                      "type": "object",
                      "properties": { "href": { "type": "string" } }
                    }
                  }
                },
                "start_line": { "type": "number" },
                "original_start_line": { "type": "number" },
                "start_side": { "type": "string" },
                "line": { "type": "number" },
                "original_line": { "type": "number" },
                "side": { "type": "string" }
              }
            }
          },
          "example": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
              "pull_request_review_id": 42,
              "id": 10,
              "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
              "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
              "path": "file1.txt",
              "position": 1,
              "original_position": 4,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
              "in_reply_to_id": 8,
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Great stuff!",
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z",
              "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
              "author_association": "NONE",
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                }
              },
              "start_line": 1,
              "original_start_line": 1,
              "start_side": "RIGHT",
              "line": 2,
              "original_line": 2,
              "side": "RIGHT"
            }
          ]
        }
      },
      "headers": {
        "Link": {
          "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
          "schema": { "type": "string" }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  https://api.github.com/repos/octocat/hello-world/pulls/comments"
    },
    {
      "lang": "JS",
      "source": "octokit.pulls.listReviewCommentsForRepo({\n  owner: 'octocat',\n  repo: 'hello-world'\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.review_comments_for_repo(\n  'hello-world'\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": [
      {
        "name": "comfort-fade",
        "required": false,
        "note": "Multi-line comments in a pull request diff is currently available for developers to preview. To access the new response fields during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.comfort-fade-preview+json\n```"
      },
      {
        "name": "squirrel-girl",
        "required": false,
        "note": "An additional `reactions` object in the review comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```"
      }
    ]
  },
  "x-changes": [
    {
      "type": "operation",
      "date": "2020-06-05",
      "note": "\"pulls/list-comments-for-repo\" operation ID is now \"pulls/list-review-comments-for-repo\"",
      "before": { "operationId": "pulls/list-comments-for-repo" },
      "after": { "operationId": "pulls/list-review-comments-for-repo" }
    }
  ]
}
