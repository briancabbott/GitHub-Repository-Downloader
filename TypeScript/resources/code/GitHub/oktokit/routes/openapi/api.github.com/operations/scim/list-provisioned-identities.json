{
  "summary": "List SCIM provisioned identities",
  "description": "To filter for a specific email address, use the `email` query parameter and the `eq` operator:\n\nYour filter would look like this cURL command:\n\nRetrieves users that match the filter. In the example, we searched only for [octocat@github.com](mailto:octocat@github.com).\n\nRetrieves a paginated list of all provisioned organization members, including pending invitations.",
  "operationId": "scim/list-provisioned-identities",
  "tags": ["scim"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/v3/scim/#list-scim-provisioned-identities"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "org",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "startIndex",
      "description": "Used for pagination: the index of the first result to return.",
      "in": "query",
      "required": false,
      "schema": { "type": "integer" }
    },
    {
      "name": "count",
      "description": "Used for pagination: the number of results to return.",
      "in": "query",
      "required": false,
      "schema": { "type": "integer" }
    },
    {
      "name": "filter",
      "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query: `?filter=userName%20eq%20\\\"Octocat\\\"`.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    }
  ],
  "responses": {
    "200": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "schemas": { "type": "array", "items": { "type": "string" } },
              "totalResults": { "type": "number" },
              "itemsPerPage": { "type": "number" },
              "startIndex": { "type": "number" },
              "Resources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "id": { "type": "string" },
                    "externalId": { "type": "string" },
                    "userName": { "type": "string" },
                    "name": {
                      "type": "object",
                      "properties": {
                        "givenName": { "type": "string" },
                        "familyName": { "type": "string" }
                      }
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": { "type": "string" },
                          "primary": { "type": "boolean" },
                          "type": { "type": "string" }
                        }
                      }
                    },
                    "active": { "type": "boolean" },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "resourceType": { "type": "string" },
                        "created": { "type": "string" },
                        "lastModified": { "type": "string" },
                        "location": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "examples": {
            "response-with-filter": {
              "summary": "Response with filter",
              "value": {
                "schemas": [
                  "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                ],
                "totalResults": 1,
                "itemsPerPage": 1,
                "startIndex": 1,
                "Resources": [
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
                    "id": "5fc0c238-1112-11e8-8e45-920c87bdbd75",
                    "externalId": "00u1dhhb1fkIGP7RL1d8",
                    "userName": "octocat@github.com",
                    "name": { "givenName": "Mona", "familyName": "Octocat" },
                    "emails": [
                      {
                        "value": "octocat@github.com",
                        "primary": true,
                        "type": "work"
                      }
                    ],
                    "active": true,
                    "meta": {
                      "resourceType": "User",
                      "created": "2018-02-13T15:05:24.000-08:00",
                      "lastModified": "2018-02-13T15:05:55.000-08:00",
                      "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75"
                    }
                  }
                ]
              }
            },
            "response-without-filter": {
              "summary": "Response without filter",
              "value": {
                "schemas": [
                  "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                ],
                "totalResults": 2,
                "itemsPerPage": 2,
                "startIndex": 1,
                "Resources": [
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
                    "id": "edefdfedf-050c-11e7-8d32",
                    "externalId": "a7d0f98382",
                    "userName": "mona.octocat@okta.example.com",
                    "name": { "givenName": "Mona", "familyName": "Octocat" },
                    "emails": [
                      {
                        "value": "mona.octocat@okta.example.com",
                        "type": "work",
                        "primary": true
                      }
                    ],
                    "active": true,
                    "meta": {
                      "resourceType": "User",
                      "created": "2017-03-09T16:11:13-05:00",
                      "lastModified": "2017-03-09T16:11:13-05:00",
                      "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                    }
                  },
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
                    "id": "77563764-eb6-24-0598234-958243",
                    "externalId": "sdfoiausdofiua",
                    "userName": "hubot@example.com",
                    "name": { "givenName": "hu", "familyName": "bot" },
                    "emails": [
                      {
                        "value": "hubot@example.com",
                        "type": "work",
                        "primary": true
                      }
                    ],
                    "active": true,
                    "meta": {
                      "resourceType": "User",
                      "created": "2017-03-09T16:11:13-05:00",
                      "lastModified": "2017-03-09T16:11:13-05:00",
                      "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243"
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  https://api.github.com/scim/v2/organizations/ORG/Users"
    },
    {
      "lang": "JS",
      "source": "octokit.scim.listProvisionedIdentities({\n  org: 'org'\n})"
    },
    { "lang": "Ruby", "source": "octokit.provisioned_identities(\n  'org'\n)" }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": true,
    "previews": []
  },
  "x-changes": []
}
