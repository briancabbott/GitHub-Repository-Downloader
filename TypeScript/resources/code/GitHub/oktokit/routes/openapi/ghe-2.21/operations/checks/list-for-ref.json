{
  "summary": "List check runs for a Git reference",
  "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
  "operationId": "checks/list-for-ref",
  "tags": ["checks"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/enterprise/2.21/v3/checks/runs/#list-check-runs-for-a-git-reference"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "This API is under preview and subject to change.",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.antiope-preview+json"
      },
      "required": true
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "ref",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "check_name",
      "description": "Returns check runs with the specified `name`.",
      "in": "query",
      "required": false,
      "schema": { "type": "string" }
    },
    {
      "name": "status",
      "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "enum": ["queued", "in_progress", "completed"]
      }
    },
    {
      "name": "filter",
      "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "enum": ["latest", "all"],
        "default": "latest"
      }
    },
    {
      "name": "per_page",
      "description": "Results per page (max 100)",
      "in": "query",
      "schema": { "type": "integer", "default": 30 }
    },
    {
      "name": "page",
      "description": "Page number of the results to fetch.",
      "in": "query",
      "schema": { "type": "integer", "default": 1 }
    }
  ],
  "responses": {
    "200": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "total_count": { "type": "number" },
              "check_runs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "number" },
                    "head_sha": { "type": "string" },
                    "node_id": { "type": "string" },
                    "external_id": { "type": "string" },
                    "url": { "type": "string" },
                    "html_url": { "type": "string" },
                    "details_url": { "type": "string" },
                    "status": { "type": "string" },
                    "conclusion": { "type": "string" },
                    "started_at": { "type": "string" },
                    "completed_at": { "type": "string" },
                    "output": {
                      "type": "object",
                      "properties": {
                        "title": { "type": "string" },
                        "summary": { "type": "string" },
                        "text": { "type": "string" },
                        "annotations_count": { "type": "number" },
                        "annotations_url": { "type": "string" }
                      }
                    },
                    "name": { "type": "string" },
                    "check_suite": {
                      "type": "object",
                      "properties": { "id": { "type": "number" } }
                    },
                    "app": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "number" },
                        "slug": { "type": "string" },
                        "node_id": { "type": "string" },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "login": { "type": "string" },
                            "id": { "type": "number" },
                            "node_id": { "type": "string" },
                            "url": { "type": "string" },
                            "repos_url": { "type": "string" },
                            "events_url": { "type": "string" },
                            "hooks_url": { "type": "string" },
                            "issues_url": { "type": "string" },
                            "members_url": { "type": "string" },
                            "public_members_url": { "type": "string" },
                            "avatar_url": { "type": "string" },
                            "description": { "type": "string" }
                          }
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "external_url": { "type": "string" },
                        "html_url": { "type": "string" },
                        "created_at": { "type": "string" },
                        "updated_at": { "type": "string" },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "metadata": { "type": "string" },
                            "contents": { "type": "string" },
                            "issues": { "type": "string" },
                            "single_file": { "type": "string" }
                          }
                        },
                        "events": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    },
                    "pull_requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": { "type": "string" },
                          "id": { "type": "number" },
                          "number": { "type": "number" },
                          "head": {
                            "type": "object",
                            "properties": {
                              "ref": { "type": "string" },
                              "sha": { "type": "string" },
                              "repo": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "number" },
                                  "url": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              }
                            }
                          },
                          "base": {
                            "type": "object",
                            "properties": {
                              "ref": { "type": "string" },
                              "sha": { "type": "string" },
                              "repo": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "number" },
                                  "url": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "example": {
            "total_count": 1,
            "check_runs": [
              {
                "id": 4,
                "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
                "node_id": "MDg6Q2hlY2tSdW40",
                "external_id": "",
                "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
                "html_url": "http://github.com/github/hello-world/runs/4",
                "details_url": "https://example.com",
                "status": "completed",
                "conclusion": "neutral",
                "started_at": "2018-05-04T01:14:52Z",
                "completed_at": "2018-05-04T01:14:52Z",
                "output": {
                  "title": "Mighty Readme report",
                  "summary": "There are 0 failures, 2 warnings, and 1 notice.",
                  "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                  "annotations_count": 2,
                  "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
                },
                "name": "mighty_readme",
                "check_suite": { "id": 5 },
                "app": {
                  "id": 1,
                  "slug": "octoapp",
                  "node_id": "MDExOkludGVncmF0aW9uMQ==",
                  "owner": {
                    "login": "github",
                    "id": 1,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                    "url": "https://api.github.com/orgs/github",
                    "repos_url": "https://api.github.com/orgs/github/repos",
                    "events_url": "https://api.github.com/orgs/github/events",
                    "hooks_url": "https://api.github.com/orgs/github/hooks",
                    "issues_url": "https://api.github.com/orgs/github/issues",
                    "members_url": "https://api.github.com/orgs/github/members{/member}",
                    "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "description": "A great organization"
                  },
                  "name": "Octocat App",
                  "description": "",
                  "external_url": "https://example.com",
                  "html_url": "https://github.com/apps/octoapp",
                  "created_at": "2017-07-08T16:18:44-04:00",
                  "updated_at": "2017-07-08T16:18:44-04:00",
                  "permissions": {
                    "metadata": "read",
                    "contents": "read",
                    "issues": "write",
                    "single_file": "write"
                  },
                  "events": ["push", "pull_request"]
                },
                "pull_requests": [
                  {
                    "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                    "id": 1934,
                    "number": 3956,
                    "head": {
                      "ref": "say-hello",
                      "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                      "repo": {
                        "id": 526,
                        "url": "https://api.github.com/repos/github/hello-world",
                        "name": "hello-world"
                      }
                    },
                    "base": {
                      "ref": "master",
                      "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                      "repo": {
                        "id": 526,
                        "url": "https://api.github.com/repos/github/hello-world",
                        "name": "hello-world"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      "headers": {
        "Link": {
          "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
          "schema": { "type": "string" }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -H\"Accept: application/vnd.github.antiope-preview+json\" \\\n  http://{hostname}/repos/octocat/hello-world/commits/REF/check-runs"
    },
    {
      "lang": "JS",
      "source": "octokit.checks.listForRef({\n  owner: 'octocat',\n  repo: 'hello-world',\n  ref: 'ref'\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.for_ref(\n  'hello-world',\n  'ref'\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": [
      {
        "name": "antiope",
        "required": true,
        "note": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.21/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```"
      }
    ]
  },
  "x-changes": []
}
