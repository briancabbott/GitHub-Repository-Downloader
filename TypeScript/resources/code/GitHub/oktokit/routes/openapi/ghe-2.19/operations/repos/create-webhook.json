{
  "summary": "Create a repository webhook",
  "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can share the same `config` as long as those webhooks do not have any `events` that overlap.\n\n**Note:** GitHub Enterprise release 2.17 and higher no longer allows admins to install new GitHub Services, and existing services will stop working in GitHub Enterprise release 2.20 and higher. You can use the [Replacing GitHub Services guide](https://developer.github.com/enterprise/2.19/v3/guides/replacing-github-services) to help you update your services to webhooks.\n\nHere's how you can create a hook that posts payloads in JSON format:",
  "operationId": "repos/create-webhook",
  "tags": ["repos"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/enterprise/2.19/v3/repos/hooks/#create-a-repository-webhook"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    },
    {
      "name": "owner",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    },
    {
      "name": "repo",
      "in": "path",
      "required": true,
      "schema": { "type": "string" }
    }
  ],
  "responses": {
    "201": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "id": { "type": "number" },
              "name": { "type": "string" },
              "active": { "type": "boolean" },
              "events": { "type": "array", "items": { "type": "string" } },
              "config": {
                "type": "object",
                "properties": {
                  "content_type": { "type": "string" },
                  "insecure_ssl": { "type": "string" },
                  "url": { "type": "string" }
                }
              },
              "updated_at": { "type": "string" },
              "created_at": { "type": "string" },
              "url": { "type": "string" },
              "test_url": { "type": "string" },
              "ping_url": { "type": "string" },
              "last_response": {
                "type": "object",
                "properties": {
                  "code": { "type": "string" },
                  "status": { "type": "string" },
                  "message": { "type": "string" }
                }
              }
            }
          },
          "example": {
            "type": "Repository",
            "id": 12345678,
            "name": "web",
            "active": true,
            "events": ["push", "pull_request"],
            "config": {
              "content_type": "json",
              "insecure_ssl": "0",
              "url": "https://example.com/webhook"
            },
            "updated_at": "2019-06-03T00:57:16Z",
            "created_at": "2019-06-03T00:57:16Z",
            "url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
            "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test",
            "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings",
            "last_response": {
              "code": null,
              "status": "unused",
              "message": null
            }
          }
        }
      },
      "headers": {
        "Location": {
          "example": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
          "schema": { "type": "string" }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -XPOST \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  http://{hostname}/repos/octocat/hello-world/hooks \\\n  -d '{\"config\":{\"url\":\"url\",\"content_type\":\"content_type\",\"secret\":\"secret\",\"insecure_ssl\":\"insecure_ssl\"}}'"
    },
    {
      "lang": "JS",
      "source": "octokit.repos.createWebhook({\n  owner: 'octocat',\n  repo: 'hello-world',\n  config: {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl'\n  }\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.create_webhook(\n  'hello-world',\n  {\n    url: 'url',\n    content_type: 'content_type',\n    secret: 'secret',\n    insecure_ssl: 'insecure_ssl'\n  }\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": true,
    "githubCloudOnly": false,
    "previews": []
  },
  "x-changes": [
    {
      "type": "operation",
      "date": "2020-06-04",
      "note": "\"repos/create-hook\" operation ID is now \"repos/create-webhook\"",
      "before": { "operationId": "repos/create-hook" },
      "after": { "operationId": "repos/create-webhook" }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Use `web` to create a webhook.",
              "default": "web"
            },
            "config": {
              "type": "object",
              "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.19/v3/repos/hooks/#create-hook-config-params).",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL to which the payloads will be delivered."
                },
                "content_type": {
                  "type": "string",
                  "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                },
                "secret": {
                  "type": "string",
                  "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.19/webhooks/event-payloads/#delivery-headers) header."
                },
                "insecure_ssl": {
                  "type": "string",
                  "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"
                }
              },
              "required": ["url"]
            },
            "events": {
              "type": "array",
              "description": "Determines what [events](https://developer.github.com/enterprise/2.19/webhooks/event-payloads) the hook is triggered for.",
              "default": ["push"],
              "items": { "type": "string" }
            },
            "active": {
              "type": "boolean",
              "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
              "default": true
            }
          },
          "required": ["config"]
        },
        "example": {
          "name": "web",
          "active": true,
          "events": ["push", "pull_request"],
          "config": {
            "url": "https://example.com/webhook",
            "content_type": "json",
            "insecure_ssl": "0"
          }
        }
      }
    }
  }
}
