{
  "summary": "Create a GPG key for the authenticated user",
  "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://developer.github.com/enterprise/2.19/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
  "operationId": "users/create-gpg-key-for-authenticated",
  "tags": ["users"],
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://developer.github.com/enterprise/2.19/v3/users/gpg_keys/#create-a-gpg-key-for-the-authenticated-user"
  },
  "parameters": [
    {
      "name": "accept",
      "description": "Setting to `application/vnd.github.v3+json` is recommended",
      "in": "header",
      "schema": {
        "type": "string",
        "default": "application/vnd.github.v3+json"
      }
    }
  ],
  "responses": {
    "201": {
      "description": "response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "id": { "type": "number" },
              "primary_key_id": { "type": "string" },
              "key_id": { "type": "string" },
              "public_key": { "type": "string" },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": { "type": "string" },
                    "verified": { "type": "boolean" }
                  }
                }
              },
              "subkeys": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "number" },
                    "primary_key_id": { "type": "number" },
                    "key_id": { "type": "string" },
                    "public_key": { "type": "string" },
                    "emails": { "type": "array", "items": {} },
                    "subkeys": { "type": "array", "items": {} },
                    "can_sign": { "type": "boolean" },
                    "can_encrypt_comms": { "type": "boolean" },
                    "can_encrypt_storage": { "type": "boolean" },
                    "can_certify": { "type": "boolean" },
                    "created_at": { "type": "string" },
                    "expires_at": { "type": "string" }
                  }
                }
              },
              "can_sign": { "type": "boolean" },
              "can_encrypt_comms": { "type": "boolean" },
              "can_encrypt_storage": { "type": "boolean" },
              "can_certify": { "type": "boolean" },
              "created_at": { "type": "string" },
              "expires_at": { "type": "string" }
            }
          },
          "example": {
            "id": 3,
            "primary_key_id": null,
            "key_id": "3262EFF25BA0D270",
            "public_key": "xsBNBFayYZ...",
            "emails": [
              {
                "email": "mastahyeti@users.noreply.github.com",
                "verified": true
              }
            ],
            "subkeys": [
              {
                "id": 4,
                "primary_key_id": 3,
                "key_id": "4A595D4C72EE49C7",
                "public_key": "zsBNBFayYZ...",
                "emails": [],
                "subkeys": [],
                "can_sign": false,
                "can_encrypt_comms": true,
                "can_encrypt_storage": true,
                "can_certify": false,
                "created_at": "2016-03-24T11:31:04-06:00",
                "expires_at": null
              }
            ],
            "can_sign": true,
            "can_encrypt_comms": false,
            "can_encrypt_storage": false,
            "can_certify": true,
            "created_at": "2016-03-24T11:31:04-06:00",
            "expires_at": null
          }
        }
      }
    }
  },
  "x-code-samples": [
    {
      "lang": "Shell",
      "source": "curl \\\n  -XPOST \\\n  -H\"Accept: application/vnd.github.v3+json\" \\\n  http://{hostname}/user/gpg_keys \\\n  -d '{\"armored_public_key\":\"armored_public_key\"}'"
    },
    {
      "lang": "JS",
      "source": "octokit.users.createGpgKeyForAuthenticated({\n  armored_public_key: 'armored_public_key'\n})"
    },
    {
      "lang": "Ruby",
      "source": "octokit.create_gpg_key_for_authenticated(\n  'armored_public_key'\n)"
    }
  ],
  "x-github": {
    "legacy": false,
    "enabledForApps": false,
    "githubCloudOnly": false,
    "previews": []
  },
  "x-changes": [
    {
      "type": "operation",
      "date": "2020-06-04",
      "note": "\"users/create-gpg-key\" operation ID is now \"users/create-gpg-key-for-authenticated\"",
      "before": { "operationId": "users/create-gpg-key" },
      "after": { "operationId": "users/create-gpg-key-for-authenticated" }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "type": "object",
          "properties": {
            "armored_public_key": {
              "type": "string",
              "description": "Your GPG key, generated in ASCII-armored format. See \"[Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/)\" for help creating a GPG key."
            }
          }
        },
        "example": {
          "armored_public_key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\n...\n-----END PGP PUBLIC KEY BLOCK-----"
        }
      }
    }
  }
}
