{
  "repository": {
        "namespace": {
            "patterns": [
                {
                    "match": "(\\s*)(?<=::)(\\s*)([A-Za-z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.namespace.ddlog"
                },
                {
                    "match": "(\\s*)([A-Za-z_][a-zA-Z0-9_]*)(\\s*)(?=::)",
                    "name": "entity.name.namespace.ddlog"
                },
                {
                    "match": "(\\b)(?<=import)(\\s)([A-Za-z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.namespace.ddlog"
                }
               ]
            }, 
        "relation": {
            "patterns": [
                {
                    "match": "(\\b)(?<=relation)(\\s)([A-Z][a-zA-Z0-9_]*)(\\s*)",
                    "name": "entity.name.relation.ddlog"
                }
               ]
            },                 
        "entity": {
            "patterns": [
                {
                    "include": "#namespace" 
                },
                {
                    "match": "(\\b)([A-Z][a-zA-Z0-9_]*)(\\s*)(?=[\\[])(\\s*)",
                    "name": "entity.name.relation.ddlog",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    }
                },
                {
                    "match": "(\\b)(?<=(:-)\\s*)(\\s*)([A-Z][a-zA-Z0-9_]*)(\\s*)",
                    "name": "entity.name.relation.ddlog"
                }, 
                {
                    "include": "#relation" 
                },                                             
                {
                    "match": "\\b(?<=function)(\\b)([a-z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.function.ddlog",
                },
                {
                    "match": "(\\b)([a-z_][a-zA-Z0-9_]*)(?=[(])",
                    "name": "entity.name.function.ddlog",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    }
                },
                {
                    "match": "(\\s*)(?!.*(Some|None|Ok|Err))([A-Z][a-zA-Z0-9_]*)(\\s*)(?=((\\s*)\\{))",
                    "name": "entity.name.constructor.ddlog"
                },  
                {
                    "match": "\\b(?<=.*(typedef|type))\\s*([a-zA-Z_][a-zA-Z0-9_]*)(\\s*)",
                    "name": "entity.name.type.ddlog"
                }
            ]
        }
    }
}
