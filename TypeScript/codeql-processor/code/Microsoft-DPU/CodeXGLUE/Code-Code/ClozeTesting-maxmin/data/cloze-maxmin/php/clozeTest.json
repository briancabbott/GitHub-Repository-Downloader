[
 {
  "idx": "maxmin-1",
  "nl_tokens": [
   "Read",
   "the",
   "next",
   "character",
   "from",
   "the",
   "supplied",
   "string",
   ".",
   "Return",
   "null",
   "when",
   "we",
   "have",
   "run",
   "out",
   "of",
   "characters",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "readOne",
   "(",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "pos",
   "<=",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "{",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "string",
   "[",
   "$",
   "this",
   "->",
   "pos",
   "]",
   ";",
   "$",
   "this",
   "->",
   "pos",
   "+=",
   "1",
   ";",
   "}",
   "else",
   "{",
   "$",
   "value",
   "=",
   "null",
   ";",
   "}",
   "return",
   "$",
   "value",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-2",
  "nl_tokens": [
   "RAND",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "RAND",
   "(",
   "$",
   "<mask>",
   "=",
   "0",
   ",",
   "$",
   "max",
   "=",
   "0",
   ")",
   "{",
   "$",
   "min",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "min",
   ")",
   ";",
   "$",
   "max",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "min",
   "==",
   "0",
   "&&",
   "$",
   "max",
   "==",
   "0",
   ")",
   "{",
   "return",
   "(",
   "mt_rand",
   "(",
   "0",
   ",",
   "10000000",
   ")",
   ")",
   "/",
   "10000000",
   ";",
   "}",
   "return",
   "mt_rand",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-3",
  "nl_tokens": [
   "Writes",
   "body",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "body",
   "(",
   "ResponseInterface",
   "$",
   "response",
   ")",
   ":",
   "ResponseInterface",
   "{",
   "if",
   "(",
   "!",
   "in_array",
   "(",
   "$",
   "response",
   "->",
   "getStatusCode",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "responseIsEmpty",
   ")",
   ")",
   "{",
   "$",
   "stream",
   "=",
   "$",
   "response",
   "->",
   "getBody",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "stream",
   "->",
   "isSeekable",
   "(",
   ")",
   ")",
   "{",
   "$",
   "stream",
   "->",
   "rewind",
   "(",
   ")",
   ";",
   "}",
   "$",
   "bufferLenght",
   "=",
   "(",
   "!",
   "$",
   "response",
   "->",
   "getHeaderLine",
   "(",
   "'Content-Length'",
   ")",
   ")",
   "?",
   "$",
   "stream",
   "->",
   "getSize",
   "(",
   ")",
   ":",
   "$",
   "response",
   "->",
   "getHeaderLine",
   "(",
   "'Content-Length'",
   ")",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "bufferLenght",
   ")",
   ")",
   "{",
   "$",
   "lengthToRead",
   "=",
   "$",
   "bufferLenght",
   ";",
   "while",
   "(",
   "$",
   "lengthToRead",
   ">",
   "0",
   "&&",
   "!",
   "$",
   "stream",
   "->",
   "eof",
   "(",
   ")",
   ")",
   "{",
   "$",
   "data",
   "=",
   "$",
   "stream",
   "->",
   "read",
   "(",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "sizeLimit",
   ",",
   "$",
   "lengthToRead",
   ")",
   ")",
   ";",
   "echo",
   "$",
   "data",
   ";",
   "$",
   "lengthToRead",
   "-=",
   "strlen",
   "(",
   "$",
   "data",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "while",
   "(",
   "!",
   "$",
   "stream",
   "->",
   "eof",
   "(",
   ")",
   ")",
   "{",
   "echo",
   "$",
   "stream",
   "->",
   "read",
   "(",
   "$",
   "this",
   "->",
   "size",
   ")",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "response",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-4",
  "nl_tokens": [
   "Query",
   "Builder",
   "whereBetween",
   "override",
   "required",
   "to",
   "pass",
   "raw",
   "numeric",
   "values",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getMetaBetweenConstraint",
   "(",
   "$",
   "column",
   ",",
   "array",
   "$",
   "values",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "values",
   "[",
   "0",
   "]",
   ";",
   "$",
   "max",
   "=",
   "$",
   "values",
   "[",
   "1",
   "]",
   ";",
   "return",
   "function",
   "(",
   "$",
   "query",
   ")",
   "use",
   "(",
   "$",
   "column",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   "{",
   "$",
   "query",
   "->",
   "where",
   "(",
   "'meta_key'",
   ",",
   "$",
   "column",
   ")",
   "->",
   "where",
   "(",
   "'meta_value'",
   ",",
   "'>='",
   ",",
   "$",
   "min",
   ")",
   "->",
   "where",
   "(",
   "'meta_value'",
   ",",
   "'<='",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-5",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getClientOptions",
   "(",
   "$",
   "model",
   ",",
   "$",
   "attribute",
   ")",
   "{",
   "$",
   "label",
   "=",
   "$",
   "model",
   "->",
   "getAttributeLabel",
   "(",
   "$",
   "attribute",
   ")",
   ";",
   "$",
   "options",
   "=",
   "[",
   "'pattern'",
   "=>",
   "new",
   "JsExpression",
   "(",
   "$",
   "this",
   "->",
   "integerOnly",
   "?",
   "$",
   "this",
   "->",
   "integerPattern",
   ":",
   "$",
   "this",
   "->",
   "numberPattern",
   ")",
   ",",
   "'message'",
   "=>",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "message",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "]",
   ")",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "!==",
   "null",
   ")",
   "{",
   "// ensure numeric value to make javascript comparison equal to PHP comparison",
   "// https://github.com/yiisoft/yii2/issues/3118",
   "$",
   "options",
   "[",
   "'min'",
   "]",
   "=",
   "is_string",
   "(",
   "$",
   "this",
   "->",
   "min",
   ")",
   "?",
   "(",
   "float",
   ")",
   "$",
   "this",
   "->",
   "min",
   ":",
   "$",
   "this",
   "->",
   "min",
   ";",
   "$",
   "options",
   "[",
   "'tooSmall'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "tooSmall",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "'min'",
   "=>",
   "$",
   "this",
   "->",
   "min",
   ",",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   ")",
   "{",
   "// ensure numeric value to make javascript comparison equal to PHP comparison",
   "// https://github.com/yiisoft/yii2/issues/3118",
   "$",
   "options",
   "[",
   "'max'",
   "]",
   "=",
   "is_string",
   "(",
   "$",
   "this",
   "->",
   "max",
   ")",
   "?",
   "(",
   "float",
   ")",
   "$",
   "this",
   "->",
   "max",
   ":",
   "$",
   "this",
   "->",
   "max",
   ";",
   "$",
   "options",
   "[",
   "'tooBig'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "tooBig",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "'max'",
   "=>",
   "$",
   "this",
   "->",
   "max",
   ",",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "skipOnEmpty",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'skipOnEmpty'",
   "]",
   "=",
   "1",
   ";",
   "}",
   "return",
   "$",
   "options",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-6",
  "nl_tokens": [
   "Checks",
   "the",
   "request",
   "query",
   "parameters",
   "and",
   "headers",
   "for",
   "pagination",
   "info",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "create",
   "(",
   "\\",
   "Psr",
   "\\",
   "Http",
   "\\",
   "Message",
   "\\",
   "ServerRequestInterface",
   "$",
   "request",
   ",",
   "string",
   "$",
   "sortParameter",
   "=",
   "self",
   "::",
   "SORT",
   ",",
   "array",
   "$",
   "defaultSort",
   "=",
   "[",
   "]",
   ")",
   ":",
   "Pagination",
   "{",
   "$",
   "offset",
   "=",
   "0",
   ";",
   "$",
   "<mask>",
   "=",
   "PHP_INT_MAX",
   ";",
   "$",
   "params",
   "=",
   "$",
   "request",
   "->",
   "getQueryParams",
   "(",
   ")",
   ";",
   "$",
   "range",
   "=",
   "$",
   "request",
   "->",
   "getHeaderLine",
   "(",
   "self",
   "::",
   "RANGE",
   ")",
   ";",
   "if",
   "(",
   "$",
   "range",
   "!==",
   "null",
   "&&",
   "preg_match",
   "(",
   "self",
   "::",
   "REGEX_RANGE",
   ",",
   "$",
   "range",
   ",",
   "$",
   "rm",
   ")",
   ")",
   "{",
   "// dojo.store.JsonRest style",
   "$",
   "offset",
   "=",
   "(",
   "int",
   ")",
   "$",
   "rm",
   "[",
   "1",
   "]",
   ";",
   "$",
   "max",
   "=",
   "(",
   "int",
   ")",
   "$",
   "rm",
   "[",
   "2",
   "]",
   "-",
   "$",
   "offset",
   "+",
   "1",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "parse",
   "(",
   "self",
   "::",
   "$",
   "maxAlias",
   ",",
   "$",
   "params",
   ",",
   "PHP_INT_MAX",
   ")",
   ";",
   "// Grails, ExtJS, dojox.data.QueryReadStore, all zero-based",
   "$",
   "offVal",
   "=",
   "$",
   "this",
   "->",
   "parse",
   "(",
   "self",
   "::",
   "$",
   "offsetAlias",
   ",",
   "$",
   "params",
   ",",
   "0",
   ")",
   ";",
   "if",
   "(",
   "$",
   "offVal",
   ">",
   "0",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "$",
   "offVal",
   ";",
   "}",
   "elseif",
   "(",
   "isset",
   "(",
   "$",
   "params",
   "[",
   "self",
   "::",
   "START_INDEX",
   "]",
   ")",
   ")",
   "{",
   "// OpenSearch style, 1-based",
   "$",
   "startIdx",
   "=",
   "isset",
   "(",
   "$",
   "params",
   "[",
   "self",
   "::",
   "START_INDEX",
   "]",
   ")",
   "?",
   "(",
   "int",
   ")",
   "$",
   "params",
   "[",
   "self",
   "::",
   "START_INDEX",
   "]",
   ":",
   "0",
   ";",
   "if",
   "(",
   "$",
   "startIdx",
   ">",
   "0",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "$",
   "startIdx",
   "-",
   "1",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "isset",
   "(",
   "$",
   "params",
   "[",
   "self",
   "::",
   "START_PAGE",
   "]",
   ")",
   "||",
   "isset",
   "(",
   "$",
   "params",
   "[",
   "self",
   "::",
   "PAGE",
   "]",
   ")",
   ")",
   "{",
   "// OpenSearch or Spring Data style, 1-based",
   "$",
   "startPage",
   "=",
   "$",
   "this",
   "->",
   "parse",
   "(",
   "self",
   "::",
   "$",
   "pageAlias",
   ",",
   "$",
   "params",
   ",",
   "0",
   ")",
   ";",
   "if",
   "(",
   "$",
   "startPage",
   ">",
   "0",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "(",
   "$",
   "max",
   "*",
   "(",
   "$",
   "startPage",
   "-",
   "1",
   ")",
   ")",
   ";",
   "}",
   "}",
   "}",
   "return",
   "new",
   "Pagination",
   "(",
   "$",
   "max",
   ",",
   "$",
   "offset",
   ",",
   "$",
   "this",
   "->",
   "getOrder",
   "(",
   "$",
   "request",
   ",",
   "$",
   "sortParameter",
   ",",
   "$",
   "defaultSort",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-7",
  "nl_tokens": [
   "Create",
   "all",
   "intersections",
   "given",
   "the",
   "constructor",
   "parameters",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "createIntersections",
   "(",
   ")",
   "{",
   "$",
   "totalNumberOfCombinations",
   "=",
   "<mask>",
   "(",
   "pow",
   "(",
   "2",
   ",",
   "$",
   "this",
   "->",
   "arraysSize",
   ")",
   ",",
   "$",
   "this",
   "->",
   "maxNumberOfCombinations",
   ")",
   ";",
   "$",
   "maskGenerator",
   "=",
   "new",
   "BitMaskGenerator",
   "(",
   "$",
   "this",
   "->",
   "arraysSize",
   ",",
   "2",
   ")",
   ";",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "noresult",
   "=",
   "0",
   ";",
   "while",
   "(",
   "$",
   "i",
   "<",
   "$",
   "totalNumberOfCombinations",
   "&&",
   "$",
   "noresult",
   "<",
   "$",
   "totalNumberOfCombinations",
   "&&",
   "$",
   "mask",
   "=",
   "$",
   "maskGenerator",
   "->",
   "getNextMask",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "isNoResultMask",
   "(",
   "$",
   "mask",
   ")",
   ")",
   "{",
   "$",
   "i",
   "++",
   ";",
   "$",
   "this",
   "->",
   "generateIntersection",
   "(",
   "$",
   "mask",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "$",
   "noresult",
   "++",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_null",
   "(",
   "$",
   "this",
   "->",
   "intersections",
   ")",
   ")",
   "{",
   "uasort",
   "(",
   "$",
   "this",
   "->",
   "intersections",
   ",",
   "function",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ")",
   "{",
   "return",
   "count",
   "(",
   "$",
   "b",
   ")",
   "-",
   "count",
   "(",
   "$",
   "a",
   ")",
   ";",
   "}",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-8",
  "nl_tokens": [
   "Prioritize",
   "the",
   "stock",
   "assignment",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "prioritizeAssignment",
   "(",
   "Stock",
   "\\",
   "StockAssignmentInterface",
   "$",
   "assignment",
   ")",
   "{",
   "if",
   "(",
   "$",
   "assignment",
   "->",
   "isFullyShipped",
   "(",
   ")",
   "||",
   "$",
   "assignment",
   "->",
   "isFullyShippable",
   "(",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "// Get the non shippable quantity",
   "if",
   "(",
   "0",
   ">=",
   "$",
   "quantity",
   "=",
   "$",
   "assignment",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "-",
   "$",
   "assignment",
   "->",
   "getShippableQuantity",
   "(",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "// Options are:",
   "// - Splitting non shippable quantity to other stock unit(s)",
   "// - Moving the whole assignment to other stock unit(s) (TODO)",
   "// - Moving other assignment(s) to other stock unit(s) (TODO)",
   "$",
   "changed",
   "=",
   "false",
   ";",
   "$",
   "helper",
   "=",
   "new",
   "PrioritizeHelper",
   "(",
   "$",
   "this",
   "->",
   "unitResolver",
   ")",
   ";",
   "$",
   "sourceUnit",
   "=",
   "$",
   "assignment",
   "->",
   "getStockUnit",
   "(",
   ")",
   ";",
   "$",
   "candidates",
   "=",
   "$",
   "helper",
   "->",
   "getUnitCandidates",
   "(",
   "$",
   "assignment",
   ",",
   "$",
   "quantity",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "candidates",
   "as",
   "$",
   "candidate",
   ")",
   "{",
   "$",
   "targetUnit",
   "=",
   "$",
   "candidate",
   "->",
   "unit",
   ";",
   "// If not enough reservable quantity",
   "if",
   "(",
   "(",
   "0",
   "<",
   "$",
   "quantity",
   "-",
   "$",
   "targetUnit",
   "->",
   "getReservableQuantity",
   "(",
   ")",
   ")",
   "&&",
   "(",
   "$",
   "combination",
   "=",
   "$",
   "candidate",
   "->",
   "combination",
   ")",
   ")",
   "{",
   "// Use combination to release quantity",
   "foreach",
   "(",
   "$",
   "combination",
   "->",
   "map",
   "as",
   "$",
   "id",
   "=>",
   "$",
   "qty",
   ")",
   "{",
   "if",
   "(",
   "null",
   "===",
   "$",
   "a",
   "=",
   "$",
   "candidate",
   "->",
   "getAssignmentById",
   "(",
   "$",
   "id",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "StockLogicException",
   "(",
   "\"Assignment not found.\"",
   ")",
   ";",
   "}",
   "// Move assignment to the source unit",
   "$",
   "this",
   "->",
   "moveAssignment",
   "(",
   "$",
   "a",
   ",",
   "$",
   "sourceUnit",
   ",",
   "<mask>",
   "(",
   "$",
   "qty",
   ",",
   "$",
   "quantity",
   ")",
   ")",
   ";",
   "}",
   "}",
   "// Move assignment to the target unit.",
   "$",
   "delta",
   "=",
   "min",
   "(",
   "$",
   "quantity",
   ",",
   "$",
   "targetUnit",
   "->",
   "getReservableQuantity",
   "(",
   ")",
   ")",
   ";",
   "$",
   "quantity",
   "-=",
   "$",
   "this",
   "->",
   "moveAssignment",
   "(",
   "$",
   "assignment",
   ",",
   "$",
   "targetUnit",
   ",",
   "$",
   "delta",
   ")",
   ";",
   "// TODO Validate units ?",
   "$",
   "changed",
   "=",
   "true",
   ";",
   "if",
   "(",
   "0",
   ">=",
   "$",
   "quantity",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "return",
   "$",
   "changed",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-9",
  "nl_tokens": [
   "Generate",
   "the",
   "module"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "compile",
   "(",
   ")",
   "{",
   "/** @var PageModel $objPage */",
   "global",
   "$",
   "objPage",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "rss_template",
   "!=",
   "'rss_default'",
   ")",
   "{",
   "$",
   "this",
   "->",
   "strTemplate",
   "=",
   "$",
   "this",
   "->",
   "rss_template",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "=",
   "new",
   "FrontendTemplate",
   "(",
   "$",
   "this",
   "->",
   "strTemplate",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "setData",
   "(",
   "$",
   "this",
   "->",
   "arrData",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "link",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_link",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "title",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_title",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "language",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_language",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "description",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_description",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "copyright",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_copyright",
   "(",
   ")",
   ";",
   "// Add image",
   "if",
   "(",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_url",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "image",
   "=",
   "true",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "src",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_url",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "alt",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_title",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "href",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_link",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "height",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_height",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "width",
   "=",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_image_width",
   "(",
   ")",
   ";",
   "}",
   "// Get the items (see #6107)",
   "$",
   "arrItems",
   "=",
   "\\",
   "array_slice",
   "(",
   "$",
   "this",
   "->",
   "objFeed",
   "->",
   "get_items",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "numberOfItems",
   "+",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "skipFirst",
   ")",
   ",",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "skipFirst",
   ",",
   "(",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "numberOfItems",
   "?",
   ":",
   "null",
   ")",
   ")",
   ";",
   "$",
   "limit",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "arrItems",
   ")",
   ";",
   "$",
   "offset",
   "=",
   "0",
   ";",
   "// Split pages",
   "if",
   "(",
   "$",
   "this",
   "->",
   "perPage",
   ">",
   "0",
   ")",
   "{",
   "// Get the current page",
   "$",
   "id",
   "=",
   "'page_r'",
   ".",
   "$",
   "this",
   "->",
   "id",
   ";",
   "$",
   "page",
   "=",
   "Input",
   "::",
   "get",
   "(",
   "$",
   "id",
   ")",
   "??",
   "1",
   ";",
   "// Do not index or cache the page if the page number is outside the range",
   "if",
   "(",
   "$",
   "page",
   "<",
   "1",
   "||",
   "$",
   "page",
   ">",
   "<mask>",
   "(",
   "ceil",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "arrItems",
   ")",
   "/",
   "$",
   "this",
   "->",
   "perPage",
   ")",
   ",",
   "1",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "PageNotFoundException",
   "(",
   "'Page not found: '",
   ".",
   "Environment",
   "::",
   "get",
   "(",
   "'uri'",
   ")",
   ")",
   ";",
   "}",
   "// Set limit and offset",
   "$",
   "offset",
   "=",
   "(",
   "(",
   "$",
   "page",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "perPage",
   ")",
   ";",
   "$",
   "limit",
   "=",
   "$",
   "this",
   "->",
   "perPage",
   "+",
   "$",
   "offset",
   ";",
   "$",
   "objPagination",
   "=",
   "new",
   "Pagination",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "arrItems",
   ")",
   ",",
   "$",
   "this",
   "->",
   "perPage",
   ",",
   "Config",
   "::",
   "get",
   "(",
   "'maxPaginationLinks'",
   ")",
   ",",
   "$",
   "id",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "pagination",
   "=",
   "$",
   "objPagination",
   "->",
   "generate",
   "(",
   "\"\\n  \"",
   ")",
   ";",
   "}",
   "$",
   "items",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "last",
   "=",
   "min",
   "(",
   "$",
   "limit",
   ",",
   "\\",
   "count",
   "(",
   "$",
   "arrItems",
   ")",
   ")",
   "-",
   "1",
   ";",
   "/** @var \\SimplePie_Item[] $arrItems */",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "offset",
   ",",
   "$",
   "c",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "arrItems",
   ")",
   ";",
   "$",
   "i",
   "<",
   "$",
   "limit",
   "&&",
   "$",
   "i",
   "<",
   "$",
   "c",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "items",
   "[",
   "$",
   "i",
   "]",
   "=",
   "array",
   "(",
   "'link'",
   "=>",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_link",
   "(",
   ")",
   ",",
   "'title'",
   "=>",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_title",
   "(",
   ")",
   ",",
   "'permalink'",
   "=>",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_permalink",
   "(",
   ")",
   ",",
   "'description'",
   "=>",
   "str_replace",
   "(",
   "array",
   "(",
   "'<?'",
   ",",
   "'?>'",
   ")",
   ",",
   "array",
   "(",
   "'&lt;?'",
   ",",
   "'?&gt;'",
   ")",
   ",",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_description",
   "(",
   ")",
   ")",
   ",",
   "'class'",
   "=>",
   "(",
   "(",
   "$",
   "i",
   "==",
   "0",
   ")",
   "?",
   "' first'",
   ":",
   "''",
   ")",
   ".",
   "(",
   "(",
   "$",
   "i",
   "==",
   "$",
   "last",
   ")",
   "?",
   "' last'",
   ":",
   "''",
   ")",
   ".",
   "(",
   "(",
   "(",
   "$",
   "i",
   "%",
   "2",
   ")",
   "==",
   "0",
   ")",
   "?",
   "' even'",
   ":",
   "' odd'",
   ")",
   ",",
   "'pubdate'",
   "=>",
   "Date",
   "::",
   "parse",
   "(",
   "$",
   "objPage",
   "->",
   "datimFormat",
   ",",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_date",
   "(",
   "'U'",
   ")",
   ")",
   ",",
   "'category'",
   "=>",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_category",
   "(",
   "0",
   ")",
   ",",
   "'object'",
   "=>",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "// Add author",
   "if",
   "(",
   "$",
   "objAuthor",
   "=",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_author",
   "(",
   "0",
   ")",
   ")",
   "{",
   "$",
   "items",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'author'",
   "]",
   "=",
   "trim",
   "(",
   "$",
   "objAuthor",
   "->",
   "name",
   ".",
   "' '",
   ".",
   "$",
   "objAuthor",
   "->",
   "email",
   ")",
   ";",
   "}",
   "// Add enclosure",
   "if",
   "(",
   "$",
   "objEnclosure",
   "=",
   "$",
   "arrItems",
   "[",
   "$",
   "i",
   "]",
   "->",
   "get_enclosure",
   "(",
   "0",
   ")",
   ")",
   "{",
   "$",
   "items",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'enclosure'",
   "]",
   "=",
   "$",
   "objEnclosure",
   "->",
   "get_link",
   "(",
   ")",
   ";",
   "}",
   "}",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "items",
   "=",
   "array_values",
   "(",
   "$",
   "items",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-10",
  "nl_tokens": [
   "Sets",
   "the",
   "min",
   "of",
   "the",
   "DateTimeRange",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setMin",
   "(",
   "$",
   "<mask>",
   ")",
   "{",
   "if",
   "(",
   "$",
   "min",
   "instanceof",
   "DateTime",
   ")",
   "{",
   "$",
   "this",
   "->",
   "min",
   "=",
   "$",
   "min",
   ";",
   "}",
   "else",
   "{",
   "try",
   "{",
   "$",
   "this",
   "->",
   "min",
   "=",
   "new",
   "DateTime",
   "(",
   "$",
   "min",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "$",
   "this",
   "->",
   "min",
   "=",
   "null",
   ";",
   "}",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-11",
  "nl_tokens": [
   "Get",
   "max",
   "file",
   "upload",
   "size",
   "considering",
   "server",
   "settings",
   "and",
   "optional",
   "max",
   "value"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "getMaxUploadSize",
   "(",
   "$",
   "max_size",
   "=",
   "0",
   ")",
   "{",
   "$",
   "post_max_size",
   "=",
   "Tools",
   "::",
   "unformatBytes",
   "(",
   "ini_get",
   "(",
   "'post_max_size'",
   ")",
   ")",
   ";",
   "$",
   "upload_max_filesize",
   "=",
   "Tools",
   "::",
   "unformatBytes",
   "(",
   "ini_get",
   "(",
   "'upload_max_filesize'",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "max_size",
   ">",
   "0",
   ")",
   "{",
   "$",
   "result",
   "=",
   "<mask>",
   "(",
   "$",
   "post_max_size",
   ",",
   "$",
   "upload_max_filesize",
   ",",
   "$",
   "max_size",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "result",
   "=",
   "min",
   "(",
   "$",
   "post_max_size",
   ",",
   "$",
   "upload_max_filesize",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-12",
  "nl_tokens": [
   "Get",
   "extra",
   "validation",
   "fields",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getFieldValidationOptions",
   "(",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "(",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MinValue'",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MinValue'",
   ")",
   ":",
   "''",
   ";",
   "$",
   "max",
   "=",
   "(",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MaxValue'",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MaxValue'",
   ")",
   ":",
   "''",
   ";",
   "return",
   "[",
   "new",
   "NumericField",
   "(",
   "$",
   "this",
   "->",
   "getSettingName",
   "(",
   "'MinValue'",
   ")",
   ",",
   "_t",
   "(",
   "'Moo_EditableField.MINVALUE'",
   ",",
   "'Min Value'",
   ")",
   ",",
   "$",
   "min",
   ")",
   ",",
   "new",
   "NumericField",
   "(",
   "$",
   "this",
   "->",
   "getSettingName",
   "(",
   "'MaxValue'",
   ")",
   ",",
   "_t",
   "(",
   "'Moo_EditableField.MAXVALUE'",
   ",",
   "'Max Value'",
   ")",
   ",",
   "$",
   "max",
   ")",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-13",
  "nl_tokens": [
   "Return",
   "worksheet",
   "info",
   "(",
   "Name",
   "Last",
   "Column",
   "Letter",
   "Last",
   "Column",
   "Index",
   "Total",
   "Rows",
   "Total",
   "Columns",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "listWorksheetInfo",
   "(",
   "$",
   "pFilename",
   ")",
   "{",
   "// Open file",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "canRead",
   "(",
   "$",
   "pFilename",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "$",
   "pFilename",
   ".",
   "' is an Invalid Spreadsheet file.'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "openFile",
   "(",
   "$",
   "pFilename",
   ")",
   ";",
   "$",
   "fileHandle",
   "=",
   "$",
   "this",
   "->",
   "fileHandle",
   ";",
   "rewind",
   "(",
   "$",
   "fileHandle",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "=",
   "[",
   "]",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'worksheetName'",
   "]",
   "=",
   "'Worksheet'",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "'A'",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalRows'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "0",
   ";",
   "// loop through one row (line) at a time in the file",
   "$",
   "rowIndex",
   "=",
   "0",
   ";",
   "while",
   "(",
   "(",
   "$",
   "rowData",
   "=",
   "fgets",
   "(",
   "$",
   "fileHandle",
   ")",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "columnIndex",
   "=",
   "0",
   ";",
   "// convert SYLK encoded $rowData to UTF-8",
   "$",
   "rowData",
   "=",
   "StringHelper",
   "::",
   "SYLKtoUTF8",
   "(",
   "$",
   "rowData",
   ")",
   ";",
   "// explode each row at semicolons while taking into account that literal semicolon (;)",
   "// is escaped like this (;;)",
   "$",
   "rowData",
   "=",
   "explode",
   "(",
   "\"\\t\"",
   ",",
   "str_replace",
   "(",
   "'\u00a4',",
   " ",
   ";',",
   " ",
   "tr_replace(",
   "'",
   ";',",
   " ",
   "\\t\",",
   " ",
   "tr_replace(",
   "'",
   ";;',",
   " ",
   "\u00a4', ",
   "r",
   "rim($",
   "r",
   "o",
   "wData))",
   ")",
   ")",
   ")",
   ";",
   "",
   "",
   "$",
   "dataType",
   "=",
   "array_shift",
   "(",
   "$",
   "rowData",
   ")",
   ";",
   "if",
   "(",
   "$",
   "dataType",
   "==",
   "'C'",
   ")",
   "{",
   "//  Read cell value data",
   "foreach",
   "(",
   "$",
   "rowData",
   "as",
   "$",
   "rowDatum",
   ")",
   "{",
   "switch",
   "(",
   "$",
   "rowDatum",
   "[",
   "0",
   "]",
   ")",
   "{",
   "case",
   "'C'",
   ":",
   "case",
   "'X'",
   ":",
   "$",
   "columnIndex",
   "=",
   "substr",
   "(",
   "$",
   "rowDatum",
   ",",
   "1",
   ")",
   "-",
   "1",
   ";",
   "break",
   ";",
   "case",
   "'R'",
   ":",
   "case",
   "'Y'",
   ":",
   "$",
   "rowIndex",
   "=",
   "substr",
   "(",
   "$",
   "rowDatum",
   ",",
   "1",
   ")",
   ";",
   "break",
   ";",
   "}",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalRows'",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalRows'",
   "]",
   ",",
   "$",
   "rowIndex",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "max",
   "(",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   ",",
   "$",
   "columnIndex",
   ")",
   ";",
   "}",
   "}",
   "}",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "Coordinate",
   "::",
   "stringFromColumnIndex",
   "(",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ";",
   "// Close file",
   "fclose",
   "(",
   "$",
   "fileHandle",
   ")",
   ";",
   "return",
   "$",
   "worksheetInfo",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-14",
  "nl_tokens": [
   "Gets",
   "at",
   "each",
   "call",
   "a",
   "random",
   "number",
   "into",
   "the",
   "defined",
   "range",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "get",
   "(",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "range",
   "->",
   "as_integer",
   ")",
   "{",
   "return",
   "mt_rand",
   "(",
   "$",
   "this",
   "->",
   "range",
   "->",
   "<mask>",
   ",",
   "$",
   "this",
   "->",
   "range",
   "->",
   "max",
   ")",
   ";",
   "}",
   "else",
   "{",
   "return",
   "mt_rand",
   "(",
   "0",
   ",",
   "mt_getrandmax",
   "(",
   ")",
   ")",
   "/",
   "mt_getrandmax",
   "(",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-15",
  "nl_tokens": [
   "Set",
   "AutoFilter",
   "Rule",
   "Value",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setValue",
   "(",
   "$",
   "pValue",
   ")",
   "{",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "pValue",
   ")",
   ")",
   "{",
   "$",
   "grouping",
   "=",
   "-",
   "1",
   ";",
   "foreach",
   "(",
   "$",
   "pValue",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "//    Validate array entries",
   "if",
   "(",
   "!",
   "in_array",
   "(",
   "$",
   "key",
   ",",
   "self",
   "::",
   "$",
   "dateTimeGroups",
   ")",
   ")",
   "{",
   "//    Remove any invalid entries from the value array",
   "unset",
   "(",
   "$",
   "pValue",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "//    Work out what the dateTime grouping will be",
   "$",
   "grouping",
   "=",
   "<mask>",
   "(",
   "$",
   "grouping",
   ",",
   "array_search",
   "(",
   "$",
   "key",
   ",",
   "self",
   "::",
   "$",
   "dateTimeGroups",
   ")",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "pValue",
   ")",
   "==",
   "0",
   ")",
   "{",
   "throw",
   "new",
   "PhpSpreadsheetException",
   "(",
   "'Invalid rule value for column AutoFilter Rule.'",
   ")",
   ";",
   "}",
   "//    Set the dateTime grouping that we've anticipated",
   "$",
   "this",
   "->",
   "setGrouping",
   "(",
   "self",
   "::",
   "$",
   "dateTimeGroups",
   "[",
   "$",
   "grouping",
   "]",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "value",
   "=",
   "$",
   "pValue",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-16",
  "nl_tokens": [
   "Minutes",
   "with",
   "leading",
   "zeros"
  ],
  "pl_tokens": [
   "private",
   "function",
   "format_i",
   "(",
   "&",
   "$",
   "str",
   ")",
   "{",
   "if",
   "(",
   "strstr",
   "(",
   "$",
   "str",
   ",",
   "'%i'",
   ")",
   ")",
   "$",
   "str",
   "=",
   "str_replace",
   "(",
   "'%i'",
   ",",
   "sprintf",
   "(",
   "'%02d'",
   ",",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   ",",
   "$",
   "str",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-17",
  "nl_tokens": [
   "/",
   "*",
   "(",
   "non",
   "-",
   "PHPdoc",
   ")"
  ],
  "pl_tokens": [
   "public",
   "function",
   "pixelate",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ",",
   "$",
   "region",
   "=",
   "null",
   ")",
   "{",
   "$",
   "size",
   "=",
   "ceil",
   "(",
   "<mask>",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ")",
   "/",
   "42",
   ")",
   ";",
   "if",
   "(",
   "$",
   "region",
   "===",
   "null",
   ")",
   "{",
   "$",
   "region",
   "=",
   "array",
   "(",
   "'x'",
   "=>",
   "0",
   ",",
   "'y'",
   "=>",
   "0",
   ",",
   "'w'",
   "=>",
   "$",
   "width",
   ",",
   "'h'",
   "=>",
   "$",
   "height",
   ")",
   ";",
   "}",
   "$",
   "tmpRegion",
   "=",
   "array",
   "(",
   "'x'",
   "=>",
   "$",
   "region",
   "[",
   "'x'",
   "]",
   ",",
   "'y'",
   "=>",
   "$",
   "region",
   "[",
   "'y'",
   "]",
   ",",
   "'w'",
   "=>",
   "$",
   "size",
   ",",
   "'h'",
   "=>",
   "$",
   "size",
   ")",
   ";",
   "$",
   "activeReference",
   "=",
   "$",
   "this",
   "->",
   "getActiveReference",
   "(",
   ")",
   ";",
   "$",
   "blur",
   "=",
   "(",
   "$",
   "size",
   "*",
   "3",
   ")",
   ".",
   "'x'",
   ".",
   "(",
   "$",
   "size",
   "*",
   "4",
   ")",
   ";",
   "$",
   "i",
   "=",
   "$",
   "region",
   "[",
   "'x'",
   "]",
   ";",
   "$",
   "i_max",
   "=",
   "$",
   "region",
   "[",
   "'w'",
   "]",
   "+",
   "$",
   "region",
   "[",
   "'x'",
   "]",
   ";",
   "$",
   "j_max",
   "=",
   "$",
   "region",
   "[",
   "'h'",
   "]",
   "+",
   "$",
   "region",
   "[",
   "'y'",
   "]",
   ";",
   "for",
   "(",
   ";",
   "$",
   "i",
   "<",
   "$",
   "i_max",
   ";",
   "$",
   "i",
   "+=",
   "$",
   "size",
   ")",
   "{",
   "$",
   "tmpRegion",
   "[",
   "'x'",
   "]",
   "=",
   "$",
   "i",
   ";",
   "$",
   "j",
   "=",
   "$",
   "region",
   "[",
   "'y'",
   "]",
   ";",
   "for",
   "(",
   ";",
   "$",
   "j",
   "<",
   "$",
   "j_max",
   ";",
   "$",
   "j",
   "+=",
   "$",
   "size",
   ")",
   "{",
   "$",
   "tmpRegion",
   "[",
   "'y'",
   "]",
   "=",
   "$",
   "j",
   ";",
   "$",
   "this",
   "->",
   "setRegion",
   "(",
   "$",
   "tmpRegion",
   ")",
   ";",
   "$",
   "this",
   "->",
   "addFilterOption",
   "(",
   "$",
   "activeReference",
   ",",
   "'-blur'",
   ",",
   "$",
   "blur",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-18",
  "nl_tokens": [
   "DDB",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "DDB",
   "(",
   "$",
   "cost",
   ",",
   "$",
   "salvage",
   ",",
   "$",
   "life",
   ",",
   "$",
   "period",
   ",",
   "$",
   "factor",
   "=",
   "2.0",
   ")",
   "{",
   "$",
   "cost",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "cost",
   ")",
   ";",
   "$",
   "salvage",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "salvage",
   ")",
   ";",
   "$",
   "life",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "life",
   ")",
   ";",
   "$",
   "period",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "period",
   ")",
   ";",
   "$",
   "factor",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "factor",
   ")",
   ";",
   "//    Validate",
   "if",
   "(",
   "(",
   "is_numeric",
   "(",
   "$",
   "cost",
   ")",
   ")",
   "&&",
   "(",
   "is_numeric",
   "(",
   "$",
   "salvage",
   ")",
   ")",
   "&&",
   "(",
   "is_numeric",
   "(",
   "$",
   "life",
   ")",
   ")",
   "&&",
   "(",
   "is_numeric",
   "(",
   "$",
   "period",
   ")",
   ")",
   "&&",
   "(",
   "is_numeric",
   "(",
   "$",
   "factor",
   ")",
   ")",
   ")",
   "{",
   "$",
   "cost",
   "=",
   "(",
   "float",
   ")",
   "$",
   "cost",
   ";",
   "$",
   "salvage",
   "=",
   "(",
   "float",
   ")",
   "$",
   "salvage",
   ";",
   "$",
   "life",
   "=",
   "(",
   "int",
   ")",
   "$",
   "life",
   ";",
   "$",
   "period",
   "=",
   "(",
   "int",
   ")",
   "$",
   "period",
   ";",
   "$",
   "factor",
   "=",
   "(",
   "float",
   ")",
   "$",
   "factor",
   ";",
   "if",
   "(",
   "(",
   "$",
   "cost",
   "<=",
   "0",
   ")",
   "||",
   "(",
   "(",
   "$",
   "salvage",
   "/",
   "$",
   "cost",
   ")",
   "<",
   "0",
   ")",
   "||",
   "(",
   "$",
   "life",
   "<=",
   "0",
   ")",
   "||",
   "(",
   "$",
   "period",
   "<",
   "1",
   ")",
   "||",
   "(",
   "$",
   "factor",
   "<=",
   "0.0",
   ")",
   "||",
   "(",
   "$",
   "period",
   ">",
   "$",
   "life",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "NAN",
   "(",
   ")",
   ";",
   "}",
   "//    Set Fixed Depreciation Rate",
   "$",
   "fixedDepreciationRate",
   "=",
   "1",
   "-",
   "pow",
   "(",
   "(",
   "$",
   "salvage",
   "/",
   "$",
   "cost",
   ")",
   ",",
   "(",
   "1",
   "/",
   "$",
   "life",
   ")",
   ")",
   ";",
   "$",
   "fixedDepreciationRate",
   "=",
   "round",
   "(",
   "$",
   "fixedDepreciationRate",
   ",",
   "3",
   ")",
   ";",
   "//    Loop through each period calculating the depreciation",
   "$",
   "previousDepreciation",
   "=",
   "0",
   ";",
   "for",
   "(",
   "$",
   "per",
   "=",
   "1",
   ";",
   "$",
   "per",
   "<=",
   "$",
   "period",
   ";",
   "++",
   "$",
   "per",
   ")",
   "{",
   "$",
   "depreciation",
   "=",
   "<mask>",
   "(",
   "(",
   "$",
   "cost",
   "-",
   "$",
   "previousDepreciation",
   ")",
   "*",
   "(",
   "$",
   "factor",
   "/",
   "$",
   "life",
   ")",
   ",",
   "(",
   "$",
   "cost",
   "-",
   "$",
   "salvage",
   "-",
   "$",
   "previousDepreciation",
   ")",
   ")",
   ";",
   "$",
   "previousDepreciation",
   "+=",
   "$",
   "depreciation",
   ";",
   "}",
   "if",
   "(",
   "Functions",
   "::",
   "getCompatibilityMode",
   "(",
   ")",
   "==",
   "Functions",
   "::",
   "COMPATIBILITY_GNUMERIC",
   ")",
   "{",
   "$",
   "depreciation",
   "=",
   "round",
   "(",
   "$",
   "depreciation",
   ",",
   "2",
   ")",
   ";",
   "}",
   "return",
   "$",
   "depreciation",
   ";",
   "}",
   "return",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-19",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zremrangebyscore"
  ],
  "pl_tokens": [
   "public",
   "function",
   "removeByScore",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   ":",
   "int",
   "{",
   "return",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zremrangebyscore",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "this",
   "->",
   "valToStr",
   "(",
   "$",
   "min",
   ")",
   ",",
   "$",
   "this",
   "->",
   "valToStr",
   "(",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-20",
  "nl_tokens": [
   "(",
   "non",
   "-",
   "PHPdoc",
   ")"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "newInstance",
   "(",
   "Map",
   "$",
   "fields",
   ")",
   "{",
   "$",
   "year",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "YEAR",
   ")",
   ";",
   "$",
   "month",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "MONTH",
   ")",
   ";",
   "$",
   "date",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "DATE",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "HOUR",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "MINUTE",
   ")",
   ";",
   "$",
   "sec",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "SECOND",
   ")",
   ";",
   "return",
   "new",
   "self",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "date",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-21",
  "nl_tokens": [
   "\u56fe\u50cf\u6dfb\u52a0\u6587\u5b57"
  ],
  "pl_tokens": [
   "public",
   "function",
   "text",
   "(",
   "$",
   "text",
   ",",
   "$",
   "font",
   ",",
   "$",
   "size",
   ",",
   "$",
   "color",
   "=",
   "'#00000000'",
   ",",
   "$",
   "locate",
   "=",
   "THINKIMAGE_WATER_SOUTHEAST",
   ",",
   "$",
   "offset",
   "=",
   "0",
   ",",
   "$",
   "angle",
   "=",
   "0",
   ")",
   "{",
   "//\u8d44\u6e90\u68c0\u6d4b",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "im",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'\u6ca1\u6709\u53ef\u4ee5\u88ab\u5199\u5165\u6587\u5b57\u7684\u56fe\u50cf\u8d44\u6e90');",
   "",
   "",
   "}",
   "if",
   "(",
   "!",
   "is_file",
   "(",
   "$",
   "font",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "\"\u4e0d\u5b58\u5728\u7684\u5b57\u4f53\u6587\u4ef6\uff1a{$font}\");",
   "",
   "",
   "}",
   "//\u83b7\u53d6\u6587\u5b57\u4fe1\u606f",
   "$",
   "info",
   "=",
   "imagettfbbox",
   "(",
   "$",
   "size",
   ",",
   "$",
   "angle",
   ",",
   "$",
   "font",
   ",",
   "$",
   "text",
   ")",
   ";",
   "$",
   "minx",
   "=",
   "<mask>",
   "(",
   "$",
   "info",
   "[",
   "0",
   "]",
   ",",
   "$",
   "info",
   "[",
   "2",
   "]",
   ",",
   "$",
   "info",
   "[",
   "4",
   "]",
   ",",
   "$",
   "info",
   "[",
   "6",
   "]",
   ")",
   ";",
   "$",
   "maxx",
   "=",
   "max",
   "(",
   "$",
   "info",
   "[",
   "0",
   "]",
   ",",
   "$",
   "info",
   "[",
   "2",
   "]",
   ",",
   "$",
   "info",
   "[",
   "4",
   "]",
   ",",
   "$",
   "info",
   "[",
   "6",
   "]",
   ")",
   ";",
   "$",
   "miny",
   "=",
   "min",
   "(",
   "$",
   "info",
   "[",
   "1",
   "]",
   ",",
   "$",
   "info",
   "[",
   "3",
   "]",
   ",",
   "$",
   "info",
   "[",
   "5",
   "]",
   ",",
   "$",
   "info",
   "[",
   "7",
   "]",
   ")",
   ";",
   "$",
   "maxy",
   "=",
   "max",
   "(",
   "$",
   "info",
   "[",
   "1",
   "]",
   ",",
   "$",
   "info",
   "[",
   "3",
   "]",
   ",",
   "$",
   "info",
   "[",
   "5",
   "]",
   ",",
   "$",
   "info",
   "[",
   "7",
   "]",
   ")",
   ";",
   "/* \u8ba1\u7b97\u6587\u5b57\u521d\u59cb\u5750\u6807\u548c\u5c3a\u5bf8 */",
   "$",
   "x",
   "=",
   "$",
   "minx",
   ";",
   "$",
   "y",
   "=",
   "abs",
   "(",
   "$",
   "miny",
   ")",
   ";",
   "$",
   "w",
   "=",
   "$",
   "maxx",
   "-",
   "$",
   "minx",
   ";",
   "$",
   "h",
   "=",
   "$",
   "maxy",
   "-",
   "$",
   "miny",
   ";",
   "/* \u8bbe\u5b9a\u6587\u5b57\u4f4d\u7f6e */",
   "switch",
   "(",
   "$",
   "locate",
   ")",
   "{",
   "/* \u53f3\u4e0b\u89d2\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_SOUTHEAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0b\u89d2\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_SOUTHWEST",
   ":",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0a\u89d2\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_NORTHWEST",
   ":",
   "// \u8d77\u59cb\u5750\u6807\u5373\u4e3a\u5de6\u4e0a\u89d2\u5750\u6807\uff0c\u65e0\u9700\u8c03\u6574",
   "break",
   ";",
   "/* \u53f3\u4e0a\u89d2\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_NORTHEAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "break",
   ";",
   "/* \u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_CENTER",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u4e0b\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_SOUTH",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u53f3\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_EAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u4e0a\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_NORTH",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u5de6\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "THINKIMAGE_WATER_WEST",
   ":",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "default",
   ":",
   "/* \u81ea\u5b9a\u4e49\u6587\u5b57\u5750\u6807 */",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "locate",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "posx",
   ",",
   "$",
   "posy",
   ")",
   "=",
   "$",
   "locate",
   ";",
   "$",
   "x",
   "+=",
   "$",
   "posx",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "posy",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'\u4e0d\u652f\u6301\u7684\u6587\u5b57\u4f4d\u7f6e\u7c7b\u578b');",
   "",
   "",
   "}",
   "}",
   "/* \u8bbe\u7f6e\u504f\u79fb\u91cf */",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "offset",
   ")",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "array_map",
   "(",
   "'intval'",
   ",",
   "$",
   "offset",
   ")",
   ";",
   "list",
   "(",
   "$",
   "ox",
   ",",
   "$",
   "oy",
   ")",
   "=",
   "$",
   "offset",
   ";",
   "}",
   "else",
   "{",
   "$",
   "offset",
   "=",
   "intval",
   "(",
   "$",
   "offset",
   ")",
   ";",
   "$",
   "ox",
   "=",
   "$",
   "oy",
   "=",
   "$",
   "offset",
   ";",
   "}",
   "/* \u8bbe\u7f6e\u989c\u8272 */",
   "if",
   "(",
   "is_string",
   "(",
   "$",
   "color",
   ")",
   "&&",
   "0",
   "===",
   "strpos",
   "(",
   "$",
   "color",
   ",",
   "'#'",
   ")",
   ")",
   "{",
   "$",
   "color",
   "=",
   "str_split",
   "(",
   "substr",
   "(",
   "$",
   "color",
   ",",
   "1",
   ")",
   ",",
   "2",
   ")",
   ";",
   "$",
   "color",
   "=",
   "array_map",
   "(",
   "'hexdec'",
   ",",
   "$",
   "color",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "color",
   "[",
   "3",
   "]",
   ")",
   "||",
   "$",
   "color",
   "[",
   "3",
   "]",
   ">",
   "127",
   ")",
   "{",
   "$",
   "color",
   "[",
   "3",
   "]",
   "=",
   "0",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "!",
   "is_array",
   "(",
   "$",
   "color",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'\u9519\u8bef\u7684\u989c\u8272\u503c');",
   "",
   "",
   "}",
   "do",
   "{",
   "/* \u5199\u5165\u6587\u5b57 */",
   "$",
   "col",
   "=",
   "imagecolorallocatealpha",
   "(",
   "$",
   "this",
   "->",
   "im",
   ",",
   "$",
   "color",
   "[",
   "0",
   "]",
   ",",
   "$",
   "color",
   "[",
   "1",
   "]",
   ",",
   "$",
   "color",
   "[",
   "2",
   "]",
   ",",
   "$",
   "color",
   "[",
   "3",
   "]",
   ")",
   ";",
   "imagettftext",
   "(",
   "$",
   "this",
   "->",
   "im",
   ",",
   "$",
   "size",
   ",",
   "$",
   "angle",
   ",",
   "$",
   "x",
   "+",
   "$",
   "ox",
   ",",
   "$",
   "y",
   "+",
   "$",
   "oy",
   ",",
   "$",
   "col",
   ",",
   "$",
   "font",
   ",",
   "$",
   "text",
   ")",
   ";",
   "}",
   "while",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "gif",
   ")",
   "&&",
   "$",
   "this",
   "->",
   "gifNext",
   "(",
   ")",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-22",
  "nl_tokens": [
   "XNPV",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "XNPV",
   "(",
   "$",
   "rate",
   ",",
   "$",
   "values",
   ",",
   "$",
   "dates",
   ")",
   "{",
   "$",
   "rate",
   "=",
   "Functions",
   "::",
   "flattenSingleValue",
   "(",
   "$",
   "rate",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "rate",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "(",
   "!",
   "is_array",
   "(",
   "$",
   "values",
   ")",
   ")",
   "||",
   "(",
   "!",
   "is_array",
   "(",
   "$",
   "dates",
   ")",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}",
   "$",
   "values",
   "=",
   "Functions",
   "::",
   "flattenArray",
   "(",
   "$",
   "values",
   ")",
   ";",
   "$",
   "dates",
   "=",
   "Functions",
   "::",
   "flattenArray",
   "(",
   "$",
   "dates",
   ")",
   ";",
   "$",
   "valCount",
   "=",
   "count",
   "(",
   "$",
   "values",
   ")",
   ";",
   "if",
   "(",
   "$",
   "valCount",
   "!=",
   "count",
   "(",
   "$",
   "dates",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "NAN",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "(",
   "<mask>",
   "(",
   "$",
   "values",
   ")",
   ">",
   "0",
   ")",
   "||",
   "(",
   "max",
   "(",
   "$",
   "values",
   ")",
   "<",
   "0",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}",
   "$",
   "xnpv",
   "=",
   "0.0",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "valCount",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "values",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   "{",
   "return",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}",
   "$",
   "xnpv",
   "+=",
   "$",
   "values",
   "[",
   "$",
   "i",
   "]",
   "/",
   "pow",
   "(",
   "1",
   "+",
   "$",
   "rate",
   ",",
   "DateTime",
   "::",
   "DATEDIF",
   "(",
   "$",
   "dates",
   "[",
   "0",
   "]",
   ",",
   "$",
   "dates",
   "[",
   "$",
   "i",
   "]",
   ",",
   "'d'",
   ")",
   "/",
   "365",
   ")",
   ";",
   "}",
   "return",
   "(",
   "is_finite",
   "(",
   "$",
   "xnpv",
   ")",
   ")",
   "?",
   "$",
   "xnpv",
   ":",
   "Functions",
   "::",
   "VALUE",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-23",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "toArray",
   "(",
   ")",
   "{",
   "return",
   "[",
   "'name'",
   "=>",
   "$",
   "this",
   "->",
   "name",
   ",",
   "'type'",
   "=>",
   "$",
   "this",
   "->",
   "type",
   "->",
   "getTypeValue",
   "(",
   ")",
   ",",
   "'rule'",
   "=>",
   "$",
   "this",
   "->",
   "rule",
   "->",
   "getName",
   "(",
   ")",
   ",",
   "'required'",
   "=>",
   "$",
   "this",
   "->",
   "required",
   ",",
   "'min_length'",
   "=>",
   "$",
   "this",
   "->",
   "minLength",
   ",",
   "'max_length'",
   "=>",
   "$",
   "this",
   "->",
   "maxLength",
   ",",
   "'pattern'",
   "=>",
   "$",
   "this",
   "->",
   "pattern",
   ",",
   "'format'",
   "=>",
   "$",
   "this",
   "->",
   "format",
   "->",
   "getValue",
   "(",
   ")",
   ",",
   "'min'",
   "=>",
   "$",
   "this",
   "->",
   "<mask>",
   ",",
   "'max'",
   "=>",
   "$",
   "this",
   "->",
   "max",
   ",",
   "'precision'",
   "=>",
   "$",
   "this",
   "->",
   "precision",
   ",",
   "'scale'",
   "=>",
   "$",
   "this",
   "->",
   "scale",
   ",",
   "'default'",
   "=>",
   "$",
   "this",
   "->",
   "getDefault",
   "(",
   ")",
   ",",
   "'use_type_default'",
   "=>",
   "$",
   "this",
   "->",
   "useTypeDefault",
   ",",
   "'class_name'",
   "=>",
   "$",
   "this",
   "->",
   "className",
   ",",
   "'any_of_class_names'",
   "=>",
   "$",
   "this",
   "->",
   "anyOfClassNames",
   ",",
   "'has_assertion'",
   "=>",
   "null",
   "!==",
   "$",
   "this",
   "->",
   "assertion",
   ",",
   "'overridable'",
   "=>",
   "$",
   "this",
   "->",
   "overridable",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-24",
  "nl_tokens": [
   "Max",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "$",
   "path",
   ",",
   "$",
   "defaultValue",
   "=",
   "0",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "items",
   "===",
   "null",
   "||",
   "(",
   "is_array",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   "&&",
   "count",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   "==",
   "0",
   ")",
   ")",
   "{",
   "return",
   "$",
   "defaultValue",
   ";",
   "}",
   "$",
   "items",
   "=",
   "$",
   "this",
   "->",
   "pluck",
   "(",
   "$",
   "path",
   ",",
   "$",
   "defaultValue",
   ")",
   ";",
   "$",
   "max",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "items",
   "as",
   "$",
   "item",
   ")",
   "{",
   "if",
   "(",
   "$",
   "item",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "item",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-25",
  "nl_tokens": [
   "Validates",
   "a",
   "field",
   "in",
   "tmp_data"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "validate",
   "(",
   "$",
   "name",
   ",",
   "$",
   "limit",
   ",",
   "$",
   "regEx",
   "=",
   "false",
   ")",
   "{",
   "$",
   "Name",
   "=",
   "ucfirst",
   "(",
   "$",
   "name",
   ")",
   ";",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "_updates",
   "->",
   "$",
   "name",
   ";",
   "$",
   "length",
   "=",
   "explode",
   "(",
   "'-'",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "intval",
   "(",
   "$",
   "length",
   "[",
   "0",
   "]",
   ")",
   ";",
   "$",
   "max",
   "=",
   "intval",
   "(",
   "$",
   "length",
   "[",
   "1",
   "]",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "max",
   "and",
   "!",
   "$",
   "min",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "error",
   "(",
   "\"Invalid second parameter for the $name validation\"",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "is_null",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "report",
   "(",
   "\"Missing index $name from the input\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "==",
   "$",
   "min",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "report",
   "(",
   "\"$Name is blank and optional - skipped\"",
   ")",
   ";",
   "return",
   "true",
   ";",
   "}",
   "$",
   "this",
   "->",
   "log",
   "->",
   "formError",
   "(",
   "$",
   "name",
   ",",
   "\"$Name is required.\"",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "// Validate the value maximum length",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "formError",
   "(",
   "$",
   "name",
   ",",
   "\"The $Name is larger than $max characters.\"",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "// Validate the value minimum length",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "<",
   "$",
   "min",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "formError",
   "(",
   "$",
   "name",
   ",",
   "\"The $Name is too short. It should at least be $min characters long\"",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "// Validate the value pattern",
   "if",
   "(",
   "$",
   "regEx",
   ")",
   "{",
   "preg_match",
   "(",
   "$",
   "regEx",
   ",",
   "$",
   "value",
   ",",
   "$",
   "match",
   ")",
   ";",
   "if",
   "(",
   "preg_match",
   "(",
   "$",
   "regEx",
   ",",
   "$",
   "value",
   ",",
   "$",
   "match",
   ")",
   "===",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "log",
   "->",
   "formError",
   "(",
   "$",
   "name",
   ",",
   "\"The $Name \\\"{$value}\\\" is not valid\"",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "}",
   "/*\n         * If the execution reaches this point then the field value\n         * is considered to be valid\n         */",
   "$",
   "this",
   "->",
   "log",
   "->",
   "report",
   "(",
   "\"The $name is Valid\"",
   ")",
   ";",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-26",
  "nl_tokens": [
   "Gets",
   "one",
   "complex",
   "number",
   "randomly"
  ],
  "pl_tokens": [
   "public",
   "function",
   "get",
   "(",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "r",
   "||",
   "$",
   "this",
   "->",
   "i",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_object",
   "(",
   "$",
   "this",
   "->",
   "i",
   ")",
   ")",
   "{",
   "return",
   "new",
   "Complex",
   "(",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "r",
   "->",
   "<mask>",
   ",",
   "$",
   "this",
   "->",
   "r",
   "->",
   "max",
   ")",
   ",",
   "0",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_object",
   "(",
   "$",
   "this",
   "->",
   "r",
   ")",
   ")",
   "{",
   "return",
   "new",
   "Complex",
   "(",
   "0",
   ",",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "i",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "i",
   "->",
   "max",
   ")",
   ")",
   ";",
   "}",
   "return",
   "new",
   "Complex",
   "(",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "r",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "r",
   "->",
   "max",
   ")",
   ",",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "i",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "i",
   "->",
   "max",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "rho",
   "||",
   "$",
   "this",
   "->",
   "theta",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_object",
   "(",
   "$",
   "this",
   "->",
   "theta",
   ")",
   ")",
   "{",
   "return",
   "new",
   "Complex",
   "(",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "max",
   ")",
   ",",
   "0",
   ",",
   "Complex",
   "::",
   "TRIGONOMETRIC",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_object",
   "(",
   "$",
   "this",
   "->",
   "rho",
   ")",
   ")",
   "{",
   "return",
   "new",
   "Complex",
   "(",
   "0",
   ",",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "max",
   ")",
   ",",
   "Complex",
   "::",
   "TRIGONOMETRIC",
   ")",
   ";",
   "}",
   "return",
   "new",
   "Complex",
   "(",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "max",
   ")",
   ",",
   "self",
   "::",
   "random",
   "(",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "max",
   ")",
   ",",
   "Complex",
   "::",
   "TRIGONOMETRIC",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-27",
  "nl_tokens": [
   "Generate",
   "the",
   "module"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "compile",
   "(",
   ")",
   "{",
   "/** @var PageModel $objPage */",
   "global",
   "$",
   "objPage",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "articles",
   "=",
   "''",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "referer",
   "=",
   "'javascript:history.go(-1)'",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "back",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'goBack'",
   "]",
   ";",
   "// Get the news item",
   "$",
   "objArticle",
   "=",
   "NewsModel",
   "::",
   "findPublishedByParentAndIdOrAlias",
   "(",
   "Input",
   "::",
   "get",
   "(",
   "'items'",
   ")",
   ",",
   "$",
   "this",
   "->",
   "news_archives",
   ")",
   ";",
   "// The news item does not exist or has an external target (see #33)",
   "if",
   "(",
   "null",
   "===",
   "$",
   "objArticle",
   "||",
   "$",
   "objArticle",
   "->",
   "source",
   "!=",
   "'default'",
   ")",
   "{",
   "throw",
   "new",
   "PageNotFoundException",
   "(",
   "'Page not found: '",
   ".",
   "Environment",
   "::",
   "get",
   "(",
   "'uri'",
   ")",
   ")",
   ";",
   "}",
   "$",
   "arrArticle",
   "=",
   "$",
   "this",
   "->",
   "parseArticle",
   "(",
   "$",
   "objArticle",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "articles",
   "=",
   "$",
   "arrArticle",
   ";",
   "// Overwrite the page title (see #2853, #4955 and #87)",
   "if",
   "(",
   "$",
   "objArticle",
   "->",
   "pageTitle",
   ")",
   "{",
   "$",
   "objPage",
   "->",
   "pageTitle",
   "=",
   "$",
   "objArticle",
   "->",
   "pageTitle",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "objArticle",
   "->",
   "headline",
   ")",
   "{",
   "$",
   "objPage",
   "->",
   "pageTitle",
   "=",
   "strip_tags",
   "(",
   "StringUtil",
   "::",
   "stripInsertTags",
   "(",
   "$",
   "objArticle",
   "->",
   "headline",
   ")",
   ")",
   ";",
   "}",
   "// Overwrite the page description",
   "if",
   "(",
   "$",
   "objArticle",
   "->",
   "description",
   ")",
   "{",
   "$",
   "objPage",
   "->",
   "description",
   "=",
   "$",
   "objArticle",
   "->",
   "description",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "objArticle",
   "->",
   "teaser",
   ")",
   "{",
   "$",
   "objPage",
   "->",
   "description",
   "=",
   "$",
   "this",
   "->",
   "prepareMetaDescription",
   "(",
   "$",
   "objArticle",
   "->",
   "teaser",
   ")",
   ";",
   "}",
   "$",
   "bundles",
   "=",
   "System",
   "::",
   "getContainer",
   "(",
   ")",
   "->",
   "getParameter",
   "(",
   "'kernel.bundles'",
   ")",
   ";",
   "// HOOK: comments extension required",
   "if",
   "(",
   "$",
   "objArticle",
   "->",
   "noComments",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "bundles",
   "[",
   "'ContaoCommentsBundle'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "allowComments",
   "=",
   "false",
   ";",
   "return",
   ";",
   "}",
   "/** @var NewsArchiveModel $objArchive */",
   "$",
   "objArchive",
   "=",
   "$",
   "objArticle",
   "->",
   "getRelated",
   "(",
   "'pid'",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "allowComments",
   "=",
   "$",
   "objArchive",
   "->",
   "allowComments",
   ";",
   "// Comments are not allowed",
   "if",
   "(",
   "!",
   "$",
   "objArchive",
   "->",
   "allowComments",
   ")",
   "{",
   "return",
   ";",
   "}",
   "// Adjust the comments headline level",
   "$",
   "intHl",
   "=",
   "<mask>",
   "(",
   "(",
   "int",
   ")",
   "str_replace",
   "(",
   "'h'",
   ",",
   "''",
   ",",
   "$",
   "this",
   "->",
   "hl",
   ")",
   ",",
   "5",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "hlc",
   "=",
   "'h'",
   ".",
   "(",
   "$",
   "intHl",
   "+",
   "1",
   ")",
   ";",
   "$",
   "this",
   "->",
   "import",
   "(",
   "Comments",
   "::",
   "class",
   ",",
   "'Comments'",
   ")",
   ";",
   "$",
   "arrNotifies",
   "=",
   "array",
   "(",
   ")",
   ";",
   "// Notify the system administrator",
   "if",
   "(",
   "$",
   "objArchive",
   "->",
   "notify",
   "!=",
   "'notify_author'",
   ")",
   "{",
   "$",
   "arrNotifies",
   "[",
   "]",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_ADMIN_EMAIL'",
   "]",
   ";",
   "}",
   "// Notify the author",
   "if",
   "(",
   "$",
   "objArchive",
   "->",
   "notify",
   "!=",
   "'notify_admin'",
   ")",
   "{",
   "/** @var UserModel $objAuthor */",
   "if",
   "(",
   "(",
   "$",
   "objAuthor",
   "=",
   "$",
   "objArticle",
   "->",
   "getRelated",
   "(",
   "'author'",
   ")",
   ")",
   "instanceof",
   "UserModel",
   "&&",
   "$",
   "objAuthor",
   "->",
   "email",
   "!=",
   "''",
   ")",
   "{",
   "$",
   "arrNotifies",
   "[",
   "]",
   "=",
   "$",
   "objAuthor",
   "->",
   "email",
   ";",
   "}",
   "}",
   "$",
   "objConfig",
   "=",
   "new",
   "\\",
   "stdClass",
   "(",
   ")",
   ";",
   "$",
   "objConfig",
   "->",
   "perPage",
   "=",
   "$",
   "objArchive",
   "->",
   "perPage",
   ";",
   "$",
   "objConfig",
   "->",
   "order",
   "=",
   "$",
   "objArchive",
   "->",
   "sortOrder",
   ";",
   "$",
   "objConfig",
   "->",
   "template",
   "=",
   "$",
   "this",
   "->",
   "com_template",
   ";",
   "$",
   "objConfig",
   "->",
   "requireLogin",
   "=",
   "$",
   "objArchive",
   "->",
   "requireLogin",
   ";",
   "$",
   "objConfig",
   "->",
   "disableCaptcha",
   "=",
   "$",
   "objArchive",
   "->",
   "disableCaptcha",
   ";",
   "$",
   "objConfig",
   "->",
   "bbcode",
   "=",
   "$",
   "objArchive",
   "->",
   "bbcode",
   ";",
   "$",
   "objConfig",
   "->",
   "moderate",
   "=",
   "$",
   "objArchive",
   "->",
   "moderate",
   ";",
   "$",
   "this",
   "->",
   "Comments",
   "->",
   "addCommentsToTemplate",
   "(",
   "$",
   "this",
   "->",
   "Template",
   ",",
   "$",
   "objConfig",
   ",",
   "'tl_news'",
   ",",
   "$",
   "objArticle",
   "->",
   "id",
   ",",
   "$",
   "arrNotifies",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-28",
  "nl_tokens": [
   "Converts",
   "a",
   "DOS",
   "timestamp",
   "to",
   "UNIX",
   "format",
   ".",
   "There",
   "are",
   "very",
   "few",
   "cases",
   "where",
   "this",
   "is",
   "needed",
   "but",
   "some",
   "binary",
   "formats",
   "use",
   "it",
   "(",
   "eg",
   ":",
   "zip",
   "files",
   ".",
   ")",
   "Converting",
   "the",
   "other",
   "direction",
   "is",
   "done",
   "using",
   "{",
   "@link",
   "Date",
   "::",
   "unix2dos",
   "}",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "dos2unix",
   "(",
   "$",
   "timestamp",
   "=",
   "false",
   ")",
   "{",
   "$",
   "sec",
   "=",
   "2",
   "*",
   "(",
   "$",
   "timestamp",
   "&",
   "0x1f",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "(",
   "$",
   "timestamp",
   ">>",
   "5",
   ")",
   "&",
   "0x3f",
   ";",
   "$",
   "hrs",
   "=",
   "(",
   "$",
   "timestamp",
   ">>",
   "11",
   ")",
   "&",
   "0x1f",
   ";",
   "$",
   "day",
   "=",
   "(",
   "$",
   "timestamp",
   ">>",
   "16",
   ")",
   "&",
   "0x1f",
   ";",
   "$",
   "mon",
   "=",
   "(",
   "$",
   "timestamp",
   ">>",
   "21",
   ")",
   "&",
   "0x0f",
   ";",
   "$",
   "year",
   "=",
   "(",
   "$",
   "timestamp",
   ">>",
   "25",
   ")",
   "&",
   "0x7f",
   ";",
   "return",
   "mktime",
   "(",
   "$",
   "hrs",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ",",
   "$",
   "mon",
   ",",
   "$",
   "day",
   ",",
   "$",
   "year",
   "+",
   "1980",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-29",
  "nl_tokens": [
   "Generate",
   "a",
   "float",
   "number",
   "between",
   "$min",
   "and",
   "$max",
   "with",
   "precision",
   "$precision"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getFloat",
   "(",
   "$",
   "<mask>",
   "=",
   "0",
   ",",
   "$",
   "max",
   "=",
   "10000",
   ",",
   "$",
   "precision",
   "=",
   "2",
   ")",
   "{",
   "$",
   "num",
   "=",
   "rand",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ".",
   "'.'",
   ".",
   "$",
   "this",
   "->",
   "getString",
   "(",
   "'number'",
   ",",
   "$",
   "precision",
   ")",
   ";",
   "if",
   "(",
   "$",
   "num",
   ">",
   "$",
   "max",
   ")",
   "{",
   "// In case adding the additional decimal points makes us exceed the max.",
   "$",
   "num",
   "=",
   "$",
   "max",
   ";",
   "}",
   "return",
   "round",
   "(",
   "$",
   "num",
   ",",
   "$",
   "precision",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-30",
  "nl_tokens": [
   "#",
   "Returns",
   "the",
   "time",
   "as",
   "Unix",
   "Epoche",
   "represented",
   "by",
   "an",
   "Integer",
   "."
  ],
  "pl_tokens": [
   "function",
   "getTimestamp",
   "(",
   ")",
   "{",
   "$",
   "lastModifiedTimes",
   "=",
   "iterator_to_array",
   "(",
   "itertools",
   "\\",
   "filter",
   "(",
   "itertools",
   "\\",
   "map",
   "(",
   "function",
   "(",
   "$",
   "file",
   ")",
   "{",
   "if",
   "(",
   "file_exists",
   "(",
   "$",
   "file",
   ")",
   ")",
   "{",
   "return",
   "@",
   "filemtime",
   "(",
   "$",
   "file",
   ")",
   ";",
   "}",
   "}",
   ",",
   "$",
   "this",
   "->",
   "prerequisites",
   ")",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "lastModifiedTimes",
   ")",
   "{",
   "return",
   "<mask>",
   "(",
   "$",
   "lastModifiedTimes",
   ")",
   ";",
   "}",
   "return",
   "0",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-31",
  "nl_tokens": [
   "[[",
   "@doctodo",
   "method_description",
   ":",
   "estimateDuration",
   "]]",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "estimateDuration",
   "(",
   ")",
   "{",
   "$",
   "durations",
   "=",
   "[",
   "]",
   ";",
   "$",
   "logs",
   "=",
   "DataInterfaceLog",
   "::",
   "find",
   "(",
   ")",
   "->",
   "where",
   "(",
   "[",
   "'data_interface_id'",
   "=>",
   "$",
   "this",
   "->",
   "primaryKey",
   ",",
   "'status'",
   "=>",
   "'success'",
   "]",
   ")",
   "->",
   "all",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "logs",
   "as",
   "$",
   "log",
   ")",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "log",
   "->",
   "ended",
   ")",
   "||",
   "empty",
   "(",
   "$",
   "log",
   "->",
   "started",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "durations",
   "[",
   "]",
   "=",
   "strtotime",
   "(",
   "$",
   "log",
   "->",
   "ended",
   ")",
   "-",
   "strtotime",
   "(",
   "$",
   "log",
   "->",
   "started",
   ")",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "durations",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "average",
   "=",
   "array_sum",
   "(",
   "$",
   "durations",
   ")",
   "/",
   "count",
   "(",
   "$",
   "durations",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "max",
   "(",
   "$",
   "durations",
   ")",
   ";",
   "return",
   "$",
   "average",
   ";",
   "return",
   "(",
   "$",
   "average",
   "+",
   "$",
   "max",
   ")",
   "/",
   "2",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-32",
  "nl_tokens": [
   "Return",
   "worksheet",
   "info",
   "(",
   "Name",
   "Last",
   "Column",
   "Letter",
   "Last",
   "Column",
   "Index",
   "Total",
   "Rows",
   "Total",
   "Columns",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "listWorksheetInfo",
   "(",
   "$",
   "pFilename",
   ")",
   "{",
   "File",
   "::",
   "assertFile",
   "(",
   "$",
   "pFilename",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "=",
   "[",
   "]",
   ";",
   "$",
   "zip",
   "=",
   "new",
   "ZipArchive",
   "(",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "zip",
   "->",
   "open",
   "(",
   "$",
   "pFilename",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'Could not open '",
   ".",
   "$",
   "pFilename",
   ".",
   "' for reading! Error opening file.'",
   ")",
   ";",
   "}",
   "$",
   "xml",
   "=",
   "new",
   "XMLReader",
   "(",
   ")",
   ";",
   "$",
   "xml",
   "->",
   "xml",
   "(",
   "$",
   "this",
   "->",
   "securityScanFile",
   "(",
   "'zip://'",
   ".",
   "realpath",
   "(",
   "$",
   "pFilename",
   ")",
   ".",
   "'#content.xml'",
   ")",
   ",",
   "null",
   ",",
   "Settings",
   "::",
   "getLibXmlLoaderOptions",
   "(",
   ")",
   ")",
   ";",
   "$",
   "xml",
   "->",
   "setParserProperty",
   "(",
   "2",
   ",",
   "true",
   ")",
   ";",
   "// Step into the first level of content of the XML",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "while",
   "(",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ")",
   "{",
   "// Quickly jump through to the office:body node",
   "while",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "!==",
   "'office:body'",
   ")",
   "{",
   "if",
   "(",
   "$",
   "xml",
   "->",
   "isEmptyElement",
   ")",
   "{",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "xml",
   "->",
   "next",
   "(",
   ")",
   ";",
   "}",
   "}",
   "// Now read each node until we find our first table:table node",
   "while",
   "(",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "==",
   "'table:table'",
   "&&",
   "$",
   "xml",
   "->",
   "nodeType",
   "==",
   "XMLReader",
   "::",
   "ELEMENT",
   ")",
   "{",
   "$",
   "worksheetNames",
   "[",
   "]",
   "=",
   "$",
   "xml",
   "->",
   "getAttribute",
   "(",
   "'table:name'",
   ")",
   ";",
   "$",
   "tmpInfo",
   "=",
   "[",
   "'worksheetName'",
   "=>",
   "$",
   "xml",
   "->",
   "getAttribute",
   "(",
   "'table:name'",
   ")",
   ",",
   "'lastColumnLetter'",
   "=>",
   "'A'",
   ",",
   "'lastColumnIndex'",
   "=>",
   "0",
   ",",
   "'totalRows'",
   "=>",
   "0",
   ",",
   "'totalColumns'",
   "=>",
   "0",
   ",",
   "]",
   ";",
   "// Loop through each child node of the table:table element reading",
   "$",
   "currCells",
   "=",
   "0",
   ";",
   "do",
   "{",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "==",
   "'table:table-row'",
   "&&",
   "$",
   "xml",
   "->",
   "nodeType",
   "==",
   "XMLReader",
   "::",
   "ELEMENT",
   ")",
   "{",
   "$",
   "rowspan",
   "=",
   "$",
   "xml",
   "->",
   "getAttribute",
   "(",
   "'table:number-rows-repeated'",
   ")",
   ";",
   "$",
   "rowspan",
   "=",
   "empty",
   "(",
   "$",
   "rowspan",
   ")",
   "?",
   "1",
   ":",
   "$",
   "rowspan",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalRows'",
   "]",
   "+=",
   "$",
   "rowspan",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   ",",
   "$",
   "currCells",
   ")",
   ";",
   "$",
   "currCells",
   "=",
   "0",
   ";",
   "// Step into the row",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "do",
   "{",
   "if",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "==",
   "'table:table-cell'",
   "&&",
   "$",
   "xml",
   "->",
   "nodeType",
   "==",
   "XMLReader",
   "::",
   "ELEMENT",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "xml",
   "->",
   "isEmptyElement",
   ")",
   "{",
   "++",
   "$",
   "currCells",
   ";",
   "$",
   "xml",
   "->",
   "next",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "==",
   "'table:covered-table-cell'",
   "&&",
   "$",
   "xml",
   "->",
   "nodeType",
   "==",
   "XMLReader",
   "::",
   "ELEMENT",
   ")",
   "{",
   "$",
   "mergeSize",
   "=",
   "$",
   "xml",
   "->",
   "getAttribute",
   "(",
   "'table:number-columns-repeated'",
   ")",
   ";",
   "$",
   "currCells",
   "+=",
   "(",
   "int",
   ")",
   "$",
   "mergeSize",
   ";",
   "$",
   "xml",
   "->",
   "read",
   "(",
   ")",
   ";",
   "}",
   "}",
   "while",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "!=",
   "'table:table-row'",
   ")",
   ";",
   "}",
   "}",
   "while",
   "(",
   "$",
   "xml",
   "->",
   "name",
   "!=",
   "'table:table'",
   ")",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "max",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   ",",
   "$",
   "currCells",
   ")",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   "-",
   "1",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "Coordinate",
   "::",
   "stringFromColumnIndex",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "]",
   "=",
   "$",
   "tmpInfo",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "worksheetInfo",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-33",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zcount"
  ],
  "pl_tokens": [
   "public",
   "function",
   "rangeCount",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   ":",
   "int",
   "{",
   "return",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zcount",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "this",
   "->",
   "valToStr",
   "(",
   "$",
   "min",
   ")",
   ",",
   "$",
   "this",
   "->",
   "valToStr",
   "(",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-34",
  "nl_tokens": [
   "Sets",
   "the",
   "exit",
   "code",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setExitCode",
   "(",
   "$",
   "exitCode",
   ")",
   "{",
   "\\",
   "Assert",
   "\\",
   "that",
   "(",
   "$",
   "exitCode",
   ")",
   "->",
   "integer",
   "(",
   ")",
   "->",
   "<mask>",
   "(",
   "0",
   ")",
   ";",
   "$",
   "this",
   "->",
   "exitCode",
   "=",
   "$",
   "exitCode",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-35",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "validate",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "empty",
   "=",
   "false",
   ";",
   "try",
   "{",
   "$",
   "empty",
   "=",
   "$",
   "this",
   "->",
   "getOption",
   "(",
   "'empty'",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "ValueNotFoundException",
   "$",
   "e",
   ")",
   "{",
   "//ignore",
   "}",
   "if",
   "(",
   "!",
   "$",
   "value",
   "&&",
   "$",
   "empty",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "value",
   ")",
   ")",
   "return",
   "'Value is not number.'",
   ";",
   "try",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "getOption",
   "(",
   "'min'",
   ")",
   ";",
   "if",
   "(",
   "$",
   "value",
   "<",
   "$",
   "min",
   ")",
   "{",
   "return",
   "'Value is too small.'",
   ";",
   "}",
   "}",
   "catch",
   "(",
   "ValueNotFoundException",
   "$",
   "e",
   ")",
   "{",
   "//ignore",
   "}",
   "try",
   "{",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "getOption",
   "(",
   "'max'",
   ")",
   ";",
   "if",
   "(",
   "$",
   "value",
   ">",
   "$",
   "max",
   ")",
   "{",
   "return",
   "'Value is too height.'",
   ";",
   "}",
   "}",
   "catch",
   "(",
   "ValueNotFoundException",
   "$",
   "e",
   ")",
   "{",
   "//ignore",
   "}",
   "return",
   "null",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-36",
  "nl_tokens": [
   "Logs",
   "successful",
   "registration"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "logSuccessfulRegistration",
   "(",
   "array",
   "$",
   "reg",
   ")",
   "{",
   "$",
   "this",
   "->",
   "getLogger",
   "(",
   ")",
   "->",
   "info",
   "(",
   "\"New registration: {name} ({email}) from {addr}\"",
   ",",
   "array",
   "(",
   "\"name\"",
   "=>",
   "$",
   "reg",
   "[",
   "\"username\"",
   "]",
   ",",
   "\"email\"",
   "=>",
   "$",
   "reg",
   "[",
   "\"email\"",
   "]",
   ",",
   "\"addr\"",
   "=>",
   "$",
   "_SERVER",
   "[",
   "'REMOTE_ADDR'",
   "]",
   ")",
   ")",
   ";",
   "// Log the amount of users on each 10% of the maximum capacity",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "config",
   "[",
   "\"maxUsers\"",
   "]",
   ";",
   "$",
   "count",
   "=",
   "$",
   "this",
   "->",
   "storage",
   "->",
   "getUsersCount",
   "(",
   ")",
   "+",
   "1",
   ";",
   "if",
   "(",
   "$",
   "count",
   "%",
   "ceil",
   "(",
   "$",
   "max",
   "/",
   "10",
   ")",
   "===",
   "0",
   ")",
   "{",
   "$",
   "percent",
   "=",
   "intval",
   "(",
   "$",
   "count",
   "/",
   "ceil",
   "(",
   "$",
   "max",
   "/",
   "100",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "getLogger",
   "(",
   ")",
   "->",
   "warning",
   "(",
   "\"The amount of users has reached {percent} of the maximum capacity {max}.\"",
   ",",
   "array",
   "(",
   "\"percent\"",
   "=>",
   "$",
   "percent",
   ",",
   "\"max\"",
   "=>",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-37",
  "nl_tokens": [
   "\u751f\u6210\u7f29\u7565\u56fe"
  ],
  "pl_tokens": [
   "public",
   "function",
   "thumb",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ",",
   "$",
   "type",
   "=",
   "THINKIMAGE_THUMB_SCALE",
   ")",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "im",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "Exception",
   "(",
   "'\u6ca1\u6709\u53ef\u4ee5\u88ab\u7f29\u7565\u7684\u56fe\u50cf\u8d44\u6e90');",
   "",
   "",
   "}",
   "//\u539f\u56fe\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   ";",
   "$",
   "h",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   ";",
   "/* \u8ba1\u7b97\u7f29\u7565\u56fe\u751f\u6210\u7684\u5fc5\u8981\u53c2\u6570 */",
   "switch",
   "(",
   "$",
   "type",
   ")",
   "{",
   "/* \u7b49\u6bd4\u4f8b\u7f29\u653e */",
   "case",
   "THINKIMAGE_THUMB_SCALING",
   ":",
   "//\u539f\u56fe\u5c3a\u5bf8\u5c0f\u4e8e\u7f29\u7565\u56fe\u5c3a\u5bf8\u5219\u4e0d\u8fdb\u884c\u7f29\u7565",
   "if",
   "(",
   "$",
   "w",
   "<",
   "$",
   "width",
   "&&",
   "$",
   "h",
   "<",
   "$",
   "height",
   ")",
   "{",
   "return",
   ";",
   "}",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "<mask>",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "width",
   "=",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "height",
   "=",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ";",
   "break",
   ";",
   "/* \u5c45\u4e2d\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_CENTER",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "x",
   "=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0a\u89d2\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_NORTHWEST",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "break",
   ";",
   "/* \u53f3\u4e0b\u89d2\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_SOUTHEAST",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "x",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u586b\u5145 */",
   "case",
   "THINKIMAGE_THUMB_FILLED",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "if",
   "(",
   "$",
   "w",
   "<",
   "$",
   "width",
   "&&",
   "$",
   "h",
   "<",
   "$",
   "height",
   ")",
   "{",
   "$",
   "scale",
   "=",
   "1",
   ";",
   "}",
   "else",
   "{",
   "$",
   "scale",
   "=",
   "min",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "}",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "neww",
   "=",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "newh",
   "=",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "posx",
   "=",
   "(",
   "$",
   "width",
   "-",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ")",
   "/",
   "2",
   ";",
   "$",
   "posy",
   "=",
   "(",
   "$",
   "height",
   "-",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ")",
   "/",
   "2",
   ";",
   "//\u521b\u5efa\u4e00\u5f20\u65b0\u56fe\u50cf",
   "$",
   "newimg",
   "=",
   "new",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "newimg",
   "->",
   "newImage",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ",",
   "'white'",
   ",",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'type'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "'gif'",
   "==",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'type'",
   "]",
   ")",
   "{",
   "$",
   "imgs",
   "=",
   "$",
   "this",
   "->",
   "im",
   "->",
   "coalesceImages",
   "(",
   ")",
   ";",
   "$",
   "img",
   "=",
   "new",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "im",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "//\u9500\u6bc1\u539f\u56fe",
   "//\u5faa\u73af\u586b\u5145\u6bcf\u4e00\u5e27",
   "do",
   "{",
   "//\u586b\u5145\u56fe\u50cf",
   "$",
   "image",
   "=",
   "$",
   "this",
   "->",
   "_fill",
   "(",
   "$",
   "newimg",
   ",",
   "$",
   "posx",
   ",",
   "$",
   "posy",
   ",",
   "$",
   "neww",
   ",",
   "$",
   "newh",
   ",",
   "$",
   "imgs",
   ")",
   ";",
   "$",
   "img",
   "->",
   "addImage",
   "(",
   "$",
   "image",
   ")",
   ";",
   "$",
   "img",
   "->",
   "setImageDelay",
   "(",
   "$",
   "imgs",
   "->",
   "getImageDelay",
   "(",
   ")",
   ")",
   ";",
   "$",
   "img",
   "->",
   "setImagePage",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ",",
   "0",
   ",",
   "0",
   ")",
   ";",
   "$",
   "image",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "//\u9500\u6bc1\u96f6\u65f6\u56fe\u7247",
   "}",
   "while",
   "(",
   "$",
   "imgs",
   "->",
   "nextImage",
   "(",
   ")",
   ")",
   ";",
   "//\u538b\u7f29\u56fe\u7247",
   "$",
   "this",
   "->",
   "im",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "im",
   "=",
   "$",
   "img",
   "->",
   "deconstructImages",
   "(",
   ")",
   ";",
   "$",
   "imgs",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "//\u9500\u6bc1\u96f6\u65f6\u56fe\u7247",
   "$",
   "img",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "//\u9500\u6bc1\u96f6\u65f6\u56fe\u7247",
   "}",
   "else",
   "{",
   "//\u586b\u5145\u56fe\u50cf",
   "$",
   "img",
   "=",
   "$",
   "this",
   "->",
   "_fill",
   "(",
   "$",
   "newimg",
   ",",
   "$",
   "posx",
   ",",
   "$",
   "posy",
   ",",
   "$",
   "neww",
   ",",
   "$",
   "newh",
   ")",
   ";",
   "//\u9500\u6bc1\u539f\u56fe",
   "$",
   "this",
   "->",
   "im",
   "->",
   "destroy",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "im",
   "=",
   "$",
   "img",
   ";",
   "}",
   "//\u8bbe\u7f6e\u65b0\u56fe\u50cf\u5c5e\u6027",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "=",
   "$",
   "width",
   ";",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "=",
   "$",
   "height",
   ";",
   "return",
   ";",
   "/* \u56fa\u5b9a */",
   "case",
   "THINKIMAGE_THUMB_FIXED",
   ":",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "break",
   ";",
   "default",
   ":",
   "throw",
   "new",
   "\\",
   "Exception",
   "(",
   "'\u4e0d\u652f\u6301\u7684\u7f29\u7565\u56fe\u88c1\u526a\u7c7b\u578b');",
   "",
   "",
   "}",
   "/* \u88c1\u526a\u56fe\u50cf */",
   "$",
   "this",
   "->",
   "crop",
   "(",
   "$",
   "w",
   ",",
   "$",
   "h",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ",",
   "$",
   "width",
   ",",
   "$",
   "height",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-38",
  "nl_tokens": [
   "Extract",
   "a",
   "few",
   "lines",
   "of",
   "source",
   "code",
   "from",
   "a",
   "source",
   "string"
  ],
  "pl_tokens": [
   "private",
   "function",
   "getSourceExcerpt",
   "(",
   "$",
   "source",
   "=",
   "''",
   ",",
   "$",
   "line",
   "=",
   "1",
   ",",
   "$",
   "plus",
   "=",
   "1",
   ",",
   "$",
   "format",
   "=",
   "false",
   ")",
   "{",
   "$",
   "excerpt",
   "=",
   "[",
   "]",
   ";",
   "$",
   "twig",
   "=",
   "Escape",
   "::",
   "html",
   "(",
   "$",
   "source",
   ")",
   ";",
   "$",
   "lines",
   "=",
   "preg_split",
   "(",
   "\"/(\\r\\n|\\n|\\r)/\"",
   ",",
   "$",
   "twig",
   ")",
   ";",
   "$",
   "start",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "line",
   "-",
   "$",
   "plus",
   ")",
   ";",
   "$",
   "limit",
   "=",
   "min",
   "(",
   "count",
   "(",
   "$",
   "lines",
   ")",
   ",",
   "$",
   "line",
   "+",
   "$",
   "plus",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "start",
   "-",
   "1",
   ";",
   "$",
   "i",
   "<",
   "$",
   "limit",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "format",
   ")",
   "{",
   "$",
   "attr",
   "=",
   "'data-line=\"'",
   ".",
   "(",
   "$",
   "i",
   "+",
   "1",
   ")",
   ".",
   "'\"'",
   ";",
   "if",
   "(",
   "$",
   "i",
   "===",
   "$",
   "line",
   "-",
   "1",
   ")",
   "$",
   "excerpt",
   "[",
   "]",
   "=",
   "\"<mark $attr>$lines[$i]</mark>\"",
   ";",
   "else",
   "$",
   "excerpt",
   "[",
   "]",
   "=",
   "\"<span $attr>$lines[$i]</span>\"",
   ";",
   "}",
   "else",
   "{",
   "$",
   "excerpt",
   "[",
   "]",
   "=",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ";",
   "}",
   "}",
   "return",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "excerpt",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-39",
  "nl_tokens": [
   "Returns",
   "the",
   "price",
   "grid",
   "for",
   "the",
   "given",
   "country",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "getGridForCountry",
   "(",
   "CountryInterface",
   "$",
   "country",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "grids",
   "[",
   "$",
   "country",
   "->",
   "getId",
   "(",
   ")",
   "]",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "grids",
   "[",
   "$",
   "country",
   "->",
   "getId",
   "(",
   ")",
   "]",
   ";",
   "}",
   "$",
   "grid",
   "=",
   "[",
   "]",
   ";",
   "$",
   "prices",
   "=",
   "$",
   "this",
   "->",
   "priceRepository",
   "->",
   "findByCountry",
   "(",
   "$",
   "country",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "prices",
   "as",
   "$",
   "price",
   ")",
   "{",
   "$",
   "method",
   "=",
   "$",
   "price",
   "->",
   "getMethod",
   "(",
   ")",
   ";",
   "// Create method if not exists",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "grid",
   "[",
   "$",
   "method",
   "->",
   "getId",
   "(",
   ")",
   "]",
   ")",
   ")",
   "{",
   "$",
   "gateway",
   "=",
   "$",
   "this",
   "->",
   "gatewayRegistry",
   "->",
   "getGateway",
   "(",
   "$",
   "method",
   "->",
   "getGatewayName",
   "(",
   ")",
   ")",
   ";",
   "$",
   "grid",
   "[",
   "$",
   "method",
   "->",
   "getId",
   "(",
   ")",
   "]",
   "=",
   "[",
   "'method'",
   "=>",
   "$",
   "method",
   ",",
   "'max_weight'",
   "=>",
   "$",
   "gateway",
   "->",
   "getMaxWeight",
   "(",
   ")",
   ",",
   "'prices'",
   "=>",
   "[",
   "]",
   ",",
   "]",
   ";",
   "}",
   "// Add price",
   "$",
   "grid",
   "[",
   "$",
   "method",
   "->",
   "getId",
   "(",
   ")",
   "]",
   "[",
   "'prices'",
   "]",
   "[",
   "]",
   "=",
   "[",
   "'weight'",
   "=>",
   "$",
   "price",
   "->",
   "getWeight",
   "(",
   ")",
   ",",
   "'price'",
   "=>",
   "$",
   "price",
   "->",
   "getNetPrice",
   "(",
   ")",
   ",",
   "]",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "grid",
   "as",
   "&",
   "$",
   "method",
   ")",
   "{",
   "// Sort prices by weight ASC",
   "usort",
   "(",
   "$",
   "method",
   "[",
   "'prices'",
   "]",
   ",",
   "function",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ")",
   "{",
   "if",
   "(",
   "0",
   "===",
   "bccomp",
   "(",
   "$",
   "a",
   "[",
   "'weight'",
   "]",
   ",",
   "$",
   "b",
   "[",
   "'weight'",
   "]",
   ",",
   "3",
   ")",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "return",
   "$",
   "a",
   "[",
   "'weight'",
   "]",
   ">",
   "$",
   "b",
   "[",
   "'weight'",
   "]",
   "?",
   "1",
   ":",
   "-",
   "1",
   ";",
   "}",
   ")",
   ";",
   "// Fix max weight",
   "$",
   "<mask>",
   "=",
   "end",
   "(",
   "$",
   "method",
   "[",
   "'prices'",
   "]",
   ")",
   "[",
   "'weight'",
   "]",
   ";",
   "if",
   "(",
   "0",
   "==",
   "$",
   "method",
   "[",
   "'max_weight'",
   "]",
   "||",
   "$",
   "method",
   "[",
   "'max_weight'",
   "]",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "method",
   "[",
   "'max_weight'",
   "]",
   "=",
   "$",
   "max",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "method",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "grids",
   "[",
   "$",
   "country",
   "->",
   "getId",
   "(",
   ")",
   "]",
   "=",
   "$",
   "grid",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-40",
  "nl_tokens": [
   "Get",
   "the",
   "relative",
   "path",
   "from",
   "the",
   "current",
   "path",
   "to",
   "another"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getRelativePath",
   "(",
   "string",
   "$",
   "path",
   ")",
   ":",
   "string",
   "{",
   "$",
   "from",
   "=",
   "$",
   "this",
   "->",
   "path",
   ";",
   "$",
   "fromParts",
   "=",
   "explode",
   "(",
   "\"/\"",
   ",",
   "$",
   "from",
   ")",
   ";",
   "$",
   "toParts",
   "=",
   "explode",
   "(",
   "\"/\"",
   ",",
   "$",
   "path",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "max",
   "(",
   "count",
   "(",
   "$",
   "fromParts",
   ")",
   ",",
   "count",
   "(",
   "$",
   "toParts",
   ")",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "fromParts",
   "[",
   "$",
   "i",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "toParts",
   "[",
   "$",
   "i",
   "]",
   ")",
   "||",
   "$",
   "fromParts",
   "[",
   "$",
   "i",
   "]",
   "!==",
   "$",
   "toParts",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "$",
   "len",
   "=",
   "count",
   "(",
   "$",
   "fromParts",
   ")",
   "-",
   "$",
   "i",
   "-",
   "1",
   ";",
   "$",
   "path",
   "=",
   "array_slice",
   "(",
   "$",
   "toParts",
   ",",
   "$",
   "i",
   ")",
   ";",
   "if",
   "(",
   "$",
   "len",
   "<",
   "0",
   ")",
   "{",
   "return",
   "implode",
   "(",
   "\"/\"",
   ",",
   "$",
   "path",
   ")",
   ";",
   "}",
   "return",
   "str_repeat",
   "(",
   "\"../\"",
   ",",
   "$",
   "len",
   ")",
   ".",
   "implode",
   "(",
   "\"/\"",
   ",",
   "$",
   "path",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-41",
  "nl_tokens": [
   "Applies",
   "a",
   "given",
   "netmask",
   "to",
   "an",
   "IP",
   "address"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getSubnet",
   "(",
   "$",
   "ip",
   ",",
   "$",
   "netmask",
   ")",
   "{",
   "$",
   "binString",
   "=",
   "@",
   "inet_pton",
   "(",
   "$",
   "ip",
   ")",
   ";",
   "if",
   "(",
   "$",
   "binString",
   "===",
   "false",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"Not a valid IP address.\"",
   ")",
   ";",
   "}",
   "// Length of the IP in bytes (4 or 16)",
   "$",
   "byteLen",
   "=",
   "mb_strlen",
   "(",
   "$",
   "binString",
   ",",
   "\"8bit\"",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_int",
   "(",
   "$",
   "netmask",
   ")",
   "||",
   "$",
   "netmask",
   "<",
   "0",
   "||",
   "$",
   "netmask",
   ">",
   "$",
   "byteLen",
   "*",
   "8",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"Not a valid netmask.\"",
   ")",
   ";",
   "}",
   "for",
   "(",
   "$",
   "byte",
   "=",
   "$",
   "byteLen",
   "-",
   "1",
   ";",
   "(",
   "$",
   "byte",
   "+",
   "1",
   ")",
   "*",
   "8",
   ">",
   "$",
   "netmask",
   ";",
   "--",
   "$",
   "byte",
   ")",
   "{",
   "// Bitlength of a mask for the current byte",
   "$",
   "maskLen",
   "=",
   "<mask>",
   "(",
   "8",
   ",",
   "(",
   "$",
   "byte",
   "+",
   "1",
   ")",
   "*",
   "8",
   "-",
   "$",
   "netmask",
   ")",
   ";",
   "// Create the byte mask of maskLen bits",
   "$",
   "mask",
   "=",
   "(",
   "~",
   "(",
   "(",
   "1",
   "<<",
   "$",
   "maskLen",
   ")",
   "-",
   "1",
   ")",
   ")",
   "&",
   "0xff",
   ";",
   "// Export byte as 'unsigned char' and apply the mask",
   "$",
   "maskedByte",
   "=",
   "$",
   "mask",
   "&",
   "unpack",
   "(",
   "'C'",
   ",",
   "$",
   "binString",
   "[",
   "$",
   "byte",
   "]",
   ")",
   "[",
   "1",
   "]",
   ";",
   "$",
   "binString",
   "[",
   "$",
   "byte",
   "]",
   "=",
   "pack",
   "(",
   "'C'",
   ",",
   "$",
   "maskedByte",
   ")",
   ";",
   "}",
   "return",
   "inet_ntop",
   "(",
   "$",
   "binString",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "netmask",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-42",
  "nl_tokens": [
   "SUMX2MY2",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "SUMX2MY2",
   "(",
   "$",
   "matrixData1",
   ",",
   "$",
   "matrixData2",
   ")",
   "{",
   "$",
   "array1",
   "=",
   "Functions",
   "::",
   "flattenArray",
   "(",
   "$",
   "matrixData1",
   ")",
   ";",
   "$",
   "array2",
   "=",
   "Functions",
   "::",
   "flattenArray",
   "(",
   "$",
   "matrixData2",
   ")",
   ";",
   "$",
   "count",
   "=",
   "<mask>",
   "(",
   "count",
   "(",
   "$",
   "array1",
   ")",
   ",",
   "count",
   "(",
   "$",
   "array2",
   ")",
   ")",
   ";",
   "$",
   "result",
   "=",
   "0",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "count",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "(",
   "(",
   "is_numeric",
   "(",
   "$",
   "array1",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   "&&",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "array1",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   ")",
   "&&",
   "(",
   "(",
   "is_numeric",
   "(",
   "$",
   "array2",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   "&&",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "array2",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   ")",
   ")",
   "{",
   "$",
   "result",
   "+=",
   "(",
   "$",
   "array1",
   "[",
   "$",
   "i",
   "]",
   "*",
   "$",
   "array1",
   "[",
   "$",
   "i",
   "]",
   ")",
   "-",
   "(",
   "$",
   "array2",
   "[",
   "$",
   "i",
   "]",
   "*",
   "$",
   "array2",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-43",
  "nl_tokens": [
   "Clips",
   "a",
   "string",
   "to",
   "a",
   "maximum",
   "length",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "clipString",
   "(",
   "$",
   "string",
   ",",
   "$",
   "size",
   ",",
   "$",
   "position",
   "=",
   "0",
   ")",
   "{",
   "$",
   "utf8",
   "=",
   "false",
   ";",
   "if",
   "(",
   "function_exists",
   "(",
   "'mb_detect_encoding'",
   ")",
   "&&",
   "mb_detect_encoding",
   "(",
   "$",
   "string",
   ")",
   "==",
   "'UTF-8'",
   ")",
   "{",
   "$",
   "utf8",
   "=",
   "true",
   ";",
   "}",
   "$",
   "length",
   "=",
   "(",
   "$",
   "utf8",
   "==",
   "true",
   ")",
   "?",
   "mb_strlen",
   "(",
   "$",
   "string",
   ",",
   "\"UTF-8\"",
   ")",
   ":",
   "strlen",
   "(",
   "$",
   "string",
   ")",
   ";",
   "if",
   "(",
   "$",
   "length",
   "<=",
   "$",
   "size",
   ")",
   "{",
   "return",
   "$",
   "string",
   ";",
   "}",
   "$",
   "position",
   "=",
   "<mask>",
   "(",
   "$",
   "position",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "start",
   "=",
   "(",
   "$",
   "size",
   "/",
   "2",
   ">",
   "$",
   "position",
   "?",
   "0",
   ":",
   "$",
   "position",
   "-",
   "$",
   "size",
   "/",
   "2",
   ")",
   ";",
   "if",
   "(",
   "$",
   "start",
   "+",
   "$",
   "size",
   ">",
   "$",
   "length",
   ")",
   "{",
   "$",
   "start",
   "=",
   "$",
   "length",
   "-",
   "$",
   "size",
   ";",
   "}",
   "$",
   "string",
   "=",
   "(",
   "$",
   "utf8",
   "==",
   "true",
   ")",
   "?",
   "mb_substr",
   "(",
   "$",
   "string",
   ",",
   "$",
   "start",
   ",",
   "$",
   "size",
   ")",
   ":",
   "substr",
   "(",
   "$",
   "string",
   ",",
   "$",
   "start",
   ",",
   "$",
   "size",
   ")",
   ";",
   "return",
   "(",
   "$",
   "start",
   ">",
   "0",
   "?",
   "'...'",
   ":",
   "''",
   ")",
   ".",
   "$",
   "string",
   ".",
   "(",
   "$",
   "start",
   "+",
   "$",
   "size",
   "<",
   "$",
   "length",
   "?",
   "'...'",
   ":",
   "''",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-44",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "applyFix",
   "(",
   "\\",
   "SplFileInfo",
   "$",
   "file",
   ",",
   "Tokens",
   "$",
   "tokens",
   ")",
   "{",
   "$",
   "commentsAnalyzer",
   "=",
   "new",
   "CommentsAnalyzer",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "index",
   "=",
   "0",
   ",",
   "$",
   "limit",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "tokens",
   ")",
   ";",
   "$",
   "index",
   "<",
   "$",
   "limit",
   ";",
   "++",
   "$",
   "index",
   ")",
   "{",
   "$",
   "token",
   "=",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "token",
   "->",
   "isGivenKind",
   "(",
   "T_COMMENT",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "$",
   "commentsAnalyzer",
   "->",
   "isHeaderComment",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "commentsAnalyzer",
   "->",
   "isBeforeStructuralElement",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "commentIndices",
   "=",
   "$",
   "commentsAnalyzer",
   "->",
   "getCommentBlockIndices",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isCommentCandidate",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "commentIndices",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "fixComment",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "commentIndices",
   ")",
   ";",
   "}",
   "$",
   "index",
   "=",
   "<mask>",
   "(",
   "$",
   "commentIndices",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-45",
  "nl_tokens": [
   "\u6b21\u306e",
   "1",
   "\u6587\u5b57\u304c\u4f55\u30d0\u30a4\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8a08\u7b97\u3057\u307e\u3059",
   ".",
   "\u5f15\u6570\u306b\u5fdc\u3058\u3066\u4ee5\u4e0b\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059",
   ".",
   "(",
   "\u4ee5\u4e0b",
   "2",
   "\u9032\u6570\u8868\u793a",
   ")"
  ],
  "pl_tokens": [
   "private",
   "function",
   "getCharCount",
   "(",
   "$",
   "byte",
   ")",
   "{",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "7",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "bit",
   "=",
   "pow",
   "(",
   "2",
   ",",
   "7",
   "-",
   "$",
   "i",
   ")",
   ";",
   "// 128, 64, 32, 16 ...",
   "if",
   "(",
   "$",
   "byte",
   "<",
   "$",
   "bit",
   ")",
   "{",
   "return",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "i",
   ")",
   ";",
   "}",
   "$",
   "byte",
   "%=",
   "$",
   "bit",
   ";",
   "}",
   "// @codeCoverageIgnoreStart",
   "throw",
   "new",
   "Exception",
   "(",
   "\"Invalid State Error\"",
   ")",
   ";",
   "// @codeCoverageIgnoreEnd",
   "}"
  ]
 },
 {
  "idx": "maxmin-46",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u6642\u523b\u3092\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306b\u5909\u63db\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "formatTimestamp",
   "(",
   "Timestamp",
   "$",
   "d",
   ")",
   "{",
   "$",
   "hour",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'hour'",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'minute'",
   ")",
   ";",
   "$",
   "sec",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'second'",
   ")",
   ";",
   "$",
   "month",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'month'",
   ")",
   ";",
   "$",
   "date",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'date'",
   ")",
   ";",
   "$",
   "year",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "'year'",
   ")",
   ";",
   "return",
   "strval",
   "(",
   "mktime",
   "(",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ",",
   "$",
   "month",
   ",",
   "$",
   "date",
   ",",
   "$",
   "year",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-47",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u5024\u306e\u7e70\u308a\u4e0a\u304c\u308a\u51e6\u7406\u3092\u884c\u3044\u307e\u3059",
   ".",
   "\u3053\u306e\u95a2\u6570\u306f",
   "Time",
   "::",
   "adjust",
   "()",
   "\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "moveUp",
   "(",
   "Map",
   "$",
   "fields",
   ")",
   "{",
   "$",
   "key",
   "=",
   "$",
   "this",
   "->",
   "key",
   ";",
   "$",
   "upperKey",
   "=",
   "$",
   "this",
   "->",
   "upperKey",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "max",
   ";",
   "$",
   "min",
   "=",
   "$",
   "this",
   "->",
   "min",
   ";",
   "$",
   "field",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "$",
   "key",
   ")",
   ";",
   "$",
   "upperField",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "$",
   "upperKey",
   ")",
   ";",
   "$",
   "range",
   "=",
   "$",
   "max",
   "-",
   "$",
   "min",
   "+",
   "1",
   ";",
   "$",
   "amount",
   "=",
   "intval",
   "(",
   "(",
   "$",
   "field",
   "-",
   "$",
   "min",
   ")",
   "/",
   "$",
   "range",
   ")",
   ";",
   "$",
   "fields",
   "->",
   "put",
   "(",
   "$",
   "upperKey",
   ",",
   "$",
   "upperField",
   "+",
   "$",
   "amount",
   ")",
   ";",
   "$",
   "fields",
   "->",
   "put",
   "(",
   "$",
   "key",
   ",",
   "(",
   "$",
   "field",
   "-",
   "$",
   "min",
   ")",
   "%",
   "$",
   "range",
   "+",
   "$",
   "min",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-48",
  "nl_tokens": [
   "Take",
   "a",
   "cron",
   "column",
   "as",
   "argument",
   "and",
   "return",
   "an",
   "array",
   "containing",
   "every",
   "item",
   "in",
   "range",
   "of",
   "the",
   "definition"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "extractRange",
   "(",
   "$",
   "definition",
   ",",
   "$",
   "<mask>",
   "=",
   "null",
   ",",
   "$",
   "max",
   "=",
   "null",
   ")",
   "{",
   "$",
   "resultSet",
   "=",
   "array",
   "(",
   ")",
   ";",
   "if",
   "(",
   "substr",
   "(",
   "$",
   "definition",
   ",",
   "0",
   ",",
   "1",
   ")",
   "===",
   "'*'",
   ")",
   "{",
   "// We need ranges otherwise a full set can not be created",
   "if",
   "(",
   "$",
   "min",
   "===",
   "null",
   "||",
   "$",
   "max",
   "===",
   "null",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "min",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "max",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "resultSet",
   "[",
   "]",
   "=",
   "$",
   "i",
   ";",
   "}",
   "return",
   "$",
   "resultSet",
   ";",
   "}",
   "// Remove the stepping part if it is available",
   "if",
   "(",
   "(",
   "$",
   "position",
   "=",
   "strpos",
   "(",
   "$",
   "definition",
   ",",
   "'/'",
   ")",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "definition",
   "=",
   "substr",
   "(",
   "$",
   "definition",
   ",",
   "0",
   ",",
   "$",
   "position",
   ")",
   ";",
   "}",
   "// Split the definition into list elements. At least one elements needs",
   "// to be there",
   "$",
   "ranges",
   "=",
   "explode",
   "(",
   "','",
   ",",
   "$",
   "definition",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "ranges",
   "as",
   "$",
   "range",
   ")",
   "{",
   "// There might be a '-' sign which indicates a real range, split it accordingly.",
   "$",
   "entries",
   "=",
   "explode",
   "(",
   "'-'",
   ",",
   "$",
   "range",
   ")",
   ";",
   "// If there is only one entry just add it to the result array",
   "if",
   "(",
   "count",
   "(",
   "$",
   "entries",
   ")",
   "===",
   "1",
   ")",
   "{",
   "$",
   "resultSet",
   "[",
   "]",
   "=",
   "(",
   "int",
   ")",
   "$",
   "entries",
   "[",
   "0",
   "]",
   ";",
   "}",
   "// If a range is defined it needs to be calculated",
   "else",
   "{",
   "$",
   "high",
   "=",
   "(",
   "int",
   ")",
   "max",
   "(",
   "$",
   "entries",
   ")",
   ";",
   "$",
   "low",
   "=",
   "(",
   "int",
   ")",
   "min",
   "(",
   "$",
   "entries",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "low",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "high",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "resultSet",
   "[",
   "]",
   "=",
   "$",
   "i",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "resultSet",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-49",
  "nl_tokens": [
   "Finds",
   "or",
   "create",
   "the",
   "shipment",
   "item",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "findOrCreateItem",
   "(",
   "ShipmentInterface",
   "$",
   "shipment",
   ",",
   "SaleItemInterface",
   "$",
   "saleItem",
   ",",
   "$",
   "expected",
   ",",
   "$",
   "available",
   "=",
   "null",
   ")",
   "{",
   "$",
   "item",
   "=",
   "null",
   ";",
   "if",
   "(",
   "0",
   ">=",
   "$",
   "expected",
   ")",
   "{",
   "return",
   "$",
   "item",
   ";",
   "}",
   "// Existing item lookup",
   "foreach",
   "(",
   "$",
   "shipment",
   "->",
   "getItems",
   "(",
   ")",
   "as",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "$",
   "i",
   "->",
   "getSaleItem",
   "(",
   ")",
   "===",
   "$",
   "saleItem",
   ")",
   "{",
   "$",
   "item",
   "=",
   "$",
   "i",
   ";",
   "break",
   ";",
   "}",
   "}",
   "// Not found, create it",
   "if",
   "(",
   "null",
   "===",
   "$",
   "item",
   ")",
   "{",
   "$",
   "item",
   "=",
   "$",
   "this",
   "->",
   "factory",
   "->",
   "createItemForShipment",
   "(",
   "$",
   "shipment",
   ")",
   ";",
   "$",
   "item",
   "->",
   "setShipment",
   "(",
   "$",
   "shipment",
   ")",
   ";",
   "$",
   "item",
   "->",
   "setSaleItem",
   "(",
   "$",
   "saleItem",
   ")",
   ";",
   "}",
   "// Set expected quantity",
   "$",
   "item",
   "->",
   "setExpected",
   "(",
   "$",
   "expected",
   ")",
   ";",
   "if",
   "(",
   "$",
   "shipment",
   "->",
   "isReturn",
   "(",
   ")",
   ")",
   "{",
   "// Set expected quantity as available",
   "$",
   "item",
   "->",
   "setAvailable",
   "(",
   "$",
   "expected",
   ")",
   ";",
   "}",
   "else",
   "{",
   "if",
   "(",
   "null",
   "===",
   "$",
   "available",
   ")",
   "{",
   "$",
   "available",
   "=",
   "$",
   "this",
   "->",
   "calculator",
   "->",
   "calculateAvailableQuantity",
   "(",
   "$",
   "saleItem",
   ",",
   "$",
   "shipment",
   ")",
   ";",
   "}",
   "// Set available quantity",
   "$",
   "item",
   "->",
   "setAvailable",
   "(",
   "$",
   "available",
   ")",
   ";",
   "// Set default quantity for new non return shipment items",
   "if",
   "(",
   "null",
   "===",
   "$",
   "shipment",
   "->",
   "getId",
   "(",
   ")",
   ")",
   "{",
   "$",
   "item",
   "->",
   "setQuantity",
   "(",
   "<mask>",
   "(",
   "$",
   "expected",
   ",",
   "$",
   "available",
   ")",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "item",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-50",
  "nl_tokens": [
   "Alias",
   "inverse",
   "de",
   "la",
   "fonction",
   "between",
   "()",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "notBetween",
   "(",
   "$",
   "column",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "between",
   "(",
   "$",
   "column",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "'and'",
   ",",
   "true",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-51",
  "nl_tokens": [
   "Give",
   "the",
   "maximal",
   "value",
   "of",
   "the",
   "curve",
   "for",
   "the",
   "current",
   "sigma",
   "and",
   "mu",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   ")",
   "{",
   "$",
   "float_max",
   "=",
   "1",
   "/",
   "(",
   "$",
   "this",
   "->",
   "float_sigma",
   "*",
   "sqrt",
   "(",
   "2",
   "*",
   "pi",
   "(",
   ")",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "int_precision",
   ")",
   "{",
   "return",
   "round",
   "(",
   "$",
   "float_max",
   ",",
   "$",
   "this",
   "->",
   "int_precision",
   ")",
   ";",
   "}",
   "return",
   "$",
   "float_max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-52",
  "nl_tokens": [
   "@param",
   "array",
   "$data",
   "@param",
   "$height"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getDataForChartElements",
   "(",
   "array",
   "$",
   "data",
   ",",
   "$",
   "height",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "getMaxValue",
   "(",
   ")",
   ";",
   "$",
   "minHeight",
   "=",
   "1",
   "*",
   "$",
   "this",
   "->",
   "ratioComputing",
   ";",
   "$",
   "maxHeight",
   "=",
   "$",
   "height",
   "-",
   "$",
   "minHeight",
   ";",
   "foreach",
   "(",
   "$",
   "data",
   "as",
   "$",
   "i",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "$",
   "value",
   "=",
   "(",
   "int",
   ")",
   "$",
   "value",
   ";",
   "if",
   "(",
   "$",
   "value",
   "<=",
   "0",
   ")",
   "{",
   "$",
   "value",
   "=",
   "0",
   ";",
   "}",
   "if",
   "(",
   "$",
   "value",
   ">",
   "0",
   ")",
   "{",
   "$",
   "value",
   "=",
   "round",
   "(",
   "(",
   "$",
   "value",
   "/",
   "$",
   "max",
   ")",
   "*",
   "$",
   "height",
   ")",
   ";",
   "}",
   "$",
   "data",
   "[",
   "$",
   "i",
   "]",
   "=",
   "max",
   "(",
   "$",
   "minHeight",
   ",",
   "min",
   "(",
   "$",
   "value",
   ",",
   "$",
   "maxHeight",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "data",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-53",
  "nl_tokens": [
   "Get",
   "extra",
   "configuration",
   "fields",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getFieldConfiguration",
   "(",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "(",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MinLength'",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MinLength'",
   ")",
   ":",
   "''",
   ";",
   "$",
   "max",
   "=",
   "(",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MaxLength'",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'MaxLength'",
   ")",
   ":",
   "''",
   ";",
   "$",
   "rows",
   "=",
   "(",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'Rows'",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "getSetting",
   "(",
   "'Rows'",
   ")",
   ":",
   "'1'",
   ";",
   "return",
   "[",
   "$",
   "learnMoreField",
   "=",
   "FieldGroup",
   "::",
   "create",
   "(",
   "_t",
   "(",
   "'Moo_EditableFieldText.TEXTLENGTH'",
   ",",
   "'Text length'",
   ")",
   ",",
   "new",
   "NumericField",
   "(",
   "$",
   "this",
   "->",
   "getSettingName",
   "(",
   "'MinLength'",
   ")",
   ",",
   "'Min'",
   ",",
   "$",
   "min",
   ")",
   ",",
   "new",
   "NumericField",
   "(",
   "$",
   "this",
   "->",
   "getSettingName",
   "(",
   "'MaxLength'",
   ")",
   ",",
   "'Max'",
   ",",
   "$",
   "max",
   ")",
   ")",
   ",",
   "new",
   "NumericField",
   "(",
   "$",
   "this",
   "->",
   "getSettingName",
   "(",
   "'Rows'",
   ")",
   ",",
   "_t",
   "(",
   "'Moo_EditableFieldText.NUMBERROWS'",
   ",",
   "'Number of rows'",
   ")",
   ",",
   "$",
   "rows",
   ")",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-54",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zlexcount"
  ],
  "pl_tokens": [
   "public",
   "function",
   "lexCount",
   "(",
   "string",
   "$",
   "<mask>",
   ",",
   "string",
   "$",
   "max",
   ")",
   ":",
   "int",
   "{",
   "return",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zlexcount",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-55",
  "nl_tokens": [
   "Checks",
   "that",
   "the",
   "sale",
   "item",
   "quantity",
   "is",
   "greater",
   "than",
   "or",
   "equals",
   "the",
   "invoiced",
   "quantity",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "checkInvoiceIntegrity",
   "(",
   "SaleItemInterface",
   "$",
   "item",
   ",",
   "SaleItem",
   "$",
   "constraint",
   ")",
   "{",
   "$",
   "sale",
   "=",
   "$",
   "item",
   "->",
   "getSale",
   "(",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "sale",
   "instanceof",
   "Invoice",
   "\\",
   "InvoiceSubjectInterface",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "sale",
   "->",
   "getInvoices",
   "(",
   ")",
   "->",
   "toArray",
   "(",
   ")",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "invoiceCalculator",
   "->",
   "calculateInvoicedQuantity",
   "(",
   "$",
   "item",
   ")",
   ";",
   "$",
   "qty",
   "=",
   "$",
   "item",
   "->",
   "getTotalQuantity",
   "(",
   ")",
   ";",
   "// TODO Use packaging format",
   "if",
   "(",
   "1",
   "===",
   "bccomp",
   "(",
   "$",
   "min",
   ",",
   "0",
   ",",
   "3",
   ")",
   "&&",
   "1",
   "===",
   "bccomp",
   "(",
   "$",
   "min",
   ",",
   "$",
   "qty",
   ",",
   "3",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "context",
   "->",
   "buildViolation",
   "(",
   "$",
   "constraint",
   "->",
   "quantity_is_lower_than_invoiced",
   ",",
   "[",
   "'%min%'",
   "=>",
   "$",
   "min",
   ",",
   "]",
   ")",
   "->",
   "atPath",
   "(",
   "'quantity'",
   ")",
   "->",
   "addViolation",
   "(",
   ")",
   ";",
   "throw",
   "new",
   "ValidationFailedException",
   "(",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-56",
  "nl_tokens": [
   "Returns",
   "the",
   "maximum",
   "size",
   "of",
   "an",
   "uploaded",
   "file",
   "as",
   "configured",
   "in",
   "php",
   ".",
   "ini",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getMaxFileSize",
   "(",
   ")",
   ":",
   "int",
   "{",
   "$",
   "iniMax",
   "=",
   "strtolower",
   "(",
   "ini_get",
   "(",
   "'upload_max_filesize'",
   ")",
   ")",
   ";",
   "if",
   "(",
   "''",
   "===",
   "$",
   "iniMax",
   ")",
   "{",
   "return",
   "PHP_INT_MAX",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "ltrim",
   "(",
   "$",
   "iniMax",
   ",",
   "'+'",
   ")",
   ";",
   "if",
   "(",
   "0",
   "===",
   "strpos",
   "(",
   "$",
   "max",
   ",",
   "'0x'",
   ")",
   ")",
   "{",
   "$",
   "max",
   "=",
   "intval",
   "(",
   "$",
   "max",
   ",",
   "16",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "0",
   "===",
   "strpos",
   "(",
   "$",
   "max",
   ",",
   "'0'",
   ")",
   ")",
   "{",
   "$",
   "max",
   "=",
   "intval",
   "(",
   "$",
   "max",
   ",",
   "8",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "=",
   "(",
   "int",
   ")",
   "$",
   "max",
   ";",
   "}",
   "switch",
   "(",
   "substr",
   "(",
   "$",
   "iniMax",
   ",",
   "-",
   "1",
   ")",
   ")",
   "{",
   "case",
   "'t'",
   ":",
   "$",
   "max",
   "*=",
   "1024",
   ";",
   "// no break",
   "case",
   "'g'",
   ":",
   "$",
   "max",
   "*=",
   "1024",
   ";",
   "// no break",
   "case",
   "'m'",
   ":",
   "$",
   "max",
   "*=",
   "1024",
   ";",
   "// no break",
   "case",
   "'k'",
   ":",
   "$",
   "max",
   "*=",
   "1024",
   ";",
   "// no break",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-57",
  "nl_tokens": [
   "Get",
   "a",
   "list",
   "of",
   "keys",
   "or",
   "dates",
   "and",
   "chooses",
   "the",
   "max",
   "date",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getMax",
   "(",
   "array",
   "$",
   "params",
   ")",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "params",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unknown key list'",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "params",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "!",
   "(",
   "$",
   "value",
   "instanceof",
   "\\",
   "DateTime",
   ")",
   ")",
   "{",
   "$",
   "params",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "this",
   "->",
   "get",
   "(",
   "$",
   "value",
   ")",
   ";",
   "}",
   "}",
   "return",
   "<mask>",
   "(",
   "$",
   "params",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-58",
  "nl_tokens": [
   "Reverse",
   "iterate",
   "through",
   "the",
   "items",
   "starting",
   "at",
   "the",
   "given",
   "index",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "iterateReverseFromIndex",
   "(",
   "$",
   "fromIndex",
   ")",
   "{",
   "Assert",
   "::",
   "nullOrInteger",
   "(",
   "$",
   "fromIndex",
   ")",
   ";",
   "$",
   "index",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   ";",
   "if",
   "(",
   "$",
   "index",
   "===",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "$",
   "fromIndex",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "index",
   "=",
   "$",
   "fromIndex",
   "<",
   "0",
   "?",
   "<mask>",
   "(",
   "$",
   "index",
   "+",
   "$",
   "fromIndex",
   ",",
   "1",
   ")",
   ":",
   "min",
   "(",
   "$",
   "fromIndex",
   "+",
   "1",
   ",",
   "$",
   "index",
   ")",
   ";",
   "}",
   "$",
   "keys",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   ";",
   "while",
   "(",
   "--",
   "$",
   "index",
   ">=",
   "0",
   ")",
   "{",
   "$",
   "key",
   "=",
   "$",
   "keys",
   "[",
   "$",
   "index",
   "]",
   ";",
   "yield",
   "$",
   "key",
   "=>",
   "$",
   "this",
   "->",
   "items",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-59",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u914d\u5217\u306e\u5404\u8981\u7d20\u306e\u4e2d\u3067\u300c\u6700\u3082\u5927\u304d\u3044\u300d\u5024\u3092\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "<mask>",
   "(",
   "array",
   "$",
   "arr",
   ",",
   "Comparator",
   "$",
   "c",
   "=",
   "null",
   ")",
   "{",
   "return",
   "self",
   "::",
   "getTop",
   "(",
   "$",
   "arr",
   ",",
   "$",
   "c",
   ",",
   "true",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-60",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f",
   "Unicode",
   "\u7b26\u53f7\u70b9\u304c\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u793a\u3059\u7bc4\u56f2\u5185\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u8abf\u3079\u307e\u3059",
   ".",
   "\u6b21\u306e",
   "Range",
   "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408",
   "\u518d\u5e30\u7684\u306b",
   "validate",
   "()",
   "\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "validate",
   "(",
   "$",
   "codepoint",
   ")",
   "{",
   "return",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "<=",
   "$",
   "codepoint",
   "&&",
   "$",
   "codepoint",
   "<=",
   "$",
   "this",
   "->",
   "max",
   ")",
   "||",
   "(",
   "$",
   "this",
   "->",
   "next",
   "!==",
   "null",
   "&&",
   "$",
   "this",
   "->",
   "next",
   "->",
   "validate",
   "(",
   "$",
   "codepoint",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-61",
  "nl_tokens": [
   "List",
   "materials",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "lists",
   "(",
   "$",
   "type",
   ",",
   "$",
   "offset",
   "=",
   "0",
   ",",
   "$",
   "count",
   "=",
   "20",
   ")",
   "{",
   "$",
   "params",
   "=",
   "[",
   "'type'",
   "=>",
   "$",
   "type",
   ",",
   "'offset'",
   "=>",
   "intval",
   "(",
   "$",
   "offset",
   ")",
   ",",
   "'count'",
   "=>",
   "<mask>",
   "(",
   "20",
   ",",
   "$",
   "count",
   ")",
   ",",
   "]",
   ";",
   "return",
   "$",
   "this",
   "->",
   "parseJSON",
   "(",
   "'json'",
   ",",
   "[",
   "self",
   "::",
   "API_LISTS",
   ",",
   "$",
   "params",
   "]",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-62",
  "nl_tokens": [
   "Adiciona",
   "um",
   "filtro",
   "a",
   "partir",
   "de",
   "string",
   "no",
   "formato",
   "0",
   "-",
   "10",
   "(",
   "inicio",
   "-",
   "fim",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "addStringRangeFilter",
   "(",
   "$",
   "key",
   ",",
   "$",
   "string",
   ")",
   "{",
   "$",
   "array",
   "=",
   "explode",
   "(",
   "'-'",
   ",",
   "trim",
   "(",
   "$",
   "string",
   ")",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "intval",
   "(",
   "$",
   "array",
   "[",
   "0",
   "]",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "min",
   ")",
   ")",
   "{",
   "$",
   "min",
   "=",
   "1",
   ";",
   "}",
   "$",
   "max",
   "=",
   "intval",
   "(",
   "$",
   "array",
   "[",
   "1",
   "]",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "max",
   ")",
   ")",
   "{",
   "$",
   "max",
   "=",
   "9999",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "addRangeFilter",
   "(",
   "$",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-63",
  "nl_tokens": [
   "Variable",
   "Form"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "createComponentForm",
   "(",
   ")",
   ":",
   "Form",
   "{",
   "$",
   "iniMaxSize",
   "=",
   "<mask>",
   "(",
   "(",
   "int",
   ")",
   "ini_get",
   "(",
   "'upload_max_filesize'",
   ")",
   ",",
   "(",
   "int",
   ")",
   "ini_get",
   "(",
   "'post_max_size'",
   ")",
   ")",
   ";",
   "$",
   "maxSize",
   "=",
   "$",
   "iniMaxSize",
   "/",
   "ini_get",
   "(",
   "'max_file_uploads'",
   ")",
   ";",
   "// MB",
   "$",
   "required",
   "=",
   "[",
   "RecipeVariable",
   "::",
   "REQUIRED_YES",
   "=>",
   "'Povinn\u00e9',",
   "",
   "RecipeVariable",
   "::",
   "REQUIRED_NO",
   "=>",
   "'Nepovinn\u00e9',",
   "",
   "]",
   ";",
   "$",
   "types",
   "=",
   "[",
   "RecipeVariable",
   "::",
   "TYPE_TEXT_PLAIN",
   "=>",
   "'Standardn\u00ed text',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_TEXT_FORMATTED",
   "=>",
   "'Form\u00e1tovan\u00fd text',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_PHONE",
   "=>",
   "'Telefonn\u00ed \u010d\u00edslo',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_EMAIL",
   "=>",
   "'E-mailov\u00e1 adresa',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_DATE",
   "=>",
   "'Datum'",
   ",",
   "RecipeVariable",
   "::",
   "TYPE_DATETIME",
   "=>",
   "'Datum a \u010das',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_LINK_INTERNAL",
   "=>",
   "'Intern\u00ed odkaz',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_LINK_EXTERNAL",
   "=>",
   "'Extern\u00ed odkaz',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_FILES",
   "=>",
   "'Soubory'",
   ",",
   "RecipeVariable",
   "::",
   "TYPE_IMAGES",
   "=>",
   "'Obr\u00e1zky',",
   "",
   "RecipeVariable",
   "::",
   "TYPE_SELECT_BOX",
   "=>",
   "'Select box'",
   "]",
   ";",
   "$",
   "form",
   "=",
   "new",
   "Form",
   ";",
   "$",
   "form",
   "->",
   "addSelect",
   "(",
   "'type'",
   ",",
   "NULL",
   ",",
   "$",
   "types",
   ")",
   "->",
   "setRequired",
   "(",
   "'Typ je povinn\u00fd.')",
   ";",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'label'",
   ")",
   "->",
   "setRequired",
   "(",
   "'Label je povinn\u00fd.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MIN_LENGTH",
   ",",
   "'Minim\u00e1ln\u00ed d\u00e9lka labelu jsou %d znaky.', 3",
   ")",
   "",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX_LENGTH",
   ",",
   "'Maxim\u00e1ln\u00ed d\u00e9lka labelu je %d znak\u016f.', 64",
   ")",
   "",
   "",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'slug'",
   ")",
   "->",
   "setRequired",
   "(",
   "'Slug je povinn\u00fd.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "PATTERN",
   ",",
   "'Slug m\u016f\u017ee obsahovat pouze znaky: a-z A-Z 0-9.', ",
   "'",
   "a-zA-Z0-9]*')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MIN_LENGTH",
   ",",
   "'Minim\u00e1ln\u00ed d\u00e9lka slugu jsou %d znaky.', 3",
   ")",
   "",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX_LENGTH",
   ",",
   "'Maxim\u00e1ln\u00ed d\u00e9lka slugu je %d znak\u016f.', 32",
   ")",
   "",
   "",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'tooltip'",
   ")",
   "->",
   "setRequired",
   "(",
   "FALSE",
   ")",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX_LENGTH",
   ",",
   "'Maxim\u00e1ln\u00ed d\u00e9lka n\u00e1pov\u011bdy je %d znak\u016f.', 256)",
   ";",
   "",
   "",
   "",
   "$",
   "form",
   "->",
   "addSelect",
   "(",
   "'isRequired'",
   ",",
   "NULL",
   ",",
   "$",
   "required",
   ")",
   "->",
   "setRequired",
   "(",
   "TRUE",
   ")",
   ";",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'regexPattern'",
   ")",
   "->",
   "setRequired",
   "(",
   "FALSE",
   ")",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX_LENGTH",
   ",",
   "'Maxim\u00e1ln\u00ed d\u00e9lka regexu je %d znak\u016f.', 25",
   "6",
   ";",
   "",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'regexMessage'",
   ")",
   "->",
   "setRequired",
   "(",
   "FALSE",
   ")",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX_LENGTH",
   ",",
   "'Maxim\u00e1ln\u00ed d\u00e9lka n\u00e1pov\u011bdy regexu je %d znak\u016f.', 256)",
   "",
   "",
   "",
   "->",
   "addConditionOn",
   "(",
   "$",
   "form",
   "[",
   "'regexPattern'",
   "]",
   ",",
   "Form",
   "::",
   "FILLED",
   ")",
   "->",
   "setRequired",
   "(",
   "'N\u00e1pov\u011bda k regexu je povinn\u00e1.')",
   "",
   "->",
   "endCondition",
   "(",
   ")",
   ";",
   "$",
   "form",
   "->",
   "addTextArea",
   "(",
   "'allowedTypes'",
   ")",
   "->",
   "setRequired",
   "(",
   "FALSE",
   ")",
   "->",
   "addRule",
   "(",
   "Validator",
   "::",
   "class",
   ".",
   "'::json'",
   ",",
   "'Konfigurace typ\u016f soubor\u016f mus\u00ed b\u00fdt v platn\u00e9m JSON form\u00e1tu.');",
   "",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'maxFiles'",
   ")",
   "->",
   "setRequired",
   "(",
   "'Max. soubor\u016f je povinn\u00e9 pole.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "INTEGER",
   ",",
   "'Max. soubor\u016f mus\u00ed b\u00fdt cel\u00e9 \u010d\u00edslo.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MIN",
   ",",
   "'Minim\u00e1ln\u00ed hodnota max. soubor\u016f mus\u00ed b\u00fdt %d.', 0);",
   "",
   "",
   "",
   "",
   "$",
   "form",
   "->",
   "addText",
   "(",
   "'maxFileSize'",
   ")",
   "->",
   "setRequired",
   "(",
   "'Max. velikost souboru je povinn\u00e1.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "FLOAT",
   ",",
   "'Max. velikost souboru mus\u00ed b\u00fdt \u010d\u00edslo.')",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MIN",
   ",",
   "'Minim\u00e1ln\u00ed hodnota max. velikosti souboru mus\u00ed b\u00fdt %d.', 0)",
   "",
   "",
   "",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "MAX",
   ",",
   "'Maxim\u00e1ln\u00ed hodnota max.velikosti souboru m\u016f\u017ee b\u00fdt %d.', $in",
   "i",
   "a",
   "xSize)",
   "",
   "->",
   "setOption",
   "(",
   "'iniMaxSize'",
   ",",
   "$",
   "iniMaxSize",
   ")",
   "->",
   "setOption",
   "(",
   "'maxSize'",
   ",",
   "$",
   "maxSize",
   ")",
   ";",
   "$",
   "form",
   "->",
   "addTextArea",
   "(",
   "'items'",
   ")",
   "->",
   "setRequired",
   "(",
   "FALSE",
   ")",
   "->",
   "addRule",
   "(",
   "Validator",
   "::",
   "class",
   ".",
   "'::json'",
   ",",
   "'Konfigurace select boxu mus\u00ed b\u00fdt v platn\u00e9m JSON form\u00e1tu.');",
   "",
   "",
   "$",
   "form",
   "->",
   "addHidden",
   "(",
   "'recipeId'",
   ",",
   "$",
   "this",
   "->",
   "recipeId",
   ")",
   "->",
   "setRequired",
   "(",
   "TRUE",
   ")",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "INTEGER",
   ")",
   ";",
   "$",
   "form",
   "->",
   "addHidden",
   "(",
   "'variableId'",
   ",",
   "0",
   ")",
   "->",
   "setRequired",
   "(",
   "TRUE",
   ")",
   "->",
   "addRule",
   "(",
   "Form",
   "::",
   "INTEGER",
   ")",
   ";",
   "$",
   "form",
   "->",
   "addSubmit",
   "(",
   "'save'",
   ")",
   ";",
   "$",
   "form",
   "->",
   "setDefaults",
   "(",
   "self",
   "::",
   "FORM_DEFAULTS",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "variableId",
   ")",
   "{",
   "$",
   "variable",
   "=",
   "$",
   "this",
   "->",
   "variableRepository",
   "->",
   "findOneById",
   "(",
   "$",
   "this",
   "->",
   "variableId",
   ")",
   ";",
   "$",
   "form",
   "->",
   "setDefaults",
   "(",
   "[",
   "'recipeId'",
   "=>",
   "$",
   "variable",
   "->",
   "getRecipeId",
   "(",
   ")",
   ",",
   "'variableId'",
   "=>",
   "$",
   "variable",
   "->",
   "getId",
   "(",
   ")",
   ",",
   "'type'",
   "=>",
   "$",
   "variable",
   "->",
   "getType",
   "(",
   ")",
   ",",
   "'label'",
   "=>",
   "$",
   "variable",
   "->",
   "getLabel",
   "(",
   ")",
   ",",
   "'slug'",
   "=>",
   "$",
   "variable",
   "->",
   "getSlug",
   "(",
   ")",
   ",",
   "'tooltip'",
   "=>",
   "$",
   "variable",
   "->",
   "getTooltip",
   "(",
   ")",
   ",",
   "'isRequired'",
   "=>",
   "(",
   "int",
   ")",
   "$",
   "variable",
   "->",
   "getIsRequired",
   "(",
   ")",
   ",",
   "'regexPattern'",
   "=>",
   "$",
   "variable",
   "->",
   "getRegexPattern",
   "(",
   ")",
   ",",
   "'regexMessage'",
   "=>",
   "$",
   "variable",
   "->",
   "getRegexMessage",
   "(",
   ")",
   ",",
   "'allowedTypes'",
   "=>",
   "$",
   "variable",
   "->",
   "getAllowedTypes",
   "(",
   ")",
   ",",
   "'maxFiles'",
   "=>",
   "$",
   "variable",
   "->",
   "getMaxFiles",
   "(",
   ")",
   ",",
   "'maxFileSize'",
   "=>",
   "$",
   "variable",
   "->",
   "getMaxFileSize",
   "(",
   ")",
   ",",
   "'items'",
   "=>",
   "$",
   "variable",
   "->",
   "getItems",
   "(",
   ")",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "form",
   "->",
   "setDefaults",
   "(",
   "self",
   "::",
   "FORM_DEFAULTS",
   ")",
   ";",
   "}",
   "$",
   "form",
   "->",
   "onValidate",
   "[",
   "]",
   "=",
   "function",
   "(",
   "Form",
   "$",
   "form",
   ")",
   "{",
   "$",
   "this",
   "->",
   "validate",
   "(",
   "$",
   "form",
   ")",
   ";",
   "}",
   ";",
   "$",
   "form",
   "->",
   "onSuccess",
   "[",
   "]",
   "=",
   "function",
   "(",
   "Form",
   "$",
   "form",
   ")",
   "{",
   "$",
   "this",
   "->",
   "success",
   "(",
   "$",
   "form",
   ")",
   ";",
   "}",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "presenter",
   "->",
   "user",
   "->",
   "isAllowed",
   "(",
   "StructureAuthorizator",
   "::",
   "RES_VARIABLE_MODAL",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "setDisabledForm",
   "(",
   "$",
   "form",
   ",",
   "TRUE",
   ")",
   ";",
   "}",
   "return",
   "$",
   "form",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-64",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "scale",
   "(",
   "\\",
   "SplFileInfo",
   "$",
   "source",
   ",",
   "ThumbnailConfiguration",
   "$",
   "size",
   ",",
   "\\",
   "SplFileInfo",
   "$",
   "target",
   ")",
   "{",
   "$",
   "img",
   "=",
   "$",
   "this",
   "->",
   "imagine",
   "->",
   "open",
   "(",
   "$",
   "source",
   "->",
   "getPathname",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "size",
   "->",
   "getThumbnail",
   "(",
   ")",
   ")",
   "{",
   "$",
   "thumb",
   "=",
   "$",
   "this",
   "->",
   "makeThumbnail",
   "(",
   "$",
   "img",
   ",",
   "$",
   "size",
   "->",
   "getSize",
   "(",
   ")",
   ")",
   ";",
   "$",
   "thumb",
   "->",
   "save",
   "(",
   "$",
   "target",
   "->",
   "getPathname",
   "(",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "newSize",
   "=",
   "$",
   "size",
   "->",
   "getSize",
   "(",
   ")",
   ";",
   "$",
   "origSize",
   "=",
   "$",
   "img",
   "->",
   "getSize",
   "(",
   ")",
   ";",
   "$",
   "factor",
   "=",
   "<mask>",
   "(",
   "$",
   "newSize",
   "->",
   "getWidth",
   "(",
   ")",
   "/",
   "$",
   "origSize",
   "->",
   "getWidth",
   "(",
   ")",
   ",",
   "$",
   "newSize",
   "->",
   "getHeight",
   "(",
   ")",
   "/",
   "$",
   "origSize",
   "->",
   "getHeight",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "size",
   "->",
   "getExact",
   "(",
   ")",
   ")",
   "{",
   "// Do not upscale.",
   "$",
   "factor",
   "=",
   "min",
   "(",
   "1",
   ",",
   "$",
   "factor",
   ")",
   ";",
   "}",
   "$",
   "scaledSize",
   "=",
   "$",
   "origSize",
   "->",
   "scale",
   "(",
   "$",
   "factor",
   ")",
   ";",
   "$",
   "img",
   "->",
   "resize",
   "(",
   "$",
   "scaledSize",
   ")",
   ";",
   "if",
   "(",
   "$",
   "size",
   "->",
   "getExact",
   "(",
   ")",
   ")",
   "{",
   "// Force image size",
   "if",
   "(",
   "$",
   "img",
   "->",
   "palette",
   "(",
   ")",
   "->",
   "supportsAlpha",
   "(",
   ")",
   ")",
   "{",
   "$",
   "palette",
   "=",
   "new",
   "RGB",
   "(",
   ")",
   ";",
   "$",
   "color",
   "=",
   "$",
   "palette",
   "->",
   "color",
   "(",
   "'#000'",
   ",",
   "0",
   ")",
   ";",
   "$",
   "bg",
   "=",
   "$",
   "this",
   "->",
   "imagine",
   "->",
   "create",
   "(",
   "$",
   "newSize",
   ",",
   "$",
   "color",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "bg",
   "=",
   "$",
   "this",
   "->",
   "imagine",
   "->",
   "create",
   "(",
   "$",
   "newSize",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "size",
   "->",
   "getFillbg",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "fillWithBlurredImage",
   "(",
   "$",
   "bg",
   ",",
   "$",
   "img",
   ")",
   ";",
   "}",
   "$",
   "bg",
   "->",
   "paste",
   "(",
   "$",
   "img",
   ",",
   "new",
   "Point",
   "(",
   "(",
   "$",
   "newSize",
   "->",
   "getWidth",
   "(",
   ")",
   "-",
   "$",
   "scaledSize",
   "->",
   "getWidth",
   "(",
   ")",
   ")",
   "/",
   "2",
   ",",
   "(",
   "$",
   "newSize",
   "->",
   "getHeight",
   "(",
   ")",
   "-",
   "$",
   "scaledSize",
   "->",
   "getHeight",
   "(",
   ")",
   ")",
   "/",
   "2",
   ")",
   ")",
   ";",
   "$",
   "bg",
   "->",
   "save",
   "(",
   "$",
   "target",
   "->",
   "getPathname",
   "(",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "img",
   "->",
   "save",
   "(",
   "$",
   "target",
   "->",
   "getPathname",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-65",
  "nl_tokens": [
   "Show",
   "the",
   "help",
   "text",
   "generated",
   "based",
   "on",
   "the",
   "configured",
   "options"
  ],
  "pl_tokens": [
   "public",
   "function",
   "syntax",
   "(",
   "$",
   "error",
   "=",
   "\"Please specify valid options\"",
   ")",
   "{",
   "$",
   "ostr",
   "=",
   "(",
   "!",
   "$",
   "error",
   ")",
   "?",
   "STDOUT",
   ":",
   "STDERR",
   ";",
   "if",
   "(",
   "is_string",
   "(",
   "$",
   "error",
   ")",
   ")",
   "fprintf",
   "(",
   "$",
   "ostr",
   ",",
   "\"Error: %s\\n\"",
   ",",
   "$",
   "error",
   ")",
   ";",
   "fprintf",
   "(",
   "$",
   "ostr",
   ",",
   "\"Syntax: php \"",
   ".",
   "$",
   "_SERVER",
   "[",
   "'argv'",
   "]",
   "[",
   "0",
   "]",
   ".",
   "\" <options> <action>\\n\\n\"",
   ")",
   ";",
   "fprintf",
   "(",
   "$",
   "ostr",
   ",",
   "\"Options: \\n\"",
   ")",
   ";",
   "$",
   "max_opt_length",
   "=",
   "0",
   ";",
   "$",
   "max_arg_length",
   "=",
   "0",
   ";",
   "// Sort the parameters alphabetically",
   "$",
   "params",
   "=",
   "$",
   "this",
   "->",
   "parameters",
   ";",
   "usort",
   "(",
   "$",
   "params",
   ",",
   "function",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ")",
   "{",
   "$",
   "lo",
   "=",
   "!",
   "empty",
   "(",
   "$",
   "a",
   "[",
   "0",
   "]",
   ")",
   "?",
   "$",
   "a",
   "[",
   "0",
   "]",
   ":",
   "$",
   "a",
   "[",
   "1",
   "]",
   ";",
   "$",
   "ro",
   "=",
   "!",
   "empty",
   "(",
   "$",
   "b",
   "[",
   "0",
   "]",
   ")",
   "?",
   "$",
   "b",
   "[",
   "0",
   "]",
   ":",
   "$",
   "b",
   "[",
   "1",
   "]",
   ";",
   "return",
   "strcmp",
   "(",
   "$",
   "lo",
   ",",
   "$",
   "ro",
   ")",
   ";",
   "}",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "params",
   "as",
   "$",
   "param",
   ")",
   "{",
   "$",
   "max_opt_length",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "param",
   "[",
   "1",
   "]",
   ")",
   "+",
   "3",
   ",",
   "$",
   "max_opt_length",
   ")",
   ";",
   "$",
   "max_arg_length",
   "=",
   "max",
   "(",
   "strlen",
   "(",
   "$",
   "param",
   "[",
   "2",
   "]",
   ")",
   "+",
   "3",
   ",",
   "$",
   "max_arg_length",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "parameters",
   "as",
   "$",
   "param",
   ")",
   "{",
   "fprintf",
   "(",
   "$",
   "ostr",
   ",",
   "\"    \"",
   ")",
   ";",
   "$",
   "so",
   "=",
   "$",
   "param",
   "[",
   "0",
   "]",
   "?",
   "\"-\"",
   ".",
   "$",
   "param",
   "[",
   "0",
   "]",
   ":",
   "\"\"",
   ";",
   "$",
   "lo",
   "=",
   "$",
   "param",
   "[",
   "1",
   "]",
   "?",
   "\"--\"",
   ".",
   "$",
   "param",
   "[",
   "1",
   "]",
   ":",
   "\"\"",
   ";",
   "$",
   "arg",
   "=",
   "$",
   "param",
   "[",
   "2",
   "]",
   "?",
   "'<'",
   ".",
   "$",
   "param",
   "[",
   "2",
   "]",
   ".",
   "'>'",
   ":",
   "\"\"",
   ";",
   "$",
   "pstr",
   "=",
   "sprintf",
   "(",
   "\"%-2s %-\"",
   ".",
   "$",
   "max_opt_length",
   ".",
   "\"s %-\"",
   ".",
   "$",
   "max_arg_length",
   ".",
   "\"s \"",
   ",",
   "$",
   "so",
   ",",
   "$",
   "lo",
   ",",
   "$",
   "arg",
   ")",
   ";",
   "$",
   "indent",
   "=",
   "strlen",
   "(",
   "$",
   "pstr",
   ")",
   "+",
   "4",
   ";",
   "fprintf",
   "(",
   "$",
   "ostr",
   ",",
   "$",
   "pstr",
   ")",
   ";",
   "self",
   "::",
   "formatText",
   "(",
   "$",
   "indent",
   ",",
   "self",
   "::",
   "MAX_LINE_LENGTH",
   ",",
   "$",
   "param",
   "[",
   "3",
   "]",
   ",",
   "$",
   "ostr",
   ")",
   ";",
   "}",
   "exit",
   "(",
   "$",
   "error",
   "===",
   "false",
   "?",
   "0",
   ":",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-66",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "format",
   "(",
   "array",
   "$",
   "record",
   ")",
   "{",
   "$",
   "record",
   "=",
   "parent",
   "::",
   "format",
   "(",
   "$",
   "record",
   ")",
   ";",
   "$",
   "lines",
   "=",
   "[",
   "Logger",
   "::",
   "getLevelName",
   "(",
   "$",
   "record",
   "[",
   "'level'",
   "]",
   ")",
   ".",
   "' : '",
   ".",
   "$",
   "record",
   "[",
   "'message'",
   "]",
   "]",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "record",
   "[",
   "'context'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "lines",
   "+=",
   "explode",
   "(",
   "PHP_EOL",
   ",",
   "trim",
   "(",
   "json_encode",
   "(",
   "$",
   "record",
   "[",
   "'context'",
   "]",
   ",",
   "JSON_PRETTY_PRINT",
   ")",
   ")",
   ")",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "max",
   "(",
   "array_map",
   "(",
   "'strlen'",
   ",",
   "$",
   "lines",
   ")",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "1",
   ";",
   "$",
   "i",
   "<",
   "count",
   "(",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   "=",
   "self",
   "::",
   "TAB",
   ".",
   "str_pad",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ",",
   "$",
   "max",
   "+",
   "5",
   ")",
   ";",
   "}",
   "$",
   "string",
   "=",
   "implode",
   "(",
   "PHP_EOL",
   ",",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "colors",
   "=",
   "$",
   "this",
   "->",
   "colors",
   "[",
   "$",
   "record",
   "[",
   "'level'",
   "]",
   "]",
   ";",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "colors",
   ")",
   ")",
   "{",
   "$",
   "pad",
   "=",
   "PHP_EOL",
   ".",
   "str_repeat",
   "(",
   "self",
   "::",
   "TAB",
   ".",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "max",
   "+",
   "5",
   ")",
   ".",
   "PHP_EOL",
   ",",
   "2",
   ")",
   ";",
   "return",
   "\"\\n\\033[{$colors[0]}m\\033[{$colors[1]}m\"",
   ".",
   "$",
   "pad",
   ".",
   "$",
   "string",
   ".",
   "$",
   "pad",
   ".",
   "\"\\033[0m\"",
   ";",
   "}",
   "else",
   "{",
   "return",
   "\"\\n\\033[{$colors}m\"",
   ".",
   "$",
   "string",
   ".",
   "\"\\033[0m\"",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-67",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "execute",
   "(",
   "InputInterface",
   "$",
   "input",
   ",",
   "OutputInterface",
   "$",
   "output",
   ")",
   "{",
   "$",
   "this",
   "->",
   "bootstrap",
   "(",
   "$",
   "input",
   ",",
   "$",
   "output",
   ")",
   ";",
   "$",
   "container",
   "=",
   "$",
   "this",
   "->",
   "getContainer",
   "(",
   ")",
   ";",
   "$",
   "migrations",
   "=",
   "$",
   "this",
   "->",
   "getMigrations",
   "(",
   ")",
   ";",
   "$",
   "versions",
   "=",
   "$",
   "this",
   "->",
   "getAdapter",
   "(",
   ")",
   "->",
   "fetchAll",
   "(",
   ")",
   ";",
   "$",
   "version",
   "=",
   "$",
   "input",
   "->",
   "getOption",
   "(",
   "'target'",
   ")",
   ";",
   "ksort",
   "(",
   "$",
   "migrations",
   ")",
   ";",
   "sort",
   "(",
   "$",
   "versions",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "versions",
   ")",
   ")",
   "{",
   "// Get the last run migration number",
   "$",
   "current",
   "=",
   "end",
   "(",
   "$",
   "versions",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "current",
   "=",
   "0",
   ";",
   "}",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "version",
   ")",
   "{",
   "if",
   "(",
   "0",
   "!=",
   "$",
   "version",
   "&&",
   "!",
   "isset",
   "(",
   "$",
   "migrations",
   "[",
   "$",
   "version",
   "]",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "versionNumbers",
   "=",
   "array_merge",
   "(",
   "$",
   "versions",
   ",",
   "array_keys",
   "(",
   "$",
   "migrations",
   ")",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "versionNumbers",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "version",
   "=",
   "<mask>",
   "(",
   "$",
   "versionNumbers",
   ")",
   ";",
   "}",
   "$",
   "direction",
   "=",
   "$",
   "version",
   ">",
   "$",
   "current",
   "?",
   "'up'",
   ":",
   "'down'",
   ";",
   "if",
   "(",
   "$",
   "direction",
   "==",
   "'down'",
   ")",
   "{",
   "/**\n             * Run downs first\n             */",
   "krsort",
   "(",
   "$",
   "migrations",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "migrations",
   "as",
   "$",
   "migration",
   ")",
   "{",
   "if",
   "(",
   "$",
   "migration",
   "->",
   "getVersion",
   "(",
   ")",
   "<=",
   "$",
   "version",
   ")",
   "{",
   "break",
   ";",
   "}",
   "if",
   "(",
   "in_array",
   "(",
   "$",
   "migration",
   "->",
   "getVersion",
   "(",
   ")",
   ",",
   "$",
   "versions",
   ")",
   ")",
   "{",
   "$",
   "container",
   "[",
   "'phpmig.migrator'",
   "]",
   "->",
   "down",
   "(",
   "$",
   "migration",
   ")",
   ";",
   "}",
   "}",
   "}",
   "ksort",
   "(",
   "$",
   "migrations",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "migrations",
   "as",
   "$",
   "migration",
   ")",
   "{",
   "if",
   "(",
   "$",
   "migration",
   "->",
   "getVersion",
   "(",
   ")",
   ">",
   "$",
   "version",
   ")",
   "{",
   "break",
   ";",
   "}",
   "if",
   "(",
   "!",
   "in_array",
   "(",
   "$",
   "migration",
   "->",
   "getVersion",
   "(",
   ")",
   ",",
   "$",
   "versions",
   ")",
   ")",
   "{",
   "$",
   "container",
   "[",
   "'phpmig.migrator'",
   "]",
   "->",
   "up",
   "(",
   "$",
   "migration",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-68",
  "nl_tokens": [
   "Given",
   "an",
   "invalid",
   "input",
   "string",
   "and",
   "a",
   "list",
   "of",
   "valid",
   "options",
   "returns",
   "a",
   "filtered",
   "list",
   "of",
   "valid",
   "options",
   "sorted",
   "based",
   "on",
   "their",
   "similarity",
   "with",
   "the",
   "input",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "suggestionList",
   "(",
   "$",
   "input",
   ",",
   "array",
   "$",
   "options",
   ")",
   "{",
   "$",
   "optionsByDistance",
   "=",
   "[",
   "]",
   ";",
   "$",
   "inputThreshold",
   "=",
   "mb_strlen",
   "(",
   "$",
   "input",
   ")",
   "/",
   "2",
   ";",
   "foreach",
   "(",
   "$",
   "options",
   "as",
   "$",
   "option",
   ")",
   "{",
   "if",
   "(",
   "$",
   "input",
   "===",
   "$",
   "option",
   ")",
   "{",
   "$",
   "distance",
   "=",
   "0",
   ";",
   "}",
   "else",
   "{",
   "$",
   "distance",
   "=",
   "(",
   "strtolower",
   "(",
   "$",
   "input",
   ")",
   "===",
   "strtolower",
   "(",
   "$",
   "option",
   ")",
   "?",
   "1",
   ":",
   "levenshtein",
   "(",
   "$",
   "input",
   ",",
   "$",
   "option",
   ")",
   ")",
   ";",
   "}",
   "$",
   "threshold",
   "=",
   "<mask>",
   "(",
   "$",
   "inputThreshold",
   ",",
   "mb_strlen",
   "(",
   "$",
   "option",
   ")",
   "/",
   "2",
   ",",
   "1",
   ")",
   ";",
   "if",
   "(",
   "$",
   "distance",
   ">",
   "$",
   "threshold",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "optionsByDistance",
   "[",
   "$",
   "option",
   "]",
   "=",
   "$",
   "distance",
   ";",
   "}",
   "asort",
   "(",
   "$",
   "optionsByDistance",
   ")",
   ";",
   "return",
   "array_keys",
   "(",
   "$",
   "optionsByDistance",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-69",
  "nl_tokens": [
   "Create",
   "a",
   "new",
   "cell",
   "at",
   "the",
   "specified",
   "coordinate",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "createNewCell",
   "(",
   "$",
   "pCoordinate",
   ")",
   "{",
   "$",
   "cell",
   "=",
   "new",
   "Cell",
   "(",
   "null",
   ",",
   "DataType",
   "::",
   "TYPE_NULL",
   ",",
   "$",
   "this",
   ")",
   ";",
   "$",
   "this",
   "->",
   "cellCollection",
   "->",
   "add",
   "(",
   "$",
   "pCoordinate",
   ",",
   "$",
   "cell",
   ")",
   ";",
   "$",
   "this",
   "->",
   "cellCollectionIsSorted",
   "=",
   "false",
   ";",
   "// Coordinates",
   "$",
   "aCoordinates",
   "=",
   "Coordinate",
   "::",
   "coordinateFromString",
   "(",
   "$",
   "pCoordinate",
   ")",
   ";",
   "if",
   "(",
   "Coordinate",
   "::",
   "columnIndexFromString",
   "(",
   "$",
   "this",
   "->",
   "cachedHighestColumn",
   ")",
   "<",
   "Coordinate",
   "::",
   "columnIndexFromString",
   "(",
   "$",
   "aCoordinates",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "cachedHighestColumn",
   "=",
   "$",
   "aCoordinates",
   "[",
   "0",
   "]",
   ";",
   "}",
   "$",
   "this",
   "->",
   "cachedHighestRow",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "cachedHighestRow",
   ",",
   "$",
   "aCoordinates",
   "[",
   "1",
   "]",
   ")",
   ";",
   "// Cell needs appropriate xfIndex from dimensions records",
   "//    but don't create dimension records if they don't already exist",
   "$",
   "rowDimension",
   "=",
   "$",
   "this",
   "->",
   "getRowDimension",
   "(",
   "$",
   "aCoordinates",
   "[",
   "1",
   "]",
   ",",
   "false",
   ")",
   ";",
   "$",
   "columnDimension",
   "=",
   "$",
   "this",
   "->",
   "getColumnDimension",
   "(",
   "$",
   "aCoordinates",
   "[",
   "0",
   "]",
   ",",
   "false",
   ")",
   ";",
   "if",
   "(",
   "$",
   "rowDimension",
   "!==",
   "null",
   "&&",
   "$",
   "rowDimension",
   "->",
   "getXfIndex",
   "(",
   ")",
   ">",
   "0",
   ")",
   "{",
   "// then there is a row dimension with explicit style, assign it to the cell",
   "$",
   "cell",
   "->",
   "setXfIndex",
   "(",
   "$",
   "rowDimension",
   "->",
   "getXfIndex",
   "(",
   ")",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "columnDimension",
   "!==",
   "null",
   "&&",
   "$",
   "columnDimension",
   "->",
   "getXfIndex",
   "(",
   ")",
   ">",
   "0",
   ")",
   "{",
   "// then there is a column dimension, assign it to the cell",
   "$",
   "cell",
   "->",
   "setXfIndex",
   "(",
   "$",
   "columnDimension",
   "->",
   "getXfIndex",
   "(",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "cell",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-70",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u914d\u5217\u306e\u5404\u8981\u7d20\u306e\u4e2d\u3067\u300c\u6700\u3082\u5c0f\u3055\u3044\u300d\u5024\u3092\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "<mask>",
   "(",
   "array",
   "$",
   "arr",
   ",",
   "Comparator",
   "$",
   "c",
   "=",
   "null",
   ")",
   "{",
   "return",
   "self",
   "::",
   "getTop",
   "(",
   "$",
   "arr",
   ",",
   "$",
   "c",
   ",",
   "false",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-71",
  "nl_tokens": [
   "Finds",
   "the",
   "common",
   "starting",
   "path",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getCommonPath",
   "(",
   "$",
   "first",
   ",",
   "$",
   "second",
   ")",
   "{",
   "$",
   "first",
   "=",
   "explode",
   "(",
   "'/'",
   ",",
   "$",
   "first",
   ")",
   ";",
   "$",
   "second",
   "=",
   "explode",
   "(",
   "'/'",
   ",",
   "$",
   "second",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "<mask>",
   "(",
   "count",
   "(",
   "$",
   "first",
   ")",
   ",",
   "count",
   "(",
   "$",
   "second",
   ")",
   ")",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "first",
   "[",
   "$",
   "i",
   "]",
   "!=",
   "$",
   "second",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "return",
   "implode",
   "(",
   "'/'",
   ",",
   "array_slice",
   "(",
   "$",
   "first",
   ",",
   "0",
   ",",
   "$",
   "i",
   ")",
   ")",
   ".",
   "'/'",
   ";",
   "}",
   "}",
   "return",
   "implode",
   "(",
   "'/'",
   ",",
   "$",
   "first",
   ")",
   ".",
   "'/'",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-72",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zrangebyscore",
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zrevrangebyscore"
  ],
  "pl_tokens": [
   "public",
   "function",
   "rangeByScore",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withscores",
   "=",
   "false",
   ",",
   "$",
   "limit",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "reverse",
   "=",
   "false",
   ")",
   ":",
   "array",
   "{",
   "if",
   "(",
   "$",
   "reverse",
   ")",
   "{",
   "$",
   "ret",
   "=",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zrevrangebyscore",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withscores",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "ret",
   "=",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zrangebyscore",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withscores",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "}",
   "return",
   "array_map",
   "(",
   "[",
   "$",
   "this",
   ",",
   "'strToVal'",
   "]",
   ",",
   "$",
   "ret",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-73",
  "nl_tokens": [
   "Checks",
   "if",
   "upload",
   "max",
   "file",
   "size",
   "matches",
   "the",
   "given",
   "range",
   "."
  ],
  "pl_tokens": [
   "function",
   "checkUploadMaxFileSize",
   "(",
   "$",
   "<mask>",
   "=",
   "null",
   ",",
   "$",
   "max",
   "=",
   "null",
   ")",
   "{",
   "$",
   "postMaxSize",
   "=",
   "ini_get",
   "(",
   "'post_max_size'",
   ")",
   ";",
   "$",
   "uploadMaxFileSize",
   "=",
   "ini_get",
   "(",
   "'upload_max_filesize'",
   ")",
   ";",
   "if",
   "(",
   "$",
   "min",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "minCheckResult",
   "=",
   "$",
   "this",
   "->",
   "compareByteSize",
   "(",
   "$",
   "postMaxSize",
   ",",
   "$",
   "min",
   ",",
   "'>='",
   ")",
   "&&",
   "$",
   "this",
   "->",
   "compareByteSize",
   "(",
   "$",
   "uploadMaxFileSize",
   ",",
   "$",
   "min",
   ",",
   "'>='",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "minCheckResult",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "max",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "maxCheckResult",
   "=",
   "$",
   "this",
   "->",
   "compareByteSize",
   "(",
   "$",
   "postMaxSize",
   ",",
   "$",
   "max",
   ",",
   "'<='",
   ")",
   "&&",
   "$",
   "this",
   "->",
   "compareByteSize",
   "(",
   "$",
   "uploadMaxFileSize",
   ",",
   "$",
   "max",
   ",",
   "'<='",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "maxCheckResult",
   "=",
   "true",
   ";",
   "}",
   "return",
   "(",
   "$",
   "minCheckResult",
   "&&",
   "$",
   "maxCheckResult",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-74",
  "nl_tokens": [
   "Set",
   "the",
   "important",
   "part",
   "settings"
  ],
  "pl_tokens": [
   "public",
   "function",
   "setImportantPart",
   "(",
   "array",
   "$",
   "importantPart",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "importantPart",
   "!==",
   "null",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "importantPart",
   "[",
   "'x'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "importantPart",
   "[",
   "'y'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "importantPart",
   "[",
   "'width'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "importantPart",
   "[",
   "'height'",
   "]",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Malformed array for setting the important part!'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "importantPart",
   "=",
   "array",
   "(",
   "'x'",
   "=>",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "this",
   "->",
   "fileObj",
   "->",
   "viewWidth",
   "-",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "importantPart",
   "[",
   "'x'",
   "]",
   ")",
   ")",
   ",",
   "'y'",
   "=>",
   "max",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "this",
   "->",
   "fileObj",
   "->",
   "viewHeight",
   "-",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "importantPart",
   "[",
   "'y'",
   "]",
   ")",
   ")",
   ",",
   ")",
   ";",
   "$",
   "this",
   "->",
   "importantPart",
   "[",
   "'width'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "min",
   "(",
   "$",
   "this",
   "->",
   "fileObj",
   "->",
   "viewWidth",
   "-",
   "$",
   "this",
   "->",
   "importantPart",
   "[",
   "'x'",
   "]",
   ",",
   "(",
   "int",
   ")",
   "$",
   "importantPart",
   "[",
   "'width'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "importantPart",
   "[",
   "'height'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "min",
   "(",
   "$",
   "this",
   "->",
   "fileObj",
   "->",
   "viewHeight",
   "-",
   "$",
   "this",
   "->",
   "importantPart",
   "[",
   "'y'",
   "]",
   ",",
   "(",
   "int",
   ")",
   "$",
   "importantPart",
   "[",
   "'height'",
   "]",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "importantPart",
   "=",
   "null",
   ";",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-75",
  "nl_tokens": [
   "This",
   "method",
   "refreshes",
   "the",
   "session",
   "and",
   "makes",
   "sure",
   "we",
   "have",
   "the",
   "latest",
   "data",
   "from",
   "the",
   "database",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "refreshSession",
   "(",
   ")",
   "{",
   "$",
   "mapper",
   "=",
   "Neuron_GameServer_Mappers_UpdateMapper",
   "::",
   "getInstance",
   "(",
   ")",
   ";",
   "// First check if we have a last id",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "_SESSION",
   "[",
   "'ngpu_lastlog'",
   "]",
   ")",
   ")",
   "{",
   "// New session, can't have updates. No flags set.",
   "$",
   "_SESSION",
   "[",
   "'ngpu_lastlog'",
   "]",
   "=",
   "$",
   "mapper",
   "->",
   "getLastLogId",
   "(",
   "$",
   "this",
   "->",
   "objProfile",
   ")",
   ";",
   "$",
   "_SESSION",
   "[",
   "'ngpu_data'",
   "]",
   "=",
   "array",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "lastLogId",
   "=",
   "$",
   "_SESSION",
   "[",
   "'ngpu_lastlog'",
   "]",
   ";",
   "// Check for updates",
   "$",
   "updates",
   "=",
   "$",
   "mapper",
   "->",
   "getUpdates",
   "(",
   "$",
   "this",
   "->",
   "objProfile",
   ",",
   "$",
   "lastLogId",
   ")",
   ";",
   "// Process these updates",
   "foreach",
   "(",
   "$",
   "updates",
   "as",
   "$",
   "v",
   ")",
   "{",
   "$",
   "_SESSION",
   "[",
   "'ngpu_data'",
   "]",
   "[",
   "$",
   "v",
   "[",
   "'key'",
   "]",
   "]",
   "=",
   "$",
   "v",
   "[",
   "'value'",
   "]",
   ";",
   "$",
   "lastLogId",
   "=",
   "<mask>",
   "(",
   "$",
   "v",
   "[",
   "'id'",
   "]",
   ",",
   "$",
   "lastLogId",
   ")",
   ";",
   "}",
   "$",
   "_SESSION",
   "[",
   "'ngpu_lastlog'",
   "]",
   "=",
   "$",
   "lastLogId",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-76",
  "nl_tokens": [
   "Calculate",
   "an",
   "(",
   "approximate",
   ")",
   "OpenXML",
   "column",
   "width",
   "based",
   "on",
   "font",
   "size",
   "and",
   "text",
   "contained",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "calculateColumnWidth",
   "(",
   "\\",
   "PhpOffice",
   "\\",
   "PhpSpreadsheet",
   "\\",
   "Style",
   "\\",
   "Font",
   "$",
   "font",
   ",",
   "$",
   "cellText",
   "=",
   "''",
   ",",
   "$",
   "rotation",
   "=",
   "0",
   ",",
   "\\",
   "PhpOffice",
   "\\",
   "PhpSpreadsheet",
   "\\",
   "Style",
   "\\",
   "Font",
   "$",
   "defaultFont",
   "=",
   "null",
   ")",
   "{",
   "// If it is rich text, use plain text",
   "if",
   "(",
   "$",
   "cellText",
   "instanceof",
   "RichText",
   ")",
   "{",
   "$",
   "cellText",
   "=",
   "$",
   "cellText",
   "->",
   "getPlainText",
   "(",
   ")",
   ";",
   "}",
   "// Special case if there are one or more newline characters (\"\\n\")",
   "if",
   "(",
   "strpos",
   "(",
   "$",
   "cellText",
   ",",
   "\"\\n\"",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "lineTexts",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "cellText",
   ")",
   ";",
   "$",
   "lineWidths",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "lineTexts",
   "as",
   "$",
   "lineText",
   ")",
   "{",
   "$",
   "lineWidths",
   "[",
   "]",
   "=",
   "self",
   "::",
   "calculateColumnWidth",
   "(",
   "$",
   "font",
   ",",
   "$",
   "lineText",
   ",",
   "$",
   "rotation",
   "=",
   "0",
   ",",
   "$",
   "defaultFont",
   ")",
   ";",
   "}",
   "return",
   "<mask>",
   "(",
   "$",
   "lineWidths",
   ")",
   ";",
   "// width of longest line in cell",
   "}",
   "// Try to get the exact text width in pixels",
   "$",
   "approximate",
   "=",
   "self",
   "::",
   "$",
   "autoSizeMethod",
   "==",
   "self",
   "::",
   "AUTOSIZE_METHOD_APPROX",
   ";",
   "if",
   "(",
   "!",
   "$",
   "approximate",
   ")",
   "{",
   "$",
   "columnWidthAdjust",
   "=",
   "ceil",
   "(",
   "self",
   "::",
   "getTextWidthPixelsExact",
   "(",
   "'n'",
   ",",
   "$",
   "font",
   ",",
   "0",
   ")",
   "*",
   "1.07",
   ")",
   ";",
   "try",
   "{",
   "// Width of text in pixels excl. padding",
   "// and addition because Excel adds some padding, just use approx width of 'n' glyph",
   "$",
   "columnWidth",
   "=",
   "self",
   "::",
   "getTextWidthPixelsExact",
   "(",
   "$",
   "cellText",
   ",",
   "$",
   "font",
   ",",
   "$",
   "rotation",
   ")",
   "+",
   "$",
   "columnWidthAdjust",
   ";",
   "}",
   "catch",
   "(",
   "PhpSpreadsheetException",
   "$",
   "e",
   ")",
   "{",
   "$",
   "approximate",
   "=",
   "true",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "approximate",
   ")",
   "{",
   "$",
   "columnWidthAdjust",
   "=",
   "self",
   "::",
   "getTextWidthPixelsApprox",
   "(",
   "'n'",
   ",",
   "$",
   "font",
   ",",
   "0",
   ")",
   ";",
   "// Width of text in pixels excl. padding, approximation",
   "// and addition because Excel adds some padding, just use approx width of 'n' glyph",
   "$",
   "columnWidth",
   "=",
   "self",
   "::",
   "getTextWidthPixelsApprox",
   "(",
   "$",
   "cellText",
   ",",
   "$",
   "font",
   ",",
   "$",
   "rotation",
   ")",
   "+",
   "$",
   "columnWidthAdjust",
   ";",
   "}",
   "// Convert from pixel width to column width",
   "$",
   "columnWidth",
   "=",
   "Drawing",
   "::",
   "pixelsToCellDimension",
   "(",
   "$",
   "columnWidth",
   ",",
   "$",
   "defaultFont",
   ")",
   ";",
   "// Return",
   "return",
   "round",
   "(",
   "$",
   "columnWidth",
   ",",
   "6",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-77",
  "nl_tokens": [
   "@param",
   "array|object",
   "$arrayOrObject"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "fromArrayOrObject",
   "(",
   "$",
   "arrayOrObject",
   ")",
   "{",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "arrayOrObject",
   ")",
   ")",
   "{",
   "return",
   "new",
   "static",
   "(",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "[",
   "'name'",
   "]",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "[",
   "'name'",
   "]",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "[",
   "'value'",
   "]",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "[",
   "'value'",
   "]",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "[",
   "'unit'",
   "]",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "[",
   "'unit'",
   "]",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "[",
   "'min'",
   "]",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "[",
   "'min'",
   "]",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "[",
   "'max'",
   "]",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "[",
   "'max'",
   "]",
   ":",
   "null",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "is_object",
   "(",
   "$",
   "arrayOrObject",
   ")",
   ")",
   "{",
   "return",
   "new",
   "static",
   "(",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "->",
   "name",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "->",
   "name",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "->",
   "value",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "->",
   "value",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "->",
   "unit",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "->",
   "unit",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "->",
   "<mask>",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "->",
   "min",
   ":",
   "null",
   ",",
   "isset",
   "(",
   "$",
   "arrayOrObject",
   "->",
   "max",
   ")",
   "?",
   "$",
   "arrayOrObject",
   "->",
   "max",
   ":",
   "null",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-78",
  "nl_tokens": [
   "Calculate",
   "the",
   "limit",
   "and",
   "offset",
   "with",
   "pagination",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "calculatePaginated",
   "(",
   ")",
   "{",
   "$",
   "this",
   "->",
   "calculatedTotal",
   "=",
   "$",
   "this",
   "->",
   "getTotalAmount",
   "(",
   ")",
   ";",
   "// If a total limit has been defined, we need to honor that.",
   "if",
   "(",
   "(",
   "$",
   "this",
   "->",
   "calculatedLimit",
   "!==",
   "null",
   ")",
   "&&",
   "(",
   "$",
   "this",
   "->",
   "calculatedTotal",
   ">",
   "$",
   "this",
   "->",
   "calculatedLimit",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "calculatedTotal",
   "-=",
   "$",
   "this",
   "->",
   "calculatedLimit",
   ";",
   "}",
   "$",
   "this",
   "->",
   "calculatedTotal",
   "-=",
   "$",
   "this",
   "->",
   "calculatedOffset",
   ";",
   "// Get the current page.",
   "$",
   "page",
   "=",
   "$",
   "this",
   "->",
   "getCurrentPage",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "page",
   ">",
   "(",
   "$",
   "this",
   "->",
   "calculatedTotal",
   "/",
   "$",
   "this",
   "->",
   "getPerPage",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "page",
   "=",
   "(",
   "int",
   ")",
   "ceil",
   "(",
   "$",
   "this",
   "->",
   "calculatedTotal",
   "/",
   "$",
   "this",
   "->",
   "getPerPage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "// Set limit and offset.",
   "$",
   "pageOffset",
   "=",
   "(",
   "(",
   "<mask>",
   "(",
   "$",
   "page",
   ",",
   "1",
   ")",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "getPerPage",
   "(",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "calculatedOffset",
   "+=",
   "$",
   "pageOffset",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "calculatedLimit",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "calculatedLimit",
   "=",
   "$",
   "this",
   "->",
   "getPerPage",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "calculatedLimit",
   "=",
   "min",
   "(",
   "(",
   "$",
   "this",
   "->",
   "calculatedLimit",
   "-",
   "$",
   "this",
   "->",
   "calculatedOffset",
   ")",
   ",",
   "$",
   "this",
   "->",
   "getPerPage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-79",
  "nl_tokens": [
   "Find",
   "a",
   "sequence",
   "of",
   "meaningful",
   "tokens",
   "and",
   "returns",
   "the",
   "array",
   "of",
   "their",
   "locations",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "findSequence",
   "(",
   "array",
   "$",
   "sequence",
   ",",
   "$",
   "start",
   "=",
   "0",
   ",",
   "$",
   "end",
   "=",
   "null",
   ",",
   "$",
   "caseSensitive",
   "=",
   "true",
   ")",
   "{",
   "$",
   "sequenceCount",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "sequence",
   ")",
   ";",
   "if",
   "(",
   "0",
   "===",
   "$",
   "sequenceCount",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Invalid sequence.'",
   ")",
   ";",
   "}",
   "// $end defaults to the end of the collection",
   "$",
   "end",
   "=",
   "null",
   "===",
   "$",
   "end",
   "?",
   "\\",
   "count",
   "(",
   "$",
   "this",
   ")",
   "-",
   "1",
   ":",
   "<mask>",
   "(",
   "$",
   "end",
   ",",
   "\\",
   "count",
   "(",
   "$",
   "this",
   ")",
   "-",
   "1",
   ")",
   ";",
   "if",
   "(",
   "$",
   "start",
   "+",
   "$",
   "sequenceCount",
   "-",
   "1",
   ">",
   "$",
   "end",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "// make sure the sequence content is \"meaningful\"",
   "foreach",
   "(",
   "$",
   "sequence",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "token",
   ")",
   "{",
   "// if not a Token instance already, we convert it to verify the meaningfulness",
   "if",
   "(",
   "!",
   "$",
   "token",
   "instanceof",
   "Token",
   ")",
   "{",
   "if",
   "(",
   "\\",
   "is_array",
   "(",
   "$",
   "token",
   ")",
   "&&",
   "!",
   "isset",
   "(",
   "$",
   "token",
   "[",
   "1",
   "]",
   ")",
   ")",
   "{",
   "// fake some content as it is required by the Token constructor,",
   "// although optional for search purposes",
   "$",
   "token",
   "[",
   "1",
   "]",
   "=",
   "'DUMMY'",
   ";",
   "}",
   "$",
   "token",
   "=",
   "new",
   "Token",
   "(",
   "$",
   "token",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "token",
   "->",
   "isWhitespace",
   "(",
   ")",
   "||",
   "$",
   "token",
   "->",
   "isComment",
   "(",
   ")",
   "||",
   "''",
   "===",
   "$",
   "token",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "sprintf",
   "(",
   "'Non-meaningful token at position: %s.'",
   ",",
   "$",
   "key",
   ")",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "self",
   "::",
   "isLegacyMode",
   "(",
   ")",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "sequence",
   "as",
   "$",
   "token",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "isTokenKindFound",
   "(",
   "$",
   "this",
   "->",
   "extractTokenKind",
   "(",
   "$",
   "token",
   ")",
   ")",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "}",
   "}",
   "// remove the first token from the sequence, so we can freely iterate through the sequence after a match to",
   "// the first one is found",
   "$",
   "key",
   "=",
   "key",
   "(",
   "$",
   "sequence",
   ")",
   ";",
   "$",
   "firstCs",
   "=",
   "Token",
   "::",
   "isKeyCaseSensitive",
   "(",
   "$",
   "caseSensitive",
   ",",
   "$",
   "key",
   ")",
   ";",
   "$",
   "firstToken",
   "=",
   "$",
   "sequence",
   "[",
   "$",
   "key",
   "]",
   ";",
   "unset",
   "(",
   "$",
   "sequence",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "// begin searching for the first token in the sequence (start included)",
   "$",
   "index",
   "=",
   "$",
   "start",
   "-",
   "1",
   ";",
   "while",
   "(",
   "null",
   "!==",
   "$",
   "index",
   "&&",
   "$",
   "index",
   "<=",
   "$",
   "end",
   ")",
   "{",
   "$",
   "index",
   "=",
   "$",
   "this",
   "->",
   "getNextTokenOfKind",
   "(",
   "$",
   "index",
   ",",
   "[",
   "$",
   "firstToken",
   "]",
   ",",
   "$",
   "firstCs",
   ")",
   ";",
   "// ensure we found a match and didn't get past the end index",
   "if",
   "(",
   "null",
   "===",
   "$",
   "index",
   "||",
   "$",
   "index",
   ">",
   "$",
   "end",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "// initialise the result array with the current index",
   "$",
   "result",
   "=",
   "[",
   "$",
   "index",
   "=>",
   "$",
   "this",
   "[",
   "$",
   "index",
   "]",
   "]",
   ";",
   "// advance cursor to the current position",
   "$",
   "currIdx",
   "=",
   "$",
   "index",
   ";",
   "// iterate through the remaining tokens in the sequence",
   "foreach",
   "(",
   "$",
   "sequence",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "token",
   ")",
   "{",
   "$",
   "currIdx",
   "=",
   "$",
   "this",
   "->",
   "getNextMeaningfulToken",
   "(",
   "$",
   "currIdx",
   ")",
   ";",
   "// ensure we didn't go too far",
   "if",
   "(",
   "null",
   "===",
   "$",
   "currIdx",
   "||",
   "$",
   "currIdx",
   ">",
   "$",
   "end",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "this",
   "[",
   "$",
   "currIdx",
   "]",
   "->",
   "equals",
   "(",
   "$",
   "token",
   ",",
   "Token",
   "::",
   "isKeyCaseSensitive",
   "(",
   "$",
   "caseSensitive",
   ",",
   "$",
   "key",
   ")",
   ")",
   ")",
   "{",
   "// not a match, restart the outer loop",
   "continue",
   "2",
   ";",
   "}",
   "// append index to the result array",
   "$",
   "result",
   "[",
   "$",
   "currIdx",
   "]",
   "=",
   "$",
   "this",
   "[",
   "$",
   "currIdx",
   "]",
   ";",
   "}",
   "// do we have a complete match?",
   "// hint: $result is bigger than $sequence since the first token has been removed from the latter",
   "if",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "sequence",
   ")",
   "<",
   "\\",
   "count",
   "(",
   "$",
   "result",
   ")",
   ")",
   "{",
   "return",
   "$",
   "result",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-80",
  "nl_tokens": [
   "Write",
   "BIFF",
   "record",
   "COLINFO",
   "to",
   "define",
   "column",
   "widths",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "writeColinfo",
   "(",
   "$",
   "col_array",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "colFirst",
   "=",
   "$",
   "col_array",
   "[",
   "0",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "1",
   "]",
   ")",
   ")",
   "{",
   "$",
   "colLast",
   "=",
   "$",
   "col_array",
   "[",
   "1",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "2",
   "]",
   ")",
   ")",
   "{",
   "$",
   "coldx",
   "=",
   "$",
   "col_array",
   "[",
   "2",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "coldx",
   "=",
   "8.43",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "3",
   "]",
   ")",
   ")",
   "{",
   "$",
   "xfIndex",
   "=",
   "$",
   "col_array",
   "[",
   "3",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "xfIndex",
   "=",
   "15",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "4",
   "]",
   ")",
   ")",
   "{",
   "$",
   "grbit",
   "=",
   "$",
   "col_array",
   "[",
   "4",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "grbit",
   "=",
   "0",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "col_array",
   "[",
   "5",
   "]",
   ")",
   ")",
   "{",
   "$",
   "level",
   "=",
   "$",
   "col_array",
   "[",
   "5",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "level",
   "=",
   "0",
   ";",
   "}",
   "$",
   "record",
   "=",
   "0x007D",
   ";",
   "// Record identifier",
   "$",
   "length",
   "=",
   "0x000C",
   ";",
   "// Number of bytes to follow",
   "$",
   "coldx",
   "*=",
   "256",
   ";",
   "// Convert to units of 1/256 of a char",
   "$",
   "ixfe",
   "=",
   "$",
   "xfIndex",
   ";",
   "$",
   "reserved",
   "=",
   "0x0000",
   ";",
   "// Reserved",
   "$",
   "level",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "level",
   ",",
   "7",
   ")",
   ")",
   ";",
   "$",
   "grbit",
   "|=",
   "$",
   "level",
   "<<",
   "8",
   ";",
   "$",
   "header",
   "=",
   "pack",
   "(",
   "'vv'",
   ",",
   "$",
   "record",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "data",
   "=",
   "pack",
   "(",
   "'vvvvvv'",
   ",",
   "$",
   "colFirst",
   ",",
   "$",
   "colLast",
   ",",
   "$",
   "coldx",
   ",",
   "$",
   "ixfe",
   ",",
   "$",
   "grbit",
   ",",
   "$",
   "reserved",
   ")",
   ";",
   "$",
   "this",
   "->",
   "append",
   "(",
   "$",
   "header",
   ".",
   "$",
   "data",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-81",
  "nl_tokens": [
   "@param",
   "Lead",
   "$lead"
  ],
  "pl_tokens": [
   "public",
   "function",
   "doEnhancement",
   "(",
   "Lead",
   "$",
   "lead",
   ")",
   "{",
   "$",
   "save",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "info",
   "(",
   "'AgeFromBirthdate:doEnhancemet'",
   ")",
   ";",
   "// Get original field values.",
   "$",
   "dobStr",
   "=",
   "$",
   "dobOrig",
   "=",
   "$",
   "lead",
   "->",
   "getFieldValue",
   "(",
   "'dob'",
   ")",
   ";",
   "$",
   "day",
   "=",
   "$",
   "dayOrig",
   "=",
   "$",
   "lead",
   "->",
   "getFieldValue",
   "(",
   "'dob_day'",
   ")",
   ";",
   "$",
   "month",
   "=",
   "$",
   "monthOrig",
   "=",
   "$",
   "lead",
   "->",
   "getFieldValue",
   "(",
   "'dob_month'",
   ")",
   ";",
   "$",
   "year",
   "=",
   "$",
   "yearOrig",
   "=",
   "$",
   "lead",
   "->",
   "getFieldValue",
   "(",
   "'dob_year'",
   ")",
   ";",
   "$",
   "age",
   "=",
   "$",
   "ageOrig",
   "=",
   "$",
   "lead",
   "->",
   "getFieldValue",
   "(",
   "'afb_age'",
   ")",
   ";",
   "$",
   "today",
   "=",
   "new",
   "\\",
   "DateTime",
   "(",
   ")",
   ";",
   "try",
   "{",
   "if",
   "(",
   "$",
   "dobOrig",
   "instanceof",
   "\\",
   "DateTime",
   ")",
   "{",
   "// For BC.",
   "$",
   "dobStr",
   "=",
   "$",
   "dobOrig",
   "=",
   "$",
   "dobOrig",
   "->",
   "format",
   "(",
   "'Y-m-d'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "dobStr",
   "&&",
   "'0000-00-00'",
   "!==",
   "$",
   "dobStr",
   "&&",
   "$",
   "today",
   "->",
   "format",
   "(",
   "'Y-m-d'",
   ")",
   "!=",
   "$",
   "dobStr",
   ")",
   "{",
   "// DOB field to date/month/day fields.",
   "$",
   "dob",
   "=",
   "new",
   "\\",
   "DateTime",
   "(",
   "is_numeric",
   "(",
   "$",
   "dobStr",
   ")",
   "?",
   "'@'",
   ".",
   "$",
   "dobStr",
   ":",
   "$",
   "dobStr",
   ")",
   ";",
   "$",
   "day",
   "=",
   "(",
   "int",
   ")",
   "$",
   "dob",
   "->",
   "format",
   "(",
   "'d'",
   ")",
   ";",
   "$",
   "month",
   "=",
   "(",
   "int",
   ")",
   "$",
   "dob",
   "->",
   "format",
   "(",
   "'m'",
   ")",
   ";",
   "$",
   "year",
   "=",
   "(",
   "int",
   ")",
   "$",
   "dob",
   "->",
   "format",
   "(",
   "'Y'",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "yearOrig",
   ")",
   "{",
   "// Date/month/day fields to DOB field with normalization.",
   "$",
   "year",
   "=",
   "(",
   "int",
   ")",
   "$",
   "yearOrig",
   ";",
   "if",
   "(",
   "$",
   "year",
   ")",
   "{",
   "$",
   "day",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "min",
   "(",
   "31",
   ",",
   "(",
   "int",
   ")",
   "$",
   "dayOrig",
   ")",
   ")",
   ";",
   "$",
   "month",
   "=",
   "max",
   "(",
   "1",
   ",",
   "min",
   "(",
   "12",
   ",",
   "(",
   "int",
   ")",
   "$",
   "monthOrig",
   ")",
   ")",
   ";",
   "$",
   "dob",
   "=",
   "new",
   "\\",
   "DateTime",
   "(",
   "sprintf",
   "(",
   "'%04d-%02d-%02d'",
   ",",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "day",
   ")",
   ")",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "ageOrig",
   ")",
   "{",
   "// @todo - Support age back to DOB estimation.",
   "}",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "// Allow DateTime to fail gracefully.",
   "}",
   "// Generate age if DOB was found valid.",
   "try",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "dob",
   ")",
   "&&",
   "$",
   "dob",
   ")",
   "{",
   "$",
   "yearDiff",
   "=",
   "(",
   "int",
   ")",
   "$",
   "today",
   "->",
   "diff",
   "(",
   "$",
   "dob",
   ")",
   "->",
   "y",
   ";",
   "if",
   "(",
   "$",
   "yearDiff",
   ">",
   "-",
   "1",
   "&&",
   "$",
   "yearDiff",
   "<",
   "120",
   ")",
   "{",
   "$",
   "age",
   "=",
   "$",
   "yearDiff",
   ";",
   "$",
   "dobStr",
   "=",
   "$",
   "dob",
   "->",
   "format",
   "(",
   "'Y-m-d'",
   ")",
   ";",
   "}",
   "}",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "// Dont write dob fields because weirdness in what was sent",
   "return",
   "false",
   ";",
   "}",
   "// See if any field values changed (intentionally not type checking).",
   "if",
   "(",
   "$",
   "dobStr",
   "&&",
   "$",
   "dobOrig",
   "!=",
   "$",
   "dobStr",
   ")",
   "{",
   "$",
   "lead",
   "->",
   "addUpdatedField",
   "(",
   "'dob'",
   ",",
   "$",
   "dobStr",
   ",",
   "$",
   "dobOrig",
   ")",
   ";",
   "$",
   "save",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "day",
   "&&",
   "$",
   "dayOrig",
   "!=",
   "$",
   "day",
   ")",
   "{",
   "$",
   "lead",
   "->",
   "addUpdatedField",
   "(",
   "'dob_day'",
   ",",
   "$",
   "day",
   ",",
   "$",
   "dayOrig",
   ")",
   ";",
   "$",
   "save",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "month",
   "&&",
   "$",
   "monthOrig",
   "!=",
   "$",
   "month",
   ")",
   "{",
   "$",
   "lead",
   "->",
   "addUpdatedField",
   "(",
   "'dob_month'",
   ",",
   "$",
   "month",
   ",",
   "$",
   "monthOrig",
   ")",
   ";",
   "$",
   "save",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "year",
   "&&",
   "$",
   "yearOrig",
   "!=",
   "$",
   "year",
   ")",
   "{",
   "$",
   "lead",
   "->",
   "addUpdatedField",
   "(",
   "'dob_year'",
   ",",
   "$",
   "year",
   ",",
   "$",
   "yearOrig",
   ")",
   ";",
   "$",
   "save",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "age",
   "&&",
   "$",
   "ageOrig",
   "!=",
   "$",
   "age",
   ")",
   "{",
   "$",
   "lead",
   "->",
   "addUpdatedField",
   "(",
   "'afb_age'",
   ",",
   "$",
   "age",
   ",",
   "$",
   "ageOrig",
   ")",
   ";",
   "$",
   "save",
   "=",
   "true",
   ";",
   "}",
   "return",
   "$",
   "save",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-82",
  "nl_tokens": [
   "@param",
   "Tokens",
   "$tokens",
   "@param",
   "int",
   "$index",
   "@param",
   "bool",
   "$after"
  ],
  "pl_tokens": [
   "private",
   "function",
   "getSiblingContinuousSingleLineComment",
   "(",
   "Tokens",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ",",
   "$",
   "after",
   ")",
   "{",
   "$",
   "siblingIndex",
   "=",
   "$",
   "index",
   ";",
   "do",
   "{",
   "if",
   "(",
   "$",
   "after",
   ")",
   "{",
   "$",
   "siblingIndex",
   "=",
   "$",
   "tokens",
   "->",
   "getNextTokenOfKind",
   "(",
   "$",
   "siblingIndex",
   ",",
   "[",
   "[",
   "T_COMMENT",
   "]",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "siblingIndex",
   "=",
   "$",
   "tokens",
   "->",
   "getPrevTokenOfKind",
   "(",
   "$",
   "siblingIndex",
   ",",
   "[",
   "[",
   "T_COMMENT",
   "]",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "null",
   "===",
   "$",
   "siblingIndex",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "}",
   "while",
   "(",
   "0",
   "===",
   "strpos",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "siblingIndex",
   "]",
   "->",
   "getContent",
   "(",
   ")",
   ",",
   "'/*'",
   ")",
   ")",
   ";",
   "$",
   "newLines",
   "=",
   "0",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "<mask>",
   "(",
   "$",
   "siblingIndex",
   ",",
   "$",
   "index",
   ")",
   "+",
   "1",
   ",",
   "$",
   "max",
   "=",
   "max",
   "(",
   "$",
   "siblingIndex",
   ",",
   "$",
   "index",
   ")",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "i",
   "]",
   "->",
   "isWhitespace",
   "(",
   ")",
   "&&",
   "Preg",
   "::",
   "match",
   "(",
   "'/\\R/'",
   ",",
   "$",
   "tokens",
   "[",
   "$",
   "i",
   "]",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   "{",
   "if",
   "(",
   "1",
   "===",
   "$",
   "newLines",
   "||",
   "Preg",
   "::",
   "match",
   "(",
   "'/\\R.*\\R/'",
   ",",
   "$",
   "tokens",
   "[",
   "$",
   "i",
   "]",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "++",
   "$",
   "newLines",
   ";",
   "}",
   "}",
   "return",
   "$",
   "siblingIndex",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-83",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getClientOptions",
   "(",
   "$",
   "model",
   ",",
   "$",
   "attribute",
   ")",
   "{",
   "$",
   "label",
   "=",
   "$",
   "model",
   "->",
   "getAttributeLabel",
   "(",
   "$",
   "attribute",
   ")",
   ";",
   "$",
   "options",
   "=",
   "[",
   "'message'",
   "=>",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "message",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "]",
   ")",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'min'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "min",
   ";",
   "$",
   "options",
   "[",
   "'tooShort'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "tooShort",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "'min'",
   "=>",
   "$",
   "this",
   "->",
   "min",
   ",",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'max'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "max",
   ";",
   "$",
   "options",
   "[",
   "'tooLong'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "tooLong",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "'max'",
   "=>",
   "$",
   "this",
   "->",
   "max",
   ",",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "length",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'is'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "length",
   ";",
   "$",
   "options",
   "[",
   "'notEqual'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "formatMessage",
   "(",
   "$",
   "this",
   "->",
   "notEqual",
   ",",
   "[",
   "'attribute'",
   "=>",
   "$",
   "label",
   ",",
   "'length'",
   "=>",
   "$",
   "this",
   "->",
   "length",
   ",",
   "]",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "skipOnEmpty",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'skipOnEmpty'",
   "]",
   "=",
   "1",
   ";",
   "}",
   "return",
   "$",
   "options",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-84",
  "nl_tokens": [
   "Min",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "$",
   "path",
   ",",
   "$",
   "defaultValue",
   "=",
   "0",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "items",
   "===",
   "null",
   "||",
   "(",
   "is_array",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   "&&",
   "count",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   "==",
   "0",
   ")",
   ")",
   "{",
   "return",
   "$",
   "defaultValue",
   ";",
   "}",
   "$",
   "items",
   "=",
   "$",
   "this",
   "->",
   "pluck",
   "(",
   "$",
   "path",
   ",",
   "$",
   "defaultValue",
   ")",
   ";",
   "$",
   "min",
   "=",
   "PHP_INT_MAX",
   ";",
   "foreach",
   "(",
   "$",
   "items",
   "as",
   "$",
   "item",
   ")",
   "{",
   "if",
   "(",
   "$",
   "item",
   "<",
   "$",
   "min",
   ")",
   "{",
   "$",
   "min",
   "=",
   "$",
   "item",
   ";",
   "}",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-85",
  "nl_tokens": [
   "Iterate",
   "through",
   "the",
   "items",
   "starting",
   "at",
   "the",
   "given",
   "index",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "iterateFromIndex",
   "(",
   "$",
   "fromIndex",
   ")",
   "{",
   "Assert",
   "::",
   "integer",
   "(",
   "$",
   "fromIndex",
   ")",
   ";",
   "$",
   "count",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   ";",
   "if",
   "(",
   "$",
   "count",
   "===",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "last",
   "=",
   "$",
   "count",
   "-",
   "2",
   ";",
   "$",
   "index",
   "=",
   "$",
   "fromIndex",
   "<",
   "0",
   "?",
   "<mask>",
   "(",
   "$",
   "last",
   "+",
   "$",
   "fromIndex",
   ",",
   "-",
   "1",
   ")",
   ":",
   "min",
   "(",
   "$",
   "fromIndex",
   "-",
   "1",
   ",",
   "$",
   "last",
   ")",
   ";",
   "$",
   "keys",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "items",
   ")",
   ";",
   "while",
   "(",
   "++",
   "$",
   "index",
   "<",
   "$",
   "count",
   ")",
   "{",
   "$",
   "key",
   "=",
   "$",
   "keys",
   "[",
   "$",
   "index",
   "]",
   ";",
   "yield",
   "$",
   "key",
   "=>",
   "$",
   "this",
   "->",
   "items",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-86",
  "nl_tokens": [
   "Loads",
   "configuration",
   "settings",
   "into",
   "the",
   "object",
   "and",
   "(",
   "re",
   ")",
   "calculates",
   "pagination",
   "if",
   "needed",
   ".",
   "Allows",
   "you",
   "to",
   "update",
   "config",
   "settings",
   "after",
   "a",
   "Pagination",
   "object",
   "has",
   "been",
   "constructed",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "calculate",
   "(",
   "array",
   "$",
   "config",
   "=",
   "[",
   "]",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "config",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "val",
   ")",
   "$",
   "this",
   "->",
   "$",
   "key",
   "=",
   "$",
   "val",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   "===",
   "null",
   ")",
   "{",
   "$",
   "query_key",
   "=",
   "$",
   "this",
   "->",
   "current_page_source_key",
   ";",
   "switch",
   "(",
   "$",
   "this",
   "->",
   "current_page_source",
   ")",
   "{",
   "case",
   "'query_string'",
   ":",
   "case",
   "'mixed'",
   ":",
   "$",
   "this",
   "->",
   "current_page",
   "=",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "request",
   "->",
   "get",
   "(",
   "$",
   "query_key",
   ",",
   "1",
   ")",
   ";",
   "break",
   ";",
   "case",
   "'route'",
   ":",
   "$",
   "this",
   "->",
   "current_page",
   "=",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "request",
   "->",
   "param",
   "(",
   "$",
   "query_key",
   ",",
   "1",
   ")",
   ";",
   "break",
   ";",
   "}",
   "}",
   "// Calculate and clean all pagination variables",
   "$",
   "this",
   "->",
   "total_items",
   "=",
   "(",
   "int",
   ")",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "this",
   "->",
   "total_items",
   ")",
   ";",
   "$",
   "this",
   "->",
   "items_per_page",
   "=",
   "(",
   "int",
   ")",
   "max",
   "(",
   "1",
   ",",
   "$",
   "this",
   "->",
   "items_per_page",
   ")",
   ";",
   "$",
   "this",
   "->",
   "total_pages",
   "=",
   "(",
   "int",
   ")",
   "ceil",
   "(",
   "$",
   "this",
   "->",
   "total_items",
   "/",
   "$",
   "this",
   "->",
   "items_per_page",
   ")",
   ";",
   "$",
   "this",
   "->",
   "current_page",
   "=",
   "(",
   "int",
   ")",
   "min",
   "(",
   "max",
   "(",
   "1",
   ",",
   "$",
   "this",
   "->",
   "current_page",
   ")",
   ",",
   "max",
   "(",
   "1",
   ",",
   "$",
   "this",
   "->",
   "total_pages",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "current_first_item",
   "=",
   "(",
   "int",
   ")",
   "min",
   "(",
   "(",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "items_per_page",
   ")",
   "+",
   "1",
   ",",
   "$",
   "this",
   "->",
   "total_items",
   ")",
   ";",
   "$",
   "this",
   "->",
   "current_last_item",
   "=",
   "(",
   "int",
   ")",
   "min",
   "(",
   "$",
   "this",
   "->",
   "current_first_item",
   "+",
   "$",
   "this",
   "->",
   "items_per_page",
   "-",
   "1",
   ",",
   "$",
   "this",
   "->",
   "total_items",
   ")",
   ";",
   "$",
   "this",
   "->",
   "previous_page",
   "=",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   ">",
   "1",
   ")",
   "?",
   "$",
   "this",
   "->",
   "current_page",
   "-",
   "1",
   ":",
   "FALSE",
   ";",
   "$",
   "this",
   "->",
   "next_page",
   "=",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   "<",
   "$",
   "this",
   "->",
   "total_pages",
   ")",
   "?",
   "$",
   "this",
   "->",
   "current_page",
   "+",
   "1",
   ":",
   "FALSE",
   ";",
   "$",
   "this",
   "->",
   "first_page",
   "=",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   "===",
   "1",
   ")",
   "?",
   "FALSE",
   ":",
   "1",
   ";",
   "$",
   "this",
   "->",
   "last_page",
   "=",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   ">=",
   "$",
   "this",
   "->",
   "total_pages",
   ")",
   "?",
   "FALSE",
   ":",
   "$",
   "this",
   "->",
   "total_pages",
   ";",
   "$",
   "this",
   "->",
   "offset",
   "=",
   "(",
   "int",
   ")",
   "(",
   "(",
   "$",
   "this",
   "->",
   "current_page",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "items_per_page",
   ")",
   ";",
   "// Chainable method",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-87",
  "nl_tokens": [
   "Creates",
   "invoice",
   "expected",
   "lines",
   "regarding",
   "to",
   "his",
   "associated",
   "shipment",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "feedShipmentInvoice",
   "(",
   "Invoice",
   "\\",
   "InvoiceInterface",
   "$",
   "invoice",
   ")",
   "{",
   "$",
   "changed",
   "=",
   "false",
   ";",
   "$",
   "shipment",
   "=",
   "$",
   "invoice",
   "->",
   "getShipment",
   "(",
   ")",
   ";",
   "$",
   "calculator",
   "=",
   "$",
   "this",
   "->",
   "invoiceBuilder",
   "->",
   "getInvoiceCalculator",
   "(",
   ")",
   ";",
   "// Add expected good lines",
   "/** @var Invoice\\InvoiceLineInterface $line */",
   "foreach",
   "(",
   "$",
   "shipment",
   "->",
   "getItems",
   "(",
   ")",
   "as",
   "$",
   "shipmentItem",
   ")",
   "{",
   "$",
   "saleItem",
   "=",
   "$",
   "shipmentItem",
   "->",
   "getSaleItem",
   "(",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "shipment",
   "->",
   "isReturn",
   "(",
   ")",
   "?",
   "$",
   "calculator",
   "->",
   "calculateCreditableQuantity",
   "(",
   "$",
   "saleItem",
   ")",
   ":",
   "$",
   "calculator",
   "->",
   "calculateInvoiceableQuantity",
   "(",
   "$",
   "saleItem",
   ")",
   ";",
   "if",
   "(",
   "0",
   "<",
   "$",
   "quantity",
   "=",
   "min",
   "(",
   "$",
   "max",
   ",",
   "$",
   "shipmentItem",
   "->",
   "getQuantity",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "this",
   "->",
   "invoiceBuilder",
   "->",
   "findOrCreateGoodLine",
   "(",
   "$",
   "invoice",
   ",",
   "$",
   "saleItem",
   ",",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "line",
   "->",
   "getQuantity",
   "(",
   ")",
   "!==",
   "$",
   "quantity",
   ")",
   "{",
   "$",
   "line",
   "->",
   "setQuantity",
   "(",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "changed",
   "=",
   "true",
   ";",
   "}",
   "}",
   "/*else {\n                // TODO find and remove line ?\n                $invoice->removeLine($line);\n                $changed = true;\n            }*/",
   "}",
   "if",
   "(",
   "$",
   "invoice",
   "->",
   "hasLineByType",
   "(",
   "Document",
   "\\",
   "DocumentLineTypes",
   "::",
   "TYPE_GOOD",
   ")",
   ")",
   "{",
   "// Add expected discount lines",
   "$",
   "sale",
   "=",
   "$",
   "invoice",
   "->",
   "getSale",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "sale",
   "->",
   "getAdjustments",
   "(",
   "Common",
   "\\",
   "AdjustmentTypes",
   "::",
   "TYPE_DISCOUNT",
   ")",
   "as",
   "$",
   "saleAdjustment",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "invoice",
   "->",
   "getLinesByType",
   "(",
   "Document",
   "\\",
   "DocumentLineTypes",
   "::",
   "TYPE_DISCOUNT",
   ")",
   "as",
   "$",
   "line",
   ")",
   "{",
   "if",
   "(",
   "$",
   "saleAdjustment",
   "===",
   "$",
   "line",
   "->",
   "getSaleAdjustment",
   "(",
   ")",
   ")",
   "{",
   "continue",
   "2",
   ";",
   "// Invoice line found -> next sale adjustment",
   "}",
   "}",
   "// Invoice line not found -> create it",
   "$",
   "this",
   "->",
   "invoiceBuilder",
   "->",
   "buildDiscountLine",
   "(",
   "$",
   "saleAdjustment",
   ",",
   "$",
   "invoice",
   ")",
   ";",
   "$",
   "changed",
   "=",
   "true",
   ";",
   "}",
   "// Add expected shipment line",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "sale",
   "->",
   "getShipmentMethod",
   "(",
   ")",
   "&&",
   "!",
   "$",
   "this",
   "->",
   "isShipmentAmountInvoiced",
   "(",
   "$",
   "invoice",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "invoiceBuilder",
   "->",
   "buildShipmentLine",
   "(",
   "$",
   "invoice",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "changed",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-88",
  "nl_tokens": [
   "Alias",
   "avec",
   "la",
   "porte",
   "logique",
   "OR",
   "de",
   "la",
   "fonction",
   "between",
   "()",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "orBetween",
   "(",
   "$",
   "column",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "between",
   "(",
   "$",
   "column",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "'or'",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-89",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092",
   "Timestamp",
   "\u306b\u5909\u63db\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "parseTimestamp",
   "(",
   "$",
   "format",
   ")",
   "{",
   "$",
   "time",
   "=",
   "intval",
   "(",
   "$",
   "format",
   ")",
   ";",
   "$",
   "year",
   "=",
   "date",
   "(",
   "\"Y\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "month",
   "=",
   "date",
   "(",
   "\"n\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "date",
   "=",
   "date",
   "(",
   "\"d\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "date",
   "(",
   "\"H\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "date",
   "(",
   "\"i\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "sec",
   "=",
   "date",
   "(",
   "\"s\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "return",
   "new",
   "Timestamp",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "date",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-90",
  "nl_tokens": [
   "Sets",
   "the",
   "date",
   "and",
   "time",
   "of",
   "this",
   "instance"
  ],
  "pl_tokens": [
   "public",
   "function",
   "setDateTime",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "day",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "sec",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "setDate",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "day",
   ")",
   "->",
   "setTime",
   "(",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-91",
  "nl_tokens": [
   "Test",
   "if",
   "a",
   "model",
   "accepts",
   "another",
   "child",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "acceptsAnotherChild",
   "(",
   "ModelInterface",
   "$",
   "model",
   ",",
   "ModelCollector",
   "$",
   "collector",
   ")",
   "{",
   "$",
   "conditionType",
   "=",
   "$",
   "model",
   "->",
   "getProperty",
   "(",
   "'type'",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "conditionFactory",
   "->",
   "supportsNesting",
   "(",
   "$",
   "conditionType",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "-",
   "1",
   "===",
   "(",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "conditionFactory",
   "->",
   "maxChildren",
   "(",
   "$",
   "conditionType",
   ")",
   ")",
   ")",
   "{",
   "return",
   "true",
   ";",
   "}",
   "return",
   "\\",
   "count",
   "(",
   "$",
   "collector",
   "->",
   "collectDirectChildrenOf",
   "(",
   "$",
   "model",
   ")",
   ")",
   "<",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-92",
  "nl_tokens": [
   "Checks",
   "that",
   "the",
   "sale",
   "item",
   "quantity",
   "is",
   "greater",
   "than",
   "or",
   "equals",
   "the",
   "shipped",
   "quantity",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "checkShipmentIntegrity",
   "(",
   "SaleItemInterface",
   "$",
   "item",
   ",",
   "SaleItem",
   "$",
   "constraint",
   ")",
   "{",
   "$",
   "sale",
   "=",
   "$",
   "item",
   "->",
   "getSale",
   "(",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "sale",
   "instanceof",
   "Shipment",
   "\\",
   "ShipmentSubjectInterface",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "sale",
   "->",
   "getShipments",
   "(",
   ")",
   "->",
   "toArray",
   "(",
   ")",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "shipmentCalculator",
   "->",
   "calculateShippedQuantity",
   "(",
   "$",
   "item",
   ")",
   ";",
   "// TODO Use packaging format",
   "//if (0 < $min && $item->getTotalQuantity() < $min) {",
   "if",
   "(",
   "1",
   "===",
   "bccomp",
   "(",
   "$",
   "min",
   ",",
   "0",
   ",",
   "3",
   ")",
   "&&",
   "1",
   "===",
   "bccomp",
   "(",
   "$",
   "min",
   ",",
   "$",
   "item",
   "->",
   "getTotalQuantity",
   "(",
   ")",
   ",",
   "3",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "context",
   "->",
   "buildViolation",
   "(",
   "$",
   "constraint",
   "->",
   "quantity_is_lower_than_shipped",
   ",",
   "[",
   "'%min%'",
   "=>",
   "$",
   "min",
   ",",
   "]",
   ")",
   "->",
   "setInvalidValue",
   "(",
   "$",
   "item",
   "->",
   "getQuantity",
   "(",
   ")",
   ")",
   "->",
   "atPath",
   "(",
   "'quantity'",
   ")",
   "->",
   "addViolation",
   "(",
   ")",
   ";",
   "throw",
   "new",
   "ValidationFailedException",
   "(",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-93",
  "nl_tokens": [
   "Schedules",
   "jobs",
   "sleeps",
   "until",
   "a",
   "job",
   "has",
   "to",
   "be",
   "scheduled",
   ".",
   "Returns",
   "when",
   "jobs",
   "were",
   "scheduled",
   "."
  ],
  "pl_tokens": [
   "function",
   "run",
   "(",
   ")",
   "{",
   "$",
   "now",
   "=",
   "new",
   "DateTime",
   "(",
   "'now'",
   ")",
   ";",
   "$",
   "sleep",
   "=",
   "<mask>",
   "(",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "entry",
   ")",
   "use",
   "(",
   "$",
   "now",
   ")",
   "{",
   "list",
   "(",
   "$",
   "expression",
   ",",
   "$",
   "job",
   ")",
   "=",
   "$",
   "entry",
   ";",
   "return",
   "$",
   "expression",
   "->",
   "getNextRunDate",
   "(",
   "$",
   "now",
   ")",
   "->",
   "getTimestamp",
   "(",
   ")",
   ";",
   "}",
   ",",
   "$",
   "this",
   "->",
   "entries",
   ")",
   ")",
   ";",
   "time_sleep_until",
   "(",
   "$",
   "sleep",
   ")",
   ";",
   "$",
   "scheduled",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "entries",
   "as",
   "$",
   "entry",
   ")",
   "{",
   "list",
   "(",
   "$",
   "expression",
   ",",
   "$",
   "job",
   ")",
   "=",
   "$",
   "entry",
   ";",
   "if",
   "(",
   "$",
   "expression",
   "->",
   "isDue",
   "(",
   "$",
   "now",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "queue",
   "->",
   "push",
   "(",
   "$",
   "job",
   ")",
   ";",
   "$",
   "scheduled",
   "+=",
   "1",
   ";",
   "}",
   "}",
   "$",
   "this",
   "->",
   "queue",
   "->",
   "flush",
   "(",
   ")",
   ";",
   "return",
   "$",
   "scheduled",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-94",
  "nl_tokens": [
   "Returns",
   "the",
   "index",
   "of",
   "the",
   "last",
   "token",
   "that",
   "is",
   "part",
   "of",
   "the",
   "annotation",
   "at",
   "the",
   "given",
   "index",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getAnnotationEnd",
   "(",
   "$",
   "index",
   ")",
   "{",
   "$",
   "currentIndex",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_OPEN_PARENTHESIS",
   ")",
   ")",
   "{",
   "$",
   "currentIndex",
   "=",
   "$",
   "index",
   "+",
   "2",
   ";",
   "}",
   "elseif",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "3",
   "]",
   ")",
   "&&",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_NONE",
   ")",
   "&&",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "3",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_OPEN_PARENTHESIS",
   ")",
   "&&",
   "Preg",
   "::",
   "match",
   "(",
   "'/^(\\R\\s*\\*\\s*)*\\s*$/'",
   ",",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "currentIndex",
   "=",
   "$",
   "index",
   "+",
   "3",
   ";",
   "}",
   "}",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "currentIndex",
   ")",
   "{",
   "$",
   "level",
   "=",
   "0",
   ";",
   "for",
   "(",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "this",
   ")",
   ";",
   "$",
   "currentIndex",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "currentIndex",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "[",
   "$",
   "currentIndex",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_OPEN_PARENTHESIS",
   ")",
   ")",
   "{",
   "++",
   "$",
   "level",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "[",
   "$",
   "currentIndex",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_CLOSE_PARENTHESIS",
   ")",
   ")",
   "{",
   "--",
   "$",
   "level",
   ";",
   "}",
   "if",
   "(",
   "0",
   "===",
   "$",
   "level",
   ")",
   "{",
   "return",
   "$",
   "currentIndex",
   ";",
   "}",
   "}",
   "return",
   "null",
   ";",
   "}",
   "return",
   "$",
   "index",
   "+",
   "1",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-95",
  "nl_tokens": [
   "Gets",
   "the",
   "amount",
   "of",
   "remaining",
   "extra",
   "time"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getRemainingExtraTime",
   "(",
   "$",
   "tags",
   "=",
   "null",
   ",",
   "$",
   "maxTime",
   "=",
   "0",
   ",",
   "$",
   "target",
   "=",
   "TimePoint",
   "::",
   "TARGET_SERVER",
   ")",
   "{",
   "return",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "this",
   "->",
   "getExtraTime",
   "(",
   "$",
   "maxTime",
   ")",
   "-",
   "$",
   "this",
   "->",
   "getConsumedExtraTime",
   "(",
   "$",
   "tags",
   ",",
   "$",
   "maxTime",
   ",",
   "$",
   "target",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-96",
  "nl_tokens": [
   "Build",
   "the",
   "Escher",
   "object",
   "corresponding",
   "to",
   "the",
   "MSODRAWINGGROUP",
   "record",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "buildWorkbookEscher",
   "(",
   ")",
   "{",
   "$",
   "escher",
   "=",
   "null",
   ";",
   "// any drawings in this workbook?",
   "$",
   "found",
   "=",
   "false",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "spreadsheet",
   "->",
   "getAllSheets",
   "(",
   ")",
   "as",
   "$",
   "sheet",
   ")",
   "{",
   "if",
   "(",
   "count",
   "(",
   "$",
   "sheet",
   "->",
   "getDrawingCollection",
   "(",
   ")",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "found",
   "=",
   "true",
   ";",
   "break",
   ";",
   "}",
   "}",
   "// nothing to do if there are no drawings",
   "if",
   "(",
   "!",
   "$",
   "found",
   ")",
   "{",
   "return",
   ";",
   "}",
   "// if we reach here, then there are drawings in the workbook",
   "$",
   "escher",
   "=",
   "new",
   "Escher",
   "(",
   ")",
   ";",
   "// dggContainer",
   "$",
   "dggContainer",
   "=",
   "new",
   "DggContainer",
   "(",
   ")",
   ";",
   "$",
   "escher",
   "->",
   "setDggContainer",
   "(",
   "$",
   "dggContainer",
   ")",
   ";",
   "// set IDCLs (identifier clusters)",
   "$",
   "dggContainer",
   "->",
   "setIDCLs",
   "(",
   "$",
   "this",
   "->",
   "IDCLs",
   ")",
   ";",
   "// this loop is for determining maximum shape identifier of all drawing",
   "$",
   "spIdMax",
   "=",
   "0",
   ";",
   "$",
   "totalCountShapes",
   "=",
   "0",
   ";",
   "$",
   "countDrawings",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "spreadsheet",
   "->",
   "getAllsheets",
   "(",
   ")",
   "as",
   "$",
   "sheet",
   ")",
   "{",
   "$",
   "sheetCountShapes",
   "=",
   "0",
   ";",
   "// count number of shapes (minus group shape), in sheet",
   "if",
   "(",
   "count",
   "(",
   "$",
   "sheet",
   "->",
   "getDrawingCollection",
   "(",
   ")",
   ")",
   ">",
   "0",
   ")",
   "{",
   "++",
   "$",
   "countDrawings",
   ";",
   "foreach",
   "(",
   "$",
   "sheet",
   "->",
   "getDrawingCollection",
   "(",
   ")",
   "as",
   "$",
   "drawing",
   ")",
   "{",
   "++",
   "$",
   "sheetCountShapes",
   ";",
   "++",
   "$",
   "totalCountShapes",
   ";",
   "$",
   "spId",
   "=",
   "$",
   "sheetCountShapes",
   "|",
   "(",
   "$",
   "this",
   "->",
   "spreadsheet",
   "->",
   "getIndex",
   "(",
   "$",
   "sheet",
   ")",
   "+",
   "1",
   ")",
   "<<",
   "10",
   ";",
   "$",
   "spIdMax",
   "=",
   "<mask>",
   "(",
   "$",
   "spId",
   ",",
   "$",
   "spIdMax",
   ")",
   ";",
   "}",
   "}",
   "}",
   "$",
   "dggContainer",
   "->",
   "setSpIdMax",
   "(",
   "$",
   "spIdMax",
   "+",
   "1",
   ")",
   ";",
   "$",
   "dggContainer",
   "->",
   "setCDgSaved",
   "(",
   "$",
   "countDrawings",
   ")",
   ";",
   "$",
   "dggContainer",
   "->",
   "setCSpSaved",
   "(",
   "$",
   "totalCountShapes",
   "+",
   "$",
   "countDrawings",
   ")",
   ";",
   "// total number of shapes incl. one group shapes per drawing",
   "// bstoreContainer",
   "$",
   "bstoreContainer",
   "=",
   "new",
   "BstoreContainer",
   "(",
   ")",
   ";",
   "$",
   "dggContainer",
   "->",
   "setBstoreContainer",
   "(",
   "$",
   "bstoreContainer",
   ")",
   ";",
   "// the BSE's (all the images)",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "spreadsheet",
   "->",
   "getAllsheets",
   "(",
   ")",
   "as",
   "$",
   "sheet",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "sheet",
   "->",
   "getDrawingCollection",
   "(",
   ")",
   "as",
   "$",
   "drawing",
   ")",
   "{",
   "if",
   "(",
   "!",
   "extension_loaded",
   "(",
   "'gd'",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "RuntimeException",
   "(",
   "'Saving images in xls requires gd extension'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "drawing",
   "instanceof",
   "Drawing",
   ")",
   "{",
   "$",
   "filename",
   "=",
   "$",
   "drawing",
   "->",
   "getPath",
   "(",
   ")",
   ";",
   "list",
   "(",
   "$",
   "imagesx",
   ",",
   "$",
   "imagesy",
   ",",
   "$",
   "imageFormat",
   ")",
   "=",
   "getimagesize",
   "(",
   "$",
   "filename",
   ")",
   ";",
   "switch",
   "(",
   "$",
   "imageFormat",
   ")",
   "{",
   "case",
   "1",
   ":",
   "// GIF, not supported by BIFF8, we convert to PNG",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_PNG",
   ";",
   "ob_start",
   "(",
   ")",
   ";",
   "imagepng",
   "(",
   "imagecreatefromgif",
   "(",
   "$",
   "filename",
   ")",
   ")",
   ";",
   "$",
   "blipData",
   "=",
   "ob_get_contents",
   "(",
   ")",
   ";",
   "ob_end_clean",
   "(",
   ")",
   ";",
   "break",
   ";",
   "case",
   "2",
   ":",
   "// JPEG",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_JPEG",
   ";",
   "$",
   "blipData",
   "=",
   "file_get_contents",
   "(",
   "$",
   "filename",
   ")",
   ";",
   "break",
   ";",
   "case",
   "3",
   ":",
   "// PNG",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_PNG",
   ";",
   "$",
   "blipData",
   "=",
   "file_get_contents",
   "(",
   "$",
   "filename",
   ")",
   ";",
   "break",
   ";",
   "case",
   "6",
   ":",
   "// Windows DIB (BMP), we convert to PNG",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_PNG",
   ";",
   "ob_start",
   "(",
   ")",
   ";",
   "imagepng",
   "(",
   "SharedDrawing",
   "::",
   "imagecreatefrombmp",
   "(",
   "$",
   "filename",
   ")",
   ")",
   ";",
   "$",
   "blipData",
   "=",
   "ob_get_contents",
   "(",
   ")",
   ";",
   "ob_end_clean",
   "(",
   ")",
   ";",
   "break",
   ";",
   "default",
   ":",
   "continue",
   "2",
   ";",
   "}",
   "$",
   "blip",
   "=",
   "new",
   "Blip",
   "(",
   ")",
   ";",
   "$",
   "blip",
   "->",
   "setData",
   "(",
   "$",
   "blipData",
   ")",
   ";",
   "$",
   "BSE",
   "=",
   "new",
   "BSE",
   "(",
   ")",
   ";",
   "$",
   "BSE",
   "->",
   "setBlipType",
   "(",
   "$",
   "blipType",
   ")",
   ";",
   "$",
   "BSE",
   "->",
   "setBlip",
   "(",
   "$",
   "blip",
   ")",
   ";",
   "$",
   "bstoreContainer",
   "->",
   "addBSE",
   "(",
   "$",
   "BSE",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "drawing",
   "instanceof",
   "MemoryDrawing",
   ")",
   "{",
   "switch",
   "(",
   "$",
   "drawing",
   "->",
   "getRenderingFunction",
   "(",
   ")",
   ")",
   "{",
   "case",
   "MemoryDrawing",
   "::",
   "RENDERING_JPEG",
   ":",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_JPEG",
   ";",
   "$",
   "renderingFunction",
   "=",
   "'imagejpeg'",
   ";",
   "break",
   ";",
   "case",
   "MemoryDrawing",
   "::",
   "RENDERING_GIF",
   ":",
   "case",
   "MemoryDrawing",
   "::",
   "RENDERING_PNG",
   ":",
   "case",
   "MemoryDrawing",
   "::",
   "RENDERING_DEFAULT",
   ":",
   "$",
   "blipType",
   "=",
   "BSE",
   "::",
   "BLIPTYPE_PNG",
   ";",
   "$",
   "renderingFunction",
   "=",
   "'imagepng'",
   ";",
   "break",
   ";",
   "}",
   "ob_start",
   "(",
   ")",
   ";",
   "call_user_func",
   "(",
   "$",
   "renderingFunction",
   ",",
   "$",
   "drawing",
   "->",
   "getImageResource",
   "(",
   ")",
   ")",
   ";",
   "$",
   "blipData",
   "=",
   "ob_get_contents",
   "(",
   ")",
   ";",
   "ob_end_clean",
   "(",
   ")",
   ";",
   "$",
   "blip",
   "=",
   "new",
   "Blip",
   "(",
   ")",
   ";",
   "$",
   "blip",
   "->",
   "setData",
   "(",
   "$",
   "blipData",
   ")",
   ";",
   "$",
   "BSE",
   "=",
   "new",
   "BSE",
   "(",
   ")",
   ";",
   "$",
   "BSE",
   "->",
   "setBlipType",
   "(",
   "$",
   "blipType",
   ")",
   ";",
   "$",
   "BSE",
   "->",
   "setBlip",
   "(",
   "$",
   "blip",
   ")",
   ";",
   "$",
   "bstoreContainer",
   "->",
   "addBSE",
   "(",
   "$",
   "BSE",
   ")",
   ";",
   "}",
   "}",
   "}",
   "// Set the Escher object",
   "$",
   "this",
   "->",
   "writerWorkbook",
   "->",
   "setEscher",
   "(",
   "$",
   "escher",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-97",
  "nl_tokens": [
   "Resolves",
   "the",
   "assignments",
   "update",
   "s",
   "delta",
   "quantity",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "resolveSoldDeltaQuantity",
   "(",
   "SaleItemInterface",
   "$",
   "item",
   ")",
   "{",
   "$",
   "old",
   "=",
   "$",
   "new",
   "=",
   "$",
   "item",
   "->",
   "getQuantity",
   "(",
   ")",
   ";",
   "// Own item quantity changes",
   "if",
   "(",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "isChanged",
   "(",
   "$",
   "item",
   ",",
   "'quantity'",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "old",
   ",",
   "$",
   "new",
   ")",
   "=",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "getChangeSet",
   "(",
   "$",
   "item",
   ",",
   "'quantity'",
   ")",
   ";",
   "}",
   "// Parent items quantity changes",
   "$",
   "parent",
   "=",
   "$",
   "item",
   ";",
   "while",
   "(",
   "null",
   "!==",
   "$",
   "parent",
   "=",
   "$",
   "parent",
   "->",
   "getParent",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "isChanged",
   "(",
   "$",
   "parent",
   ",",
   "'quantity'",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "parentOld",
   ",",
   "$",
   "parentNew",
   ")",
   "=",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "getChangeSet",
   "(",
   "$",
   "parent",
   ",",
   "'quantity'",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "parentOld",
   "=",
   "$",
   "parentNew",
   "=",
   "$",
   "parent",
   "->",
   "getQuantity",
   "(",
   ")",
   ";",
   "}",
   "$",
   "old",
   "*=",
   "$",
   "parentOld",
   ";",
   "$",
   "new",
   "*=",
   "$",
   "parentNew",
   ";",
   "}",
   "// Sale released change",
   "$",
   "sale",
   "=",
   "$",
   "item",
   "->",
   "getSale",
   "(",
   ")",
   ";",
   "$",
   "shippedOld",
   "=",
   "$",
   "shippedNew",
   "=",
   "0",
   ";",
   "$",
   "f",
   "=",
   "$",
   "t",
   "=",
   "false",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "isChanged",
   "(",
   "$",
   "sale",
   ",",
   "'released'",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "f",
   ",",
   "$",
   "t",
   ")",
   "=",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "getChangeSet",
   "(",
   "$",
   "sale",
   ",",
   "'released'",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "item",
   "->",
   "getSale",
   "(",
   ")",
   "->",
   "isReleased",
   "(",
   ")",
   ")",
   "{",
   "$",
   "f",
   "=",
   "$",
   "t",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "f",
   "||",
   "$",
   "t",
   ")",
   "{",
   "/** @var StockAssignmentsInterface $item */",
   "foreach",
   "(",
   "$",
   "item",
   "->",
   "getStockAssignments",
   "(",
   ")",
   "as",
   "$",
   "assignment",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "isChanged",
   "(",
   "$",
   "assignment",
   ",",
   "'shippedQuantity'",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "o",
   ",",
   "$",
   "n",
   ")",
   "=",
   "$",
   "this",
   "->",
   "persistenceHelper",
   "->",
   "getChangeSet",
   "(",
   "$",
   "assignment",
   ",",
   "'shippedQuantity'",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "o",
   "=",
   "$",
   "n",
   "=",
   "$",
   "assignment",
   "->",
   "getShippedQuantity",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "f",
   ")",
   "{",
   "$",
   "shippedOld",
   "+=",
   "$",
   "o",
   ";",
   "}",
   "if",
   "(",
   "$",
   "t",
   ")",
   "{",
   "$",
   "shippedNew",
   "+=",
   "$",
   "n",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "f",
   ")",
   "{",
   "$",
   "old",
   "=",
   "<mask>",
   "(",
   "$",
   "old",
   ",",
   "$",
   "shippedOld",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "t",
   ")",
   "{",
   "$",
   "new",
   "=",
   "min",
   "(",
   "$",
   "new",
   ",",
   "$",
   "shippedNew",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "new",
   "-",
   "$",
   "old",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-98",
  "nl_tokens": [
   "Generates",
   "the",
   "full",
   "URL",
   "for",
   "a",
   "certain",
   "page",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "url",
   "(",
   "$",
   "page",
   "=",
   "1",
   ")",
   "{",
   "// Clean the page number",
   "$",
   "page",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "page",
   ")",
   ";",
   "// No page number in URLs to first page",
   "if",
   "(",
   "$",
   "page",
   "===",
   "1",
   "AND",
   "!",
   "$",
   "this",
   "->",
   "first_page_in_url",
   ")",
   "{",
   "$",
   "page",
   "=",
   "NULL",
   ";",
   "}",
   "switch",
   "(",
   "$",
   "this",
   "->",
   "current_page_source",
   ")",
   "{",
   "case",
   "'query_string'",
   ":",
   "case",
   "'mixed'",
   ":",
   "return",
   "URL",
   "::",
   "site",
   "(",
   "$",
   "this",
   "->",
   "request",
   "->",
   "uri",
   "(",
   ")",
   ".",
   "$",
   "this",
   "->",
   "query",
   "(",
   "[",
   "$",
   "this",
   "->",
   "current_page_source_key",
   "=>",
   "$",
   "page",
   "]",
   ")",
   ")",
   ";",
   "case",
   "'route'",
   ":",
   "return",
   "URL",
   "::",
   "site",
   "(",
   "$",
   "this",
   "->",
   "route",
   "->",
   "url",
   "(",
   "array_merge",
   "(",
   "$",
   "this",
   "->",
   "route_params",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "current_page_source_key",
   "=>",
   "$",
   "page",
   ")",
   ")",
   ")",
   ".",
   "$",
   "this",
   "->",
   "query",
   "(",
   ")",
   ")",
   ";",
   "}",
   "return",
   "'#'",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-99",
  "nl_tokens": [
   "@param",
   "string",
   "$str"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "fromString",
   "(",
   "$",
   "str",
   ")",
   "{",
   "$",
   "src",
   "=",
   "CDataReader",
   "::",
   "fromString",
   "(",
   "$",
   "str",
   ")",
   ";",
   "$",
   "inverted",
   "=",
   "$",
   "src",
   "->",
   "eat",
   "(",
   "'@'",
   ")",
   ";",
   "$",
   "num",
   "=",
   "$",
   "src",
   "->",
   "eatCSpan",
   "(",
   "':'",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "num",
   ")",
   "||",
   "$",
   "num",
   "==",
   "'~'",
   ")",
   "{",
   "$",
   "num",
   "=",
   "null",
   ";",
   "}",
   "else",
   "{",
   "$",
   "num",
   "=",
   "floatval",
   "(",
   "$",
   "num",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "src",
   "->",
   "eat",
   "(",
   "':'",
   ")",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "src",
   "->",
   "eatToFullConsumption",
   "(",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "max",
   ")",
   ")",
   "{",
   "$",
   "max",
   "=",
   "null",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "=",
   "floatval",
   "(",
   "$",
   "max",
   ")",
   ";",
   "}",
   "$",
   "min",
   "=",
   "$",
   "num",
   ";",
   "}",
   "else",
   "{",
   "$",
   "min",
   "=",
   "0",
   ";",
   "$",
   "max",
   "=",
   "$",
   "num",
   ";",
   "}",
   "return",
   "new",
   "static",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "inverted",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-100",
  "nl_tokens": [
   "Return",
   "a",
   "relative",
   "filepath",
   "to",
   "path",
   "either",
   "from",
   "the",
   "current",
   "directory",
   "or",
   "from",
   "an",
   "optional",
   "start",
   "directory",
   ".",
   "Both",
   "paths",
   "must",
   "be",
   "absolute",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "getRelativePath",
   "(",
   "$",
   "path",
   ",",
   "$",
   "start",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "start",
   "===",
   "null",
   ")",
   "{",
   "// @codeCoverageIgnoreStart",
   "$",
   "start",
   "=",
   "getcwd",
   "(",
   ")",
   ";",
   "}",
   "// @codeCoverageIgnoreEnd",
   "if",
   "(",
   "substr",
   "(",
   "$",
   "path",
   ",",
   "0",
   ",",
   "1",
   ")",
   "!==",
   "'/'",
   "||",
   "substr",
   "(",
   "$",
   "start",
   ",",
   "0",
   ",",
   "1",
   ")",
   "!==",
   "'/'",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "pathParts",
   "=",
   "self",
   "::",
   "splitPath",
   "(",
   "$",
   "path",
   ")",
   ";",
   "$",
   "countPathParts",
   "=",
   "count",
   "(",
   "$",
   "pathParts",
   ")",
   ";",
   "$",
   "startParts",
   "=",
   "self",
   "::",
   "splitPath",
   "(",
   "$",
   "start",
   ")",
   ";",
   "$",
   "countStartParts",
   "=",
   "count",
   "(",
   "$",
   "startParts",
   ")",
   ";",
   "$",
   "commonLength",
   "=",
   "<mask>",
   "(",
   "$",
   "countPathParts",
   ",",
   "$",
   "countStartParts",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "commonLength",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "startParts",
   "[",
   "$",
   "i",
   "]",
   "!==",
   "$",
   "pathParts",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "$",
   "relList",
   "=",
   "(",
   "$",
   "countStartParts",
   ">",
   "$",
   "i",
   ")",
   "?",
   "array_fill",
   "(",
   "0",
   ",",
   "$",
   "countStartParts",
   "-",
   "$",
   "i",
   ",",
   "'..'",
   ")",
   ":",
   "[",
   "]",
   ";",
   "$",
   "relList",
   "=",
   "array_merge",
   "(",
   "$",
   "relList",
   ",",
   "array_slice",
   "(",
   "$",
   "pathParts",
   ",",
   "$",
   "i",
   ")",
   ")",
   ";",
   "return",
   "implode",
   "(",
   "'/'",
   ",",
   "$",
   "relList",
   ")",
   "?",
   ":",
   "'.'",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-101",
  "nl_tokens": [
   "Alias",
   "inverse",
   "avec",
   "la",
   "porte",
   "logique",
   "OR",
   "de",
   "la",
   "fonction",
   "between",
   "()",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "orNotBetween",
   "(",
   "$",
   "column",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "between",
   "(",
   "$",
   "column",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "'or'",
   ",",
   "true",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-102",
  "nl_tokens": [
   "Finds",
   "or",
   "create",
   "the",
   "invoice",
   "line",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "findOrCreateGoodLine",
   "(",
   "Invoice",
   "\\",
   "InvoiceInterface",
   "$",
   "invoice",
   ",",
   "Common",
   "\\",
   "SaleItemInterface",
   "$",
   "item",
   ",",
   "$",
   "available",
   ",",
   "$",
   "expected",
   "=",
   "null",
   ")",
   "{",
   "$",
   "line",
   "=",
   "null",
   ";",
   "if",
   "(",
   "0",
   ">=",
   "$",
   "available",
   ")",
   "{",
   "return",
   "$",
   "line",
   ";",
   "}",
   "// Existing line lookup",
   "foreach",
   "(",
   "$",
   "invoice",
   "->",
   "getLinesByType",
   "(",
   "Document",
   "\\",
   "DocumentLineTypes",
   "::",
   "TYPE_GOOD",
   ")",
   "as",
   "$",
   "invoiceLine",
   ")",
   "{",
   "if",
   "(",
   "$",
   "invoiceLine",
   "->",
   "getSaleItem",
   "(",
   ")",
   "===",
   "$",
   "item",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "invoiceLine",
   ";",
   "}",
   "}",
   "// Not found, create it",
   "if",
   "(",
   "null",
   "===",
   "$",
   "line",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "this",
   "->",
   "createLine",
   "(",
   "$",
   "invoice",
   ")",
   ";",
   "$",
   "line",
   "->",
   "setInvoice",
   "(",
   "$",
   "invoice",
   ")",
   "->",
   "setType",
   "(",
   "Document",
   "\\",
   "DocumentLineTypes",
   "::",
   "TYPE_GOOD",
   ")",
   "->",
   "setSaleItem",
   "(",
   "$",
   "item",
   ")",
   "->",
   "setDesignation",
   "(",
   "$",
   "item",
   "->",
   "getDesignation",
   "(",
   ")",
   ")",
   "->",
   "setDescription",
   "(",
   "$",
   "item",
   "->",
   "getDescription",
   "(",
   ")",
   ")",
   "->",
   "setReference",
   "(",
   "$",
   "item",
   "->",
   "getReference",
   "(",
   ")",
   ")",
   ";",
   "}",
   "// Set available and expected quantity",
   "$",
   "line",
   "->",
   "setAvailable",
   "(",
   "$",
   "available",
   ")",
   ";",
   "$",
   "line",
   "->",
   "setExpected",
   "(",
   "$",
   "expected",
   ")",
   ";",
   "if",
   "(",
   "Invoice",
   "\\",
   "InvoiceTypes",
   "::",
   "isInvoice",
   "(",
   "$",
   "invoice",
   ")",
   "&&",
   "null",
   "===",
   "$",
   "invoice",
   "->",
   "getId",
   "(",
   ")",
   ")",
   "{",
   "// Set default quantity for new non return shipment items",
   "$",
   "line",
   "->",
   "setQuantity",
   "(",
   "<mask>",
   "(",
   "$",
   "expected",
   ",",
   "$",
   "available",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "line",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-103",
  "nl_tokens": [
   "Returns",
   "the",
   "least",
   "of",
   "the",
   "specified",
   "values",
   "according",
   "to",
   "this",
   "ordering",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "Traversable",
   "$",
   "traversable",
   ")",
   "{",
   "$",
   "array",
   "=",
   "iterator_to_array",
   "(",
   "$",
   "traversable",
   ",",
   "false",
   ")",
   ";",
   "Arrays",
   "::",
   "sort",
   "(",
   "$",
   "array",
   ",",
   "$",
   "this",
   ")",
   ";",
   "return",
   "Preconditions",
   "::",
   "checkElementExists",
   "(",
   "$",
   "array",
   ",",
   "0",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-104",
  "nl_tokens": [
   "Add",
   "comments",
   "to",
   "a",
   "template"
  ],
  "pl_tokens": [
   "public",
   "function",
   "addCommentsToTemplate",
   "(",
   "FrontendTemplate",
   "$",
   "objTemplate",
   ",",
   "\\",
   "stdClass",
   "$",
   "objConfig",
   ",",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ",",
   "$",
   "varNotifies",
   ")",
   "{",
   "/** @var PageModel $objPage */",
   "global",
   "$",
   "objPage",
   ";",
   "$",
   "limit",
   "=",
   "0",
   ";",
   "$",
   "offset",
   "=",
   "0",
   ";",
   "$",
   "total",
   "=",
   "0",
   ";",
   "$",
   "gtotal",
   "=",
   "0",
   ";",
   "$",
   "arrComments",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "objTemplate",
   "->",
   "comments",
   "=",
   "array",
   "(",
   ")",
   ";",
   "// see #4064",
   "// Tag the response",
   "if",
   "(",
   "System",
   "::",
   "getContainer",
   "(",
   ")",
   "->",
   "has",
   "(",
   "'fos_http_cache.http.symfony_response_tagger'",
   ")",
   ")",
   "{",
   "/** @var ResponseTagger $responseTagger */",
   "$",
   "responseTagger",
   "=",
   "System",
   "::",
   "getContainer",
   "(",
   ")",
   "->",
   "get",
   "(",
   "'fos_http_cache.http.symfony_response_tagger'",
   ")",
   ";",
   "$",
   "responseTagger",
   "->",
   "addTags",
   "(",
   "array",
   "(",
   "sprintf",
   "(",
   "'contao.comments.%s.%s'",
   ",",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ")",
   ")",
   ")",
   ";",
   "}",
   "// Pagination",
   "if",
   "(",
   "$",
   "objConfig",
   "->",
   "perPage",
   ">",
   "0",
   ")",
   "{",
   "// Get the total number of comments",
   "$",
   "intTotal",
   "=",
   "CommentsModel",
   "::",
   "countPublishedBySourceAndParent",
   "(",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ")",
   ";",
   "$",
   "total",
   "=",
   "$",
   "gtotal",
   "=",
   "$",
   "intTotal",
   ";",
   "// Calculate the key (e.g. tl_form_field becomes page_cff12)",
   "$",
   "key",
   "=",
   "''",
   ";",
   "$",
   "chunks",
   "=",
   "explode",
   "(",
   "'_'",
   ",",
   "substr",
   "(",
   "$",
   "strSource",
   ",",
   "(",
   "(",
   "strncmp",
   "(",
   "$",
   "strSource",
   ",",
   "'tl_'",
   ",",
   "3",
   ")",
   "===",
   "0",
   ")",
   "?",
   "3",
   ":",
   "0",
   ")",
   ")",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "chunks",
   "as",
   "$",
   "chunk",
   ")",
   "{",
   "$",
   "key",
   ".=",
   "substr",
   "(",
   "$",
   "chunk",
   ",",
   "0",
   ",",
   "1",
   ")",
   ";",
   "}",
   "// Get the current page",
   "$",
   "id",
   "=",
   "'page_c'",
   ".",
   "$",
   "key",
   ".",
   "$",
   "intParent",
   ";",
   "// see #4141",
   "$",
   "page",
   "=",
   "Input",
   "::",
   "get",
   "(",
   "$",
   "id",
   ")",
   "??",
   "1",
   ";",
   "// Do not index or cache the page if the page number is outside the range",
   "if",
   "(",
   "$",
   "page",
   "<",
   "1",
   "||",
   "$",
   "page",
   ">",
   "<mask>",
   "(",
   "ceil",
   "(",
   "$",
   "total",
   "/",
   "$",
   "objConfig",
   "->",
   "perPage",
   ")",
   ",",
   "1",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "PageNotFoundException",
   "(",
   "'Page not found: '",
   ".",
   "Environment",
   "::",
   "get",
   "(",
   "'uri'",
   ")",
   ")",
   ";",
   "}",
   "// Set limit and offset",
   "$",
   "limit",
   "=",
   "$",
   "objConfig",
   "->",
   "perPage",
   ";",
   "$",
   "offset",
   "=",
   "(",
   "$",
   "page",
   "-",
   "1",
   ")",
   "*",
   "$",
   "objConfig",
   "->",
   "perPage",
   ";",
   "// Initialize the pagination menu",
   "$",
   "objPagination",
   "=",
   "new",
   "Pagination",
   "(",
   "$",
   "total",
   ",",
   "$",
   "objConfig",
   "->",
   "perPage",
   ",",
   "Config",
   "::",
   "get",
   "(",
   "'maxPaginationLinks'",
   ")",
   ",",
   "$",
   "id",
   ")",
   ";",
   "$",
   "objTemplate",
   "->",
   "pagination",
   "=",
   "$",
   "objPagination",
   "->",
   "generate",
   "(",
   "\"\\n  \"",
   ")",
   ";",
   "}",
   "$",
   "objTemplate",
   "->",
   "allowComments",
   "=",
   "true",
   ";",
   "// Get all published comments",
   "if",
   "(",
   "$",
   "limit",
   ")",
   "{",
   "$",
   "objComments",
   "=",
   "CommentsModel",
   "::",
   "findPublishedBySourceAndParent",
   "(",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ",",
   "(",
   "$",
   "objConfig",
   "->",
   "order",
   "==",
   "'descending'",
   ")",
   ",",
   "$",
   "limit",
   ",",
   "$",
   "offset",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "objComments",
   "=",
   "CommentsModel",
   "::",
   "findPublishedBySourceAndParent",
   "(",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ",",
   "(",
   "$",
   "objConfig",
   "->",
   "order",
   "==",
   "'descending'",
   ")",
   ")",
   ";",
   "}",
   "// Parse the comments",
   "if",
   "(",
   "$",
   "objComments",
   "!==",
   "null",
   "&&",
   "(",
   "$",
   "total",
   "=",
   "$",
   "objComments",
   "->",
   "count",
   "(",
   ")",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "count",
   "=",
   "0",
   ";",
   "if",
   "(",
   "$",
   "objConfig",
   "->",
   "template",
   "==",
   "''",
   ")",
   "{",
   "$",
   "objConfig",
   "->",
   "template",
   "=",
   "'com_default'",
   ";",
   "}",
   "$",
   "objPartial",
   "=",
   "new",
   "FrontendTemplate",
   "(",
   "$",
   "objConfig",
   "->",
   "template",
   ")",
   ";",
   "while",
   "(",
   "$",
   "objComments",
   "->",
   "next",
   "(",
   ")",
   ")",
   "{",
   "$",
   "objPartial",
   "->",
   "setData",
   "(",
   "$",
   "objComments",
   "->",
   "row",
   "(",
   ")",
   ")",
   ";",
   "// Clean the RTE output",
   "$",
   "objPartial",
   "->",
   "comment",
   "=",
   "StringUtil",
   "::",
   "toHtml5",
   "(",
   "$",
   "objComments",
   "->",
   "comment",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "comment",
   "=",
   "trim",
   "(",
   "str_replace",
   "(",
   "array",
   "(",
   "'{{'",
   ",",
   "'}}'",
   ")",
   ",",
   "array",
   "(",
   "'&#123;&#123;'",
   ",",
   "'&#125;&#125;'",
   ")",
   ",",
   "$",
   "objPartial",
   "->",
   "comment",
   ")",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "datim",
   "=",
   "Date",
   "::",
   "parse",
   "(",
   "$",
   "objPage",
   "->",
   "datimFormat",
   ",",
   "$",
   "objComments",
   "->",
   "date",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "date",
   "=",
   "Date",
   "::",
   "parse",
   "(",
   "$",
   "objPage",
   "->",
   "dateFormat",
   ",",
   "$",
   "objComments",
   "->",
   "date",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "class",
   "=",
   "(",
   "(",
   "$",
   "count",
   "<",
   "1",
   ")",
   "?",
   "' first'",
   ":",
   "''",
   ")",
   ".",
   "(",
   "(",
   "$",
   "count",
   ">=",
   "(",
   "$",
   "total",
   "-",
   "1",
   ")",
   ")",
   "?",
   "' last'",
   ":",
   "''",
   ")",
   ".",
   "(",
   "(",
   "$",
   "count",
   "%",
   "2",
   "==",
   "0",
   ")",
   "?",
   "' even'",
   ":",
   "' odd'",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "by",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'com_by'",
   "]",
   ";",
   "$",
   "objPartial",
   "->",
   "id",
   "=",
   "'c'",
   ".",
   "$",
   "objComments",
   "->",
   "id",
   ";",
   "$",
   "objPartial",
   "->",
   "timestamp",
   "=",
   "$",
   "objComments",
   "->",
   "date",
   ";",
   "$",
   "objPartial",
   "->",
   "datetime",
   "=",
   "date",
   "(",
   "'Y-m-d\\TH:i:sP'",
   ",",
   "$",
   "objComments",
   "->",
   "date",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "addReply",
   "=",
   "false",
   ";",
   "// Reply",
   "if",
   "(",
   "$",
   "objComments",
   "->",
   "addReply",
   "&&",
   "$",
   "objComments",
   "->",
   "reply",
   "!=",
   "''",
   ")",
   "{",
   "if",
   "(",
   "(",
   "$",
   "objAuthor",
   "=",
   "$",
   "objComments",
   "->",
   "getRelated",
   "(",
   "'author'",
   ")",
   ")",
   "instanceof",
   "UserModel",
   ")",
   "{",
   "$",
   "objPartial",
   "->",
   "addReply",
   "=",
   "true",
   ";",
   "$",
   "objPartial",
   "->",
   "rby",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'com_reply'",
   "]",
   ";",
   "$",
   "objPartial",
   "->",
   "reply",
   "=",
   "$",
   "this",
   "->",
   "replaceInsertTags",
   "(",
   "$",
   "objComments",
   "->",
   "reply",
   ")",
   ";",
   "$",
   "objPartial",
   "->",
   "author",
   "=",
   "$",
   "objAuthor",
   ";",
   "// Clean the RTE output",
   "$",
   "objPartial",
   "->",
   "reply",
   "=",
   "StringUtil",
   "::",
   "toHtml5",
   "(",
   "$",
   "objPartial",
   "->",
   "reply",
   ")",
   ";",
   "}",
   "}",
   "$",
   "arrComments",
   "[",
   "]",
   "=",
   "$",
   "objPartial",
   "->",
   "parse",
   "(",
   ")",
   ";",
   "++",
   "$",
   "count",
   ";",
   "}",
   "}",
   "$",
   "objTemplate",
   "->",
   "comments",
   "=",
   "$",
   "arrComments",
   ";",
   "$",
   "objTemplate",
   "->",
   "hlcText",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'comments'",
   "]",
   ";",
   "$",
   "objTemplate",
   "->",
   "addComment",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'addComment'",
   "]",
   ";",
   "$",
   "objTemplate",
   "->",
   "name",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'com_name'",
   "]",
   ";",
   "$",
   "objTemplate",
   "->",
   "email",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'com_email'",
   "]",
   ";",
   "$",
   "objTemplate",
   "->",
   "website",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'com_website'",
   "]",
   ";",
   "$",
   "objTemplate",
   "->",
   "commentsTotal",
   "=",
   "$",
   "limit",
   "?",
   "$",
   "gtotal",
   ":",
   "$",
   "total",
   ";",
   "// Add a form to create new comments",
   "$",
   "this",
   "->",
   "renderCommentForm",
   "(",
   "$",
   "objTemplate",
   ",",
   "$",
   "objConfig",
   ",",
   "$",
   "strSource",
   ",",
   "$",
   "intParent",
   ",",
   "$",
   "varNotifies",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-105",
  "nl_tokens": [
   "@inheritdoc"
  ],
  "pl_tokens": [
   "public",
   "function",
   "calculateShippableQuantity",
   "(",
   "Common",
   "\\",
   "SaleItemInterface",
   "$",
   "saleItem",
   ",",
   "Shipment",
   "\\",
   "ShipmentInterface",
   "$",
   "ignore",
   "=",
   "null",
   ")",
   "{",
   "// TODO Return zero if not shippable (?)",
   "// Quantity = Sold - Shipped - Returned (ignoring current)",
   "// TODO Packaging format",
   "$",
   "quantity",
   "=",
   "$",
   "saleItem",
   "->",
   "getTotalQuantity",
   "(",
   ")",
   ";",
   "$",
   "quantity",
   "-=",
   "$",
   "this",
   "->",
   "invoiceCalculator",
   "->",
   "calculateCreditedQuantity",
   "(",
   "$",
   "saleItem",
   ")",
   ";",
   "$",
   "quantity",
   "-=",
   "$",
   "this",
   "->",
   "calculateShippedQuantity",
   "(",
   "$",
   "saleItem",
   ",",
   "$",
   "ignore",
   ")",
   ";",
   "$",
   "quantity",
   "+=",
   "$",
   "this",
   "->",
   "calculateReturnedQuantity",
   "(",
   "$",
   "saleItem",
   ")",
   ";",
   "return",
   "<mask>",
   "(",
   "$",
   "quantity",
   ",",
   "0",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-106",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u6587\u5b57\u3092",
   "\u5bfe\u5fdc\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u306b\u5909\u63db\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "formatKey",
   "(",
   "Time",
   "$",
   "d",
   ",",
   "$",
   "key",
   ")",
   "{",
   "$",
   "year",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"year\"",
   ")",
   ";",
   "$",
   "month",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"month\"",
   ")",
   ";",
   "$",
   "date",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"date\"",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"hour\"",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"minute\"",
   ")",
   ";",
   "$",
   "sec",
   "=",
   "$",
   "d",
   "->",
   "get",
   "(",
   "\"second\"",
   ")",
   ";",
   "switch",
   "(",
   "$",
   "key",
   ")",
   "{",
   "case",
   "\"Y\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "year",
   ",",
   "4",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"m\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "month",
   ",",
   "2",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"n\"",
   ":",
   "return",
   "$",
   "month",
   ";",
   "case",
   "\"d\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "date",
   ",",
   "2",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"j\"",
   ":",
   "return",
   "$",
   "date",
   ";",
   "case",
   "\"H\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "hour",
   ",",
   "2",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"G\"",
   ":",
   "return",
   "$",
   "hour",
   ";",
   "case",
   "\"i\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "min",
   ",",
   "2",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"f\"",
   ":",
   "return",
   "$",
   "min",
   ";",
   "case",
   "\"s\"",
   ":",
   "return",
   "str_pad",
   "(",
   "$",
   "sec",
   ",",
   "2",
   ",",
   "\"0\"",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "case",
   "\"b\"",
   ":",
   "return",
   "$",
   "sec",
   ";",
   "case",
   "\"E\"",
   ":",
   "return",
   "$",
   "this",
   "->",
   "dayList",
   "[",
   "$",
   "d",
   "->",
   "getDay",
   "(",
   ")",
   "]",
   ";",
   "}",
   "// @codeCoverageIgnoreStart",
   "throw",
   "new",
   "\\",
   "Exception",
   "(",
   "\"Illegal pattern: \"",
   ".",
   "$",
   "key",
   ")",
   ";",
   "// @codeCoverageIgnoreEnd",
   "}"
  ]
 },
 {
  "idx": "maxmin-107",
  "nl_tokens": [
   "Get",
   "highest",
   "worksheet",
   "column",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getHighestColumn",
   "(",
   "$",
   "row",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "row",
   "==",
   "null",
   ")",
   "{",
   "$",
   "colRow",
   "=",
   "$",
   "this",
   "->",
   "getHighestRowAndColumn",
   "(",
   ")",
   ";",
   "return",
   "$",
   "colRow",
   "[",
   "'column'",
   "]",
   ";",
   "}",
   "$",
   "columnList",
   "=",
   "[",
   "1",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "getCoordinates",
   "(",
   ")",
   "as",
   "$",
   "coord",
   ")",
   "{",
   "sscanf",
   "(",
   "$",
   "coord",
   ",",
   "'%[A-Z]%d'",
   ",",
   "$",
   "c",
   ",",
   "$",
   "r",
   ")",
   ";",
   "if",
   "(",
   "$",
   "r",
   "!=",
   "$",
   "row",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "columnList",
   "[",
   "]",
   "=",
   "Coordinate",
   "::",
   "columnIndexFromString",
   "(",
   "$",
   "c",
   ")",
   ";",
   "}",
   "return",
   "Coordinate",
   "::",
   "stringFromColumnIndex",
   "(",
   "<mask>",
   "(",
   "$",
   "columnList",
   ")",
   "+",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-108",
  "nl_tokens": [
   "Verifica",
   "se",
   "o",
   "valor",
   "informado",
   "est\u00e1",
   "entre",
   "o",
   "intervalo",
   "definido",
   "para",
   "este",
   "tipo",
   "."
  ],
  "pl_tokens": [
   "protected",
   "static",
   "function",
   "validateRealValue",
   "(",
   "RealNumber",
   "$",
   "v",
   ")",
   ":",
   "bool",
   "{",
   "$",
   "<mask>",
   "=",
   "static",
   "::",
   "min",
   "(",
   ")",
   ";",
   "$",
   "max",
   "=",
   "static",
   "::",
   "max",
   "(",
   ")",
   ";",
   "return",
   "(",
   "(",
   "$",
   "min",
   "===",
   "null",
   "||",
   "$",
   "v",
   "->",
   "isGreaterOrEqualAs",
   "(",
   "static",
   "::",
   "min",
   "(",
   ")",
   ")",
   "===",
   "true",
   ")",
   "&&",
   "(",
   "$",
   "max",
   "===",
   "null",
   "||",
   "$",
   "v",
   "->",
   "isLessOrEqualAs",
   "(",
   "static",
   "::",
   "max",
   "(",
   ")",
   ")",
   "===",
   "true",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-109",
  "nl_tokens": [
   "Get",
   "GD",
   "text",
   "width",
   "in",
   "pixels",
   "for",
   "a",
   "string",
   "of",
   "text",
   "in",
   "a",
   "certain",
   "font",
   "at",
   "a",
   "certain",
   "rotation",
   "angle",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "getTextWidthPixelsExact",
   "(",
   "$",
   "text",
   ",",
   "\\",
   "PhpOffice",
   "\\",
   "PhpSpreadsheet",
   "\\",
   "Style",
   "\\",
   "Font",
   "$",
   "font",
   ",",
   "$",
   "rotation",
   "=",
   "0",
   ")",
   "{",
   "if",
   "(",
   "!",
   "function_exists",
   "(",
   "'imagettfbbox'",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "PhpSpreadsheetException",
   "(",
   "'GD library needs to be enabled'",
   ")",
   ";",
   "}",
   "// font size should really be supplied in pixels in GD2,",
   "// but since GD2 seems to assume 72dpi, pixels and points are the same",
   "$",
   "fontFile",
   "=",
   "self",
   "::",
   "getTrueTypeFontFileFromFont",
   "(",
   "$",
   "font",
   ")",
   ";",
   "$",
   "textBox",
   "=",
   "imagettfbbox",
   "(",
   "$",
   "font",
   "->",
   "getSize",
   "(",
   ")",
   ",",
   "$",
   "rotation",
   ",",
   "$",
   "fontFile",
   ",",
   "$",
   "text",
   ")",
   ";",
   "// Get corners positions",
   "$",
   "lowerLeftCornerX",
   "=",
   "$",
   "textBox",
   "[",
   "0",
   "]",
   ";",
   "$",
   "lowerRightCornerX",
   "=",
   "$",
   "textBox",
   "[",
   "2",
   "]",
   ";",
   "$",
   "upperRightCornerX",
   "=",
   "$",
   "textBox",
   "[",
   "4",
   "]",
   ";",
   "$",
   "upperLeftCornerX",
   "=",
   "$",
   "textBox",
   "[",
   "6",
   "]",
   ";",
   "// Consider the rotation when calculating the width",
   "$",
   "textWidth",
   "=",
   "<mask>",
   "(",
   "$",
   "lowerRightCornerX",
   "-",
   "$",
   "upperLeftCornerX",
   ",",
   "$",
   "upperRightCornerX",
   "-",
   "$",
   "lowerLeftCornerX",
   ")",
   ";",
   "return",
   "$",
   "textWidth",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-110",
  "nl_tokens": [
   "get",
   "an",
   "upload",
   "file"
  ],
  "pl_tokens": [
   "public",
   "function",
   "upload",
   "(",
   "string",
   "$",
   "sFile",
   ")",
   "{",
   "if",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'error'",
   "]",
   ">",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_sError",
   "=",
   "\"Error while the upload\"",
   ";",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'size'",
   "]",
   ">",
   "$",
   "this",
   "->",
   "_iMaxFile",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_sError",
   "=",
   "\"The file is too big\"",
   ";",
   "return",
   "false",
   ";",
   "}",
   "$",
   "sExtension",
   "=",
   "strtolower",
   "(",
   "substr",
   "(",
   "strrchr",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'name'",
   "]",
   ",",
   "'.'",
   ")",
   ",",
   "1",
   ")",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "this",
   "->",
   "_aAllowExtension",
   ")",
   ">",
   "0",
   "&&",
   "!",
   "in_array",
   "(",
   "$",
   "sExtension",
   ",",
   "$",
   "this",
   "->",
   "_aAllowExtension",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_sError",
   "=",
   "\"The extension is not good\"",
   ";",
   "return",
   "false",
   ";",
   "}",
   "$",
   "sPath",
   "=",
   "str_replace",
   "(",
   "'bundles'",
   ".",
   "DIRECTORY_SEPARATOR",
   ".",
   "'lib'",
   ",",
   "'data'",
   ".",
   "DIRECTORY_SEPARATOR",
   ".",
   "'upload'",
   ".",
   "DIRECTORY_SEPARATOR",
   ",",
   "__DIR__",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_sExtension",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "setExtension",
   "(",
   "$",
   "sExtension",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_sName",
   ")",
   "{",
   "$",
   "sName",
   "=",
   "$",
   "sPath",
   ".",
   "$",
   "this",
   "->",
   "_sName",
   ".",
   "'.'",
   ".",
   "$",
   "this",
   "->",
   "_sExtension",
   ";",
   "}",
   "else",
   "{",
   "$",
   "sName",
   "=",
   "$",
   "sPath",
   ".",
   "md5",
   "(",
   "uniqid",
   "(",
   "rand",
   "(",
   ")",
   ",",
   "true",
   ")",
   ")",
   ".",
   "'.'",
   ".",
   "$",
   "this",
   "->",
   "_sExtension",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_bProportion",
   "===",
   "true",
   "&&",
   "(",
   "$",
   "this",
   "->",
   "_iWidth",
   "||",
   "$",
   "this",
   "->",
   "_iHeight",
   ")",
   ")",
   "{",
   "$",
   "aImageSizes",
   "=",
   "getimagesize",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'tmp_name'",
   "]",
   ")",
   ";",
   "$",
   "fRatio",
   "=",
   "<mask>",
   "(",
   "$",
   "aImageSizes",
   "[",
   "0",
   "]",
   "/",
   "$",
   "this",
   "->",
   "_iWidth",
   ",",
   "$",
   "aImageSizes",
   "[",
   "1",
   "]",
   "/",
   "$",
   "this",
   "->",
   "_iHeight",
   ")",
   ";",
   "$",
   "iHeight",
   "=",
   "$",
   "aImageSizes",
   "[",
   "1",
   "]",
   "/",
   "$",
   "fRatio",
   ";",
   "$",
   "iWidth",
   "=",
   "$",
   "aImageSizes",
   "[",
   "0",
   "]",
   "/",
   "$",
   "fRatio",
   ";",
   "$",
   "fY",
   "=",
   "(",
   "$",
   "iHeight",
   "-",
   "$",
   "this",
   "->",
   "_iHeight",
   ")",
   "/",
   "2",
   "*",
   "$",
   "fRatio",
   ";",
   "$",
   "fX",
   "=",
   "(",
   "$",
   "iWidth",
   "-",
   "$",
   "this",
   "->",
   "_iWidth",
   ")",
   "/",
   "2",
   "*",
   "$",
   "fRatio",
   ";",
   "$",
   "rNewImage",
   "=",
   "imagecreatefromjpeg",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'tmp_name'",
   "]",
   ")",
   ";",
   "$",
   "rNewImgTrueColor",
   "=",
   "imagecreatetruecolor",
   "(",
   "$",
   "this",
   "->",
   "_iWidth",
   ",",
   "$",
   "this",
   "->",
   "_iHeight",
   ")",
   ";",
   "imagecopyresampled",
   "(",
   "$",
   "rNewImgTrueColor",
   ",",
   "$",
   "rNewImage",
   ",",
   "0",
   ",",
   "0",
   ",",
   "$",
   "fX",
   ",",
   "$",
   "fY",
   ",",
   "$",
   "this",
   "->",
   "_iWidth",
   ",",
   "$",
   "this",
   "->",
   "_iHeight",
   ",",
   "$",
   "iWidth",
   "*",
   "$",
   "fRatio",
   "-",
   "$",
   "fX",
   "*",
   "2",
   ",",
   "$",
   "iHeight",
   "*",
   "$",
   "fRatio",
   "-",
   "$",
   "fY",
   "*",
   "2",
   ")",
   ";",
   "imagejpeg",
   "(",
   "$",
   "rNewImgTrueColor",
   ",",
   "$",
   "sName",
   ",",
   "100",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "bResultat",
   "=",
   "move_uploaded_file",
   "(",
   "$",
   "_FILES",
   "[",
   "$",
   "sFile",
   "]",
   "[",
   "'tmp_name'",
   "]",
   ",",
   "$",
   "sName",
   ")",
   ";",
   "if",
   "(",
   "$",
   "bResultat",
   ")",
   "{",
   "return",
   "true",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-111",
  "nl_tokens": [
   "Writes",
   "HAL",
   "Logo"
  ],
  "pl_tokens": [
   "public",
   "function",
   "sayHello",
   "(",
   ")",
   "{",
   "$",
   "text",
   "=",
   "$",
   "this",
   "->",
   "getHALLogo",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "showText",
   ")",
   "{",
   "$",
   "text",
   ".=",
   "$",
   "this",
   "->",
   "getHelloDave",
   "(",
   ")",
   ";",
   "}",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "text",
   ")",
   ";",
   "$",
   "spaces",
   "=",
   "''",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "center",
   ")",
   "{",
   "$",
   "max_length",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "line",
   ")",
   "{",
   "$",
   "max_length",
   "=",
   "<mask>",
   "(",
   "$",
   "max_length",
   ",",
   "Helper",
   "::",
   "strlenWithoutDecoration",
   "(",
   "$",
   "this",
   "->",
   "output",
   "->",
   "getFormatter",
   "(",
   ")",
   ",",
   "$",
   "line",
   ")",
   ")",
   ";",
   "}",
   "$",
   "numberOfSpaces",
   "=",
   "floor",
   "(",
   "(",
   "$",
   "this",
   "->",
   "screenSize",
   "[",
   "0",
   "]",
   "-",
   "$",
   "max_length",
   ")",
   "/",
   "2",
   ")",
   ";",
   "if",
   "(",
   "$",
   "numberOfSpaces",
   ">",
   "0",
   ")",
   "{",
   "$",
   "spaces",
   "=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "numberOfSpaces",
   ")",
   ";",
   "}",
   "}",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "line",
   ")",
   "{",
   "$",
   "this",
   "->",
   "output",
   "->",
   "writeln",
   "(",
   "$",
   "spaces",
   ".",
   "$",
   "line",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-112",
  "nl_tokens": [
   "Creates",
   "a",
   "new",
   "AstroDate"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "create",
   "(",
   "$",
   "year",
   "=",
   "null",
   ",",
   "$",
   "month",
   "=",
   "null",
   ",",
   "$",
   "day",
   "=",
   "null",
   ",",
   "$",
   "hour",
   "=",
   "null",
   ",",
   "$",
   "<mask>",
   "=",
   "null",
   ",",
   "$",
   "sec",
   "=",
   "null",
   ",",
   "$",
   "timezone",
   "=",
   "null",
   ",",
   "$",
   "timescale",
   "=",
   "null",
   ")",
   "{",
   "return",
   "new",
   "static",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "day",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ",",
   "$",
   "timezone",
   ",",
   "$",
   "timescale",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-113",
  "nl_tokens": [
   "\u751f\u6210\u7f29\u7565\u56fe"
  ],
  "pl_tokens": [
   "public",
   "function",
   "thumb",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ",",
   "$",
   "type",
   "=",
   "THINKIMAGE_THUMB_SCALING",
   ")",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "im",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'\u6ca1\u6709\u53ef\u4ee5\u88ab\u7f29\u7565\u7684\u56fe\u50cf\u8d44\u6e90');",
   "",
   "",
   "}",
   "//\u539f\u56fe\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   ";",
   "$",
   "h",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   ";",
   "/* \u8ba1\u7b97\u7f29\u7565\u56fe\u751f\u6210\u7684\u5fc5\u8981\u53c2\u6570 */",
   "switch",
   "(",
   "$",
   "type",
   ")",
   "{",
   "/* \u7b49\u6bd4\u4f8b\u7f29\u653e */",
   "case",
   "THINKIMAGE_THUMB_SCALING",
   ":",
   "//\u539f\u56fe\u5c3a\u5bf8\u5c0f\u4e8e\u7f29\u7565\u56fe\u5c3a\u5bf8\u5219\u4e0d\u8fdb\u884c\u7f29\u7565",
   "if",
   "(",
   "$",
   "w",
   "<",
   "$",
   "width",
   "&&",
   "$",
   "h",
   "<",
   "$",
   "height",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "<mask>",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "width",
   "=",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "height",
   "=",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ";",
   "break",
   ";",
   "/* \u5c45\u4e2d\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_CENTER",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "x",
   "=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0a\u89d2\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_NORTHWEST",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "break",
   ";",
   "/* \u53f3\u4e0b\u89d2\u88c1\u526a */",
   "case",
   "THINKIMAGE_THUMB_SOUTHEAST",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "$",
   "scale",
   "=",
   "max",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "w",
   "=",
   "$",
   "width",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "h",
   "=",
   "$",
   "height",
   "/",
   "$",
   "scale",
   ";",
   "$",
   "x",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u586b\u5145 */",
   "case",
   "THINKIMAGE_THUMB_FILLED",
   ":",
   "//\u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b",
   "if",
   "(",
   "$",
   "w",
   "<",
   "$",
   "width",
   "&&",
   "$",
   "h",
   "<",
   "$",
   "height",
   ")",
   "{",
   "$",
   "scale",
   "=",
   "1",
   ";",
   "}",
   "else",
   "{",
   "$",
   "scale",
   "=",
   "min",
   "(",
   "$",
   "width",
   "/",
   "$",
   "w",
   ",",
   "$",
   "height",
   "/",
   "$",
   "h",
   ")",
   ";",
   "}",
   "//\u8bbe\u7f6e\u7f29\u7565\u56fe\u7684\u5750\u6807\u53ca\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
   "$",
   "neww",
   "=",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "newh",
   "=",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ";",
   "$",
   "x",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "$",
   "posx",
   "=",
   "(",
   "$",
   "width",
   "-",
   "$",
   "w",
   "*",
   "$",
   "scale",
   ")",
   "/",
   "2",
   ";",
   "$",
   "posy",
   "=",
   "(",
   "$",
   "height",
   "-",
   "$",
   "h",
   "*",
   "$",
   "scale",
   ")",
   "/",
   "2",
   ";",
   "do",
   "{",
   "//\u521b\u5efa\u65b0\u56fe\u50cf",
   "$",
   "img",
   "=",
   "imagecreatetruecolor",
   "(",
   "$",
   "width",
   ",",
   "$",
   "height",
   ")",
   ";",
   "// \u8c03\u6574\u9ed8\u8ba4\u989c\u8272",
   "$",
   "color",
   "=",
   "imagecolorallocate",
   "(",
   "$",
   "img",
   ",",
   "255",
   ",",
   "255",
   ",",
   "255",
   ")",
   ";",
   "imagefill",
   "(",
   "$",
   "img",
   ",",
   "0",
   ",",
   "0",
   ",",
   "$",
   "color",
   ")",
   ";",
   "//\u88c1\u526a",
   "imagecopyresampled",
   "(",
   "$",
   "img",
   ",",
   "$",
   "this",
   "->",
   "im",
   ",",
   "$",
   "posx",
   ",",
   "$",
   "posy",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ",",
   "$",
   "neww",
   ",",
   "$",
   "newh",
   ",",
   "$",
   "w",
   ",",
   "$",
   "h",
   ")",
   ";",
   "imagedestroy",
   "(",
   "$",
   "this",
   "->",
   "im",
   ")",
   ";",
   "//\u9500\u6bc1\u539f\u56fe",
   "$",
   "this",
   "->",
   "im",
   "=",
   "$",
   "img",
   ";",
   "}",
   "while",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "gif",
   ")",
   "&&",
   "$",
   "this",
   "->",
   "gifNext",
   "(",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "=",
   "$",
   "width",
   ";",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "=",
   "$",
   "height",
   ";",
   "return",
   "$",
   "this",
   ";",
   "/* \u56fa\u5b9a */",
   "case",
   "THINKIMAGE_THUMB_FIXED",
   ":",
   "$",
   "x",
   "=",
   "$",
   "y",
   "=",
   "0",
   ";",
   "break",
   ";",
   "default",
   ":",
   "throw",
   "new",
   "Exception",
   "(",
   "'\u4e0d\u652f\u6301\u7684\u7f29\u7565\u56fe\u88c1\u526a\u7c7b\u578b');",
   "",
   "",
   "}",
   "/* \u88c1\u526a\u56fe\u50cf */",
   "$",
   "this",
   "->",
   "crop",
   "(",
   "$",
   "w",
   ",",
   "$",
   "h",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ",",
   "$",
   "width",
   ",",
   "$",
   "height",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-114",
  "nl_tokens": [
   "Get",
   "highest",
   "worksheet",
   "row",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getHighestRow",
   "(",
   "$",
   "column",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "column",
   "==",
   "null",
   ")",
   "{",
   "$",
   "colRow",
   "=",
   "$",
   "this",
   "->",
   "getHighestRowAndColumn",
   "(",
   ")",
   ";",
   "return",
   "$",
   "colRow",
   "[",
   "'row'",
   "]",
   ";",
   "}",
   "$",
   "rowList",
   "=",
   "[",
   "0",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "getCoordinates",
   "(",
   ")",
   "as",
   "$",
   "coord",
   ")",
   "{",
   "sscanf",
   "(",
   "$",
   "coord",
   ",",
   "'%[A-Z]%d'",
   ",",
   "$",
   "c",
   ",",
   "$",
   "r",
   ")",
   ";",
   "if",
   "(",
   "$",
   "c",
   "!=",
   "$",
   "column",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "rowList",
   "[",
   "]",
   "=",
   "$",
   "r",
   ";",
   "}",
   "return",
   "<mask>",
   "(",
   "$",
   "rowList",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-115",
  "nl_tokens": [
   "\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6642\u523b\u90e8\u5206\u306e\u6587\u5b57\u5217\u3092",
   "hh",
   ":",
   "mm",
   "\u5f62\u5f0f\u3067\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "formatTime",
   "(",
   ")",
   "{",
   "$",
   "hour",
   "=",
   "str_pad",
   "(",
   "$",
   "this",
   "->",
   "hour",
   ",",
   "2",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "str_pad",
   "(",
   "$",
   "this",
   "->",
   "minute",
   ",",
   "2",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "return",
   "$",
   "hour",
   ".",
   "\":\"",
   ".",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-116",
  "nl_tokens": [
   "Constant",
   "-",
   "time",
   "string",
   "comparison",
   ".",
   "This",
   "comparison",
   "function",
   "is",
   "timing",
   "-",
   "attack",
   "safe"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "compare",
   "(",
   "$",
   "hasha",
   "=",
   "\"\"",
   ",",
   "$",
   "hashb",
   "=",
   "\"\"",
   ")",
   "{",
   "// we want hashes_are_not_equal to be false by the end of this if the strings are identical",
   "// if the strings are NOT equal length this will return true, else false",
   "$",
   "hashes_are_not_equal",
   "=",
   "strlen",
   "(",
   "$",
   "hasha",
   ")",
   "^",
   "strlen",
   "(",
   "$",
   "hashb",
   ")",
   ";",
   "// compare the shortest of the two strings (the above line will still kick back a failure if the lengths weren't equal.  this just keeps us from over-flowing our strings when comparing",
   "$",
   "length",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "hasha",
   ")",
   ",",
   "strlen",
   "(",
   "$",
   "hashb",
   ")",
   ")",
   ";",
   "$",
   "hasha",
   "=",
   "substr",
   "(",
   "$",
   "hasha",
   ",",
   "0",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "hashb",
   "=",
   "substr",
   "(",
   "$",
   "hashb",
   ",",
   "0",
   ",",
   "$",
   "length",
   ")",
   ";",
   "// iterate through the hashes comparing them character by character",
   "// if a character does not match, then return true, so the hashes are not equal",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "strlen",
   "(",
   "$",
   "hasha",
   ")",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "hashes_are_not_equal",
   "+=",
   "!",
   "(",
   "ord",
   "(",
   "$",
   "hasha",
   "[",
   "$",
   "i",
   "]",
   ")",
   "===",
   "ord",
   "(",
   "$",
   "hashb",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   ";",
   "}",
   "// if not hashes are not equal, then hashes are equal",
   "return",
   "!",
   "$",
   "hashes_are_not_equal",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-117",
  "nl_tokens": [
   "YYYY",
   "-",
   "MM",
   "-",
   "DDThh",
   ":",
   "mm",
   "\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u307e\u3059",
   ".",
   "\u6587\u5b57\u5217\u306e\u672b\u5c3e\u306b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3",
   "(",
   "+",
   "hh",
   ":",
   "mm",
   "\u3084",
   "-",
   "hh",
   ":",
   "mm",
   "\u306a\u3069",
   ")",
   "\u3092\u542b\u3080\u5834\u5408\u306f",
   "\u30b7\u30b9\u30c6\u30e0\u6642\u523b\u3078\u306e\u5909\u63db\u3092\u884c\u3044\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "parseDatetime",
   "(",
   "$",
   "format",
   ")",
   "{",
   "$",
   "dp",
   "=",
   "self",
   "::",
   "$",
   "datePattern",
   ";",
   "$",
   "tzp",
   "=",
   "self",
   "::",
   "$",
   "timeZonePattern",
   ";",
   "$",
   "result",
   "=",
   "null",
   ";",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "\"/^{$dp}[^0-9][0-9]{2}:[0-9]{2}{$tzp}/\"",
   ",",
   "$",
   "format",
   ",",
   "$",
   "result",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "createFormatException",
   "(",
   "$",
   "format",
   ",",
   "\"YYYY-MM-DD hh:mm[timezone]\"",
   ")",
   ";",
   "}",
   "$",
   "year",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "0",
   ",",
   "4",
   ")",
   ";",
   "$",
   "month",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "5",
   ",",
   "2",
   ")",
   ";",
   "$",
   "date",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "8",
   ",",
   "2",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "11",
   ",",
   "2",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "14",
   ",",
   "2",
   ")",
   ";",
   "$",
   "obj",
   "=",
   "new",
   "Datetime",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "date",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ")",
   ";",
   "return",
   "(",
   "$",
   "this",
   "->",
   "usingTz",
   "&&",
   "isset",
   "(",
   "$",
   "result",
   "[",
   "1",
   "]",
   ")",
   ")",
   "?",
   "$",
   "this",
   "->",
   "adjustFromParse",
   "(",
   "$",
   "obj",
   ",",
   "$",
   "result",
   "[",
   "1",
   "]",
   ")",
   ":",
   "$",
   "obj",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-118",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "fixAnnotations",
   "(",
   "Tokens",
   "$",
   "tokens",
   ")",
   "{",
   "$",
   "annotationPositions",
   "=",
   "[",
   "]",
   ";",
   "for",
   "(",
   "$",
   "index",
   "=",
   "0",
   ",",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "tokens",
   ")",
   ";",
   "$",
   "index",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "index",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_AT",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "annotationEndIndex",
   "=",
   "$",
   "tokens",
   "->",
   "getAnnotationEnd",
   "(",
   "$",
   "index",
   ")",
   ";",
   "if",
   "(",
   "null",
   "===",
   "$",
   "annotationEndIndex",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "annotationPositions",
   "[",
   "]",
   "=",
   "[",
   "$",
   "index",
   ",",
   "$",
   "annotationEndIndex",
   "]",
   ";",
   "$",
   "index",
   "=",
   "$",
   "annotationEndIndex",
   ";",
   "}",
   "$",
   "indentLevel",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "tokens",
   "as",
   "$",
   "index",
   "=>",
   "$",
   "token",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "token",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_NONE",
   ")",
   "||",
   "false",
   "===",
   "strpos",
   "(",
   "$",
   "token",
   "->",
   "getContent",
   "(",
   ")",
   ",",
   "\"\\n\"",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "indentationCanBeFixed",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ",",
   "$",
   "annotationPositions",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "braces",
   "=",
   "$",
   "this",
   "->",
   "getLineBracesCount",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ")",
   ";",
   "$",
   "delta",
   "=",
   "$",
   "braces",
   "[",
   "0",
   "]",
   "-",
   "$",
   "braces",
   "[",
   "1",
   "]",
   ";",
   "$",
   "mixedBraces",
   "=",
   "0",
   "===",
   "$",
   "delta",
   "&&",
   "$",
   "braces",
   "[",
   "0",
   "]",
   ">",
   "0",
   ";",
   "$",
   "extraIndentLevel",
   "=",
   "0",
   ";",
   "if",
   "(",
   "$",
   "indentLevel",
   ">",
   "0",
   "&&",
   "(",
   "$",
   "delta",
   "<",
   "0",
   "||",
   "$",
   "mixedBraces",
   ")",
   ")",
   "{",
   "--",
   "$",
   "indentLevel",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "configuration",
   "[",
   "'indent_mixed_lines'",
   "]",
   "&&",
   "$",
   "this",
   "->",
   "isClosingLineWithMeaningfulContent",
   "(",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ")",
   ")",
   "{",
   "$",
   "extraIndentLevel",
   "=",
   "1",
   ";",
   "}",
   "}",
   "$",
   "token",
   "->",
   "setContent",
   "(",
   "Preg",
   "::",
   "replace",
   "(",
   "'/(\\n( +\\*)?) *$/'",
   ",",
   "'$1'",
   ".",
   "str_repeat",
   "(",
   "' '",
   ",",
   "4",
   "*",
   "(",
   "$",
   "indentLevel",
   "+",
   "$",
   "extraIndentLevel",
   ")",
   "+",
   "1",
   ")",
   ",",
   "$",
   "token",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "delta",
   ">",
   "0",
   "||",
   "$",
   "mixedBraces",
   ")",
   "{",
   "++",
   "$",
   "indentLevel",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-119",
  "nl_tokens": [
   "Verifica",
   "se",
   "o",
   "valor",
   "informado",
   "est\u00e1",
   "entre",
   "o",
   "intervalo",
   "definido",
   "para",
   "este",
   "tipo",
   "."
  ],
  "pl_tokens": [
   "protected",
   "static",
   "function",
   "validateDateTimeValue",
   "(",
   "\\",
   "DateTime",
   "$",
   "v",
   ")",
   ":",
   "bool",
   "{",
   "$",
   "<mask>",
   "=",
   "static",
   "::",
   "min",
   "(",
   ")",
   ";",
   "$",
   "max",
   "=",
   "static",
   "::",
   "max",
   "(",
   ")",
   ";",
   "return",
   "(",
   "(",
   "$",
   "min",
   "===",
   "null",
   "||",
   "$",
   "v",
   ">=",
   "$",
   "min",
   ")",
   "&&",
   "(",
   "$",
   "max",
   "===",
   "null",
   "||",
   "$",
   "v",
   "<=",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-120",
  "nl_tokens": [
   "Sets",
   "the",
   "time",
   "of",
   "this",
   "instance"
  ],
  "pl_tokens": [
   "public",
   "function",
   "setTime",
   "(",
   "$",
   "hour",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "sec",
   ")",
   "{",
   "$",
   "status",
   "=",
   "IAU",
   "::",
   "Tf2d",
   "(",
   "'+'",
   ",",
   "(",
   "int",
   ")",
   "$",
   "hour",
   ",",
   "(",
   "int",
   ")",
   "$",
   "min",
   ",",
   "(",
   "float",
   ")",
   "$",
   "sec",
   ",",
   "$",
   "days",
   ")",
   ";",
   "$",
   "this",
   "->",
   "checkTime",
   "(",
   "$",
   "status",
   ")",
   ";",
   "// Check time is valid",
   "$",
   "this",
   "->",
   "dayFrac",
   "=",
   "$",
   "days",
   ";",
   "// Only set the day fraction",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-121",
  "nl_tokens": [
   "\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u6642\u9593\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u6700\u3082\u53e4\u3044\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059",
   ".",
   "\u5f15\u6570\u306b",
   "Time",
   "\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7f85\u5217\u3059\u308b\u304b",
   "Time",
   "\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044",
   ".",
   "\u5f15\u6570\u306b",
   "Time",
   "\u304c\u4e00\u3064\u3082\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f",
   "NULL",
   "\u3092\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "oldest",
   "(",
   ")",
   "{",
   "$",
   "args",
   "=",
   "func_get_args",
   "(",
   ")",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "args",
   "[",
   "0",
   "]",
   ")",
   "&&",
   "is_array",
   "(",
   "$",
   "args",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "args",
   "=",
   "$",
   "args",
   "[",
   "0",
   "]",
   ";",
   "}",
   "return",
   "Arrays",
   "::",
   "<mask>",
   "(",
   "Arrays",
   "::",
   "pickup",
   "(",
   "$",
   "args",
   ",",
   "\"Peach\\\\DT\\\\Time\"",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-122",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "guard",
   "(",
   "$",
   "value",
   ",",
   "Field",
   "$",
   "field",
   ")",
   "{",
   "Assertion",
   "::",
   "integer",
   "(",
   "$",
   "value",
   ",",
   "null",
   ",",
   "$",
   "field",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ";",
   "$",
   "intMin",
   "=",
   "$",
   "this",
   "->",
   "getMin",
   "(",
   ")",
   ";",
   "$",
   "intMax",
   "=",
   "$",
   "this",
   "->",
   "getMax",
   "(",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "NumberUtils",
   "::",
   "bound",
   "(",
   "$",
   "field",
   "->",
   "getMin",
   "(",
   ")",
   ",",
   "$",
   "intMin",
   ",",
   "$",
   "intMax",
   ")",
   ";",
   "$",
   "max",
   "=",
   "NumberUtils",
   "::",
   "bound",
   "(",
   "$",
   "field",
   "->",
   "getMax",
   "(",
   ")",
   ",",
   "$",
   "intMin",
   ",",
   "$",
   "intMax",
   ")",
   ";",
   "Assertion",
   "::",
   "range",
   "(",
   "$",
   "value",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "null",
   ",",
   "$",
   "field",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-123",
  "nl_tokens": [
   "Validates",
   "the",
   "submitted",
   "registration"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "validateRegistration",
   "(",
   "array",
   "$",
   "reg",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "true",
   ";",
   "// Username format",
   "try",
   "{",
   "$",
   "this",
   "->",
   "storage",
   "->",
   "checkValidName",
   "(",
   "$",
   "reg",
   "[",
   "\"username\"",
   "]",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "RuntimeException",
   "$",
   "e",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "// Username length",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "config",
   "[",
   "\"nameLenMin\"",
   "]",
   ";",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "config",
   "[",
   "\"nameLenMax\"",
   "]",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "reg",
   "[",
   "\"username\"",
   "]",
   ")",
   "<",
   "$",
   "min",
   "||",
   "strlen",
   "(",
   "$",
   "reg",
   "[",
   "\"username\"",
   "]",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "sprintf",
   "(",
   "\"Length of a username must be between %d-%d characters.\"",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "// Email format",
   "if",
   "(",
   "!",
   "filter_var",
   "(",
   "$",
   "reg",
   "[",
   "\"email\"",
   "]",
   ",",
   "FILTER_VALIDATE_EMAIL",
   ")",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "\"Email address does not have a valid format.\"",
   ")",
   ";",
   "}",
   "// Email unique",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "this",
   "->",
   "storage",
   "->",
   "getUserByEmail",
   "(",
   "$",
   "reg",
   "[",
   "\"email\"",
   "]",
   ")",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "\"This email is already in use.\"",
   ")",
   ";",
   "}",
   "// Password repeat matches",
   "if",
   "(",
   "$",
   "reg",
   "[",
   "\"password\"",
   "]",
   "->",
   "get",
   "(",
   ")",
   "!==",
   "$",
   "reg",
   "[",
   "\"passwordRepeat\"",
   "]",
   "->",
   "get",
   "(",
   ")",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "\"The passwords do not match.\"",
   ")",
   ";",
   "}",
   "// Check password policy",
   "$",
   "localAuth",
   "=",
   "$",
   "this",
   "->",
   "picoAuth",
   "->",
   "getContainer",
   "(",
   ")",
   "->",
   "get",
   "(",
   "'LocalAuth'",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "localAuth",
   "->",
   "checkPasswordPolicy",
   "(",
   "$",
   "reg",
   "[",
   "\"password\"",
   "]",
   ")",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "}",
   "// Username unique",
   "if",
   "(",
   "$",
   "this",
   "->",
   "storage",
   "->",
   "getUserByName",
   "(",
   "$",
   "reg",
   "[",
   "\"username\"",
   "]",
   ")",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "isValid",
   "=",
   "false",
   ";",
   "$",
   "this",
   "->",
   "session",
   "->",
   "addFlash",
   "(",
   "\"error\"",
   ",",
   "\"The username is already taken.\"",
   ")",
   ";",
   "}",
   "return",
   "$",
   "isValid",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-124",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zremrangebylex"
  ],
  "pl_tokens": [
   "public",
   "function",
   "removeByLex",
   "(",
   "string",
   "$",
   "<mask>",
   ",",
   "string",
   "$",
   "max",
   ")",
   ":",
   "int",
   "{",
   "return",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zremrangebylex",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-125",
  "nl_tokens": [
   "Returns",
   "the",
   "largest",
   "value",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "$",
   "key",
   "=",
   "false",
   ")",
   "{",
   "$",
   "collection",
   "=",
   "$",
   "this",
   "->",
   "getIterator",
   "(",
   ")",
   ";",
   "$",
   "max",
   "=",
   "0",
   ";",
   "$",
   "valueToReturn",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "collection",
   "as",
   "$",
   "result",
   ")",
   "{",
   "if",
   "(",
   "$",
   "key",
   "&&",
   "isset",
   "(",
   "$",
   "result",
   "->",
   "$",
   "key",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "result",
   "->",
   "$",
   "key",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "result",
   "->",
   "$",
   "key",
   ";",
   "$",
   "valueToReturn",
   "=",
   "$",
   "result",
   ";",
   "}",
   "}",
   "else",
   "if",
   "(",
   "$",
   "key",
   "&&",
   "isset",
   "(",
   "$",
   "result",
   "[",
   "$",
   "key",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "result",
   "[",
   "$",
   "key",
   "]",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "result",
   "[",
   "$",
   "key",
   "]",
   ";",
   "$",
   "valueToReturn",
   "=",
   "$",
   "result",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "$",
   "result",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "result",
   ";",
   "$",
   "valueToReturn",
   "=",
   "$",
   "result",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "valueToReturn",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-126",
  "nl_tokens": [
   "Returns",
   "a",
   "DLN",
   "object",
   "that",
   "contains",
   "a",
   "driver",
   "license",
   "number",
   "state",
   "and",
   "expiration"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getDln",
   "(",
   "$",
   "state_code",
   "=",
   "null",
   ",",
   "$",
   "<mask>",
   "=",
   "900000001",
   ",",
   "$",
   "max",
   "=",
   "999999999",
   ")",
   "{",
   "$",
   "dln",
   "=",
   "new",
   "Entities",
   "\\",
   "DriverLicense",
   "(",
   ")",
   ";",
   "$",
   "dln",
   "->",
   "number",
   "=",
   "rand",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "$",
   "dln",
   "->",
   "state",
   "=",
   "!",
   "empty",
   "(",
   "$",
   "state_code",
   ")",
   "?",
   "$",
   "state_code",
   ":",
   "$",
   "this",
   "->",
   "getState",
   "(",
   ")",
   ";",
   "$",
   "dln",
   "->",
   "expiration",
   "=",
   "$",
   "this",
   "->",
   "getExpiration",
   "(",
   ")",
   ";",
   "return",
   "$",
   "dln",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-127",
  "nl_tokens": [
   "Write",
   "BIFF",
   "record",
   "SELECTION",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "writeSelection",
   "(",
   ")",
   "{",
   "// look up the selected cell range",
   "$",
   "selectedCells",
   "=",
   "Coordinate",
   "::",
   "splitRange",
   "(",
   "$",
   "this",
   "->",
   "phpSheet",
   "->",
   "getSelectedCells",
   "(",
   ")",
   ")",
   ";",
   "$",
   "selectedCells",
   "=",
   "$",
   "selectedCells",
   "[",
   "0",
   "]",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "selectedCells",
   ")",
   "==",
   "2",
   ")",
   "{",
   "list",
   "(",
   "$",
   "first",
   ",",
   "$",
   "last",
   ")",
   "=",
   "$",
   "selectedCells",
   ";",
   "}",
   "else",
   "{",
   "$",
   "first",
   "=",
   "$",
   "selectedCells",
   "[",
   "0",
   "]",
   ";",
   "$",
   "last",
   "=",
   "$",
   "selectedCells",
   "[",
   "0",
   "]",
   ";",
   "}",
   "list",
   "(",
   "$",
   "colFirst",
   ",",
   "$",
   "rwFirst",
   ")",
   "=",
   "Coordinate",
   "::",
   "coordinateFromString",
   "(",
   "$",
   "first",
   ")",
   ";",
   "$",
   "colFirst",
   "=",
   "Coordinate",
   "::",
   "columnIndexFromString",
   "(",
   "$",
   "colFirst",
   ")",
   "-",
   "1",
   ";",
   "// base 0 column index",
   "--",
   "$",
   "rwFirst",
   ";",
   "// base 0 row index",
   "list",
   "(",
   "$",
   "colLast",
   ",",
   "$",
   "rwLast",
   ")",
   "=",
   "Coordinate",
   "::",
   "coordinateFromString",
   "(",
   "$",
   "last",
   ")",
   ";",
   "$",
   "colLast",
   "=",
   "Coordinate",
   "::",
   "columnIndexFromString",
   "(",
   "$",
   "colLast",
   ")",
   "-",
   "1",
   ";",
   "// base 0 column index",
   "--",
   "$",
   "rwLast",
   ";",
   "// base 0 row index",
   "// make sure we are not out of bounds",
   "$",
   "colFirst",
   "=",
   "<mask>",
   "(",
   "$",
   "colFirst",
   ",",
   "255",
   ")",
   ";",
   "$",
   "colLast",
   "=",
   "min",
   "(",
   "$",
   "colLast",
   ",",
   "255",
   ")",
   ";",
   "$",
   "rwFirst",
   "=",
   "min",
   "(",
   "$",
   "rwFirst",
   ",",
   "65535",
   ")",
   ";",
   "$",
   "rwLast",
   "=",
   "min",
   "(",
   "$",
   "rwLast",
   ",",
   "65535",
   ")",
   ";",
   "$",
   "record",
   "=",
   "0x001D",
   ";",
   "// Record identifier",
   "$",
   "length",
   "=",
   "0x000F",
   ";",
   "// Number of bytes to follow",
   "$",
   "pnn",
   "=",
   "$",
   "this",
   "->",
   "activePane",
   ";",
   "// Pane position",
   "$",
   "rwAct",
   "=",
   "$",
   "rwFirst",
   ";",
   "// Active row",
   "$",
   "colAct",
   "=",
   "$",
   "colFirst",
   ";",
   "// Active column",
   "$",
   "irefAct",
   "=",
   "0",
   ";",
   "// Active cell ref",
   "$",
   "cref",
   "=",
   "1",
   ";",
   "// Number of refs",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "rwLast",
   ")",
   ")",
   "{",
   "$",
   "rwLast",
   "=",
   "$",
   "rwFirst",
   ";",
   "// Last  row in reference",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "colLast",
   ")",
   ")",
   "{",
   "$",
   "colLast",
   "=",
   "$",
   "colFirst",
   ";",
   "// Last  col in reference",
   "}",
   "// Swap last row/col for first row/col as necessary",
   "if",
   "(",
   "$",
   "rwFirst",
   ">",
   "$",
   "rwLast",
   ")",
   "{",
   "list",
   "(",
   "$",
   "rwFirst",
   ",",
   "$",
   "rwLast",
   ")",
   "=",
   "[",
   "$",
   "rwLast",
   ",",
   "$",
   "rwFirst",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "colFirst",
   ">",
   "$",
   "colLast",
   ")",
   "{",
   "list",
   "(",
   "$",
   "colFirst",
   ",",
   "$",
   "colLast",
   ")",
   "=",
   "[",
   "$",
   "colLast",
   ",",
   "$",
   "colFirst",
   "]",
   ";",
   "}",
   "$",
   "header",
   "=",
   "pack",
   "(",
   "'vv'",
   ",",
   "$",
   "record",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "data",
   "=",
   "pack",
   "(",
   "'CvvvvvvCC'",
   ",",
   "$",
   "pnn",
   ",",
   "$",
   "rwAct",
   ",",
   "$",
   "colAct",
   ",",
   "$",
   "irefAct",
   ",",
   "$",
   "cref",
   ",",
   "$",
   "rwFirst",
   ",",
   "$",
   "rwLast",
   ",",
   "$",
   "colFirst",
   ",",
   "$",
   "colLast",
   ")",
   ";",
   "$",
   "this",
   "->",
   "append",
   "(",
   "$",
   "header",
   ".",
   "$",
   "data",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-128",
  "nl_tokens": [
   "Generate",
   "the",
   "module"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "compile",
   "(",
   ")",
   "{",
   "$",
   "limit",
   "=",
   "null",
   ";",
   "$",
   "offset",
   "=",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "skipFirst",
   ";",
   "// Maximum number of items",
   "if",
   "(",
   "$",
   "this",
   "->",
   "numberOfItems",
   ">",
   "0",
   ")",
   "{",
   "$",
   "limit",
   "=",
   "$",
   "this",
   "->",
   "numberOfItems",
   ";",
   "}",
   "// Handle featured news",
   "if",
   "(",
   "$",
   "this",
   "->",
   "news_featured",
   "==",
   "'featured'",
   ")",
   "{",
   "$",
   "blnFeatured",
   "=",
   "true",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "news_featured",
   "==",
   "'unfeatured'",
   ")",
   "{",
   "$",
   "blnFeatured",
   "=",
   "false",
   ";",
   "}",
   "else",
   "{",
   "$",
   "blnFeatured",
   "=",
   "null",
   ";",
   "}",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "articles",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "empty",
   "=",
   "$",
   "GLOBALS",
   "[",
   "'TL_LANG'",
   "]",
   "[",
   "'MSC'",
   "]",
   "[",
   "'emptyList'",
   "]",
   ";",
   "// Get the total number of items",
   "$",
   "intTotal",
   "=",
   "$",
   "this",
   "->",
   "countItems",
   "(",
   "$",
   "this",
   "->",
   "news_archives",
   ",",
   "$",
   "blnFeatured",
   ")",
   ";",
   "if",
   "(",
   "$",
   "intTotal",
   "<",
   "1",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "total",
   "=",
   "$",
   "intTotal",
   "-",
   "$",
   "offset",
   ";",
   "// Split the results",
   "if",
   "(",
   "$",
   "this",
   "->",
   "perPage",
   ">",
   "0",
   "&&",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "limit",
   ")",
   "||",
   "$",
   "this",
   "->",
   "numberOfItems",
   ">",
   "$",
   "this",
   "->",
   "perPage",
   ")",
   ")",
   "{",
   "// Adjust the overall limit",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "limit",
   ")",
   ")",
   "{",
   "$",
   "total",
   "=",
   "<mask>",
   "(",
   "$",
   "limit",
   ",",
   "$",
   "total",
   ")",
   ";",
   "}",
   "// Get the current page",
   "$",
   "id",
   "=",
   "'page_n'",
   ".",
   "$",
   "this",
   "->",
   "id",
   ";",
   "$",
   "page",
   "=",
   "Input",
   "::",
   "get",
   "(",
   "$",
   "id",
   ")",
   "??",
   "1",
   ";",
   "// Do not index or cache the page if the page number is outside the range",
   "if",
   "(",
   "$",
   "page",
   "<",
   "1",
   "||",
   "$",
   "page",
   ">",
   "max",
   "(",
   "ceil",
   "(",
   "$",
   "total",
   "/",
   "$",
   "this",
   "->",
   "perPage",
   ")",
   ",",
   "1",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "PageNotFoundException",
   "(",
   "'Page not found: '",
   ".",
   "Environment",
   "::",
   "get",
   "(",
   "'uri'",
   ")",
   ")",
   ";",
   "}",
   "// Set limit and offset",
   "$",
   "limit",
   "=",
   "$",
   "this",
   "->",
   "perPage",
   ";",
   "$",
   "offset",
   "+=",
   "(",
   "max",
   "(",
   "$",
   "page",
   ",",
   "1",
   ")",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "perPage",
   ";",
   "$",
   "skip",
   "=",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "skipFirst",
   ";",
   "// Overall limit",
   "if",
   "(",
   "$",
   "offset",
   "+",
   "$",
   "limit",
   ">",
   "$",
   "total",
   "+",
   "$",
   "skip",
   ")",
   "{",
   "$",
   "limit",
   "=",
   "$",
   "total",
   "+",
   "$",
   "skip",
   "-",
   "$",
   "offset",
   ";",
   "}",
   "// Add the pagination menu",
   "$",
   "objPagination",
   "=",
   "new",
   "Pagination",
   "(",
   "$",
   "total",
   ",",
   "$",
   "this",
   "->",
   "perPage",
   ",",
   "Config",
   "::",
   "get",
   "(",
   "'maxPaginationLinks'",
   ")",
   ",",
   "$",
   "id",
   ")",
   ";",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "pagination",
   "=",
   "$",
   "objPagination",
   "->",
   "generate",
   "(",
   "\"\\n  \"",
   ")",
   ";",
   "}",
   "$",
   "objArticles",
   "=",
   "$",
   "this",
   "->",
   "fetchItems",
   "(",
   "$",
   "this",
   "->",
   "news_archives",
   ",",
   "$",
   "blnFeatured",
   ",",
   "(",
   "$",
   "limit",
   "?",
   ":",
   "0",
   ")",
   ",",
   "$",
   "offset",
   ")",
   ";",
   "// Add the articles",
   "if",
   "(",
   "$",
   "objArticles",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "articles",
   "=",
   "$",
   "this",
   "->",
   "parseArticles",
   "(",
   "$",
   "objArticles",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "Template",
   "->",
   "archives",
   "=",
   "$",
   "this",
   "->",
   "news_archives",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-129",
  "nl_tokens": [
   "Tests",
   "whether",
   "the",
   "current",
   "matrix",
   "is",
   "diagonal",
   "or",
   "not",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "isDiagonal",
   "(",
   ")",
   "{",
   "$",
   "int_size",
   "=",
   "<mask>",
   "(",
   "(",
   "array",
   ")",
   "$",
   "this",
   "->",
   "size",
   ")",
   ";",
   "if",
   "(",
   "$",
   "int_size",
   ">",
   "0",
   ")",
   "{",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "int_size",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "arr_row",
   "=",
   "$",
   "this",
   "->",
   "getRow",
   "(",
   "$",
   "i",
   ")",
   ";",
   "if",
   "(",
   "$",
   "arr_row",
   "[",
   "$",
   "i",
   "]",
   "!=",
   "0",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "arr_row",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "arr_row",
   "as",
   "$",
   "v",
   ")",
   "{",
   "if",
   "(",
   "$",
   "v",
   "!=",
   "0",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "}",
   "else",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "return",
   "true",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-130",
  "nl_tokens": [
   "Return",
   "worksheet",
   "info",
   "(",
   "Name",
   "Last",
   "Column",
   "Letter",
   "Last",
   "Column",
   "Index",
   "Total",
   "Rows",
   "Total",
   "Columns",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "listWorksheetInfo",
   "(",
   "$",
   "pFilename",
   ")",
   "{",
   "// Open file",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "canRead",
   "(",
   "$",
   "pFilename",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "$",
   "pFilename",
   ".",
   "' is an Invalid Spreadsheet file.'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "openFile",
   "(",
   "$",
   "pFilename",
   ")",
   ";",
   "$",
   "fileHandle",
   "=",
   "$",
   "this",
   "->",
   "fileHandle",
   ";",
   "// Skip BOM, if any",
   "$",
   "this",
   "->",
   "skipBOM",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "checkSeparator",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "inferSeparator",
   "(",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "=",
   "[",
   "]",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'worksheetName'",
   "]",
   "=",
   "'Worksheet'",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "'A'",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalRows'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "0",
   ";",
   "// Loop through each line of the file in turn",
   "while",
   "(",
   "(",
   "$",
   "rowData",
   "=",
   "fgetcsv",
   "(",
   "$",
   "fileHandle",
   ",",
   "0",
   ",",
   "$",
   "this",
   "->",
   "delimiter",
   ",",
   "$",
   "this",
   "->",
   "enclosure",
   ")",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "++",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalRows'",
   "]",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   ",",
   "count",
   "(",
   "$",
   "rowData",
   ")",
   "-",
   "1",
   ")",
   ";",
   "}",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "Coordinate",
   "::",
   "stringFromColumnIndex",
   "(",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "$",
   "worksheetInfo",
   "[",
   "0",
   "]",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ";",
   "// Close file",
   "fclose",
   "(",
   "$",
   "fileHandle",
   ")",
   ";",
   "return",
   "$",
   "worksheetInfo",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-131",
  "nl_tokens": [
   "If",
   "maxlength",
   "option",
   "is",
   "set",
   "true",
   "and",
   "the",
   "model",
   "attribute",
   "is",
   "validated",
   "by",
   "a",
   "string",
   "validator",
   "the",
   "maxlength",
   "option",
   "will",
   "take",
   "the",
   "value",
   "of",
   "[[",
   "\\",
   "yii",
   "\\",
   "validators",
   "\\",
   "StringValidator",
   "::",
   "max",
   "]]",
   "."
  ],
  "pl_tokens": [
   "private",
   "static",
   "function",
   "normalizeMaxLength",
   "(",
   "$",
   "model",
   ",",
   "$",
   "attribute",
   ",",
   "&",
   "$",
   "options",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'maxlength'",
   "]",
   ")",
   "&&",
   "$",
   "options",
   "[",
   "'maxlength'",
   "]",
   "===",
   "true",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "options",
   "[",
   "'maxlength'",
   "]",
   ")",
   ";",
   "$",
   "attrName",
   "=",
   "static",
   "::",
   "getAttributeName",
   "(",
   "$",
   "attribute",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "model",
   "->",
   "getActiveValidators",
   "(",
   "$",
   "attrName",
   ")",
   "as",
   "$",
   "validator",
   ")",
   "{",
   "if",
   "(",
   "$",
   "validator",
   "instanceof",
   "StringValidator",
   "&&",
   "$",
   "validator",
   "->",
   "<mask>",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'maxlength'",
   "]",
   "=",
   "$",
   "validator",
   "->",
   "max",
   ";",
   "break",
   ";",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-132",
  "nl_tokens": [
   "Gets",
   "all",
   "data",
   "that",
   "should",
   "be",
   "available",
   "in",
   "a",
   "json",
   "representation",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "jsonSerialize",
   "(",
   ")",
   "{",
   "$",
   "json",
   "=",
   "[",
   "]",
   ";",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "{",
   "$",
   "json",
   "[",
   "'min'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "min",
   "->",
   "format",
   "(",
   "\\",
   "DateTime",
   "::",
   "ISO8601",
   ")",
   ";",
   "}",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "$",
   "json",
   "[",
   "'max'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "max",
   "->",
   "format",
   "(",
   "\\",
   "DateTime",
   "::",
   "ISO8601",
   ")",
   ";",
   "}",
   "return",
   "$",
   "json",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-133",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "addConfiguration",
   "(",
   "NodeDefinition",
   "$",
   "node",
   ")",
   "{",
   "parent",
   "::",
   "addConfiguration",
   "(",
   "$",
   "node",
   ")",
   ";",
   "$",
   "node",
   "->",
   "children",
   "(",
   ")",
   "->",
   "booleanNode",
   "(",
   "'is_rotatable'",
   ")",
   "->",
   "info",
   "(",
   "'If true, the service will be a rotatable key, else just storable.'",
   ")",
   "->",
   "defaultFalse",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "integerNode",
   "(",
   "'nb_keys'",
   ")",
   "->",
   "info",
   "(",
   "'Number of keys in the key set.'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "<mask>",
   "(",
   "1",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'storage_path'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "arrayNode",
   "(",
   "'key_configuration'",
   ")",
   "->",
   "defaultValue",
   "(",
   "[",
   "]",
   ")",
   "->",
   "useAttributeAsKey",
   "(",
   "'key'",
   ")",
   "->",
   "prototype",
   "(",
   "'variable'",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-134",
  "nl_tokens": [
   "Add",
   "a",
   "list",
   "of",
   "versions",
   "to",
   "a",
   "template"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "addToTemplate",
   "(",
   "BackendTemplate",
   "$",
   "objTemplate",
   ")",
   "{",
   "$",
   "arrVersions",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "objUser",
   "=",
   "BackendUser",
   "::",
   "getInstance",
   "(",
   ")",
   ";",
   "$",
   "objDatabase",
   "=",
   "Database",
   "::",
   "getInstance",
   "(",
   ")",
   ";",
   "// Get the total number of versions",
   "$",
   "objTotal",
   "=",
   "$",
   "objDatabase",
   "->",
   "prepare",
   "(",
   "\"SELECT COUNT(*) AS count FROM tl_version WHERE version>1 AND editUrl IS NOT NULL\"",
   ".",
   "(",
   "!",
   "$",
   "objUser",
   "->",
   "isAdmin",
   "?",
   "\" AND userid=?\"",
   ":",
   "\"\"",
   ")",
   ")",
   "->",
   "execute",
   "(",
   "$",
   "objUser",
   "->",
   "id",
   ")",
   ";",
   "$",
   "intLast",
   "=",
   "ceil",
   "(",
   "$",
   "objTotal",
   "->",
   "count",
   "/",
   "30",
   ")",
   ";",
   "$",
   "intPage",
   "=",
   "Input",
   "::",
   "get",
   "(",
   "'vp'",
   ")",
   "??",
   "1",
   ";",
   "$",
   "intOffset",
   "=",
   "(",
   "$",
   "intPage",
   "-",
   "1",
   ")",
   "*",
   "30",
   ";",
   "// Validate the page number",
   "if",
   "(",
   "$",
   "intPage",
   "<",
   "1",
   "||",
   "(",
   "$",
   "intLast",
   ">",
   "0",
   "&&",
   "$",
   "intPage",
   ">",
   "$",
   "intLast",
   ")",
   ")",
   "{",
   "header",
   "(",
   "'HTTP/1.1 404 Not Found'",
   ")",
   ";",
   "}",
   "// Create the pagination menu",
   "$",
   "objPagination",
   "=",
   "new",
   "Pagination",
   "(",
   "$",
   "objTotal",
   "->",
   "count",
   ",",
   "30",
   ",",
   "7",
   ",",
   "'vp'",
   ",",
   "new",
   "BackendTemplate",
   "(",
   "'be_pagination'",
   ")",
   ")",
   ";",
   "$",
   "objTemplate",
   "->",
   "pagination",
   "=",
   "$",
   "objPagination",
   "->",
   "generate",
   "(",
   ")",
   ";",
   "// Get the versions",
   "$",
   "objVersions",
   "=",
   "$",
   "objDatabase",
   "->",
   "prepare",
   "(",
   "\"SELECT pid, tstamp, version, fromTable, username, userid, description, editUrl, active FROM tl_version WHERE editUrl IS NOT NULL\"",
   ".",
   "(",
   "!",
   "$",
   "objUser",
   "->",
   "isAdmin",
   "?",
   "\" AND userid=?\"",
   ":",
   "\"\"",
   ")",
   ".",
   "\" ORDER BY tstamp DESC, pid, version DESC\"",
   ")",
   "->",
   "limit",
   "(",
   "30",
   ",",
   "$",
   "intOffset",
   ")",
   "->",
   "execute",
   "(",
   "$",
   "objUser",
   "->",
   "id",
   ")",
   ";",
   "while",
   "(",
   "$",
   "objVersions",
   "->",
   "next",
   "(",
   ")",
   ")",
   "{",
   "// Hide profile changes if the user does not have access to the \"user\" module (see #1309)",
   "if",
   "(",
   "!",
   "$",
   "objUser",
   "->",
   "isAdmin",
   "&&",
   "$",
   "objVersions",
   "->",
   "fromTable",
   "==",
   "'tl_user'",
   "&&",
   "!",
   "$",
   "objUser",
   "->",
   "hasAccess",
   "(",
   "'user'",
   ",",
   "'modules'",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "arrRow",
   "=",
   "$",
   "objVersions",
   "->",
   "row",
   "(",
   ")",
   ";",
   "// Add some parameters",
   "$",
   "arrRow",
   "[",
   "'from'",
   "]",
   "=",
   "<mask>",
   "(",
   "(",
   "$",
   "objVersions",
   "->",
   "version",
   "-",
   "1",
   ")",
   ",",
   "1",
   ")",
   ";",
   "// see #4828",
   "$",
   "arrRow",
   "[",
   "'to'",
   "]",
   "=",
   "$",
   "objVersions",
   "->",
   "version",
   ";",
   "$",
   "arrRow",
   "[",
   "'date'",
   "]",
   "=",
   "date",
   "(",
   "Config",
   "::",
   "get",
   "(",
   "'datimFormat'",
   ")",
   ",",
   "$",
   "objVersions",
   "->",
   "tstamp",
   ")",
   ";",
   "$",
   "arrRow",
   "[",
   "'description'",
   "]",
   "=",
   "StringUtil",
   "::",
   "substr",
   "(",
   "$",
   "arrRow",
   "[",
   "'description'",
   "]",
   ",",
   "32",
   ")",
   ";",
   "$",
   "arrRow",
   "[",
   "'shortTable'",
   "]",
   "=",
   "StringUtil",
   "::",
   "substr",
   "(",
   "$",
   "arrRow",
   "[",
   "'fromTable'",
   "]",
   ",",
   "18",
   ")",
   ";",
   "// see #5769",
   "if",
   "(",
   "$",
   "arrRow",
   "[",
   "'editUrl'",
   "]",
   "!=",
   "''",
   ")",
   "{",
   "$",
   "arrRow",
   "[",
   "'editUrl'",
   "]",
   "=",
   "preg_replace",
   "(",
   "array",
   "(",
   "'/&(amp;)?popup=1/'",
   ",",
   "'/&(amp;)?rt=[^&]+/'",
   ")",
   ",",
   "array",
   "(",
   "''",
   ",",
   "'&amp;rt='",
   ".",
   "REQUEST_TOKEN",
   ")",
   ",",
   "ampersand",
   "(",
   "$",
   "arrRow",
   "[",
   "'editUrl'",
   "]",
   ")",
   ")",
   ";",
   "}",
   "$",
   "arrVersions",
   "[",
   "]",
   "=",
   "$",
   "arrRow",
   ";",
   "}",
   "$",
   "intCount",
   "=",
   "-",
   "1",
   ";",
   "$",
   "arrVersions",
   "=",
   "array_values",
   "(",
   "$",
   "arrVersions",
   ")",
   ";",
   "// Add the \"even\" and \"odd\" classes",
   "foreach",
   "(",
   "$",
   "arrVersions",
   "as",
   "$",
   "k",
   "=>",
   "$",
   "v",
   ")",
   "{",
   "$",
   "arrVersions",
   "[",
   "$",
   "k",
   "]",
   "[",
   "'class'",
   "]",
   "=",
   "(",
   "++",
   "$",
   "intCount",
   "%",
   "2",
   "==",
   "0",
   ")",
   "?",
   "'even'",
   ":",
   "'odd'",
   ";",
   "try",
   "{",
   "// Mark deleted versions (see #4336)",
   "$",
   "objDeleted",
   "=",
   "$",
   "objDatabase",
   "->",
   "prepare",
   "(",
   "\"SELECT COUNT(*) AS count FROM \"",
   ".",
   "$",
   "v",
   "[",
   "'fromTable'",
   "]",
   ".",
   "\" WHERE id=?\"",
   ")",
   "->",
   "execute",
   "(",
   "$",
   "v",
   "[",
   "'pid'",
   "]",
   ")",
   ";",
   "$",
   "arrVersions",
   "[",
   "$",
   "k",
   "]",
   "[",
   "'deleted'",
   "]",
   "=",
   "(",
   "$",
   "objDeleted",
   "->",
   "count",
   "<",
   "1",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "// Probably a disabled module",
   "--",
   "$",
   "intCount",
   ";",
   "unset",
   "(",
   "$",
   "arrVersions",
   "[",
   "$",
   "k",
   "]",
   ")",
   ";",
   "}",
   "// Skip deleted files (see #8480)",
   "if",
   "(",
   "$",
   "v",
   "[",
   "'fromTable'",
   "]",
   "==",
   "'tl_files'",
   "&&",
   "$",
   "arrVersions",
   "[",
   "$",
   "k",
   "]",
   "[",
   "'deleted'",
   "]",
   ")",
   "{",
   "--",
   "$",
   "intCount",
   ";",
   "unset",
   "(",
   "$",
   "arrVersions",
   "[",
   "$",
   "k",
   "]",
   ")",
   ";",
   "}",
   "}",
   "$",
   "objTemplate",
   "->",
   "versions",
   "=",
   "$",
   "arrVersions",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-135",
  "nl_tokens": [
   "Return",
   "a",
   "list",
   "of",
   "all",
   "files",
   "in",
   "the",
   "archive"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "readCentralDirectory",
   "(",
   ")",
   "{",
   "$",
   "strMbCharset",
   "=",
   "null",
   ";",
   "// Set the mbstring encoding to ASCII (see #5842)",
   "if",
   "(",
   "ini_get",
   "(",
   "'mbstring.func_overload'",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "strMbCharset",
   "=",
   "mb_internal_encoding",
   "(",
   ")",
   ";",
   "if",
   "(",
   "mb_internal_encoding",
   "(",
   "'ASCII'",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "strMbCharset",
   "=",
   "null",
   ";",
   "}",
   "}",
   "$",
   "intOffset",
   "=",
   "0",
   ";",
   "$",
   "pos",
   "=",
   "0",
   ";",
   "$",
   "intInterval",
   "=",
   "<mask>",
   "(",
   "filesize",
   "(",
   "$",
   "this",
   "->",
   "strRootDir",
   ".",
   "'/'",
   ".",
   "$",
   "this",
   "->",
   "strFile",
   ")",
   ",",
   "1024",
   ")",
   ";",
   "$",
   "strBuffer",
   "=",
   "''",
   ";",
   "// Read to delimiter",
   "do",
   "{",
   "$",
   "intOffset",
   "-=",
   "$",
   "intInterval",
   ";",
   "$",
   "fseek",
   "=",
   "@",
   "fseek",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "intOffset",
   ",",
   "SEEK_END",
   ")",
   ";",
   "$",
   "strBuffer",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "abs",
   "(",
   "$",
   "intOffset",
   ")",
   ")",
   ".",
   "$",
   "strBuffer",
   ";",
   "}",
   "while",
   "(",
   "$",
   "fseek",
   "!=",
   "-",
   "1",
   "&&",
   "(",
   "$",
   "pos",
   "=",
   "strpos",
   "(",
   "$",
   "strBuffer",
   ",",
   "self",
   "::",
   "CENTRAL_DIR_END",
   ")",
   ")",
   "===",
   "false",
   ")",
   ";",
   "// Reposition pointer",
   "fseek",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "(",
   "$",
   "intOffset",
   "+",
   "$",
   "pos",
   ")",
   ",",
   "SEEK_END",
   ")",
   ";",
   "$",
   "strSignature",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ";",
   "// Read archive header",
   "if",
   "(",
   "$",
   "strSignature",
   "!=",
   "self",
   "::",
   "CENTRAL_DIR_END",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "Exception",
   "(",
   "'Error reading central directory'",
   ")",
   ";",
   "}",
   "$",
   "arrHeader",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'number_of_this_disk'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'number_of_disk_with_cd'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'total_cd_entries_disk'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'total_cd_entries'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'size_of_cd'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'offset_start_cd'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'zipfile_comment_length'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrHeader",
   "[",
   "'zipfile_comment'",
   "]",
   "=",
   "$",
   "arrHeader",
   "[",
   "'zipfile_comment_length'",
   "]",
   "[",
   "1",
   "]",
   "?",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "arrHeader",
   "[",
   "'zipfile_comment_length'",
   "]",
   "[",
   "1",
   "]",
   ")",
   ":",
   "''",
   ";",
   "// Eliminate nested arrays",
   "foreach",
   "(",
   "$",
   "arrHeader",
   "as",
   "$",
   "k",
   "=>",
   "$",
   "v",
   ")",
   "{",
   "$",
   "arrHeader",
   "[",
   "$",
   "k",
   "]",
   "=",
   "\\",
   "is_array",
   "(",
   "$",
   "v",
   ")",
   "?",
   "$",
   "v",
   "[",
   "1",
   "]",
   ":",
   "$",
   "v",
   ";",
   "}",
   "$",
   "this",
   "->",
   "arrHeader",
   "=",
   "$",
   "arrHeader",
   ";",
   "// Reposition pointer to begin of the central directory",
   "fseek",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "this",
   "->",
   "arrHeader",
   "[",
   "'offset_start_cd'",
   "]",
   ",",
   "SEEK_SET",
   ")",
   ";",
   "$",
   "strSignature",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ";",
   "// Build file list",
   "while",
   "(",
   "$",
   "strSignature",
   "==",
   "self",
   "::",
   "CENTRAL_DIR_START",
   ")",
   "{",
   "$",
   "arrFile",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'version_made_by'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'version_needed_to_extract'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'general_purpose_bit_flag'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'compression_method'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'last_mod_file_time'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'last_mod_file_date'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'crc-32'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'compressed_size'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'uncompressed_size'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'file_name_length'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'extra_field_length'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'file_comment_length'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'disk_number_start'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'internal_file_attributes'",
   "]",
   "=",
   "unpack",
   "(",
   "'v'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'external_file_attributes'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'offset_of_local_header'",
   "]",
   "=",
   "unpack",
   "(",
   "'V'",
   ",",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'file_name'",
   "]",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "arrFile",
   "[",
   "'file_name_length'",
   "]",
   "[",
   "1",
   "]",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'extra_field'",
   "]",
   "=",
   "$",
   "arrFile",
   "[",
   "'extra_field_length'",
   "]",
   "[",
   "1",
   "]",
   "?",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "arrFile",
   "[",
   "'extra_field_length'",
   "]",
   "[",
   "1",
   "]",
   ")",
   ":",
   "''",
   ";",
   "$",
   "arrFile",
   "[",
   "'file_comment'",
   "]",
   "=",
   "$",
   "arrFile",
   "[",
   "'file_comment_length'",
   "]",
   "[",
   "1",
   "]",
   "?",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "$",
   "arrFile",
   "[",
   "'file_comment_length'",
   "]",
   "[",
   "1",
   "]",
   ")",
   ":",
   "''",
   ";",
   "// Skip directories",
   "if",
   "(",
   "substr",
   "(",
   "$",
   "arrFile",
   "[",
   "'file_name'",
   "]",
   ",",
   "-",
   "1",
   ")",
   "==",
   "'/'",
   ")",
   "{",
   "$",
   "strSignature",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "// Eliminate nested arrays",
   "foreach",
   "(",
   "$",
   "arrFile",
   "as",
   "$",
   "k",
   "=>",
   "$",
   "v",
   ")",
   "{",
   "$",
   "arrFile",
   "[",
   "$",
   "k",
   "]",
   "=",
   "\\",
   "is_array",
   "(",
   "$",
   "v",
   ")",
   "?",
   "$",
   "v",
   "[",
   "1",
   "]",
   ":",
   "$",
   "v",
   ";",
   "}",
   "// Split file path",
   "$",
   "arrFile",
   "[",
   "'file_basename'",
   "]",
   "=",
   "basename",
   "(",
   "$",
   "arrFile",
   "[",
   "'file_name'",
   "]",
   ")",
   ";",
   "$",
   "arrFile",
   "[",
   "'file_dirname'",
   "]",
   "=",
   "(",
   "(",
   "$",
   "path",
   "=",
   "\\",
   "dirname",
   "(",
   "$",
   "arrFile",
   "[",
   "'file_name'",
   "]",
   ")",
   ")",
   "!=",
   "'.'",
   "?",
   "$",
   "path",
   ":",
   "''",
   ")",
   ";",
   "// Add UNIX time",
   "$",
   "arrFile",
   "[",
   "'last_mod_file_unix'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "decToUnix",
   "(",
   "(",
   "int",
   ")",
   "$",
   "arrFile",
   "[",
   "'last_mod_file_time'",
   "]",
   ",",
   "(",
   "int",
   ")",
   "$",
   "arrFile",
   "[",
   "'last_mod_file_date'",
   "]",
   ")",
   ";",
   "// Read next signature",
   "$",
   "strSignature",
   "=",
   "@",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "resFile",
   ",",
   "4",
   ")",
   ";",
   "$",
   "this",
   "->",
   "arrFiles",
   "[",
   "]",
   "=",
   "$",
   "arrFile",
   ";",
   "}",
   "$",
   "this",
   "->",
   "intLast",
   "=",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "this",
   "->",
   "arrFiles",
   ")",
   "-",
   "1",
   ")",
   ";",
   "// Restore the mbstring encoding (see #5842)",
   "$",
   "strMbCharset",
   "&&",
   "mb_internal_encoding",
   "(",
   "$",
   "strMbCharset",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-136",
  "nl_tokens": [
   "Extract",
   "requested",
   "page",
   "from",
   "filter",
   "criteria",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "paginate",
   "(",
   "array",
   "$",
   "rates",
   ",",
   "$",
   "criteria",
   ")",
   "{",
   "if",
   "(",
   "!",
   "array_key_exists",
   "(",
   "'offset'",
   ",",
   "$",
   "criteria",
   ")",
   "&&",
   "!",
   "array_key_exists",
   "(",
   "'limit'",
   ",",
   "$",
   "criteria",
   ")",
   ")",
   "{",
   "return",
   "$",
   "rates",
   ";",
   "}",
   "$",
   "range",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "offset",
   "=",
   "array_key_exists",
   "(",
   "'offset'",
   ",",
   "$",
   "criteria",
   ")",
   "?",
   "$",
   "criteria",
   "[",
   "'offset'",
   "]",
   ":",
   "0",
   ";",
   "$",
   "limit",
   "=",
   "<mask>",
   "(",
   "(",
   "array_key_exists",
   "(",
   "'limit'",
   ",",
   "$",
   "criteria",
   ")",
   "?",
   "$",
   "criteria",
   "[",
   "'limit'",
   "]",
   ":",
   "count",
   "(",
   "$",
   "rates",
   ")",
   ")",
   "+",
   "$",
   "offset",
   ",",
   "count",
   "(",
   "$",
   "rates",
   ")",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "offset",
   ";",
   "$",
   "i",
   "<",
   "$",
   "limit",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "range",
   "[",
   "]",
   "=",
   "$",
   "rates",
   "[",
   "$",
   "i",
   "]",
   ";",
   "}",
   "return",
   "$",
   "range",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-137",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "init",
   "(",
   ")",
   "{",
   "parent",
   "::",
   "init",
   "(",
   ")",
   ";",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "this",
   "->",
   "length",
   ")",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "length",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "length",
   "[",
   "0",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "length",
   "[",
   "1",
   "]",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "max",
   "=",
   "$",
   "this",
   "->",
   "length",
   "[",
   "1",
   "]",
   ";",
   "}",
   "$",
   "this",
   "->",
   "length",
   "=",
   "null",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "encoding",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "encoding",
   "=",
   "Yii",
   "::",
   "$",
   "app",
   "?",
   "Yii",
   "::",
   "$",
   "app",
   "->",
   "charset",
   ":",
   "'UTF-8'",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "message",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "message",
   "=",
   "Yii",
   "::",
   "t",
   "(",
   "'yii'",
   ",",
   "'{attribute} must be a string.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "min",
   "!==",
   "null",
   "&&",
   "$",
   "this",
   "->",
   "tooShort",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "tooShort",
   "=",
   "Yii",
   "::",
   "t",
   "(",
   "'yii'",
   ",",
   "'{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   "&&",
   "$",
   "this",
   "->",
   "tooLong",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "tooLong",
   "=",
   "Yii",
   "::",
   "t",
   "(",
   "'yii'",
   ",",
   "'{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "length",
   "!==",
   "null",
   "&&",
   "$",
   "this",
   "->",
   "notEqual",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "notEqual",
   "=",
   "Yii",
   "::",
   "t",
   "(",
   "'yii'",
   ",",
   "'{attribute} should contain {length, number} {length, plural, one{character} other{characters}}.'",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-138",
  "nl_tokens": [
   "Returns",
   "the",
   "index",
   "of",
   "the",
   "close",
   "brace",
   "that",
   "matches",
   "the",
   "open",
   "brace",
   "at",
   "the",
   "given",
   "index",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getArrayEnd",
   "(",
   "$",
   "index",
   ")",
   "{",
   "$",
   "level",
   "=",
   "1",
   ";",
   "for",
   "(",
   "++",
   "$",
   "index",
   ",",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "this",
   ")",
   ";",
   "$",
   "index",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "index",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_OPEN_CURLY_BRACES",
   ")",
   ")",
   "{",
   "++",
   "$",
   "level",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isType",
   "(",
   "$",
   "index",
   ",",
   "DocLexer",
   "::",
   "T_CLOSE_CURLY_BRACES",
   ")",
   ")",
   "{",
   "--",
   "$",
   "level",
   ";",
   "}",
   "if",
   "(",
   "0",
   "===",
   "$",
   "level",
   ")",
   "{",
   "return",
   "$",
   "index",
   ";",
   "}",
   "}",
   "return",
   "null",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-139",
  "nl_tokens": [
   "Logs",
   "an",
   "invalid",
   "login",
   "attempt"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "logInvalidLoginAttempt",
   "(",
   "$",
   "name",
   ")",
   "{",
   "// Trim logged name to the maximum allowed length",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "config",
   "[",
   "\"registration\"",
   "]",
   "[",
   "\"nameLenMax\"",
   "]",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "name",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "substr",
   "(",
   "$",
   "name",
   ",",
   "0",
   ",",
   "$",
   "max",
   ")",
   ".",
   "\" (trimmed)\"",
   ";",
   "}",
   "$",
   "this",
   "->",
   "getLogger",
   "(",
   ")",
   "->",
   "notice",
   "(",
   "\"Invalid login attempt for {name} by {addr}\"",
   ",",
   "array",
   "(",
   "\"name\"",
   "=>",
   "$",
   "name",
   ",",
   "\"addr\"",
   "=>",
   "$",
   "_SERVER",
   "[",
   "'REMOTE_ADDR'",
   "]",
   ",",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-140",
  "nl_tokens": [
   "Guesses",
   "the",
   "correct",
   "node",
   "associated",
   "to",
   "a",
   "given",
   "slot",
   "using",
   "a",
   "precalculated",
   "slots",
   "map",
   "falling",
   "back",
   "to",
   "the",
   "same",
   "logic",
   "used",
   "by",
   "Redis",
   "to",
   "initialize",
   "a",
   "cluster",
   "(",
   "best",
   "-",
   "effort",
   ")",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "guessNode",
   "(",
   "$",
   "slot",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "pool",
   ")",
   "{",
   "throw",
   "new",
   "ClientException",
   "(",
   "'No connections available in the pool'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "slotmap",
   "->",
   "isEmpty",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "buildSlotMap",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "node",
   "=",
   "$",
   "this",
   "->",
   "slotmap",
   "[",
   "$",
   "slot",
   "]",
   ")",
   "{",
   "return",
   "$",
   "node",
   ";",
   "}",
   "$",
   "count",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "pool",
   ")",
   ";",
   "$",
   "index",
   "=",
   "<mask>",
   "(",
   "(",
   "int",
   ")",
   "(",
   "$",
   "slot",
   "/",
   "(",
   "int",
   ")",
   "(",
   "16384",
   "/",
   "$",
   "count",
   ")",
   ")",
   ",",
   "$",
   "count",
   "-",
   "1",
   ")",
   ";",
   "$",
   "nodes",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "pool",
   ")",
   ";",
   "return",
   "$",
   "nodes",
   "[",
   "$",
   "index",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-141",
  "nl_tokens": [
   "Trim",
   "leading",
   "spaces",
   "from",
   "each",
   "description",
   "line"
  ],
  "pl_tokens": [
   "private",
   "static",
   "function",
   "trimDesc",
   "(",
   "$",
   "desc",
   ")",
   "{",
   "$",
   "lines",
   "=",
   "\\",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "desc",
   ")",
   ";",
   "$",
   "leadingSpaces",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "line",
   ")",
   "{",
   "if",
   "(",
   "\\",
   "strlen",
   "(",
   "$",
   "line",
   ")",
   ")",
   "{",
   "$",
   "leadingSpaces",
   "[",
   "]",
   "=",
   "\\",
   "strspn",
   "(",
   "$",
   "line",
   ",",
   "' '",
   ")",
   ";",
   "}",
   "}",
   "\\",
   "array_shift",
   "(",
   "$",
   "leadingSpaces",
   ")",
   ";",
   "// first line will always have zero leading spaces",
   "$",
   "trimLen",
   "=",
   "$",
   "leadingSpaces",
   "?",
   "\\",
   "<mask>",
   "(",
   "$",
   "leadingSpaces",
   ")",
   ":",
   "0",
   ";",
   "if",
   "(",
   "!",
   "$",
   "trimLen",
   ")",
   "{",
   "return",
   "$",
   "desc",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "i",
   "=>",
   "$",
   "line",
   ")",
   "{",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   "=",
   "$",
   "i",
   ">",
   "0",
   "&&",
   "\\",
   "strlen",
   "(",
   "$",
   "line",
   ")",
   "?",
   "\\",
   "substr",
   "(",
   "$",
   "line",
   ",",
   "$",
   "trimLen",
   ")",
   ":",
   "$",
   "line",
   ";",
   "}",
   "$",
   "desc",
   "=",
   "\\",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "lines",
   ")",
   ";",
   "return",
   "$",
   "desc",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-142",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getConfigTreeBuilder",
   "(",
   ")",
   "{",
   "$",
   "treeBuilder",
   "=",
   "new",
   "TreeBuilder",
   "(",
   ")",
   ";",
   "$",
   "rootNode",
   "=",
   "$",
   "treeBuilder",
   "->",
   "root",
   "(",
   "'ad_perfil'",
   ")",
   ";",
   "$",
   "rootNode",
   "->",
   "children",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'perfil_class'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'perfil_table_alias'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'route_redirect'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'homepage'",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'session_name'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'ad_perfil.perfil_id'",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'icon_path'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'icon_alt'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "integerNode",
   "(",
   "'proveedor_id'",
   ")",
   "->",
   "<mask>",
   "(",
   "0",
   ")",
   "->",
   "defaultValue",
   "(",
   "0",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'valor_true'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'1'",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'valor_false'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'0'",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'separador_encabezado'",
   ")",
   "->",
   "defaultValue",
   "(",
   "false",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "arrayNode",
   "(",
   "'navegacion'",
   ")",
   "->",
   "addDefaultsIfNotSet",
   "(",
   ")",
   "->",
   "children",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_title'",
   ")",
   "->",
   "isRequired",
   "(",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_subtitle'",
   ")",
   "->",
   "defaultValue",
   "(",
   "''",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_route'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'homepage'",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_name'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'Inicio'",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_icono'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'fa fa-home'",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "scalarNode",
   "(",
   "'homepage_color'",
   ")",
   "->",
   "defaultValue",
   "(",
   "'blanco'",
   ")",
   "->",
   "cannotBeEmpty",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   "->",
   "end",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "addFiltroSection",
   "(",
   "$",
   "rootNode",
   ")",
   ";",
   "return",
   "$",
   "treeBuilder",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-143",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092",
   "Datetime",
   "\u306b\u5909\u63db\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "parseDatetime",
   "(",
   "$",
   "format",
   ")",
   "{",
   "$",
   "time",
   "=",
   "intval",
   "(",
   "$",
   "format",
   ")",
   ";",
   "$",
   "year",
   "=",
   "date",
   "(",
   "\"Y\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "month",
   "=",
   "date",
   "(",
   "\"n\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "date",
   "=",
   "date",
   "(",
   "\"d\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "date",
   "(",
   "\"H\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "date",
   "(",
   "\"i\"",
   ",",
   "$",
   "time",
   ")",
   ";",
   "return",
   "new",
   "Datetime",
   "(",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "date",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-144",
  "nl_tokens": [
   "Returns",
   "the",
   "last",
   "modified",
   "date",
   "for",
   "a",
   "request",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getLastModified",
   "(",
   "Request",
   "$",
   "request",
   ")",
   "{",
   "$",
   "minModified",
   "=",
   "$",
   "this",
   "->",
   "getLastMinModifiedDate",
   "(",
   ")",
   ";",
   "$",
   "optionalLastModified",
   "=",
   "Option",
   "::",
   "fromValue",
   "(",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "fetch",
   "(",
   "$",
   "this",
   "->",
   "getCacheKeyRequest",
   "(",
   "sha1",
   "(",
   "$",
   "request",
   "->",
   "getUri",
   "(",
   ")",
   ")",
   ",",
   "'lastmodified'",
   ")",
   ")",
   ",",
   "false",
   ")",
   ";",
   "if",
   "(",
   "$",
   "optionalLastModified",
   "->",
   "isEmpty",
   "(",
   ")",
   ")",
   "{",
   "return",
   "$",
   "minModified",
   ";",
   "}",
   "return",
   "<mask>",
   "(",
   "$",
   "minModified",
   ",",
   "new",
   "\\",
   "DateTime",
   "(",
   "$",
   "optionalLastModified",
   "->",
   "get",
   "(",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-145",
  "nl_tokens": [
   "Get",
   "the",
   "first",
   "key",
   "from",
   "the",
   "CDB",
   "file",
   "and",
   "reset",
   "the",
   "key",
   "iterator",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "firstkey",
   "(",
   ")",
   "{",
   "$",
   "this",
   "->",
   "keyIterPos",
   "=",
   "4",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "keyIterStop",
   ")",
   "{",
   "$",
   "pos",
   "=",
   "INF",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "2048",
   ";",
   "$",
   "i",
   "+=",
   "8",
   ")",
   "{",
   "$",
   "pos",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "readInt31",
   "(",
   "$",
   "i",
   ")",
   ",",
   "$",
   "pos",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "keyIterStop",
   "=",
   "$",
   "pos",
   ";",
   "}",
   "$",
   "this",
   "->",
   "keyIterPos",
   "=",
   "2048",
   ";",
   "return",
   "$",
   "this",
   "->",
   "nextkey",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-146",
  "nl_tokens": [
   "Sets",
   "the",
   "max",
   "of",
   "the",
   "DateTimeRange",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setMax",
   "(",
   "$",
   "<mask>",
   ")",
   "{",
   "if",
   "(",
   "$",
   "max",
   "instanceof",
   "DateTime",
   ")",
   "{",
   "$",
   "this",
   "->",
   "max",
   "=",
   "$",
   "max",
   ";",
   "}",
   "else",
   "{",
   "try",
   "{",
   "$",
   "this",
   "->",
   "max",
   "=",
   "new",
   "DateTime",
   "(",
   "$",
   "max",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "$",
   "this",
   "->",
   "max",
   "=",
   "null",
   ";",
   "}",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-147",
  "nl_tokens": [
   "Ajoute",
   "une",
   "condition",
   "between",
   "\u00e0",
   "la",
   "requ\u00eate",
   ".",
   "Si",
   "la",
   "valeur",
   "du",
   "champ",
   "est",
   "compris",
   "entre",
   "2",
   "valeurs",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "between",
   "(",
   "$",
   "column",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "bool",
   "=",
   "'and'",
   ",",
   "$",
   "not",
   "=",
   "false",
   ")",
   "{",
   "$",
   "this",
   "->",
   "where",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "__FUNCTION__",
   ",",
   "'column'",
   "=>",
   "$",
   "column",
   ",",
   "'min'",
   "=>",
   "$",
   "min",
   ",",
   "'max'",
   "=>",
   "$",
   "max",
   ",",
   "'bool'",
   "=>",
   "$",
   "bool",
   ",",
   "'not'",
   "=>",
   "$",
   "not",
   "]",
   ";",
   "$",
   "this",
   "->",
   "columns",
   "[",
   "]",
   "=",
   "$",
   "column",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-148",
  "nl_tokens": [
   "Resolves",
   "the",
   "price",
   "form",
   "the",
   "given",
   "grid",
   "entry",
   "and",
   "total",
   "weight",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "resolvePrice",
   "(",
   "array",
   "$",
   "entry",
   ",",
   "$",
   "weight",
   ")",
   "{",
   "$",
   "price",
   "=",
   "$",
   "count",
   "=",
   "0",
   ";",
   "if",
   "(",
   "$",
   "weight",
   ">",
   "$",
   "entry",
   "[",
   "'max_weight'",
   "]",
   ")",
   "{",
   "$",
   "count",
   "=",
   "floor",
   "(",
   "$",
   "weight",
   "/",
   "$",
   "entry",
   "[",
   "'max_weight'",
   "]",
   ")",
   ";",
   "$",
   "weight",
   "=",
   "round",
   "(",
   "fmod",
   "(",
   "$",
   "weight",
   ",",
   "$",
   "count",
   ")",
   ",",
   "3",
   ")",
   ";",
   "}",
   "if",
   "(",
   "0",
   "<",
   "$",
   "count",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "end",
   "(",
   "$",
   "entry",
   "[",
   "'prices'",
   "]",
   ")",
   "[",
   "'price'",
   "]",
   ";",
   "$",
   "price",
   "=",
   "$",
   "count",
   "*",
   "$",
   "max",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "entry",
   "[",
   "'prices'",
   "]",
   "as",
   "$",
   "p",
   ")",
   "{",
   "// If sale weight is lower than price weight",
   "if",
   "(",
   "1",
   "===",
   "bccomp",
   "(",
   "$",
   "p",
   "[",
   "'weight'",
   "]",
   ",",
   "$",
   "weight",
   ",",
   "3",
   ")",
   ")",
   "{",
   "$",
   "price",
   "+=",
   "$",
   "p",
   "[",
   "'price'",
   "]",
   ";",
   "break",
   ";",
   "}",
   "}",
   "return",
   "$",
   "price",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-149",
  "nl_tokens": [
   "\u6642\u523b\u306e\u4e0d\u6574\u5408\u3092\u8abf\u6574\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "adjust",
   "(",
   "Map",
   "$",
   "fields",
   ")",
   "{",
   "parent",
   "::",
   "adjust",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "$",
   "hourAd",
   "=",
   "$",
   "this",
   "->",
   "getHourAdjuster",
   "(",
   ")",
   ";",
   "$",
   "minAd",
   "=",
   "$",
   "this",
   "->",
   "getMinuteAdjuster",
   "(",
   ")",
   ";",
   "$",
   "hour",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "HOUR",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "fields",
   "->",
   "get",
   "(",
   "self",
   "::",
   "$",
   "MINUTE",
   ")",
   ";",
   "if",
   "(",
   "$",
   "hour",
   "<",
   "0",
   ")",
   "{",
   "$",
   "hourAd",
   "->",
   "moveDown",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "}",
   "else",
   "if",
   "(",
   "23",
   "<",
   "$",
   "hour",
   ")",
   "{",
   "$",
   "hourAd",
   "->",
   "moveUp",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "}",
   "else",
   "if",
   "(",
   "$",
   "min",
   "<",
   "0",
   ")",
   "{",
   "$",
   "minAd",
   "->",
   "moveDown",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "}",
   "else",
   "if",
   "(",
   "59",
   "<",
   "$",
   "min",
   ")",
   "{",
   "$",
   "minAd",
   "->",
   "moveUp",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "}",
   "else",
   "{",
   "return",
   ";",
   "}",
   "$",
   "this",
   "->",
   "adjust",
   "(",
   "$",
   "fields",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-150",
  "nl_tokens": [
   "Return",
   "worksheet",
   "info",
   "(",
   "Name",
   "Last",
   "Column",
   "Letter",
   "Last",
   "Column",
   "Index",
   "Total",
   "Rows",
   "Total",
   "Columns",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "listWorksheetInfo",
   "(",
   "$",
   "pFilename",
   ")",
   "{",
   "File",
   "::",
   "assertFile",
   "(",
   "$",
   "pFilename",
   ")",
   ";",
   "$",
   "worksheetInfo",
   "=",
   "[",
   "]",
   ";",
   "$",
   "xml",
   "=",
   "$",
   "this",
   "->",
   "trySimpleXMLLoadString",
   "(",
   "$",
   "pFilename",
   ")",
   ";",
   "$",
   "namespaces",
   "=",
   "$",
   "xml",
   "->",
   "getNamespaces",
   "(",
   "true",
   ")",
   ";",
   "$",
   "worksheetID",
   "=",
   "1",
   ";",
   "$",
   "xml_ss",
   "=",
   "$",
   "xml",
   "->",
   "children",
   "(",
   "$",
   "namespaces",
   "[",
   "'ss'",
   "]",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "xml_ss",
   "->",
   "Worksheet",
   "as",
   "$",
   "worksheet",
   ")",
   "{",
   "$",
   "worksheet_ss",
   "=",
   "$",
   "worksheet",
   "->",
   "attributes",
   "(",
   "$",
   "namespaces",
   "[",
   "'ss'",
   "]",
   ")",
   ";",
   "$",
   "tmpInfo",
   "=",
   "[",
   "]",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'worksheetName'",
   "]",
   "=",
   "''",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "'A'",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalRows'",
   "]",
   "=",
   "0",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "0",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "worksheet_ss",
   "[",
   "'Name'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "tmpInfo",
   "[",
   "'worksheetName'",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "worksheet_ss",
   "[",
   "'Name'",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "tmpInfo",
   "[",
   "'worksheetName'",
   "]",
   "=",
   "\"Worksheet_{$worksheetID}\"",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "worksheet",
   "->",
   "Table",
   "->",
   "Row",
   ")",
   ")",
   "{",
   "$",
   "rowIndex",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "worksheet",
   "->",
   "Table",
   "->",
   "Row",
   "as",
   "$",
   "rowData",
   ")",
   "{",
   "$",
   "columnIndex",
   "=",
   "0",
   ";",
   "$",
   "rowHasData",
   "=",
   "false",
   ";",
   "foreach",
   "(",
   "$",
   "rowData",
   "->",
   "Cell",
   "as",
   "$",
   "cell",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "cell",
   "->",
   "Data",
   ")",
   ")",
   "{",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   ",",
   "$",
   "columnIndex",
   ")",
   ";",
   "$",
   "rowHasData",
   "=",
   "true",
   ";",
   "}",
   "++",
   "$",
   "columnIndex",
   ";",
   "}",
   "++",
   "$",
   "rowIndex",
   ";",
   "if",
   "(",
   "$",
   "rowHasData",
   ")",
   "{",
   "$",
   "tmpInfo",
   "[",
   "'totalRows'",
   "]",
   "=",
   "max",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'totalRows'",
   "]",
   ",",
   "$",
   "rowIndex",
   ")",
   ";",
   "}",
   "}",
   "}",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnLetter'",
   "]",
   "=",
   "Coordinate",
   "::",
   "stringFromColumnIndex",
   "(",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ")",
   ";",
   "$",
   "tmpInfo",
   "[",
   "'totalColumns'",
   "]",
   "=",
   "$",
   "tmpInfo",
   "[",
   "'lastColumnIndex'",
   "]",
   "+",
   "1",
   ";",
   "$",
   "worksheetInfo",
   "[",
   "]",
   "=",
   "$",
   "tmpInfo",
   ";",
   "++",
   "$",
   "worksheetID",
   ";",
   "}",
   "return",
   "$",
   "worksheetInfo",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-151",
  "nl_tokens": [
   "Returns",
   "random",
   "float",
   "from",
   "given",
   "range",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getFloat",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "$",
   "min",
   ">",
   "$",
   "max",
   ")",
   "{",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'Min cannot be greater than max'",
   ")",
   ";",
   "}",
   "$",
   "random01",
   "=",
   "\\",
   "mt_rand",
   "(",
   ")",
   "/",
   "\\",
   "mt_getrandmax",
   "(",
   ")",
   ";",
   "// [0, 1] -> [min, max]:",
   "// y = (max - min) * x + min",
   "return",
   "(",
   "$",
   "max",
   "-",
   "$",
   "min",
   ")",
   "*",
   "$",
   "random01",
   "+",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-152",
  "nl_tokens": [
   "Move",
   "the",
   "given",
   "assignment",
   "to",
   "the",
   "given",
   "unit",
   "for",
   "the",
   "given",
   "sold",
   "quantity",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "moveAssignment",
   "(",
   "Stock",
   "\\",
   "StockAssignmentInterface",
   "$",
   "assignment",
   ",",
   "Stock",
   "\\",
   "StockUnitInterface",
   "$",
   "targetUnit",
   ",",
   "$",
   "quantity",
   ")",
   "{",
   "/**\n         * TODO Refactor with:\n         * @see \\Ekyna\\Component\\Commerce\\Stock\\Dispatcher\\StockAssignmentDispatcher::moveAssignments()\n         */",
   "// Don't move shipped quantity",
   "$",
   "quantity",
   "=",
   "<mask>",
   "(",
   "$",
   "quantity",
   ",",
   "$",
   "assignment",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "-",
   "$",
   "assignment",
   "->",
   "getShippedQuantity",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "0",
   ">=",
   "$",
   "quantity",
   ")",
   "{",
   "// TODO Packaging format",
   "return",
   "0",
   ";",
   "}",
   "$",
   "sourceUnit",
   "=",
   "$",
   "assignment",
   "->",
   "getStockUnit",
   "(",
   ")",
   ";",
   "$",
   "saleItem",
   "=",
   "$",
   "assignment",
   "->",
   "getSaleItem",
   "(",
   ")",
   ";",
   "// Debit source unit's sold quantity",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "unitSold",
   "(",
   "$",
   "sourceUnit",
   ",",
   "-",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "sourceUnit",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "sourceUnit",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "-",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "sourceUnit",
   ")",
   ";",
   "// Credit target unit",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "unitSold",
   "(",
   "$",
   "targetUnit",
   ",",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "targetUnit",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "targetUnit",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "+",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "targetUnit",
   ")",
   ";",
   "// Merge assignment lookup",
   "$",
   "merge",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "targetUnit",
   "->",
   "getStockAssignments",
   "(",
   ")",
   "as",
   "$",
   "m",
   ")",
   "{",
   "if",
   "(",
   "$",
   "m",
   "->",
   "getSaleItem",
   "(",
   ")",
   "===",
   "$",
   "saleItem",
   ")",
   "{",
   "$",
   "merge",
   "=",
   "$",
   "m",
   ";",
   "break",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "quantity",
   "==",
   "$",
   "assignment",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "merge",
   ")",
   "{",
   "// Credit quantity to mergeable assignment",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentSold",
   "(",
   "$",
   "merge",
   ",",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "merge",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "merge",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "+",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "merge",
   ")",
   ";",
   "// Debit quantity from source assignment",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentSold",
   "(",
   "$",
   "assignment",
   ",",
   "0",
   ",",
   "false",
   ")",
   ";",
   "// TODO log removal ?",
   "$",
   "assignment",
   "->",
   "setSoldQuantity",
   "(",
   "0",
   ")",
   "->",
   "setSaleItem",
   "(",
   "null",
   ")",
   "->",
   "setStockUnit",
   "(",
   "null",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "remove",
   "(",
   "$",
   "assignment",
   ")",
   ";",
   "}",
   "else",
   "{",
   "// Move source assignment to target unit",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentUnit",
   "(",
   "$",
   "assignment",
   ",",
   "$",
   "targetUnit",
   ")",
   ";",
   "$",
   "assignment",
   "->",
   "setStockUnit",
   "(",
   "$",
   "targetUnit",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "assignment",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "// Debit quantity from source assignment",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentSold",
   "(",
   "$",
   "assignment",
   ",",
   "-",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "assignment",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "assignment",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "-",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "assignment",
   ")",
   ";",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "merge",
   ")",
   "{",
   "// Credit quantity to mergeable assignment",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentSold",
   "(",
   "$",
   "merge",
   ",",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "merge",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "merge",
   "->",
   "getSoldQuantity",
   "(",
   ")",
   "+",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "merge",
   ")",
   ";",
   "}",
   "else",
   "{",
   "// Credit quantity to new assignment",
   "$",
   "create",
   "=",
   "$",
   "this",
   "->",
   "saleFactory",
   "->",
   "createStockAssignmentForItem",
   "(",
   "$",
   "saleItem",
   ")",
   ";",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "assignmentSold",
   "(",
   "$",
   "create",
   ",",
   "$",
   "quantity",
   ",",
   "false",
   ")",
   ";",
   "$",
   "create",
   "->",
   "setSoldQuantity",
   "(",
   "$",
   "quantity",
   ")",
   "->",
   "setSaleItem",
   "(",
   "$",
   "saleItem",
   ")",
   "->",
   "setStockUnit",
   "(",
   "$",
   "targetUnit",
   ")",
   ";",
   "$",
   "this",
   "->",
   "manager",
   "->",
   "persist",
   "(",
   "$",
   "create",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "quantity",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-153",
  "nl_tokens": [
   "Generate",
   "a",
   "Last",
   "Name"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getLastName",
   "(",
   "$",
   "<mask>",
   "=",
   "250",
   ")",
   "{",
   "return",
   "LastName",
   "::",
   "where",
   "(",
   "'rank'",
   ",",
   "'<='",
   ",",
   "$",
   "max",
   ")",
   "->",
   "orderByRaw",
   "(",
   "Database",
   "::",
   "random",
   "(",
   ")",
   ")",
   "->",
   "first",
   "(",
   ")",
   "->",
   "name",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-154",
  "nl_tokens": [
   "Finds",
   "the",
   "best",
   "stock",
   "unit",
   "to",
   "move",
   "/",
   "merge",
   "assignment",
   "(",
   "s",
   ")",
   "into",
   "for",
   "the",
   "given",
   "quantity",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getUnitCandidates",
   "(",
   "StockAssignmentInterface",
   "$",
   "assignment",
   ",",
   "$",
   "quantity",
   ")",
   "{",
   "$",
   "subject",
   "=",
   "$",
   "assignment",
   "->",
   "getStockUnit",
   "(",
   ")",
   "->",
   "getSubject",
   "(",
   ")",
   ";",
   "// Find the subject's ready stock units",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "units",
   "=",
   "$",
   "this",
   "->",
   "unitResolver",
   "->",
   "findReady",
   "(",
   "$",
   "subject",
   ")",
   ")",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "}",
   ";",
   "$",
   "sale",
   "=",
   "$",
   "assignment",
   "->",
   "getSaleItem",
   "(",
   ")",
   "->",
   "getSale",
   "(",
   ")",
   ";",
   "$",
   "candidates",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "units",
   "as",
   "$",
   "unit",
   ")",
   "{",
   "$",
   "this",
   "->",
   "unitResolver",
   "->",
   "getStockUnitCache",
   "(",
   ")",
   "->",
   "add",
   "(",
   "$",
   "unit",
   ")",
   ";",
   "$",
   "candidate",
   "=",
   "UnitCandidate",
   "::",
   "build",
   "(",
   "$",
   "unit",
   ",",
   "$",
   "sale",
   ")",
   ";",
   "// Skip if no reservable and no releasable quantity",
   "if",
   "(",
   "(",
   "0",
   ">=",
   "$",
   "candidate",
   "->",
   "reservable",
   ")",
   "&&",
   "(",
   "0",
   ">=",
   "$",
   "candidate",
   "->",
   "releasable",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "add",
   "=",
   "false",
   ";",
   "$",
   "diff",
   "=",
   "0",
   ";",
   "if",
   "(",
   "0",
   "<",
   "$",
   "candidate",
   "->",
   "reservable",
   ")",
   "{",
   "// Unit has enough reservable quantity",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "candidates",
   ")",
   "&&",
   "0",
   ">=",
   "$",
   "diff",
   "=",
   "$",
   "quantity",
   "-",
   "$",
   "candidate",
   "->",
   "reservable",
   ")",
   "{",
   "return",
   "[",
   "$",
   "candidate",
   "]",
   ";",
   "}",
   "$",
   "add",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "candidate",
   "->",
   "getCombination",
   "(",
   "<mask>",
   "(",
   "$",
   "diff",
   ",",
   "$",
   "candidate",
   "->",
   "releasable",
   ")",
   ")",
   ")",
   "{",
   "$",
   "add",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "$",
   "add",
   ")",
   "{",
   "$",
   "candidates",
   "[",
   "]",
   "=",
   "$",
   "candidate",
   ";",
   "}",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "candidates",
   ")",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "}",
   "// Sort candidates",
   "usort",
   "(",
   "$",
   "candidates",
   ",",
   "function",
   "(",
   "UnitCandidate",
   "$",
   "a",
   ",",
   "UnitCandidate",
   "$",
   "b",
   ")",
   "use",
   "(",
   "$",
   "quantity",
   ")",
   "{",
   "// TODO sort by (reservable + releasable) DESC",
   "// TODO Simplify. Prefer:",
   "// - 'shippable' enough",
   "// - 'reservable' eq/positive/closest",
   "// - 'releasable' eq/positive/closest",
   "// Prefer units with shippable >= quantity, reservable >= quantity or releasable >= quantity",
   "foreach",
   "(",
   "[",
   "'shippable'",
   ",",
   "'reservable'",
   ",",
   "'releasable'",
   "]",
   "as",
   "$",
   "property",
   ")",
   "{",
   "if",
   "(",
   "false",
   "!==",
   "$",
   "r",
   "=",
   "$",
   "this",
   "->",
   "ceilComparison",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ",",
   "$",
   "property",
   ",",
   "$",
   "quantity",
   ")",
   ")",
   "{",
   "return",
   "$",
   "r",
   ";",
   "}",
   "}",
   "// Prefer units with shippable == quantity, reservable == quantity or releasable == quantity",
   "foreach",
   "(",
   "[",
   "'reservable'",
   ",",
   "'releasable'",
   "]",
   "as",
   "$",
   "property",
   ")",
   "{",
   "// 'shippable' ?",
   "if",
   "(",
   "false",
   "!==",
   "$",
   "r",
   "=",
   "$",
   "this",
   "->",
   "equalComparison",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ",",
   "$",
   "property",
   ",",
   "$",
   "quantity",
   ")",
   ")",
   "{",
   "return",
   "$",
   "r",
   ";",
   "}",
   "}",
   "// TODO (temporary)",
   "foreach",
   "(",
   "[",
   "'shippable'",
   ",",
   "'reservable'",
   ",",
   "'releasable'",
   "]",
   "as",
   "$",
   "property",
   ")",
   "{",
   "if",
   "(",
   "$",
   "a",
   "->",
   "{",
   "$",
   "property",
   "}",
   "!=",
   "$",
   "b",
   "->",
   "{",
   "$",
   "property",
   "}",
   ")",
   "{",
   "return",
   "$",
   "b",
   "->",
   "{",
   "$",
   "property",
   "}",
   "-",
   "$",
   "a",
   "->",
   "{",
   "$",
   "property",
   "}",
   ";",
   "}",
   "}",
   "return",
   "0",
   ";",
   "// Prefer units with assignments combination's releasable quantity (sum) that",
   "// equals or is greater than (prefer closest) aimed quantity.",
   "if",
   "(",
   "$",
   "a",
   "->",
   "combination",
   "->",
   "sum",
   "==",
   "$",
   "b",
   "->",
   "combination",
   "->",
   "sum",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "if",
   "(",
   "0",
   "<=",
   "$",
   "a",
   "->",
   "combination",
   "->",
   "sum",
   ")",
   "{",
   "return",
   "intval",
   "(",
   "0",
   ">",
   "$",
   "b",
   "->",
   "combination",
   "->",
   "sum",
   "?",
   "-",
   "1",
   ":",
   "$",
   "a",
   "->",
   "combination",
   "->",
   "sum",
   "-",
   "$",
   "b",
   "->",
   "combination",
   "->",
   "sum",
   ")",
   ";",
   "}",
   "return",
   "intval",
   "(",
   "0",
   "<",
   "$",
   "b",
   "->",
   "combination",
   "->",
   "sum",
   "?",
   "1",
   ":",
   "$",
   "b",
   "->",
   "combination",
   "->",
   "sum",
   "-",
   "$",
   "a",
   "->",
   "combination",
   "->",
   "sum",
   ")",
   ";",
   "}",
   ")",
   ";",
   "return",
   "$",
   "candidates",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-155",
  "nl_tokens": [
   "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044f",
   "\u043f\u0435\u0440\u0435\u0434",
   "\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c",
   "\u043e\u0431\u044a\u0435\u043a\u0442\u0430",
   "\u0432",
   "\u0411\u0414"
  ],
  "pl_tokens": [
   "public",
   "function",
   "beforeSave",
   "(",
   "ezcQuery",
   "$",
   "query",
   ")",
   "{",
   "$",
   "query",
   "=",
   "parent",
   "::",
   "beforeSave",
   "(",
   "$",
   "query",
   ")",
   ";",
   "/*\n         * \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u043e\u0432\u0430\u044f \u0441\u0442\u0430\u0442\u044c\u044f \u2014 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440\n         */",
   "if",
   "(",
   "$",
   "query",
   "instanceof",
   "ezcQueryInsert",
   ")",
   "{",
   "$",
   "q",
   "=",
   "$",
   "this",
   "->",
   "getTable",
   "(",
   ")",
   "->",
   "createSelectQuery",
   "(",
   "false",
   ")",
   ";",
   "$",
   "q",
   "->",
   "select",
   "(",
   "'*'",
   ")",
   ";",
   "$",
   "e",
   "=",
   "$",
   "q",
   "->",
   "expr",
   ";",
   "$",
   "q",
   "->",
   "where",
   "(",
   "$",
   "e",
   "->",
   "eq",
   "(",
   "'section'",
   ",",
   "$",
   "q",
   "->",
   "bindValue",
   "(",
   "$",
   "this",
   "->",
   "section",
   ",",
   "null",
   ",",
   "PDO",
   "::",
   "PARAM_INT",
   ")",
   ")",
   ")",
   ";",
   "$",
   "q",
   "->",
   "orderBy",
   "(",
   "'position'",
   ",",
   "$",
   "q",
   "::",
   "DESC",
   ")",
   ";",
   "/** @var self $max */",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "getTable",
   "(",
   ")",
   "->",
   "loadOneFromQuery",
   "(",
   "$",
   "q",
   ")",
   ";",
   "$",
   "query",
   "->",
   "set",
   "(",
   "'position'",
   ",",
   "$",
   "query",
   "->",
   "bindValue",
   "(",
   "$",
   "max",
   "->",
   "position",
   "+",
   "1",
   ",",
   "\":position\"",
   ",",
   "PDO",
   "::",
   "PARAM_INT",
   ")",
   ")",
   ";",
   "/*\n             * \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0430\u0434\u043e\n             */",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "preview",
   ")",
   "{",
   "$",
   "this",
   "->",
   "createPreviewFromText",
   "(",
   ")",
   ";",
   "/** @var ezcQueryInsert|ezcQueryUpdate $query */",
   "$",
   "query",
   "->",
   "set",
   "(",
   "'preview'",
   ",",
   "$",
   "query",
   "->",
   "bindValue",
   "(",
   "$",
   "this",
   "->",
   "preview",
   ",",
   "':preview'",
   ")",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "query",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-156",
  "nl_tokens": [
   "Look",
   "for",
   "group",
   "of",
   "placeholders",
   "and",
   "provide",
   "vertical",
   "alignment",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "replacePlaceholder",
   "(",
   "Tokens",
   "$",
   "tokens",
   ")",
   "{",
   "$",
   "tmpCode",
   "=",
   "$",
   "tokens",
   "->",
   "generateCode",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "j",
   "=",
   "0",
   ";",
   "$",
   "j",
   "<=",
   "$",
   "this",
   "->",
   "deepestLevel",
   ";",
   "++",
   "$",
   "j",
   ")",
   "{",
   "$",
   "placeholder",
   "=",
   "sprintf",
   "(",
   "self",
   "::",
   "ALIGNABLE_PLACEHOLDER",
   ",",
   "$",
   "j",
   ")",
   ";",
   "if",
   "(",
   "false",
   "===",
   "strpos",
   "(",
   "$",
   "tmpCode",
   ",",
   "$",
   "placeholder",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "tmpCode",
   ")",
   ";",
   "$",
   "linesWithPlaceholder",
   "=",
   "[",
   "]",
   ";",
   "$",
   "blockSize",
   "=",
   "0",
   ";",
   "$",
   "linesWithPlaceholder",
   "[",
   "$",
   "blockSize",
   "]",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "index",
   "=>",
   "$",
   "line",
   ")",
   "{",
   "if",
   "(",
   "substr_count",
   "(",
   "$",
   "line",
   ",",
   "$",
   "placeholder",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "linesWithPlaceholder",
   "[",
   "$",
   "blockSize",
   "]",
   "[",
   "]",
   "=",
   "$",
   "index",
   ";",
   "}",
   "else",
   "{",
   "++",
   "$",
   "blockSize",
   ";",
   "$",
   "linesWithPlaceholder",
   "[",
   "$",
   "blockSize",
   "]",
   "=",
   "[",
   "]",
   ";",
   "}",
   "}",
   "foreach",
   "(",
   "$",
   "linesWithPlaceholder",
   "as",
   "$",
   "group",
   ")",
   "{",
   "if",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "group",
   ")",
   "<",
   "1",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "rightmostSymbol",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "group",
   "as",
   "$",
   "index",
   ")",
   "{",
   "$",
   "rightmostSymbol",
   "=",
   "<mask>",
   "(",
   "$",
   "rightmostSymbol",
   ",",
   "strpos",
   "(",
   "utf8_decode",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ")",
   ",",
   "$",
   "placeholder",
   ")",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "group",
   "as",
   "$",
   "index",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ";",
   "$",
   "currentSymbol",
   "=",
   "strpos",
   "(",
   "utf8_decode",
   "(",
   "$",
   "line",
   ")",
   ",",
   "$",
   "placeholder",
   ")",
   ";",
   "$",
   "delta",
   "=",
   "abs",
   "(",
   "$",
   "rightmostSymbol",
   "-",
   "$",
   "currentSymbol",
   ")",
   ";",
   "if",
   "(",
   "$",
   "delta",
   ">",
   "0",
   ")",
   "{",
   "$",
   "line",
   "=",
   "str_replace",
   "(",
   "$",
   "placeholder",
   ",",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "delta",
   ")",
   ".",
   "$",
   "placeholder",
   ",",
   "$",
   "line",
   ")",
   ";",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   "=",
   "$",
   "line",
   ";",
   "}",
   "}",
   "}",
   "$",
   "tmpCode",
   "=",
   "str_replace",
   "(",
   "$",
   "placeholder",
   ",",
   "''",
   ",",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "lines",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "tmpCode",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-157",
  "nl_tokens": [
   "Provides",
   "a",
   "depth",
   "level",
   "limit",
   "for",
   "the",
   "query",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "scopeLimitDepth",
   "(",
   "$",
   "query",
   ",",
   "$",
   "limit",
   ")",
   "{",
   "$",
   "depth",
   "=",
   "$",
   "this",
   "->",
   "exists",
   "?",
   "$",
   "this",
   "->",
   "getDepth",
   "(",
   ")",
   ":",
   "$",
   "this",
   "->",
   "getLevel",
   "(",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "depth",
   "+",
   "$",
   "limit",
   ";",
   "$",
   "scopes",
   "=",
   "array",
   "(",
   "$",
   "depth",
   ",",
   "$",
   "max",
   ")",
   ";",
   "return",
   "$",
   "query",
   "->",
   "whereBetween",
   "(",
   "$",
   "this",
   "->",
   "getDepthColumnName",
   "(",
   ")",
   ",",
   "array",
   "(",
   "min",
   "(",
   "$",
   "scopes",
   ")",
   ",",
   "max",
   "(",
   "$",
   "scopes",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-158",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u307e\u3059",
   ".",
   "\u3053\u306e\u95a2\u6570\u306f\u5909\u63db\u51e6\u7406\u306b",
   "{",
   "@link",
   "http",
   ":",
   "//",
   "jp1",
   ".",
   "php",
   ".",
   "net",
   "/",
   "manual",
   "/",
   "ja",
   "/",
   "function",
   ".",
   "intval",
   ".",
   "php",
   "intval",
   "()",
   "}",
   "\u3092\u5229\u7528\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "intValue",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   "=",
   "null",
   ",",
   "$",
   "max",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "is_object",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "return",
   "self",
   "::",
   "intValue",
   "(",
   "1",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_int",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "$",
   "iValue",
   "=",
   "intval",
   "(",
   "$",
   "value",
   ")",
   ";",
   "return",
   "self",
   "::",
   "intValue",
   "(",
   "$",
   "iValue",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "min",
   ")",
   "&&",
   "isset",
   "(",
   "$",
   "max",
   ")",
   "&&",
   "$",
   "max",
   "<",
   "$",
   "min",
   ")",
   "{",
   "return",
   "self",
   "::",
   "intValue",
   "(",
   "$",
   "value",
   ",",
   "$",
   "min",
   ")",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "min",
   ")",
   "&&",
   "$",
   "value",
   "<",
   "$",
   "min",
   ")",
   "{",
   "return",
   "$",
   "min",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "max",
   ")",
   "&&",
   "$",
   "max",
   "<",
   "$",
   "value",
   ")",
   "{",
   "return",
   "$",
   "max",
   ";",
   "}",
   "return",
   "$",
   "value",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-159",
  "nl_tokens": [
   "@param",
   "float",
   "$value"
  ],
  "pl_tokens": [
   "public",
   "function",
   "contains",
   "(",
   "$",
   "value",
   ")",
   "{",
   "return",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "!==",
   "null",
   "&&",
   "$",
   "value",
   "<",
   "$",
   "this",
   "->",
   "min",
   "||",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   "&&",
   "$",
   "value",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "===",
   "$",
   "this",
   "->",
   "inverted",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-160",
  "nl_tokens": [
   "Simplifies",
   "the",
   "given",
   "polyline"
  ],
  "pl_tokens": [
   "public",
   "function",
   "simplify",
   "(",
   "Polyline",
   "$",
   "polyline",
   ")",
   ":",
   "Polyline",
   "{",
   "$",
   "counterPoints",
   "=",
   "$",
   "polyline",
   "->",
   "getNumberOfPoints",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "counterPoints",
   "<",
   "3",
   ")",
   "{",
   "return",
   "clone",
   "$",
   "polyline",
   ";",
   "}",
   "$",
   "result",
   "=",
   "new",
   "Polyline",
   "(",
   ")",
   ";",
   "$",
   "bearingCalc",
   "=",
   "new",
   "BearingEllipsoidal",
   "(",
   ")",
   ";",
   "$",
   "points",
   "=",
   "$",
   "polyline",
   "->",
   "getPoints",
   "(",
   ")",
   ";",
   "$",
   "index",
   "=",
   "0",
   ";",
   "// add the first point to the resulting polyline",
   "$",
   "result",
   "->",
   "addPoint",
   "(",
   "$",
   "points",
   "[",
   "$",
   "index",
   "]",
   ")",
   ";",
   "do",
   "{",
   "$",
   "index",
   "++",
   ";",
   "// preserve the last point of the original polyline",
   "if",
   "(",
   "$",
   "index",
   "===",
   "(",
   "$",
   "counterPoints",
   "-",
   "1",
   ")",
   ")",
   "{",
   "$",
   "result",
   "->",
   "addPoint",
   "(",
   "$",
   "points",
   "[",
   "$",
   "index",
   "]",
   ")",
   ";",
   "break",
   ";",
   "}",
   "$",
   "bearing1",
   "=",
   "$",
   "bearingCalc",
   "->",
   "calculateBearing",
   "(",
   "$",
   "points",
   "[",
   "$",
   "index",
   "-",
   "1",
   "]",
   ",",
   "$",
   "points",
   "[",
   "$",
   "index",
   "]",
   ")",
   ";",
   "$",
   "bearing2",
   "=",
   "$",
   "bearingCalc",
   "->",
   "calculateBearing",
   "(",
   "$",
   "points",
   "[",
   "$",
   "index",
   "]",
   ",",
   "$",
   "points",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   ")",
   ";",
   "$",
   "bearingDifference",
   "=",
   "<mask>",
   "(",
   "fmod",
   "(",
   "$",
   "bearing1",
   "-",
   "$",
   "bearing2",
   "+",
   "360",
   ",",
   "360",
   ")",
   ",",
   "fmod",
   "(",
   "$",
   "bearing2",
   "-",
   "$",
   "bearing1",
   "+",
   "360",
   ",",
   "360",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "bearingDifference",
   ">",
   "$",
   "this",
   "->",
   "bearingAngle",
   ")",
   "{",
   "$",
   "result",
   "->",
   "addPoint",
   "(",
   "$",
   "points",
   "[",
   "$",
   "index",
   "]",
   ")",
   ";",
   "}",
   "}",
   "while",
   "(",
   "$",
   "index",
   "<",
   "$",
   "counterPoints",
   ")",
   ";",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-161",
  "nl_tokens": [
   "Returns",
   "the",
   "request",
   "map",
   "for",
   "GET",
   "requests"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getMap",
   "(",
   ")",
   ":",
   "array",
   "{",
   "$",
   "auth",
   "=",
   "$",
   "this",
   "->",
   "auth",
   ";",
   "$",
   "view",
   "=",
   "$",
   "this",
   "->",
   "view",
   ";",
   "return",
   "[",
   "[",
   "'GET'",
   ",",
   "'/'",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "json_decode",
   "(",
   "file_get_contents",
   "(",
   "dirname",
   "(",
   "__DIR__",
   ")",
   ".",
   "\"/composer.json\"",
   ")",
   ")",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Auth/details'",
   ",",
   "function",
   "(",
   ")",
   "{",
   "$",
   "core",
   "=",
   "$",
   "this",
   "->",
   "container",
   "->",
   "get",
   "(",
   "\"TheCMSThread\\\\Core\\\\Core\"",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "core",
   "->",
   "auth",
   "(",
   ")",
   "->",
   "details",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "result",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Auth/allow/[i:min]?/[i:max]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "<mask>",
   "=",
   "4",
   ",",
   "int",
   "$",
   "max",
   "=",
   "4",
   ")",
   "{",
   "$",
   "core",
   "=",
   "$",
   "this",
   "->",
   "container",
   "->",
   "get",
   "(",
   "\"TheCMSThread\\\\Core\\\\Core\"",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "core",
   "->",
   "auth",
   "(",
   ")",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "$",
   "min",
   ",",
   "\"max\"",
   "=>",
   "$",
   "max",
   "]",
   ")",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "result",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Site/[a:property]?'",
   ",",
   "function",
   "(",
   "string",
   "$",
   "property",
   "=",
   "null",
   ")",
   "{",
   "$",
   "core",
   "=",
   "$",
   "this",
   "->",
   "container",
   "->",
   "get",
   "(",
   "\"TheCMSThread\\\\Core\\\\Core\"",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "core",
   "->",
   "site",
   "(",
   ")",
   "->",
   "{",
   "$",
   "property",
   "}",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "result",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/View'",
   ",",
   "function",
   "(",
   ")",
   "{",
   "$",
   "core",
   "=",
   "$",
   "this",
   "->",
   "container",
   "->",
   "get",
   "(",
   "\"TheCMSThread\\\\Core\\\\Core\"",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "core",
   "->",
   "view",
   "(",
   ")",
   "->",
   "details",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "result",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Navigation/all/flatten/[i:block]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "block",
   "=",
   "0",
   ")",
   "{",
   "try",
   "{",
   "$",
   "navigations_list",
   "=",
   "Model",
   "\\",
   "Navigation",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"navigation\"",
   ",",
   "\"navigations\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'navigation_block'",
   ",",
   "$",
   "block",
   ")",
   "->",
   "where",
   "(",
   "'navigation_id'",
   ",",
   "null",
   ")",
   "->",
   "get",
   "(",
   ")",
   ";",
   "$",
   "navigations",
   "=",
   "[",
   "]",
   ";",
   "$",
   "queue",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "navigations_list",
   "as",
   "$",
   "navigation",
   ")",
   "{",
   "$",
   "navigation",
   "->",
   "level",
   "=",
   "0",
   ";",
   "$",
   "navigations",
   "[",
   "]",
   "=",
   "$",
   "navigation",
   ";",
   "$",
   "queue",
   "=",
   "[",
   "$",
   "navigation",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "queue",
   "as",
   "$",
   "element",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "element",
   "->",
   "navigations",
   "as",
   "$",
   "nested_element",
   ")",
   "{",
   "$",
   "nested_element",
   "->",
   "level",
   "=",
   "$",
   "element",
   "->",
   "level",
   "+",
   "1",
   ";",
   "$",
   "navigations",
   "[",
   "]",
   "=",
   "$",
   "nested_element",
   ";",
   "$",
   "queue",
   "[",
   "]",
   "=",
   "$",
   "nested_element",
   ";",
   "}",
   "}",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "navigations",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Navigation/all/[i:block]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "block",
   "=",
   "0",
   ")",
   "{",
   "try",
   "{",
   "$",
   "navigations",
   "=",
   "Model",
   "\\",
   "Navigation",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"navigation\"",
   ",",
   "\"navigations\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'navigation_block'",
   ",",
   "$",
   "block",
   ")",
   "->",
   "where",
   "(",
   "'navigation_id'",
   ",",
   "null",
   ")",
   "->",
   "get",
   "(",
   ")",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "navigations",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Navigation/parent/[i:block]?/[i:parent]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "block",
   "=",
   "0",
   ",",
   "int",
   "$",
   "parent",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "navigation",
   "=",
   "Model",
   "\\",
   "Navigation",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"navigation\"",
   ",",
   "\"navigations\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'navigation_block'",
   ",",
   "$",
   "block",
   ")",
   "->",
   "where",
   "(",
   "'navigation_id'",
   ",",
   "$",
   "parent",
   ")",
   "->",
   "get",
   "(",
   ")",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "navigation",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Navigation/[i:id]'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "id",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "navigation",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "id",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "navigation",
   "=",
   "Model",
   "\\",
   "Navigation",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"navigation\"",
   ",",
   "\"navigations\"",
   "]",
   ")",
   "->",
   "find",
   "(",
   "$",
   "id",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No navigation ID given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "navigation",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No navigation element found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "navigation",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/all'",
   ",",
   "function",
   "(",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/template/[:template]?'",
   ",",
   "function",
   "(",
   "string",
   "$",
   "template",
   "=",
   "'default'",
   ",",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'template'",
   ",",
   "$",
   "template",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/parent/[i:parent]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "parent",
   "=",
   "null",
   ",",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'page_id'",
   ",",
   "$",
   "parent",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/type/[i:type]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "type",
   "=",
   "0",
   ",",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'type'",
   ",",
   "$",
   "type",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/link/[**:link]?'",
   ",",
   "function",
   "(",
   "string",
   "$",
   "link",
   "=",
   "'/'",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ",",
   "$",
   "view",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "'link'",
   ",",
   "$",
   "link",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "$",
   "link",
   "!=",
   "'/'",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "first",
   "(",
   ")",
   ";",
   "$",
   "view",
   "->",
   "setLink",
   "(",
   "$",
   "page",
   "->",
   "link",
   ")",
   "->",
   "get",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "page",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No page found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Page/[i:id]'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "id",
   "=",
   "null",
   ")",
   "use",
   "(",
   "$",
   "auth",
   ",",
   "$",
   "view",
   ")",
   "{",
   "try",
   "{",
   "$",
   "page",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "id",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "page",
   "=",
   "Model",
   "\\",
   "Page",
   "::",
   "with",
   "(",
   "[",
   "\"page\"",
   ",",
   "\"pages\"",
   ",",
   "\"user\"",
   "]",
   ")",
   "->",
   "where",
   "(",
   "\"id\"",
   ",",
   "$",
   "id",
   ")",
   ";",
   "if",
   "(",
   "$",
   "auth",
   "->",
   "allow",
   "(",
   "[",
   "\"min\"",
   "=>",
   "3",
   ",",
   "\"max\"",
   "=>",
   "1",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "$",
   "id",
   "!=",
   "1",
   ")",
   "{",
   "$",
   "page",
   "->",
   "where",
   "(",
   "'status'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "$",
   "page",
   "=",
   "$",
   "page",
   "->",
   "first",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No page ID given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "page",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No page found.'",
   "]",
   ";",
   "}",
   "$",
   "view",
   "->",
   "setLink",
   "(",
   "$",
   "page",
   "->",
   "link",
   ")",
   "->",
   "get",
   "(",
   ")",
   ";",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "page",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Setting/[i:id]'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "id",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "setting",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "id",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "setting",
   "=",
   "Model",
   "\\",
   "Setting",
   "::",
   "find",
   "(",
   "$",
   "id",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No setting ID given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "setting",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No setting found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "setting",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Role/all'",
   ",",
   "function",
   "(",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "role",
   "=",
   "Model",
   "\\",
   "Role",
   "::",
   "with",
   "(",
   "\"users\"",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "role",
   "=",
   "$",
   "role",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "role",
   "=",
   "$",
   "role",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "role",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/Role/[i:id]'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "id",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "role",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "id",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "role",
   "=",
   "Model",
   "\\",
   "Role",
   "::",
   "with",
   "(",
   "\"users\"",
   ")",
   "->",
   "find",
   "(",
   "$",
   "id",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No role ID given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "role",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No role found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "role",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/User/all'",
   ",",
   "function",
   "(",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "user",
   "=",
   "Model",
   "\\",
   "User",
   "::",
   "with",
   "(",
   "\"role\"",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "user",
   "=",
   "$",
   "user",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "user",
   "=",
   "$",
   "user",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "user",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/User/role/[i:role]?'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "role",
   "=",
   "5",
   ",",
   "array",
   "$",
   "request",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "user",
   "=",
   "Model",
   "\\",
   "User",
   "::",
   "with",
   "(",
   "\"role\"",
   ")",
   "->",
   "where",
   "(",
   "'role_id'",
   ",",
   "$",
   "role",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "request",
   ")",
   "===",
   "false",
   "&&",
   "empty",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "false",
   "&&",
   "is_numeric",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "user",
   "=",
   "$",
   "user",
   "->",
   "paginate",
   "(",
   "$",
   "request",
   "[",
   "\"paginate\"",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "user",
   "=",
   "$",
   "user",
   "->",
   "get",
   "(",
   ")",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "user",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/User/verify-reset/[a:reset_code]'",
   ",",
   "function",
   "(",
   "string",
   "$",
   "reset_code",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "reset_code",
   ")",
   "===",
   "false",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No user found\"",
   ")",
   ";",
   "}",
   "$",
   "user",
   "=",
   "Model",
   "\\",
   "User",
   "::",
   "where",
   "(",
   "\"reset_code\"",
   ",",
   "$",
   "reset_code",
   ")",
   "->",
   "first",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "user",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "false",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "true",
   "]",
   ";",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/User/username/[u:username]'",
   ",",
   "function",
   "(",
   "string",
   "$",
   "username",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "user",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "username",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "user",
   "=",
   "Model",
   "\\",
   "User",
   "::",
   "with",
   "(",
   "\"role\"",
   ")",
   "->",
   "where",
   "(",
   "'user'",
   ",",
   "$",
   "username",
   ")",
   "->",
   "first",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No user username given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "user",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No user found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "user",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   ",",
   "[",
   "'GET'",
   ",",
   "'/User/[i:id]'",
   ",",
   "function",
   "(",
   "int",
   "$",
   "id",
   "=",
   "null",
   ")",
   "{",
   "try",
   "{",
   "$",
   "user",
   "=",
   "null",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "id",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "user",
   "=",
   "Model",
   "\\",
   "User",
   "::",
   "with",
   "(",
   "\"role\"",
   ")",
   "->",
   "find",
   "(",
   "$",
   "id",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"No user ID given\"",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "user",
   "===",
   "null",
   ")",
   "{",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 404'",
   ",",
   "true",
   ",",
   "404",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "'No user found.'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "\"headers\"",
   "=>",
   "[",
   "[",
   "'X-PHP-Response-Code: 200'",
   ",",
   "true",
   ",",
   "200",
   "]",
   "]",
   ",",
   "\"response\"",
   "=>",
   "$",
   "user",
   "]",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "}",
   "]",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-162",
  "nl_tokens": [
   "Look",
   "for",
   "group",
   "of",
   "placeholders",
   "and",
   "provide",
   "vertical",
   "alignment",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "replacePlaceholders",
   "(",
   "Tokens",
   "$",
   "tokens",
   ",",
   "$",
   "alignStrategy",
   ")",
   "{",
   "$",
   "tmpCode",
   "=",
   "$",
   "tokens",
   "->",
   "generateCode",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "j",
   "=",
   "0",
   ";",
   "$",
   "j",
   "<=",
   "$",
   "this",
   "->",
   "deepestLevel",
   ";",
   "++",
   "$",
   "j",
   ")",
   "{",
   "$",
   "placeholder",
   "=",
   "sprintf",
   "(",
   "self",
   "::",
   "ALIGN_PLACEHOLDER",
   ",",
   "$",
   "j",
   ")",
   ";",
   "if",
   "(",
   "false",
   "===",
   "strpos",
   "(",
   "$",
   "tmpCode",
   ",",
   "$",
   "placeholder",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "tmpCode",
   ")",
   ";",
   "$",
   "groups",
   "=",
   "[",
   "]",
   ";",
   "$",
   "groupIndex",
   "=",
   "0",
   ";",
   "$",
   "groups",
   "[",
   "$",
   "groupIndex",
   "]",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "index",
   "=>",
   "$",
   "line",
   ")",
   "{",
   "if",
   "(",
   "substr_count",
   "(",
   "$",
   "line",
   ",",
   "$",
   "placeholder",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "groups",
   "[",
   "$",
   "groupIndex",
   "]",
   "[",
   "]",
   "=",
   "$",
   "index",
   ";",
   "}",
   "else",
   "{",
   "++",
   "$",
   "groupIndex",
   ";",
   "$",
   "groups",
   "[",
   "$",
   "groupIndex",
   "]",
   "=",
   "[",
   "]",
   ";",
   "}",
   "}",
   "foreach",
   "(",
   "$",
   "groups",
   "as",
   "$",
   "group",
   ")",
   "{",
   "if",
   "(",
   "\\",
   "count",
   "(",
   "$",
   "group",
   ")",
   "<",
   "1",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "self",
   "::",
   "ALIGN",
   "!==",
   "$",
   "alignStrategy",
   ")",
   "{",
   "// move place holders to match strategy",
   "foreach",
   "(",
   "$",
   "group",
   "as",
   "$",
   "index",
   ")",
   "{",
   "$",
   "currentPosition",
   "=",
   "strpos",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ",",
   "$",
   "placeholder",
   ")",
   ";",
   "$",
   "before",
   "=",
   "substr",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ",",
   "0",
   ",",
   "$",
   "currentPosition",
   ")",
   ";",
   "if",
   "(",
   "self",
   "::",
   "ALIGN_SINGLE_SPACE",
   "===",
   "$",
   "alignStrategy",
   ")",
   "{",
   "if",
   "(",
   "1",
   ">",
   "\\",
   "strlen",
   "(",
   "$",
   "before",
   ")",
   "||",
   "' '",
   "!==",
   "substr",
   "(",
   "$",
   "before",
   ",",
   "-",
   "1",
   ")",
   ")",
   "{",
   "// if last char of before-content is not ' '; add it",
   "$",
   "before",
   ".=",
   "' '",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "self",
   "::",
   "ALIGN_SINGLE_SPACE_MINIMAL",
   "===",
   "$",
   "alignStrategy",
   ")",
   "{",
   "if",
   "(",
   "1",
   "!==",
   "Preg",
   "::",
   "match",
   "(",
   "'/^\\h+$/'",
   ",",
   "$",
   "before",
   ")",
   ")",
   "{",
   "// if indent; do not move, leave to other fixer",
   "$",
   "before",
   "=",
   "rtrim",
   "(",
   "$",
   "before",
   ")",
   ".",
   "' '",
   ";",
   "}",
   "}",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   "=",
   "$",
   "before",
   ".",
   "substr",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ",",
   "$",
   "currentPosition",
   ")",
   ";",
   "}",
   "}",
   "$",
   "rightmostSymbol",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "group",
   "as",
   "$",
   "index",
   ")",
   "{",
   "$",
   "rightmostSymbol",
   "=",
   "<mask>",
   "(",
   "$",
   "rightmostSymbol",
   ",",
   "strpos",
   "(",
   "utf8_decode",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ")",
   ",",
   "$",
   "placeholder",
   ")",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "group",
   "as",
   "$",
   "index",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   ";",
   "$",
   "currentSymbol",
   "=",
   "strpos",
   "(",
   "utf8_decode",
   "(",
   "$",
   "line",
   ")",
   ",",
   "$",
   "placeholder",
   ")",
   ";",
   "$",
   "delta",
   "=",
   "abs",
   "(",
   "$",
   "rightmostSymbol",
   "-",
   "$",
   "currentSymbol",
   ")",
   ";",
   "if",
   "(",
   "$",
   "delta",
   ">",
   "0",
   ")",
   "{",
   "$",
   "line",
   "=",
   "str_replace",
   "(",
   "$",
   "placeholder",
   ",",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "delta",
   ")",
   ".",
   "$",
   "placeholder",
   ",",
   "$",
   "line",
   ")",
   ";",
   "$",
   "lines",
   "[",
   "$",
   "index",
   "]",
   "=",
   "$",
   "line",
   ";",
   "}",
   "}",
   "}",
   "$",
   "tmpCode",
   "=",
   "str_replace",
   "(",
   "$",
   "placeholder",
   ",",
   "''",
   ",",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "lines",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "tmpCode",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-163",
  "nl_tokens": [
   "Read",
   "the",
   "dimensions",
   "of",
   "a",
   "matrix",
   "and",
   "re",
   "-",
   "index",
   "it",
   "with",
   "straight",
   "numeric",
   "keys",
   "starting",
   "from",
   "row",
   "0",
   "column",
   "0",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "getMatrixDimensions",
   "(",
   "array",
   "&",
   "$",
   "matrix",
   ")",
   "{",
   "$",
   "matrixRows",
   "=",
   "count",
   "(",
   "$",
   "matrix",
   ")",
   ";",
   "$",
   "matrixColumns",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "matrix",
   "as",
   "$",
   "rowKey",
   "=>",
   "$",
   "rowValue",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_array",
   "(",
   "$",
   "rowValue",
   ")",
   ")",
   "{",
   "$",
   "matrix",
   "[",
   "$",
   "rowKey",
   "]",
   "=",
   "[",
   "$",
   "rowValue",
   "]",
   ";",
   "$",
   "matrixColumns",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "matrixColumns",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "matrix",
   "[",
   "$",
   "rowKey",
   "]",
   "=",
   "array_values",
   "(",
   "$",
   "rowValue",
   ")",
   ";",
   "$",
   "matrixColumns",
   "=",
   "max",
   "(",
   "count",
   "(",
   "$",
   "rowValue",
   ")",
   ",",
   "$",
   "matrixColumns",
   ")",
   ";",
   "}",
   "}",
   "$",
   "matrix",
   "=",
   "array_values",
   "(",
   "$",
   "matrix",
   ")",
   ";",
   "return",
   "[",
   "$",
   "matrixRows",
   ",",
   "$",
   "matrixColumns",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-164",
  "nl_tokens": [
   "Write",
   "the",
   "GUTS",
   "BIFF",
   "record",
   ".",
   "This",
   "is",
   "used",
   "to",
   "configure",
   "the",
   "gutter",
   "margins",
   "where",
   "Excel",
   "outline",
   "symbols",
   "are",
   "displayed",
   ".",
   "The",
   "visibility",
   "of",
   "the",
   "gutters",
   "is",
   "controlled",
   "by",
   "a",
   "flag",
   "in",
   "WSBOOL",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "writeGuts",
   "(",
   ")",
   "{",
   "$",
   "record",
   "=",
   "0x0080",
   ";",
   "// Record identifier",
   "$",
   "length",
   "=",
   "0x0008",
   ";",
   "// Bytes to follow",
   "$",
   "dxRwGut",
   "=",
   "0x0000",
   ";",
   "// Size of row gutter",
   "$",
   "dxColGut",
   "=",
   "0x0000",
   ";",
   "// Size of col gutter",
   "// determine maximum row outline level",
   "$",
   "maxRowOutlineLevel",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "phpSheet",
   "->",
   "getRowDimensions",
   "(",
   ")",
   "as",
   "$",
   "rowDimension",
   ")",
   "{",
   "$",
   "maxRowOutlineLevel",
   "=",
   "<mask>",
   "(",
   "$",
   "maxRowOutlineLevel",
   ",",
   "$",
   "rowDimension",
   "->",
   "getOutlineLevel",
   "(",
   ")",
   ")",
   ";",
   "}",
   "$",
   "col_level",
   "=",
   "0",
   ";",
   "// Calculate the maximum column outline level. The equivalent calculation",
   "// for the row outline level is carried out in writeRow().",
   "$",
   "colcount",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "columnInfo",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "colcount",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "col_level",
   "=",
   "max",
   "(",
   "$",
   "this",
   "->",
   "columnInfo",
   "[",
   "$",
   "i",
   "]",
   "[",
   "5",
   "]",
   ",",
   "$",
   "col_level",
   ")",
   ";",
   "}",
   "// Set the limits for the outline levels (0 <= x <= 7).",
   "$",
   "col_level",
   "=",
   "max",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "col_level",
   ",",
   "7",
   ")",
   ")",
   ";",
   "// The displayed level is one greater than the max outline levels",
   "if",
   "(",
   "$",
   "maxRowOutlineLevel",
   ")",
   "{",
   "++",
   "$",
   "maxRowOutlineLevel",
   ";",
   "}",
   "if",
   "(",
   "$",
   "col_level",
   ")",
   "{",
   "++",
   "$",
   "col_level",
   ";",
   "}",
   "$",
   "header",
   "=",
   "pack",
   "(",
   "'vv'",
   ",",
   "$",
   "record",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "data",
   "=",
   "pack",
   "(",
   "'vvvv'",
   ",",
   "$",
   "dxRwGut",
   ",",
   "$",
   "dxColGut",
   ",",
   "$",
   "maxRowOutlineLevel",
   ",",
   "$",
   "col_level",
   ")",
   ";",
   "$",
   "this",
   "->",
   "append",
   "(",
   "$",
   "header",
   ".",
   "$",
   "data",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-165",
  "nl_tokens": [
   "Gets",
   "many",
   "random",
   "items",
   "without",
   "replacement",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getManyWithoutReplacement",
   "(",
   "$",
   "n",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_integer",
   "(",
   "$",
   "n",
   ")",
   "||",
   "$",
   "n",
   "<",
   "2",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'You must take 2 or more items in this case.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "range",
   "->",
   "as_integer",
   ")",
   "{",
   "$",
   "arr_range",
   "=",
   "range",
   "(",
   "$",
   "this",
   "->",
   "range",
   "->",
   "<mask>",
   ",",
   "$",
   "this",
   "->",
   "range",
   "->",
   "max",
   ")",
   ";",
   "$",
   "max_takable",
   "=",
   "count",
   "(",
   "$",
   "arr_range",
   ")",
   ";",
   "shuffle",
   "(",
   "$",
   "arr_range",
   ")",
   ";",
   "if",
   "(",
   "$",
   "n",
   ">",
   "$",
   "max_takable",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "OutOfRangeException",
   "(",
   "sprintf",
   "(",
   "'Cannot take without replacement more than available items into range [%d;%d]'",
   ",",
   "$",
   "this",
   "->",
   "range",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "range",
   "->",
   "max",
   ")",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "n",
   "==",
   "$",
   "max_takable",
   ")",
   "{",
   "return",
   "array_values",
   "(",
   "$",
   "arr_range",
   ")",
   ";",
   "}",
   "else",
   "{",
   "return",
   "array_slice",
   "(",
   "$",
   "arr_range",
   ",",
   "0",
   ",",
   "$",
   "n",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "arr_out",
   "=",
   "array",
   "(",
   ")",
   ";",
   "while",
   "(",
   "count",
   "(",
   "$",
   "arr_out",
   ")",
   "<",
   "$",
   "n",
   ")",
   "{",
   "$",
   "r",
   "=",
   "$",
   "this",
   "->",
   "get",
   "(",
   ")",
   ";",
   "if",
   "(",
   "!",
   "in_array",
   "(",
   "$",
   "r",
   ",",
   "$",
   "arr_out",
   ")",
   ")",
   "{",
   "$",
   "arr_out",
   "[",
   "]",
   "=",
   "$",
   "r",
   ";",
   "}",
   "}",
   "return",
   "$",
   "arr_out",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-166",
  "nl_tokens": [
   "Sets",
   "min",
   "and",
   "max",
   "value",
   "for",
   "random",
   "theta",
   "angle"
  ],
  "pl_tokens": [
   "public",
   "function",
   "theta",
   "(",
   "$",
   "float_min",
   ",",
   "$",
   "float_max",
   ")",
   "{",
   "self",
   "::",
   "checkOrder",
   "(",
   "$",
   "float_min",
   ",",
   "$",
   "float_max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "r",
   "||",
   "$",
   "this",
   "->",
   "i",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "'You cannot set theta value, because algebraic form is in use.'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "theta",
   "=",
   "new",
   "\\",
   "stdClass",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "<mask>",
   "=",
   "$",
   "float_min",
   ";",
   "$",
   "this",
   "->",
   "theta",
   "->",
   "max",
   "=",
   "$",
   "float_max",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-167",
  "nl_tokens": [
   "Get",
   "row",
   "dimension",
   "at",
   "a",
   "specific",
   "row",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getRowDimension",
   "(",
   "$",
   "pRow",
   ",",
   "$",
   "create",
   "=",
   "true",
   ")",
   "{",
   "// Found",
   "$",
   "found",
   "=",
   "null",
   ";",
   "// Get row dimension",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "rowDimensions",
   "[",
   "$",
   "pRow",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "create",
   ")",
   "{",
   "return",
   "null",
   ";",
   "}",
   "$",
   "this",
   "->",
   "rowDimensions",
   "[",
   "$",
   "pRow",
   "]",
   "=",
   "new",
   "RowDimension",
   "(",
   "$",
   "pRow",
   ")",
   ";",
   "$",
   "this",
   "->",
   "cachedHighestRow",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "cachedHighestRow",
   ",",
   "$",
   "pRow",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "rowDimensions",
   "[",
   "$",
   "pRow",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-168",
  "nl_tokens": [
   "Sets",
   "min",
   "and",
   "max",
   "value",
   "for",
   "random",
   "rho"
  ],
  "pl_tokens": [
   "public",
   "function",
   "rho",
   "(",
   "$",
   "float_min",
   ",",
   "$",
   "float_max",
   ")",
   "{",
   "self",
   "::",
   "checkOrder",
   "(",
   "$",
   "float_min",
   ",",
   "$",
   "float_max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "float_min",
   "<",
   "0",
   "||",
   "$",
   "float_max",
   "<",
   "0",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Rho value must be a positive number!'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "r",
   "||",
   "$",
   "this",
   "->",
   "i",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RuntimeException",
   "(",
   "'You cannot set rho value, because algebraic form is in use.'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "rho",
   "=",
   "new",
   "\\",
   "stdClass",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "<mask>",
   "=",
   "$",
   "float_min",
   ";",
   "$",
   "this",
   "->",
   "rho",
   "->",
   "max",
   "=",
   "$",
   "float_max",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-169",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "applyFix",
   "(",
   "\\",
   "SplFileInfo",
   "$",
   "file",
   ",",
   "Tokens",
   "$",
   "tokens",
   ")",
   "{",
   "$",
   "insideForParenthesesUntil",
   "=",
   "null",
   ";",
   "for",
   "(",
   "$",
   "index",
   "=",
   "0",
   ",",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "tokens",
   ")",
   "-",
   "1",
   ";",
   "$",
   "index",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "index",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "configuration",
   "[",
   "'remove_in_empty_for_expressions'",
   "]",
   ")",
   "{",
   "if",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isGivenKind",
   "(",
   "T_FOR",
   ")",
   ")",
   "{",
   "$",
   "index",
   "=",
   "$",
   "tokens",
   "->",
   "getNextMeaningfulToken",
   "(",
   "$",
   "index",
   ")",
   ";",
   "$",
   "insideForParenthesesUntil",
   "=",
   "$",
   "tokens",
   "->",
   "findBlockEnd",
   "(",
   "Tokens",
   "::",
   "BLOCK_TYPE_PARENTHESIS_BRACE",
   ",",
   "$",
   "index",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "$",
   "index",
   "===",
   "$",
   "insideForParenthesesUntil",
   ")",
   "{",
   "$",
   "insideForParenthesesUntil",
   "=",
   "null",
   ";",
   "continue",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "equals",
   "(",
   "';'",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "isWhitespace",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "equalsAny",
   "(",
   "[",
   "')'",
   ",",
   "[",
   "T_INLINE_HTML",
   "]",
   "]",
   ")",
   "&&",
   "(",
   "!",
   "$",
   "this",
   "->",
   "configuration",
   "[",
   "'remove_in_empty_for_expressions'",
   "]",
   "||",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "equals",
   "(",
   "';'",
   ")",
   ")",
   ")",
   "{",
   "$",
   "tokens",
   "->",
   "insertAt",
   "(",
   "$",
   "index",
   "+",
   "1",
   ",",
   "new",
   "Token",
   "(",
   "[",
   "T_WHITESPACE",
   ",",
   "' '",
   "]",
   ")",
   ")",
   ";",
   "++",
   "$",
   "max",
   ";",
   "}",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "insideForParenthesesUntil",
   "&&",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "equals",
   "(",
   "';'",
   ")",
   "||",
   "$",
   "index",
   "+",
   "2",
   "===",
   "$",
   "insideForParenthesesUntil",
   ")",
   "&&",
   "!",
   "Preg",
   "::",
   "match",
   "(",
   "'/\\R/'",
   ",",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "tokens",
   "->",
   "clearAt",
   "(",
   "$",
   "index",
   "+",
   "1",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   ")",
   "&&",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "equals",
   "(",
   "[",
   "T_WHITESPACE",
   ",",
   "' '",
   "]",
   ")",
   "&&",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "->",
   "isWhitespace",
   "(",
   "\" \\t\"",
   ")",
   "&&",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "isComment",
   "(",
   ")",
   "&&",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "2",
   "]",
   "->",
   "equals",
   "(",
   "')'",
   ")",
   ")",
   "{",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   "=",
   "new",
   "Token",
   "(",
   "[",
   "T_WHITESPACE",
   ",",
   "' '",
   "]",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-170",
  "nl_tokens": [
   "save",
   "the",
   "send",
   "mail",
   "to",
   "disk"
  ],
  "pl_tokens": [
   "public",
   "function",
   "save",
   "(",
   "$",
   "filename",
   ")",
   "{",
   "$",
   "f3",
   "=",
   "\\",
   "Base",
   "::",
   "instance",
   "(",
   ")",
   ";",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "this",
   "->",
   "smtp",
   "->",
   "log",
   "(",
   ")",
   ")",
   ";",
   "$",
   "start",
   "=",
   "false",
   ";",
   "$",
   "out",
   "=",
   "''",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ",",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "start",
   "&&",
   "preg_match",
   "(",
   "'/^354.*?$/'",
   ",",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "{",
   "$",
   "start",
   "=",
   "true",
   ";",
   "continue",
   ";",
   "}",
   "elseif",
   "(",
   "preg_match",
   "(",
   "'/^250.*?$\\s^QUIT/m'",
   ",",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ".",
   "(",
   "$",
   "i",
   "+",
   "1",
   "<",
   "$",
   "max",
   "?",
   "\"\\n\"",
   ".",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "+",
   "1",
   "]",
   ":",
   "''",
   ")",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "break",
   ";",
   "if",
   "(",
   "$",
   "start",
   ")",
   "$",
   "out",
   ".=",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ".",
   "\"\\n\"",
   ";",
   "}",
   "if",
   "(",
   "$",
   "out",
   ")",
   "{",
   "$",
   "path",
   "=",
   "$",
   "f3",
   "->",
   "get",
   "(",
   "'mailer.storage_path'",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_dir",
   "(",
   "$",
   "path",
   ")",
   ")",
   "mkdir",
   "(",
   "$",
   "path",
   ",",
   "0777",
   ",",
   "true",
   ")",
   ";",
   "$",
   "f3",
   "->",
   "write",
   "(",
   "$",
   "path",
   ".",
   "$",
   "filename",
   ",",
   "$",
   "out",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-171",
  "nl_tokens": [
   "{",
   "@inheritdoc",
   "}"
  ],
  "pl_tokens": [
   "public",
   "function",
   "offsetUnset",
   "(",
   "$",
   "index",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "[",
   "$",
   "index",
   "]",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "OutOfBoundsException",
   "(",
   "sprintf",
   "(",
   "'Index %s is invalid or does not exist.'",
   ",",
   "$",
   "index",
   ")",
   ")",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "this",
   ")",
   "-",
   "1",
   ";",
   "while",
   "(",
   "$",
   "index",
   "<",
   "$",
   "max",
   ")",
   "{",
   "$",
   "this",
   "[",
   "$",
   "index",
   "]",
   "=",
   "$",
   "this",
   "[",
   "$",
   "index",
   "+",
   "1",
   "]",
   ";",
   "++",
   "$",
   "index",
   ";",
   "}",
   "parent",
   "::",
   "offsetUnset",
   "(",
   "$",
   "index",
   ")",
   ";",
   "$",
   "this",
   "->",
   "setSize",
   "(",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-172",
  "nl_tokens": [
   "Check",
   "if",
   "the",
   "input",
   "data",
   "is",
   "good",
   "or",
   "needs",
   "to",
   "be",
   "massaged",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "_massageBlockInput",
   "(",
   "&",
   "$",
   "in",
   ")",
   "{",
   "if",
   "(",
   "is_string",
   "(",
   "$",
   "in",
   ")",
   ")",
   "{",
   "$",
   "in",
   "=",
   "json_decode",
   "(",
   "$",
   "in",
   ")",
   ";",
   "$",
   "jsonLastErr",
   "=",
   "json_last_error",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "jsonLastErr",
   "!==",
   "JSON_ERROR_NONE",
   ")",
   "{",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'invalid input type (string); tried as JSON: '",
   ".",
   "json_last_error_msg",
   "(",
   ")",
   ",",
   "$",
   "jsonLastErr",
   ")",
   ";",
   "}",
   "}",
   "switch",
   "(",
   "gettype",
   "(",
   "$",
   "in",
   ")",
   ")",
   "{",
   "case",
   "'object'",
   ":",
   "break",
   ";",
   "case",
   "'array'",
   ":",
   "//\tTest to see if it's an indexed or an associative array.",
   "//\tLeave associative array as is.",
   "//\tCopy indexed array by position to a named array",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "in",
   ")",
   "&&",
   "array_values",
   "(",
   "$",
   "in",
   ")",
   "===",
   "$",
   "in",
   ")",
   "{",
   "$",
   "newArr",
   "=",
   "[",
   "]",
   ";",
   "$",
   "minCount",
   "=",
   "<mask>",
   "(",
   "count",
   "(",
   "$",
   "in",
   ")",
   ",",
   "$",
   "this",
   "->",
   "_count",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "minCount",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "newArr",
   "[",
   "$",
   "this",
   "->",
   "_publicNames",
   "[",
   "$",
   "i",
   "]",
   "]",
   "=",
   "$",
   "in",
   "[",
   "$",
   "i",
   "]",
   ";",
   "}",
   "$",
   "in",
   "=",
   "$",
   "newArr",
   ";",
   "}",
   "break",
   ";",
   "case",
   "'null'",
   ":",
   "case",
   "'NULL'",
   ":",
   "$",
   "in",
   "=",
   "[",
   "]",
   ";",
   "break",
   ";",
   "case",
   "'bool'",
   ":",
   "case",
   "'boolean'",
   ":",
   "/** A 'false' is returned by MySQL:PDO for \"no results\" */",
   "if",
   "(",
   "false",
   "===",
   "$",
   "in",
   ")",
   "{",
   "/** Change false to empty array. */",
   "$",
   "in",
   "=",
   "[",
   "]",
   ";",
   "break",
   ";",
   "}",
   "//\tA boolean 'true' falls through.",
   "default",
   ":",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'invalid input type: '",
   ".",
   "gettype",
   "(",
   "$",
   "in",
   ")",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-173",
  "nl_tokens": [
   "\u6307\u5b9a\u3055\u308c\u305f",
   "Unicode",
   "\u7b26\u53f7\u70b9\u3092\u8868\u73fe\u3059\u308b",
   "1",
   "\u6587\u5b57\u5206\u306e",
   "UTF",
   "-",
   "8",
   "\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "encodeUnicode",
   "(",
   "$",
   "unicode",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_int",
   "(",
   "$",
   "unicode",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "encodeUnicode",
   "(",
   "intval",
   "(",
   "$",
   "unicode",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "unicode",
   "<",
   "0",
   "||",
   "0xFFFF",
   "<",
   "$",
   "unicode",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "encodeUnicode",
   "(",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "unicode",
   "%",
   "0x200000",
   ")",
   ")",
   ";",
   "}",
   "$",
   "count",
   "=",
   "$",
   "this",
   "->",
   "getCharCount",
   "(",
   "$",
   "unicode",
   ")",
   ";",
   "if",
   "(",
   "$",
   "count",
   "===",
   "1",
   ")",
   "{",
   "return",
   "chr",
   "(",
   "$",
   "unicode",
   ")",
   ";",
   "}",
   "$",
   "result",
   "=",
   "array",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "1",
   ";",
   "$",
   "i",
   "<",
   "$",
   "count",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "array_unshift",
   "(",
   "$",
   "result",
   ",",
   "0x80",
   "+",
   "$",
   "unicode",
   "%",
   "64",
   ")",
   ";",
   "// Last 6 bit",
   "$",
   "unicode",
   ">>=",
   "6",
   ";",
   "}",
   "array_unshift",
   "(",
   "$",
   "result",
   ",",
   "$",
   "this",
   "->",
   "getFirstCharPrefix",
   "(",
   "$",
   "count",
   ")",
   "+",
   "$",
   "unicode",
   ")",
   ";",
   "return",
   "implode",
   "(",
   "\"\"",
   ",",
   "array_map",
   "(",
   "\"chr\"",
   ",",
   "$",
   "result",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-174",
  "nl_tokens": [
   "Return",
   "the",
   "path",
   "of",
   "file",
   "$FullPath",
   "relatively",
   "to",
   "the",
   "path",
   "of",
   "file",
   "$RelativeTo",
   ".",
   "For",
   "example",
   ":",
   "dir1",
   "/",
   "dir2",
   "/",
   "file_a",
   ".",
   "xml",
   "relatively",
   "to",
   "dir1",
   "/",
   "dir2",
   "/",
   "file_b",
   ".",
   "xml",
   "is",
   "file_a",
   ".",
   "xml",
   "dir1",
   "/",
   "file_a",
   ".",
   "xml",
   "relatively",
   "to",
   "dir1",
   "/",
   "dir2",
   "/",
   "file_b",
   ".",
   "xml",
   "is",
   "..",
   "/",
   "file_a",
   ".",
   "xml"
  ],
  "pl_tokens": [
   "function",
   "OpenXML_GetRelativePath",
   "(",
   "$",
   "FullPath",
   ",",
   "$",
   "RelativeTo",
   ")",
   "{",
   "$",
   "fp",
   "=",
   "explode",
   "(",
   "'/'",
   ",",
   "$",
   "FullPath",
   ")",
   ";",
   "$",
   "fp_file",
   "=",
   "array_pop",
   "(",
   "$",
   "fp",
   ")",
   ";",
   "$",
   "fp_max",
   "=",
   "count",
   "(",
   "$",
   "fp",
   ")",
   "-",
   "1",
   ";",
   "$",
   "rt",
   "=",
   "explode",
   "(",
   "'/'",
   ",",
   "$",
   "RelativeTo",
   ")",
   ";",
   "$",
   "rt_file",
   "=",
   "array_pop",
   "(",
   "$",
   "rt",
   ")",
   ";",
   "$",
   "rt_max",
   "=",
   "count",
   "(",
   "$",
   "rt",
   ")",
   "-",
   "1",
   ";",
   "// First different item",
   "$",
   "<mask>",
   "=",
   "min",
   "(",
   "$",
   "fp_max",
   ",",
   "$",
   "rt_max",
   ")",
   ";",
   "while",
   "(",
   "(",
   "$",
   "min",
   ">=",
   "0",
   ")",
   "&&",
   "(",
   "$",
   "fp",
   "[",
   "0",
   "]",
   "==",
   "$",
   "rt",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "min",
   "--",
   ";",
   "array_shift",
   "(",
   "$",
   "fp",
   ")",
   ";",
   "array_shift",
   "(",
   "$",
   "rt",
   ")",
   ";",
   "}",
   "$",
   "path",
   "=",
   "str_repeat",
   "(",
   "'../'",
   ",",
   "count",
   "(",
   "$",
   "rt",
   ")",
   ")",
   ";",
   "$",
   "path",
   ".=",
   "implode",
   "(",
   "'/'",
   ",",
   "$",
   "fp",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "fp",
   ")",
   ">",
   "0",
   ")",
   "$",
   "path",
   ".=",
   "'/'",
   ";",
   "$",
   "path",
   ".=",
   "$",
   "fp_file",
   ";",
   "return",
   "$",
   "path",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-175",
  "nl_tokens": [
   "Count",
   "the",
   "number",
   "of",
   "colors",
   "in",
   "the",
   "image"
  ],
  "pl_tokens": [
   "public",
   "function",
   "countColors",
   "(",
   "$",
   "<mask>",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "!",
   "imageistruecolor",
   "(",
   "$",
   "this",
   "->",
   "gdResource",
   ")",
   ")",
   "{",
   "return",
   "imagecolorstotal",
   "(",
   "$",
   "this",
   "->",
   "gdResource",
   ")",
   ";",
   "}",
   "$",
   "colors",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "width",
   "=",
   "imagesx",
   "(",
   "$",
   "this",
   "->",
   "gdResource",
   ")",
   ";",
   "$",
   "height",
   "=",
   "imagesy",
   "(",
   "$",
   "this",
   "->",
   "gdResource",
   ")",
   ";",
   "for",
   "(",
   "$",
   "x",
   "=",
   "0",
   ";",
   "$",
   "x",
   "<",
   "$",
   "width",
   ";",
   "$",
   "x",
   "++",
   ")",
   "{",
   "for",
   "(",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "y",
   "<",
   "$",
   "height",
   ";",
   "$",
   "y",
   "++",
   ")",
   "{",
   "$",
   "colors",
   "[",
   "imagecolorat",
   "(",
   "$",
   "this",
   "->",
   "gdResource",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ")",
   "]",
   "=",
   "true",
   ";",
   "if",
   "(",
   "$",
   "max",
   "!==",
   "null",
   "&&",
   "\\",
   "count",
   "(",
   "$",
   "colors",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "break",
   "2",
   ";",
   "}",
   "}",
   "}",
   "return",
   "\\",
   "count",
   "(",
   "$",
   "colors",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-176",
  "nl_tokens": [
   "Renders",
   "the",
   "CAPTCHA",
   "image",
   "based",
   "on",
   "the",
   "code",
   "using",
   "GD",
   "library",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "renderImageByGD",
   "(",
   "$",
   "code",
   ")",
   "{",
   "$",
   "image",
   "=",
   "imagecreatetruecolor",
   "(",
   "$",
   "this",
   "->",
   "width",
   ",",
   "$",
   "this",
   "->",
   "height",
   ")",
   ";",
   "$",
   "backColor",
   "=",
   "imagecolorallocate",
   "(",
   "$",
   "image",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "this",
   "->",
   "backColor",
   "%",
   "0x1000000",
   "/",
   "0x10000",
   ")",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "this",
   "->",
   "backColor",
   "%",
   "0x10000",
   "/",
   "0x100",
   ")",
   ",",
   "$",
   "this",
   "->",
   "backColor",
   "%",
   "0x100",
   ")",
   ";",
   "imagefilledrectangle",
   "(",
   "$",
   "image",
   ",",
   "0",
   ",",
   "0",
   ",",
   "$",
   "this",
   "->",
   "width",
   "-",
   "1",
   ",",
   "$",
   "this",
   "->",
   "height",
   "-",
   "1",
   ",",
   "$",
   "backColor",
   ")",
   ";",
   "imagecolordeallocate",
   "(",
   "$",
   "image",
   ",",
   "$",
   "backColor",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "transparent",
   ")",
   "{",
   "imagecolortransparent",
   "(",
   "$",
   "image",
   ",",
   "$",
   "backColor",
   ")",
   ";",
   "}",
   "$",
   "foreColor",
   "=",
   "imagecolorallocate",
   "(",
   "$",
   "image",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "this",
   "->",
   "foreColor",
   "%",
   "0x1000000",
   "/",
   "0x10000",
   ")",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "this",
   "->",
   "foreColor",
   "%",
   "0x10000",
   "/",
   "0x100",
   ")",
   ",",
   "$",
   "this",
   "->",
   "foreColor",
   "%",
   "0x100",
   ")",
   ";",
   "$",
   "length",
   "=",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ";",
   "$",
   "box",
   "=",
   "imagettfbbox",
   "(",
   "30",
   ",",
   "0",
   ",",
   "$",
   "this",
   "->",
   "fontFile",
   ",",
   "$",
   "code",
   ")",
   ";",
   "$",
   "w",
   "=",
   "$",
   "box",
   "[",
   "4",
   "]",
   "-",
   "$",
   "box",
   "[",
   "0",
   "]",
   "+",
   "$",
   "this",
   "->",
   "offset",
   "*",
   "(",
   "$",
   "length",
   "-",
   "1",
   ")",
   ";",
   "$",
   "h",
   "=",
   "$",
   "box",
   "[",
   "1",
   "]",
   "-",
   "$",
   "box",
   "[",
   "5",
   "]",
   ";",
   "$",
   "scale",
   "=",
   "<mask>",
   "(",
   "(",
   "$",
   "this",
   "->",
   "width",
   "-",
   "$",
   "this",
   "->",
   "padding",
   "*",
   "2",
   ")",
   "/",
   "$",
   "w",
   ",",
   "(",
   "$",
   "this",
   "->",
   "height",
   "-",
   "$",
   "this",
   "->",
   "padding",
   "*",
   "2",
   ")",
   "/",
   "$",
   "h",
   ")",
   ";",
   "$",
   "x",
   "=",
   "10",
   ";",
   "$",
   "y",
   "=",
   "round",
   "(",
   "$",
   "this",
   "->",
   "height",
   "*",
   "27",
   "/",
   "40",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "length",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "fontSize",
   "=",
   "(",
   "int",
   ")",
   "(",
   "mt_rand",
   "(",
   "26",
   ",",
   "32",
   ")",
   "*",
   "$",
   "scale",
   "*",
   "0.8",
   ")",
   ";",
   "$",
   "angle",
   "=",
   "mt_rand",
   "(",
   "-",
   "10",
   ",",
   "10",
   ")",
   ";",
   "$",
   "letter",
   "=",
   "$",
   "code",
   "[",
   "$",
   "i",
   "]",
   ";",
   "$",
   "box",
   "=",
   "imagettftext",
   "(",
   "$",
   "image",
   ",",
   "$",
   "fontSize",
   ",",
   "$",
   "angle",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ",",
   "$",
   "foreColor",
   ",",
   "$",
   "this",
   "->",
   "fontFile",
   ",",
   "$",
   "letter",
   ")",
   ";",
   "$",
   "x",
   "=",
   "$",
   "box",
   "[",
   "2",
   "]",
   "+",
   "$",
   "this",
   "->",
   "offset",
   ";",
   "}",
   "imagecolordeallocate",
   "(",
   "$",
   "image",
   ",",
   "$",
   "foreColor",
   ")",
   ";",
   "ob_start",
   "(",
   ")",
   ";",
   "imagepng",
   "(",
   "$",
   "image",
   ")",
   ";",
   "imagedestroy",
   "(",
   "$",
   "image",
   ")",
   ";",
   "return",
   "ob_get_clean",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-177",
  "nl_tokens": [
   "Sets",
   "the",
   "added",
   "extra",
   "time"
  ],
  "pl_tokens": [
   "public",
   "function",
   "setConsumedExtraTime",
   "(",
   "$",
   "time",
   ")",
   "{",
   "$",
   "this",
   "->",
   "consumedExtraTime",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "consumedExtraTime",
   ",",
   "floatval",
   "(",
   "$",
   "time",
   ")",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-178",
  "nl_tokens": [
   "Sends",
   "a",
   "Content",
   "-",
   "Range",
   "header",
   "for",
   "pagination",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "sendItems",
   "(",
   "Response",
   "$",
   "response",
   ",",
   "iterable",
   "$",
   "items",
   ",",
   "?",
   "Pagination",
   "$",
   "pagination",
   "=",
   "null",
   ",",
   "?",
   "int",
   "$",
   "total",
   "=",
   "null",
   ")",
   ":",
   "Response",
   "{",
   "$",
   "items",
   "=",
   "is_array",
   "(",
   "$",
   "items",
   ")",
   "?",
   "$",
   "items",
   ":",
   "(",
   "$",
   "items",
   "instanceof",
   "\\",
   "Traversable",
   "?",
   "iterator_to_array",
   "(",
   "$",
   "items",
   ",",
   "false",
   ")",
   ":",
   "[",
   "]",
   ")",
   ";",
   "$",
   "total",
   "=",
   "$",
   "total",
   "??",
   "count",
   "(",
   "$",
   "items",
   ")",
   ";",
   "$",
   "start",
   "=",
   "$",
   "pagination",
   "===",
   "null",
   "?",
   "0",
   ":",
   "$",
   "pagination",
   "->",
   "getOffset",
   "(",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "pagination",
   "===",
   "null",
   "?",
   "0",
   ":",
   "$",
   "pagination",
   "->",
   "getMax",
   "(",
   ")",
   ";",
   "// make sure $end is no higher than $total and isn't negative",
   "$",
   "end",
   "=",
   "max",
   "(",
   "min",
   "(",
   "(",
   "PHP_INT_MAX",
   "-",
   "$",
   "max",
   "<",
   "$",
   "start",
   "?",
   "PHP_INT_MAX",
   ":",
   "$",
   "start",
   "+",
   "$",
   "max",
   ")",
   ",",
   "$",
   "total",
   ")",
   "-",
   "1",
   ",",
   "0",
   ")",
   ";",
   "return",
   "$",
   "this",
   "->",
   "sendJson",
   "(",
   "$",
   "response",
   "->",
   "withHeader",
   "(",
   "'Content-Range'",
   ",",
   "\"items $start-$end/$total\"",
   ")",
   ",",
   "$",
   "items",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-179",
  "nl_tokens": [
   "Works",
   "out",
   "the",
   "longest",
   "flag",
   "for",
   "formatting",
   "purposes",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "longestFlag",
   "(",
   "$",
   "flag_sets",
   ")",
   "{",
   "$",
   "longest",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "flag_sets",
   "as",
   "$",
   "flags",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "flags",
   "as",
   "$",
   "flag",
   ")",
   "{",
   "$",
   "longest",
   "=",
   "<mask>",
   "(",
   "$",
   "longest",
   ",",
   "strlen",
   "(",
   "$",
   "this",
   "->",
   "renderFlag",
   "(",
   "$",
   "flag",
   ")",
   ")",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "longest",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-180",
  "nl_tokens": [
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zrangebylex",
   "@link",
   "https",
   ":",
   "//",
   "redis",
   ".",
   "io",
   "/",
   "commands",
   "/",
   "zrevrangebylex"
  ],
  "pl_tokens": [
   "public",
   "function",
   "rangeByLex",
   "(",
   "string",
   "$",
   "<mask>",
   ",",
   "string",
   "$",
   "max",
   ",",
   "$",
   "limit",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "reverse",
   "=",
   "false",
   ")",
   ":",
   "array",
   "{",
   "if",
   "(",
   "$",
   "reverse",
   ")",
   "{",
   "$",
   "ret",
   "=",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zrevrangebylex",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "ret",
   "=",
   "$",
   "this",
   "->",
   "redis",
   "->",
   "zrangebylex",
   "(",
   "$",
   "this",
   "->",
   "key",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "}",
   "return",
   "array_map",
   "(",
   "[",
   "$",
   "this",
   ",",
   "'strToVal'",
   "]",
   ",",
   "$",
   "ret",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-181",
  "nl_tokens": [
   "Read",
   "data",
   "from",
   "the",
   "CDB",
   "file",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "read",
   "(",
   "$",
   "start",
   ",",
   "$",
   "len",
   ")",
   "{",
   "$",
   "end",
   "=",
   "$",
   "start",
   "+",
   "$",
   "len",
   ";",
   "// The first 2048 bytes are the lookup table, which is read into",
   "// memory on initialization.",
   "if",
   "(",
   "$",
   "end",
   "<=",
   "2048",
   ")",
   "{",
   "return",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "index",
   ",",
   "$",
   "start",
   ",",
   "$",
   "len",
   ")",
   ";",
   "}",
   "// Read data from the internal buffer first.",
   "$",
   "bytes",
   "=",
   "''",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "buf",
   "&&",
   "$",
   "start",
   ">=",
   "$",
   "this",
   "->",
   "bufStart",
   ")",
   "{",
   "$",
   "bytes",
   ".=",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "buf",
   ",",
   "$",
   "start",
   "-",
   "$",
   "this",
   "->",
   "bufStart",
   ",",
   "$",
   "len",
   ")",
   ";",
   "$",
   "bytesRead",
   "=",
   "strlen",
   "(",
   "$",
   "bytes",
   ")",
   ";",
   "$",
   "len",
   "-=",
   "$",
   "bytesRead",
   ";",
   "$",
   "start",
   "+=",
   "$",
   "bytesRead",
   ";",
   "}",
   "else",
   "{",
   "$",
   "bytesRead",
   "=",
   "0",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "len",
   ")",
   "{",
   "return",
   "$",
   "bytes",
   ";",
   "}",
   "// Many reads are sequential, so the file position indicator may",
   "// already be in the right place, in which case we can avoid the",
   "// call to fseek().",
   "if",
   "(",
   "$",
   "start",
   "!==",
   "$",
   "this",
   "->",
   "filePos",
   ")",
   "{",
   "if",
   "(",
   "fseek",
   "(",
   "$",
   "this",
   "->",
   "handle",
   ",",
   "$",
   "start",
   ")",
   "===",
   "-",
   "1",
   ")",
   "{",
   "// This can easily happen if the internal pointers are incorrect",
   "throw",
   "new",
   "Exception",
   "(",
   "'Seek failed, file \"'",
   ".",
   "$",
   "this",
   "->",
   "fileName",
   ".",
   "'\" may be corrupted.'",
   ")",
   ";",
   "}",
   "}",
   "$",
   "buf",
   "=",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "handle",
   ",",
   "<mask>",
   "(",
   "$",
   "len",
   ",",
   "1024",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "buf",
   "===",
   "false",
   ")",
   "{",
   "$",
   "buf",
   "=",
   "''",
   ";",
   "}",
   "$",
   "bytes",
   ".=",
   "substr",
   "(",
   "$",
   "buf",
   ",",
   "0",
   ",",
   "$",
   "len",
   ")",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "bytes",
   ")",
   "!==",
   "$",
   "len",
   "+",
   "$",
   "bytesRead",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'Read from CDB file failed, file \"'",
   ".",
   "$",
   "this",
   "->",
   "fileName",
   ".",
   "'\" may be corrupted.'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "filePos",
   "=",
   "$",
   "end",
   ";",
   "$",
   "this",
   "->",
   "bufStart",
   "=",
   "$",
   "start",
   ";",
   "$",
   "this",
   "->",
   "buf",
   "=",
   "$",
   "buf",
   ";",
   "return",
   "$",
   "bytes",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-182",
  "nl_tokens": [
   "@param",
   "Tokens",
   "$tokens",
   "@param",
   "int",
   "$newLineTokenIndex",
   "@param",
   "array<array<int",
   ">>",
   "$annotationPositions",
   "Pairs",
   "of",
   "begin",
   "and",
   "end",
   "indexes",
   "of",
   "main",
   "annotations"
  ],
  "pl_tokens": [
   "private",
   "function",
   "indentationCanBeFixed",
   "(",
   "Tokens",
   "$",
   "tokens",
   ",",
   "$",
   "newLineTokenIndex",
   ",",
   "array",
   "$",
   "annotationPositions",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "annotationPositions",
   "as",
   "$",
   "position",
   ")",
   "{",
   "if",
   "(",
   "$",
   "newLineTokenIndex",
   ">=",
   "$",
   "position",
   "[",
   "0",
   "]",
   "&&",
   "$",
   "newLineTokenIndex",
   "<=",
   "$",
   "position",
   "[",
   "1",
   "]",
   ")",
   "{",
   "return",
   "true",
   ";",
   "}",
   "}",
   "for",
   "(",
   "$",
   "index",
   "=",
   "$",
   "newLineTokenIndex",
   "+",
   "1",
   ",",
   "$",
   "<mask>",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "tokens",
   ")",
   ";",
   "$",
   "index",
   "<",
   "$",
   "max",
   ";",
   "++",
   "$",
   "index",
   ")",
   "{",
   "$",
   "token",
   "=",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   ";",
   "if",
   "(",
   "false",
   "!==",
   "strpos",
   "(",
   "$",
   "token",
   "->",
   "getContent",
   "(",
   ")",
   ",",
   "\"\\n\"",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "return",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isType",
   "(",
   "DocLexer",
   "::",
   "T_AT",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-183",
  "nl_tokens": [
   "@param",
   "Tokens",
   "$tokens",
   "@param",
   "int",
   "$index",
   "@param",
   "int",
   "$classOpenIndex"
  ],
  "pl_tokens": [
   "private",
   "function",
   "isPrivateMethod",
   "(",
   "Tokens",
   "$",
   "tokens",
   ",",
   "$",
   "index",
   ",",
   "$",
   "classOpenIndex",
   ")",
   "{",
   "$",
   "index",
   "=",
   "<mask>",
   "(",
   "$",
   "classOpenIndex",
   "+",
   "1",
   ",",
   "$",
   "tokens",
   "->",
   "getPrevTokenOfKind",
   "(",
   "$",
   "index",
   ",",
   "[",
   "';'",
   ",",
   "'{'",
   ",",
   "'}'",
   "]",
   ")",
   ")",
   ";",
   "while",
   "(",
   "!",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isGivenKind",
   "(",
   "T_FUNCTION",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "tokens",
   "[",
   "$",
   "index",
   "]",
   "->",
   "isGivenKind",
   "(",
   "T_PRIVATE",
   ")",
   ")",
   "{",
   "return",
   "true",
   ";",
   "}",
   "++",
   "$",
   "index",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-184",
  "nl_tokens": [
   "Properties",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "properties",
   "(",
   "array",
   "$",
   "data",
   ",",
   "$",
   "separator",
   "=",
   "':'",
   ")",
   "{",
   "$",
   "keys",
   "=",
   "array_keys",
   "(",
   "$",
   "data",
   ")",
   ";",
   "$",
   "maxLength",
   "=",
   "<mask>",
   "(",
   "array_map",
   "(",
   "'strlen'",
   ",",
   "$",
   "keys",
   ")",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "data",
   ")",
   ">",
   "0",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "data",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "$",
   "key",
   "=",
   "Str",
   "::",
   "padRight",
   "(",
   "$",
   "key",
   ",",
   "$",
   "maxLength",
   ")",
   ";",
   "self",
   "::",
   "write",
   "(",
   "$",
   "key",
   ")",
   ";",
   "self",
   "::",
   "write",
   "(",
   "' '",
   ")",
   ";",
   "if",
   "(",
   "Str",
   "::",
   "length",
   "(",
   "$",
   "separator",
   ")",
   ">",
   "0",
   ")",
   "{",
   "self",
   "::",
   "write",
   "(",
   "$",
   "separator",
   ".",
   "' '",
   ")",
   ";",
   "}",
   "self",
   "::",
   "writeln",
   "(",
   "$",
   "value",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-185",
  "nl_tokens": [
   "Searches",
   "for",
   "the",
   "first",
   "wildcard",
   "character",
   "in",
   "the",
   "pattern",
   "."
  ],
  "pl_tokens": [
   "private",
   "static",
   "function",
   "firstWildcardInPattern",
   "(",
   "$",
   "pattern",
   ")",
   "{",
   "$",
   "wildcards",
   "=",
   "[",
   "'*'",
   ",",
   "'?'",
   ",",
   "'['",
   ",",
   "'\\\\'",
   "]",
   ";",
   "$",
   "wildcardSearch",
   "=",
   "function",
   "(",
   "$",
   "r",
   ",",
   "$",
   "c",
   ")",
   "use",
   "(",
   "$",
   "pattern",
   ")",
   "{",
   "$",
   "p",
   "=",
   "strpos",
   "(",
   "$",
   "pattern",
   ",",
   "$",
   "c",
   ")",
   ";",
   "return",
   "$",
   "r",
   "===",
   "false",
   "?",
   "$",
   "p",
   ":",
   "(",
   "$",
   "p",
   "===",
   "false",
   "?",
   "$",
   "r",
   ":",
   "<mask>",
   "(",
   "$",
   "r",
   ",",
   "$",
   "p",
   ")",
   ")",
   ";",
   "}",
   ";",
   "return",
   "array_reduce",
   "(",
   "$",
   "wildcards",
   ",",
   "$",
   "wildcardSearch",
   ",",
   "false",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-186",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "read",
   "(",
   ")",
   "{",
   "$",
   "socket",
   "=",
   "$",
   "this",
   "->",
   "getResource",
   "(",
   ")",
   ";",
   "while",
   "(",
   "true",
   ")",
   "{",
   "try",
   "{",
   "$",
   "this",
   "->",
   "select",
   "(",
   "[",
   "$",
   "socket",
   "]",
   ",",
   "[",
   "]",
   ",",
   "[",
   "]",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "if",
   "(",
   "$",
   "e",
   "==",
   "'Interrupted system call'",
   ")",
   "{",
   "pcntl_signal_dispatch",
   "(",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "}",
   "$",
   "chunk",
   "=",
   "fgets",
   "(",
   "$",
   "socket",
   ")",
   ";",
   "break",
   ";",
   "}",
   "if",
   "(",
   "$",
   "chunk",
   "===",
   "false",
   "||",
   "$",
   "chunk",
   "===",
   "''",
   ")",
   "{",
   "$",
   "this",
   "->",
   "onConnectionError",
   "(",
   "'Error while reading line from the server.'",
   ")",
   ";",
   "}",
   "$",
   "prefix",
   "=",
   "$",
   "chunk",
   "[",
   "0",
   "]",
   ";",
   "$",
   "payload",
   "=",
   "substr",
   "(",
   "$",
   "chunk",
   ",",
   "1",
   ",",
   "-",
   "2",
   ")",
   ";",
   "switch",
   "(",
   "$",
   "prefix",
   ")",
   "{",
   "case",
   "'+'",
   ":",
   "return",
   "StatusResponse",
   "::",
   "get",
   "(",
   "$",
   "payload",
   ")",
   ";",
   "case",
   "'$'",
   ":",
   "$",
   "size",
   "=",
   "(",
   "int",
   ")",
   "$",
   "payload",
   ";",
   "if",
   "(",
   "$",
   "size",
   "===",
   "-",
   "1",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "bulkData",
   "=",
   "''",
   ";",
   "$",
   "bytesLeft",
   "=",
   "(",
   "$",
   "size",
   "+=",
   "2",
   ")",
   ";",
   "do",
   "{",
   "$",
   "chunk",
   "=",
   "fread",
   "(",
   "$",
   "socket",
   ",",
   "<mask>",
   "(",
   "$",
   "bytesLeft",
   ",",
   "4096",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "chunk",
   "===",
   "false",
   "||",
   "$",
   "chunk",
   "===",
   "''",
   ")",
   "{",
   "$",
   "this",
   "->",
   "onConnectionError",
   "(",
   "'Error while reading bytes from the server.'",
   ")",
   ";",
   "}",
   "$",
   "bulkData",
   ".=",
   "$",
   "chunk",
   ";",
   "$",
   "bytesLeft",
   "=",
   "$",
   "size",
   "-",
   "strlen",
   "(",
   "$",
   "bulkData",
   ")",
   ";",
   "}",
   "while",
   "(",
   "$",
   "bytesLeft",
   ">",
   "0",
   ")",
   ";",
   "return",
   "substr",
   "(",
   "$",
   "bulkData",
   ",",
   "0",
   ",",
   "-",
   "2",
   ")",
   ";",
   "case",
   "'*'",
   ":",
   "$",
   "count",
   "=",
   "(",
   "int",
   ")",
   "$",
   "payload",
   ";",
   "if",
   "(",
   "$",
   "count",
   "===",
   "-",
   "1",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "multibulk",
   "=",
   "array",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "count",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "multibulk",
   "[",
   "$",
   "i",
   "]",
   "=",
   "$",
   "this",
   "->",
   "read",
   "(",
   ")",
   ";",
   "}",
   "return",
   "$",
   "multibulk",
   ";",
   "case",
   "':'",
   ":",
   "$",
   "integer",
   "=",
   "(",
   "int",
   ")",
   "$",
   "payload",
   ";",
   "return",
   "$",
   "integer",
   "==",
   "$",
   "payload",
   "?",
   "$",
   "integer",
   ":",
   "$",
   "payload",
   ";",
   "case",
   "'-'",
   ":",
   "return",
   "new",
   "ErrorResponse",
   "(",
   "$",
   "payload",
   ")",
   ";",
   "default",
   ":",
   "$",
   "this",
   "->",
   "onProtocolError",
   "(",
   "\"Unknown response prefix: '$prefix'.\"",
   ")",
   ";",
   "return",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-187",
  "nl_tokens": [
   "Renders",
   "the",
   "CAPTCHA",
   "image",
   "based",
   "on",
   "the",
   "code",
   "using",
   "ImageMagick",
   "library",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "renderImageByImagick",
   "(",
   "$",
   "code",
   ")",
   "{",
   "$",
   "backColor",
   "=",
   "$",
   "this",
   "->",
   "transparent",
   "?",
   "new",
   "\\",
   "ImagickPixel",
   "(",
   "'transparent'",
   ")",
   ":",
   "new",
   "\\",
   "ImagickPixel",
   "(",
   "'#'",
   ".",
   "str_pad",
   "(",
   "dechex",
   "(",
   "$",
   "this",
   "->",
   "backColor",
   ")",
   ",",
   "6",
   ",",
   "0",
   ",",
   "STR_PAD_LEFT",
   ")",
   ")",
   ";",
   "$",
   "foreColor",
   "=",
   "new",
   "\\",
   "ImagickPixel",
   "(",
   "'#'",
   ".",
   "str_pad",
   "(",
   "dechex",
   "(",
   "$",
   "this",
   "->",
   "foreColor",
   ")",
   ",",
   "6",
   ",",
   "0",
   ",",
   "STR_PAD_LEFT",
   ")",
   ")",
   ";",
   "$",
   "image",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "image",
   "->",
   "newImage",
   "(",
   "$",
   "this",
   "->",
   "width",
   ",",
   "$",
   "this",
   "->",
   "height",
   ",",
   "$",
   "backColor",
   ")",
   ";",
   "$",
   "draw",
   "=",
   "new",
   "\\",
   "ImagickDraw",
   "(",
   ")",
   ";",
   "$",
   "draw",
   "->",
   "setFont",
   "(",
   "$",
   "this",
   "->",
   "fontFile",
   ")",
   ";",
   "$",
   "draw",
   "->",
   "setFontSize",
   "(",
   "30",
   ")",
   ";",
   "$",
   "fontMetrics",
   "=",
   "$",
   "image",
   "->",
   "queryFontMetrics",
   "(",
   "$",
   "draw",
   ",",
   "$",
   "code",
   ")",
   ";",
   "$",
   "length",
   "=",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ";",
   "$",
   "w",
   "=",
   "(",
   "int",
   ")",
   "$",
   "fontMetrics",
   "[",
   "'textWidth'",
   "]",
   "-",
   "8",
   "+",
   "$",
   "this",
   "->",
   "offset",
   "*",
   "(",
   "$",
   "length",
   "-",
   "1",
   ")",
   ";",
   "$",
   "h",
   "=",
   "(",
   "int",
   ")",
   "$",
   "fontMetrics",
   "[",
   "'textHeight'",
   "]",
   "-",
   "8",
   ";",
   "$",
   "scale",
   "=",
   "<mask>",
   "(",
   "(",
   "$",
   "this",
   "->",
   "width",
   "-",
   "$",
   "this",
   "->",
   "padding",
   "*",
   "2",
   ")",
   "/",
   "$",
   "w",
   ",",
   "(",
   "$",
   "this",
   "->",
   "height",
   "-",
   "$",
   "this",
   "->",
   "padding",
   "*",
   "2",
   ")",
   "/",
   "$",
   "h",
   ")",
   ";",
   "$",
   "x",
   "=",
   "10",
   ";",
   "$",
   "y",
   "=",
   "round",
   "(",
   "$",
   "this",
   "->",
   "height",
   "*",
   "27",
   "/",
   "40",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "length",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "draw",
   "=",
   "new",
   "\\",
   "ImagickDraw",
   "(",
   ")",
   ";",
   "$",
   "draw",
   "->",
   "setFont",
   "(",
   "$",
   "this",
   "->",
   "fontFile",
   ")",
   ";",
   "$",
   "draw",
   "->",
   "setFontSize",
   "(",
   "(",
   "int",
   ")",
   "(",
   "mt_rand",
   "(",
   "26",
   ",",
   "32",
   ")",
   "*",
   "$",
   "scale",
   "*",
   "0.8",
   ")",
   ")",
   ";",
   "$",
   "draw",
   "->",
   "setFillColor",
   "(",
   "$",
   "foreColor",
   ")",
   ";",
   "$",
   "image",
   "->",
   "annotateImage",
   "(",
   "$",
   "draw",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ",",
   "mt_rand",
   "(",
   "-",
   "10",
   ",",
   "10",
   ")",
   ",",
   "$",
   "code",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "fontMetrics",
   "=",
   "$",
   "image",
   "->",
   "queryFontMetrics",
   "(",
   "$",
   "draw",
   ",",
   "$",
   "code",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "x",
   "+=",
   "(",
   "int",
   ")",
   "$",
   "fontMetrics",
   "[",
   "'textWidth'",
   "]",
   "+",
   "$",
   "this",
   "->",
   "offset",
   ";",
   "}",
   "$",
   "image",
   "->",
   "setImageFormat",
   "(",
   "'png'",
   ")",
   ";",
   "return",
   "$",
   "image",
   "->",
   "getImageBlob",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-188",
  "nl_tokens": [
   "Checks",
   "the",
   "precedence",
   "of",
   "each",
   "data",
   "set",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "precedence",
   "(",
   "$",
   "a",
   ",",
   "$",
   "b",
   ")",
   "{",
   "if",
   "(",
   "count",
   "(",
   "$",
   "a",
   ")",
   ">",
   "count",
   "(",
   "$",
   "b",
   ")",
   ")",
   "{",
   "$",
   "l",
   "=",
   "-",
   "1",
   ";",
   "$",
   "r",
   "=",
   "1",
   ";",
   "$",
   "x",
   "=",
   "$",
   "a",
   ";",
   "$",
   "y",
   "=",
   "$",
   "b",
   ";",
   "}",
   "else",
   "{",
   "$",
   "l",
   "=",
   "1",
   ";",
   "$",
   "r",
   "=",
   "-",
   "1",
   ";",
   "$",
   "x",
   "=",
   "$",
   "b",
   ";",
   "$",
   "y",
   "=",
   "$",
   "a",
   ";",
   "}",
   "foreach",
   "(",
   "array_keys",
   "(",
   "$",
   "x",
   ")",
   "as",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "false",
   "===",
   "isset",
   "(",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   "{",
   "return",
   "$",
   "l",
   ";",
   "}",
   "if",
   "(",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   "===",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "xi",
   "=",
   "is_integer",
   "(",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "yi",
   "=",
   "is_integer",
   "(",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "xi",
   "&&",
   "$",
   "yi",
   ")",
   "{",
   "return",
   "(",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   ">",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   "?",
   "$",
   "l",
   ":",
   "$",
   "r",
   ";",
   "}",
   "elseif",
   "(",
   "(",
   "false",
   "===",
   "$",
   "xi",
   ")",
   "&&",
   "(",
   "false",
   "===",
   "$",
   "yi",
   ")",
   ")",
   "{",
   "return",
   "(",
   "<mask>",
   "(",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   ",",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   "==",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   ")",
   "?",
   "$",
   "l",
   ":",
   "$",
   "r",
   ";",
   "}",
   "else",
   "{",
   "return",
   "$",
   "xi",
   "?",
   "$",
   "r",
   ":",
   "$",
   "l",
   ";",
   "}",
   "}",
   "return",
   "0",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-189",
  "nl_tokens": [
   "Limit"
  ],
  "pl_tokens": [
   "public",
   "function",
   "limit",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   "=",
   "0",
   ")",
   "{",
   "if",
   "(",
   "$",
   "max",
   "==",
   "0",
   ")",
   "{",
   "$",
   "value",
   "=",
   "\"{\"",
   ".",
   "$",
   "min",
   ".",
   "\"}\"",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "max",
   "<",
   "$",
   "min",
   ")",
   "{",
   "$",
   "value",
   "=",
   "\"{\"",
   ".",
   "$",
   "min",
   ".",
   "\",}\"",
   ";",
   "}",
   "else",
   "{",
   "$",
   "value",
   "=",
   "\"{\"",
   ".",
   "$",
   "min",
   ".",
   "\",\"",
   ".",
   "$",
   "max",
   ".",
   "\"}\"",
   ";",
   "}",
   "// check if the expression has * or + for the last expression",
   "if",
   "(",
   "preg_match",
   "(",
   "\"/\\*|\\+/\"",
   ",",
   "$",
   "this",
   "->",
   "lastAdded",
   ")",
   ")",
   "{",
   "$",
   "l",
   "=",
   "1",
   ";",
   "$",
   "this",
   "->",
   "source",
   "=",
   "strrev",
   "(",
   "str_replace",
   "(",
   "array",
   "(",
   "'+'",
   ",",
   "'*'",
   ")",
   ",",
   "strrev",
   "(",
   "$",
   "value",
   ")",
   ",",
   "strrev",
   "(",
   "$",
   "this",
   "->",
   "source",
   ")",
   ",",
   "$",
   "l",
   ")",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "add",
   "(",
   "$",
   "value",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-190",
  "nl_tokens": [
   "Set",
   "up",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setup",
   "(",
   ")",
   "{",
   "$",
   "results",
   "=",
   "[",
   "true",
   "]",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "primaryModel",
   ")",
   "&&",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "collectorItem",
   "->",
   "parents",
   ")",
   ")",
   "{",
   "$",
   "groups",
   "=",
   "[",
   "'top'",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "groups",
   "as",
   "$",
   "groupName",
   ")",
   "{",
   "$",
   "group",
   "=",
   "Group",
   "::",
   "getBySystemName",
   "(",
   "$",
   "groupName",
   ",",
   "false",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "group",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "inheritParentAccess",
   ")",
   "{",
   "$",
   "results",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "objectTypeModel",
   "->",
   "parentAccess",
   "(",
   "null",
   ",",
   "$",
   "group",
   ")",
   ";",
   "}",
   "}",
   "}",
   "return",
   "<mask>",
   "(",
   "$",
   "results",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-191",
  "nl_tokens": [
   "GET",
   "JSON",
   "response",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getJson",
   "(",
   "string",
   "$",
   "path",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "\\",
   "StdClass",
   "{",
   "$",
   "default_args",
   "=",
   "$",
   "this",
   "->",
   "default_credentials",
   "+",
   "[",
   "'request'",
   "=>",
   "[",
   "]",
   ",",
   "'cache'",
   "=>",
   "true",
   ",",
   "'cache_max_age'",
   "=>",
   "strtotime",
   "(",
   "'-15 minutes'",
   ")",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Merge defaults.",
   "$",
   "time",
   "=",
   "time",
   "(",
   ")",
   ";",
   "// Current time.",
   "$",
   "args",
   "[",
   "'request'",
   "]",
   "=",
   "(",
   "array",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'request'",
   "]",
   "?",
   ":",
   "[",
   "]",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   "=",
   "(",
   "bool",
   ")",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   ";",
   "// Enable cache?",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "time",
   ",",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "remote_hash",
   "=",
   "$",
   "this",
   "->",
   "remoteHash",
   "(",
   "$",
   "args",
   ")",
   ";",
   "$",
   "request_str",
   "=",
   "serialize",
   "(",
   "$",
   "args",
   "[",
   "'request'",
   "]",
   ")",
   ";",
   "$",
   "cache_sha1",
   "=",
   "sha1",
   "(",
   "$",
   "remote_hash",
   ".",
   "':'",
   ".",
   "$",
   "path",
   ".",
   "':'",
   ".",
   "$",
   "request_str",
   ")",
   ";",
   "$",
   "cache_dir_permissions",
   "=",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9fs_permissions[",
   "'",
   "\u00a9transient_dirs'];",
   "",
   "",
   "$",
   "cache_dir",
   "=",
   "$",
   "this",
   "->",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "sha1ModShardId",
   "(",
   "$",
   "cache_sha1",
   ",",
   "true",
   ")",
   ";",
   "$",
   "cache_file",
   "=",
   "$",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "cache_sha1",
   ";",
   "// Hash location.",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   "&&",
   "is_file",
   "(",
   "$",
   "cache_file",
   ")",
   "&&",
   "filemtime",
   "(",
   "$",
   "cache_file",
   ")",
   ">=",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   ")",
   "{",
   "return",
   "$",
   "response_object",
   "=",
   "json_decode",
   "(",
   "file_get_contents",
   "(",
   "$",
   "cache_file",
   ")",
   ")",
   ";",
   "}",
   "$",
   "remote",
   "=",
   "$",
   "this",
   "->",
   "getRemote",
   "(",
   "$",
   "args",
   ")",
   ";",
   "$",
   "response",
   "=",
   "$",
   "remote",
   "->",
   "get",
   "(",
   "$",
   "path",
   ",",
   "$",
   "args",
   "[",
   "'request'",
   "]",
   ")",
   ";",
   "$",
   "response_code",
   "=",
   "(",
   "int",
   ")",
   "$",
   "remote",
   "->",
   "getLastHttpCode",
   "(",
   ")",
   ";",
   "$",
   "response_object",
   "=",
   "(",
   "object",
   ")",
   "[",
   "'success'",
   "=>",
   "$",
   "response_code",
   "&&",
   "$",
   "response_code",
   "<",
   "400",
   ",",
   "'data'",
   "=>",
   "$",
   "response",
   ",",
   "'remote'",
   "=>",
   "$",
   "remote",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_dir",
   "(",
   "$",
   "cache_dir",
   ")",
   ")",
   "{",
   "mkdir",
   "(",
   "$",
   "cache_dir",
   ",",
   "$",
   "cache_dir_permissions",
   ",",
   "true",
   ")",
   ";",
   "}",
   "file_put_contents",
   "(",
   "$",
   "cache_file",
   ",",
   "json_encode",
   "(",
   "$",
   "response_object",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "response_object",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-192",
  "nl_tokens": [
   "@param",
   "string",
   "$lineContent"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getLength",
   "(",
   "$",
   "lineContent",
   ")",
   "{",
   "preg_match",
   "(",
   "'/\\\\S/'",
   ",",
   "$",
   "lineContent",
   ",",
   "$",
   "spacesFound",
   ",",
   "PREG_OFFSET_CAPTURE",
   ")",
   ";",
   "$",
   "length",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "spacesFound",
   "[",
   "0",
   "]",
   "[",
   "1",
   "]",
   ")",
   ";",
   "return",
   "$",
   "length",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-193",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "getItem",
   "(",
   "FormBuilderInterface",
   "$",
   "builder",
   ",",
   "array",
   "$",
   "item",
   ")",
   "{",
   "$",
   "attributes",
   "=",
   "[",
   "]",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'read_only'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'read_only'",
   "]",
   ")",
   "{",
   "$",
   "attributes",
   "[",
   "'readonly'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'placeholder'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'placeholder'",
   "]",
   ")",
   "{",
   "$",
   "attributes",
   "[",
   "'placeholder'",
   "]",
   "=",
   "$",
   "item",
   "[",
   "'placeholder'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'twig_variable'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'twig_variable'",
   "]",
   ")",
   "{",
   "$",
   "attributes",
   "[",
   "'twig_variable'",
   "]",
   "=",
   "$",
   "item",
   "[",
   "'twig_variable'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'popover'",
   "]",
   ")",
   "&&",
   "trim",
   "(",
   "$",
   "item",
   "[",
   "'popover'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "attributes",
   "[",
   "'data-toggle'",
   "]",
   "=",
   "'popover'",
   ";",
   "$",
   "attributes",
   "[",
   "'data-placement'",
   "]",
   "=",
   "'top'",
   ";",
   "$",
   "attributes",
   "[",
   "'data-trigger'",
   "]",
   "=",
   "'focus'",
   ";",
   "$",
   "attributes",
   "[",
   "'data-html'",
   "]",
   "=",
   "'true'",
   ";",
   "$",
   "attributes",
   "[",
   "'data-content'",
   "]",
   "=",
   "$",
   "item",
   "[",
   "'popover'",
   "]",
   ";",
   "}",
   "$",
   "options",
   "=",
   "[",
   "'label'",
   "=>",
   "!",
   "empty",
   "(",
   "$",
   "item",
   "[",
   "'hideLabel'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'hideLabel'",
   "]",
   "?",
   "false",
   ":",
   "$",
   "item",
   "[",
   "'label'",
   "]",
   ",",
   "'required'",
   "=>",
   "$",
   "item",
   "[",
   "'required'",
   "]",
   "??",
   "false",
   ",",
   "'attr'",
   "=>",
   "$",
   "attributes",
   ",",
   "'constraints'",
   "=>",
   "[",
   "]",
   ",",
   "]",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'required'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'required'",
   "]",
   ")",
   "{",
   "$",
   "options",
   "[",
   "'constraints'",
   "]",
   "[",
   "]",
   "=",
   "new",
   "NotBlank",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'min'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'min'",
   "]",
   ")",
   "||",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'max'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'max'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "item",
   "[",
   "'min'",
   "]",
   "??",
   "0",
   ";",
   "$",
   "max",
   "=",
   "$",
   "item",
   "[",
   "'max'",
   "]",
   "??",
   "null",
   ";",
   "$",
   "options",
   "[",
   "'constraints'",
   "]",
   "[",
   "]",
   "=",
   "new",
   "Length",
   "(",
   "[",
   "'min'",
   "=>",
   "$",
   "min",
   ",",
   "'max'",
   "=>",
   "$",
   "max",
   ",",
   "]",
   ")",
   ";",
   "}",
   "$",
   "builder",
   "->",
   "add",
   "(",
   "$",
   "item",
   "[",
   "'name'",
   "]",
   ",",
   "TextType",
   "::",
   "class",
   ",",
   "$",
   "options",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-194",
  "nl_tokens": [
   "Finds",
   "a",
   "position",
   "with",
   "first",
   "placeholder"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "findPlaceholderStartPos",
   "(",
   "$",
   "path",
   ")",
   "{",
   "$",
   "brFgPos",
   "=",
   "strpos",
   "(",
   "$",
   "path",
   ",",
   "'{'",
   ")",
   ";",
   "$",
   "brSqPos",
   "=",
   "strpos",
   "(",
   "$",
   "path",
   ",",
   "'['",
   ")",
   ";",
   "if",
   "(",
   "$",
   "brFgPos",
   "===",
   "false",
   "&&",
   "$",
   "brSqPos",
   "===",
   "false",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "len",
   "=",
   "strlen",
   "(",
   "$",
   "path",
   ")",
   ";",
   "$",
   "positions",
   "=",
   "[",
   "$",
   "brFgPos",
   "!==",
   "false",
   "?",
   "$",
   "brFgPos",
   ":",
   "$",
   "len",
   ",",
   "$",
   "brSqPos",
   "!==",
   "false",
   "?",
   "$",
   "brSqPos",
   ":",
   "$",
   "len",
   ",",
   "]",
   ";",
   "return",
   "<mask>",
   "(",
   "$",
   "positions",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-195",
  "nl_tokens": [
   "@param",
   "int",
   "$limit",
   "@param",
   "int",
   "$offset"
  ],
  "pl_tokens": [
   "public",
   "function",
   "limit",
   "(",
   "$",
   "limit",
   ",",
   "$",
   "offset",
   "=",
   "0",
   ")",
   ":",
   "self",
   "{",
   "$",
   "from",
   "=",
   "<mask>",
   "(",
   "$",
   "offset",
   ",",
   "0",
   ")",
   ";",
   "$",
   "to",
   "=",
   "$",
   "from",
   "+",
   "max",
   "(",
   "$",
   "limit",
   ",",
   "0",
   ")",
   ";",
   "return",
   "$",
   "this",
   "->",
   "then",
   "(",
   "function",
   "(",
   "$",
   "value",
   ")",
   "use",
   "(",
   "$",
   "from",
   ",",
   "$",
   "to",
   ")",
   "{",
   "static",
   "$",
   "count",
   "=",
   "0",
   ";",
   "if",
   "(",
   "$",
   "count",
   "<",
   "$",
   "from",
   ")",
   "{",
   "$",
   "value",
   "=",
   "null",
   ";",
   "}",
   "else",
   "if",
   "(",
   "$",
   "to",
   ">",
   "0",
   "&&",
   "$",
   "count",
   ">=",
   "$",
   "to",
   ")",
   "{",
   "$",
   "value",
   "=",
   "mapBreak",
   "(",
   ")",
   ";",
   "}",
   "$",
   "count",
   "++",
   ";",
   "return",
   "$",
   "value",
   ";",
   "}",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-196",
  "nl_tokens": [
   "Determine",
   "the",
   "common",
   "suffix",
   "of",
   "two",
   "strings",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "commonSuffix",
   "(",
   "$",
   "text1",
   ",",
   "$",
   "text2",
   ")",
   "{",
   "// Quick check for common null cases.",
   "if",
   "(",
   "$",
   "text1",
   "==",
   "''",
   "||",
   "$",
   "text2",
   "==",
   "''",
   "||",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "-",
   "1",
   ",",
   "1",
   ")",
   "!=",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "-",
   "1",
   ",",
   "1",
   ")",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "// Binary search.",
   "// Performance analysis: http://neil.fraser.name/news/2007/10/09/",
   "$",
   "pointermin",
   "=",
   "0",
   ";",
   "$",
   "pointermax",
   "=",
   "<mask>",
   "(",
   "mb_strlen",
   "(",
   "$",
   "text1",
   ")",
   ",",
   "mb_strlen",
   "(",
   "$",
   "text2",
   ")",
   ")",
   ";",
   "$",
   "pointermid",
   "=",
   "$",
   "pointermax",
   ";",
   "$",
   "pointerend",
   "=",
   "0",
   ";",
   "while",
   "(",
   "$",
   "pointermin",
   "<",
   "$",
   "pointermid",
   ")",
   "{",
   "if",
   "(",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "-",
   "$",
   "pointermid",
   ",",
   "$",
   "pointermid",
   "-",
   "$",
   "pointerend",
   ")",
   "==",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "-",
   "$",
   "pointermid",
   ",",
   "$",
   "pointermid",
   "-",
   "$",
   "pointerend",
   ")",
   ")",
   "{",
   "$",
   "pointermin",
   "=",
   "$",
   "pointermid",
   ";",
   "$",
   "pointerend",
   "=",
   "$",
   "pointermin",
   ";",
   "}",
   "else",
   "{",
   "$",
   "pointermax",
   "=",
   "$",
   "pointermid",
   ";",
   "}",
   "$",
   "pointermid",
   "=",
   "(",
   "int",
   ")",
   "(",
   "(",
   "$",
   "pointermax",
   "-",
   "$",
   "pointermin",
   ")",
   "/",
   "2",
   ")",
   "+",
   "$",
   "pointermin",
   ";",
   "}",
   "return",
   "$",
   "pointermid",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-197",
  "nl_tokens": [
   "Humanize",
   "the",
   "size",
   "bu",
   "add",
   "a",
   "Prefix"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "humanize",
   "(",
   "$",
   "bytes",
   ",",
   "$",
   "base",
   "=",
   "1024",
   ")",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "bytes",
   ")",
   ")",
   "{",
   "return",
   "'0 B'",
   ";",
   "}",
   "$",
   "class",
   "=",
   "<mask>",
   "(",
   "(",
   "int",
   ")",
   "log",
   "(",
   "$",
   "bytes",
   ",",
   "$",
   "base",
   ")",
   ",",
   "count",
   "(",
   "static",
   "::",
   "$",
   "siPrefix",
   ")",
   "-",
   "1",
   ")",
   ";",
   "return",
   "sprintf",
   "(",
   "'%1.2F %s'",
   ",",
   "$",
   "bytes",
   "/",
   "pow",
   "(",
   "$",
   "base",
   ",",
   "$",
   "class",
   ")",
   ",",
   "static",
   "::",
   "$",
   "siPrefix",
   "[",
   "$",
   "class",
   "]",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-198",
  "nl_tokens": [
   "Gets",
   "the",
   "delay",
   "(",
   "in",
   "seconds",
   ")",
   "for",
   "the",
   "current",
   "backoff",
   "period",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "getDelay",
   "(",
   ")",
   "{",
   "$",
   "jitter",
   "=",
   "$",
   "this",
   "->",
   "getJitter",
   "(",
   ")",
   ";",
   "$",
   "factor",
   "=",
   "$",
   "this",
   "->",
   "attempts",
   ">",
   "1",
   "?",
   "$",
   "this",
   "->",
   "factor",
   "+",
   "$",
   "jitter",
   ":",
   "1",
   "+",
   "abs",
   "(",
   "$",
   "jitter",
   ")",
   ";",
   "return",
   "$",
   "this",
   "->",
   "delay",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "maxDelay",
   ",",
   "$",
   "this",
   "->",
   "delay",
   "*",
   "$",
   "factor",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-199",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "displayTxt",
   "(",
   "array",
   "$",
   "filesInfo",
   ",",
   "bool",
   "$",
   "displayCorrectFiles",
   ")",
   ":",
   "int",
   "{",
   "$",
   "countFiles",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "filesInfo",
   ")",
   ";",
   "$",
   "erroredFiles",
   "=",
   "0",
   ";",
   "$",
   "output",
   "=",
   "$",
   "this",
   "->",
   "getOutput",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "filesInfo",
   "as",
   "$",
   "info",
   ")",
   "{",
   "if",
   "(",
   "$",
   "displayCorrectFiles",
   "&&",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "output",
   "->",
   "comment",
   "(",
   "'<info>OK</info>'",
   ".",
   "(",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   "?",
   "\\",
   "sprintf",
   "(",
   "' in %s'",
   ",",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   ")",
   ":",
   "''",
   ")",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "erroredFiles",
   "++",
   ";",
   "$",
   "output",
   "->",
   "text",
   "(",
   "'<error>ERROR</error>'",
   ".",
   "(",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   "?",
   "\\",
   "sprintf",
   "(",
   "' in %s'",
   ",",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   ")",
   ":",
   "''",
   ")",
   ")",
   ";",
   "$",
   "output",
   "->",
   "listing",
   "(",
   "\\",
   "array_map",
   "(",
   "static",
   "function",
   "(",
   "$",
   "error",
   ")",
   "{",
   "// general document errors have a '-1' line number",
   "return",
   "$",
   "error",
   "[",
   "'line'",
   "]",
   "===",
   "-",
   "1",
   "?",
   "$",
   "error",
   "[",
   "'message'",
   "]",
   ":",
   "\\",
   "sprintf",
   "(",
   "'Line %d, Column %d: %s'",
   ",",
   "$",
   "error",
   "[",
   "'line'",
   "]",
   ",",
   "$",
   "error",
   "[",
   "'column'",
   "]",
   ",",
   "$",
   "error",
   "[",
   "'message'",
   "]",
   ")",
   ";",
   "}",
   ",",
   "$",
   "info",
   "[",
   "'messages'",
   "]",
   ")",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "erroredFiles",
   "===",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "getOutput",
   "(",
   ")",
   "->",
   "success",
   "(",
   "\\",
   "sprintf",
   "(",
   "'All %d XLIFF files contain valid syntax.'",
   ",",
   "$",
   "countFiles",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "warn",
   "(",
   "\\",
   "sprintf",
   "(",
   "'%d XLIFF files have valid syntax and %d contain errors.'",
   ",",
   "$",
   "countFiles",
   "-",
   "$",
   "erroredFiles",
   ",",
   "$",
   "erroredFiles",
   ")",
   ")",
   ";",
   "}",
   "return",
   "\\",
   "<mask>",
   "(",
   "$",
   "erroredFiles",
   ",",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-200",
  "nl_tokens": [
   "Move",
   "the",
   "pen",
   "drawing",
   "if",
   "the",
   "pen",
   "is",
   "down",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "move",
   "(",
   "$",
   "x",
   ",",
   "$",
   "y",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "up",
   ")",
   "{",
   "$",
   "x1",
   "=",
   "round",
   "(",
   "$",
   "this",
   "->",
   "x",
   ")",
   ";",
   "$",
   "y1",
   "=",
   "round",
   "(",
   "$",
   "this",
   "->",
   "y",
   ")",
   ";",
   "$",
   "x2",
   "=",
   "$",
   "x",
   ";",
   "$",
   "y2",
   "=",
   "$",
   "y",
   ";",
   "$",
   "xdiff",
   "=",
   "<mask>",
   "(",
   "$",
   "x1",
   ",",
   "$",
   "x2",
   ")",
   "-",
   "min",
   "(",
   "$",
   "x1",
   ",",
   "$",
   "x2",
   ")",
   ";",
   "$",
   "ydiff",
   "=",
   "max",
   "(",
   "$",
   "y1",
   ",",
   "$",
   "y2",
   ")",
   "-",
   "min",
   "(",
   "$",
   "y1",
   ",",
   "$",
   "y2",
   ")",
   ";",
   "$",
   "xdir",
   "=",
   "$",
   "x1",
   "<=",
   "$",
   "x2",
   "?",
   "1",
   ":",
   "-",
   "1",
   ";",
   "$",
   "ydir",
   "=",
   "$",
   "y1",
   "<=",
   "$",
   "y2",
   "?",
   "1",
   ":",
   "-",
   "1",
   ";",
   "$",
   "r",
   "=",
   "max",
   "(",
   "$",
   "xdiff",
   ",",
   "$",
   "ydiff",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "r",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "x",
   "=",
   "$",
   "x1",
   ";",
   "$",
   "y",
   "=",
   "$",
   "y1",
   ";",
   "if",
   "(",
   "$",
   "ydiff",
   ">",
   "0",
   ")",
   "{",
   "$",
   "y",
   "+=",
   "(",
   "(",
   "float",
   ")",
   "$",
   "i",
   "*",
   "$",
   "ydiff",
   ")",
   "/",
   "$",
   "r",
   "*",
   "$",
   "ydir",
   ";",
   "}",
   "if",
   "(",
   "$",
   "xdiff",
   ">",
   "0",
   ")",
   "{",
   "$",
   "x",
   "+=",
   "(",
   "(",
   "float",
   ")",
   "$",
   "i",
   "*",
   "$",
   "xdiff",
   ")",
   "/",
   "$",
   "r",
   "*",
   "$",
   "xdir",
   ";",
   "}",
   "$",
   "this",
   "->",
   "set",
   "(",
   "$",
   "x",
   ",",
   "$",
   "y",
   ")",
   ";",
   "}",
   "}",
   "$",
   "this",
   "->",
   "x",
   "=",
   "$",
   "x",
   ";",
   "$",
   "this",
   "->",
   "y",
   "=",
   "$",
   "y",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-201",
  "nl_tokens": [
   "@since",
   "160715",
   "App",
   "parent",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "appParent",
   "(",
   "int",
   "$",
   "levels",
   "=",
   "1",
   ")",
   "{",
   "$",
   "levels",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "levels",
   ")",
   ";",
   "$",
   "level_counter",
   "=",
   "1",
   ";",
   "// Start from `1`.",
   "$",
   "Parent",
   "=",
   "$",
   "GLOBALS",
   "[",
   "static",
   "::",
   "class",
   "]",
   "->",
   "Parent",
   ";",
   "while",
   "(",
   "$",
   "Parent",
   "&&",
   "$",
   "level_counter",
   "<",
   "$",
   "levels",
   ")",
   "{",
   "$",
   "Parent",
   "=",
   "$",
   "Parent",
   "->",
   "Parent",
   "??",
   "null",
   ";",
   "++",
   "$",
   "level_counter",
   ";",
   "// Counter.",
   "}",
   "return",
   "$",
   "Parent",
   ";",
   "// Possible `null`.",
   "}"
  ]
 },
 {
  "idx": "maxmin-202",
  "nl_tokens": [
   "Wrapper",
   "around",
   "fwrite",
   "()",
   "handles",
   "global",
   "request",
   "timeout"
  ],
  "pl_tokens": [
   "public",
   "function",
   "write",
   "(",
   "$",
   "data",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "deadline",
   ")",
   "{",
   "stream_set_timeout",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "deadline",
   "-",
   "time",
   "(",
   ")",
   ",",
   "1",
   ")",
   ")",
   ";",
   "}",
   "$",
   "written",
   "=",
   "fwrite",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "$",
   "data",
   ")",
   ";",
   "$",
   "this",
   "->",
   "checkTimeout",
   "(",
   ")",
   ";",
   "// http://www.php.net/manual/en/function.fwrite.php#96951\r",
   "if",
   "(",
   "$",
   "written",
   "<",
   "strlen",
   "(",
   "$",
   "data",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "HTTP_Request2_MessageException",
   "(",
   "'Error writing request'",
   ")",
   ";",
   "}",
   "return",
   "$",
   "written",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-203",
  "nl_tokens": [
   "Prints",
   "the",
   "given",
   "data",
   "in",
   "a",
   "table"
  ],
  "pl_tokens": [
   "public",
   "function",
   "outputTable",
   "(",
   "$",
   "data",
   ",",
   "$",
   "delimiter",
   "=",
   "'|'",
   ")",
   "{",
   "$",
   "output",
   "=",
   "''",
   ";",
   "$",
   "firstRow",
   "=",
   "reset",
   "(",
   "$",
   "data",
   ")",
   ";",
   "$",
   "columnWidths",
   "=",
   "[",
   "]",
   ";",
   "$",
   "columnCount",
   "=",
   "count",
   "(",
   "$",
   "firstRow",
   ")",
   ";",
   "$",
   "headerRow",
   "=",
   "array_keys",
   "(",
   "$",
   "firstRow",
   ")",
   ";",
   "if",
   "(",
   "!",
   "(",
   "is_integer",
   "(",
   "reset",
   "(",
   "$",
   "headerRow",
   ")",
   ")",
   "&&",
   "is_integer",
   "(",
   "end",
   "(",
   "$",
   "headerRow",
   ")",
   ")",
   ")",
   ")",
   "{",
   "// Add the header row to the data to detect the longest string",
   "array_unshift",
   "(",
   "$",
   "data",
   ",",
   "$",
   "headerRow",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "headerRow",
   "=",
   "[",
   "]",
   ";",
   "}",
   "// Collect the column widths",
   "for",
   "(",
   "$",
   "columnIndex",
   "=",
   "0",
   ";",
   "$",
   "columnIndex",
   "<",
   "$",
   "columnCount",
   ";",
   "$",
   "columnIndex",
   "++",
   ")",
   "{",
   "$",
   "columnWidths",
   "[",
   "$",
   "columnIndex",
   "]",
   "=",
   "<mask>",
   "(",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "row",
   ")",
   "use",
   "(",
   "$",
   "columnIndex",
   ")",
   "{",
   "$",
   "row",
   "=",
   "array_values",
   "(",
   "$",
   "row",
   ")",
   ";",
   "return",
   "(",
   "isset",
   "(",
   "$",
   "row",
   "[",
   "$",
   "columnIndex",
   "]",
   ")",
   "?",
   "strlen",
   "(",
   "$",
   "row",
   "[",
   "$",
   "columnIndex",
   "]",
   ")",
   ":",
   "0",
   ")",
   ";",
   "}",
   ",",
   "$",
   "data",
   ")",
   ")",
   ";",
   "}",
   "/*\n         * Print the header if it is defined\n         */",
   "if",
   "(",
   "$",
   "headerRow",
   ")",
   "{",
   "// Remove the header row to the data after detecting the longest string",
   "array_shift",
   "(",
   "$",
   "data",
   ")",
   ";",
   "// Add the header",
   "$",
   "output",
   ".=",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "foreach",
   "(",
   "$",
   "headerRow",
   "as",
   "$",
   "columnIndex",
   "=>",
   "$",
   "cell",
   ")",
   "{",
   "$",
   "output",
   ".=",
   "''",
   ".",
   "str_pad",
   "(",
   "$",
   "cell",
   ",",
   "$",
   "columnWidths",
   "[",
   "$",
   "columnIndex",
   "]",
   ")",
   ".",
   "' '",
   ".",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "}",
   "$",
   "output",
   ".=",
   "PHP_EOL",
   ";",
   "// Add the line below the header",
   "$",
   "output",
   ".=",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "foreach",
   "(",
   "$",
   "headerRow",
   "as",
   "$",
   "columnIndex",
   "=>",
   "$",
   "cell",
   ")",
   "{",
   "$",
   "output",
   ".=",
   "''",
   ".",
   "str_repeat",
   "(",
   "'-'",
   ",",
   "$",
   "columnWidths",
   "[",
   "$",
   "columnIndex",
   "]",
   ")",
   ".",
   "' '",
   ".",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "}",
   "$",
   "output",
   ".=",
   "PHP_EOL",
   ";",
   "}",
   "/*\n         * Print the table\n         */",
   "foreach",
   "(",
   "$",
   "data",
   "as",
   "$",
   "row",
   ")",
   "{",
   "$",
   "row",
   "=",
   "array_values",
   "(",
   "$",
   "row",
   ")",
   ";",
   "$",
   "output",
   ".=",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "foreach",
   "(",
   "$",
   "row",
   "as",
   "$",
   "columnIndex",
   "=>",
   "$",
   "cell",
   ")",
   "{",
   "if",
   "(",
   "is_bool",
   "(",
   "$",
   "cell",
   ")",
   ")",
   "{",
   "$",
   "cell",
   "=",
   "$",
   "cell",
   "?",
   "'TRUE'",
   ":",
   "'FALSE'",
   ";",
   "}",
   "$",
   "output",
   ".=",
   "''",
   ".",
   "str_pad",
   "(",
   "$",
   "cell",
   ",",
   "$",
   "columnWidths",
   "[",
   "$",
   "columnIndex",
   "]",
   ")",
   ".",
   "' '",
   ".",
   "$",
   "delimiter",
   ".",
   "' '",
   ";",
   "}",
   "$",
   "output",
   ".=",
   "PHP_EOL",
   ";",
   "}",
   "$",
   "this",
   "->",
   "output",
   "(",
   "$",
   "output",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-204",
  "nl_tokens": [
   "Increase",
   "the",
   "context",
   "until",
   "it",
   "is",
   "unique",
   "but",
   "don",
   "t",
   "let",
   "the",
   "pattern",
   "expand",
   "beyond",
   "Match",
   "-",
   ">",
   "maxBits",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "addContext",
   "(",
   "PatchObject",
   "$",
   "patch",
   ",",
   "$",
   "text",
   ")",
   "{",
   "if",
   "(",
   "!",
   "mb_strlen",
   "(",
   "$",
   "text",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "padding",
   "=",
   "0",
   ";",
   "$",
   "pattern",
   "=",
   "mb_substr",
   "(",
   "$",
   "text",
   ",",
   "$",
   "patch",
   "->",
   "getStart1",
   "(",
   ")",
   ",",
   "$",
   "patch",
   "->",
   "getLength1",
   "(",
   ")",
   ")",
   ";",
   "// Look for the first and last matches of pattern in text.",
   "// If two different matches are found, increase the pattern length.",
   "$",
   "match",
   "=",
   "$",
   "this",
   "->",
   "getMatch",
   "(",
   ")",
   ";",
   "while",
   "(",
   "(",
   "!",
   "$",
   "pattern",
   "||",
   "mb_strpos",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ")",
   "!==",
   "mb_strrpos",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ")",
   ")",
   "&&",
   "(",
   "$",
   "match",
   "->",
   "getMaxBits",
   "(",
   ")",
   "==",
   "0",
   "||",
   "mb_strlen",
   "(",
   "$",
   "pattern",
   ")",
   "<",
   "$",
   "match",
   "->",
   "getMaxBits",
   "(",
   ")",
   "-",
   "2",
   "*",
   "$",
   "this",
   "->",
   "getMargin",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "padding",
   "+=",
   "$",
   "this",
   "->",
   "getMargin",
   "(",
   ")",
   ";",
   "$",
   "pattern",
   "=",
   "mb_substr",
   "(",
   "$",
   "text",
   ",",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "-",
   "$",
   "padding",
   ")",
   ",",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "+",
   "$",
   "patch",
   "->",
   "getLength1",
   "(",
   ")",
   "+",
   "$",
   "padding",
   "-",
   "max",
   "(",
   "0",
   ",",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "-",
   "$",
   "padding",
   ")",
   ")",
   ";",
   "}",
   "// Add one chunk for good luck.",
   "$",
   "padding",
   "+=",
   "$",
   "this",
   "->",
   "getMargin",
   "(",
   ")",
   ";",
   "// Add the prefix.",
   "$",
   "prefix",
   "=",
   "mb_substr",
   "(",
   "$",
   "text",
   ",",
   "max",
   "(",
   "0",
   ",",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "-",
   "$",
   "padding",
   ")",
   ",",
   "min",
   "(",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   ",",
   "$",
   "padding",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "prefix",
   "!=",
   "''",
   ")",
   "{",
   "$",
   "patch",
   "->",
   "prependChanges",
   "(",
   "array",
   "(",
   "Diff",
   "::",
   "EQUAL",
   ",",
   "$",
   "prefix",
   ")",
   ")",
   ";",
   "}",
   "// Add the suffix.",
   "$",
   "suffix",
   "=",
   "mb_substr",
   "(",
   "$",
   "text",
   ",",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "+",
   "$",
   "patch",
   "->",
   "getLength1",
   "(",
   ")",
   ",",
   "$",
   "padding",
   ")",
   ";",
   "if",
   "(",
   "$",
   "suffix",
   "!=",
   "''",
   ")",
   "{",
   "$",
   "patch",
   "->",
   "appendChanges",
   "(",
   "array",
   "(",
   "Diff",
   "::",
   "EQUAL",
   ",",
   "$",
   "suffix",
   ")",
   ")",
   ";",
   "}",
   "// Roll back the start points.",
   "$",
   "prefixLen",
   "=",
   "mb_strlen",
   "(",
   "$",
   "prefix",
   ")",
   ";",
   "$",
   "patch",
   "->",
   "setStart1",
   "(",
   "$",
   "patch",
   "->",
   "getStart1",
   "(",
   ")",
   "-",
   "$",
   "prefixLen",
   ")",
   ";",
   "$",
   "patch",
   "->",
   "setStart2",
   "(",
   "$",
   "patch",
   "->",
   "getStart2",
   "(",
   ")",
   "-",
   "$",
   "prefixLen",
   ")",
   ";",
   "// Extend lengths.",
   "$",
   "suffixLen",
   "=",
   "mb_strlen",
   "(",
   "$",
   "suffix",
   ")",
   ";",
   "$",
   "patch",
   "->",
   "setLength1",
   "(",
   "$",
   "patch",
   "->",
   "getLength1",
   "(",
   ")",
   "+",
   "$",
   "prefixLen",
   "+",
   "$",
   "suffixLen",
   ")",
   ";",
   "$",
   "patch",
   "->",
   "setLength2",
   "(",
   "$",
   "patch",
   "->",
   "getLength2",
   "(",
   ")",
   "+",
   "$",
   "prefixLen",
   "+",
   "$",
   "suffixLen",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-205",
  "nl_tokens": [
   "D\u00e9termine",
   "la",
   "valeur",
   "max",
   "d",
   "un",
   "tableau"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "<mask>",
   "(",
   "$",
   "array",
   ",",
   "$",
   "key",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "key",
   ")",
   "{",
   "$",
   "max",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "is_numeric",
   "(",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   ")",
   "&&",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "is_numeric",
   "(",
   "$",
   "value",
   ")",
   "&&",
   "$",
   "value",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-206",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "this",
   "->",
   "resetMessages",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "value",
   "=",
   "$",
   "value",
   ";",
   "if",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unexpected type: '",
   ".",
   "gettype",
   "(",
   "$",
   "value",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "<",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   "self",
   "::",
   "TOO_SHORT",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   "&&",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   "self",
   "::",
   "TOO_LONG",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-207",
  "nl_tokens": [
   "Paginate",
   "collection",
   "to",
   "match",
   "a",
   "num",
   "page"
  ],
  "pl_tokens": [
   "public",
   "function",
   "paginate",
   "(",
   "$",
   "neededNumPage",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_usePagination",
   "===",
   "false",
   ")",
   "{",
   "return",
   "$",
   "this",
   ";",
   "}",
   "// build the limit start",
   "$",
   "limitStart",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "neededNumPage",
   "-",
   "1",
   ")",
   "*",
   "$",
   "this",
   "->",
   "_paginationNbModelByPage",
   ";",
   "// limit fetch query for page $neededNumPage",
   "$",
   "this",
   "->",
   "_queryHelper",
   "->",
   "limit",
   "(",
   "$",
   "limitStart",
   ",",
   "$",
   "this",
   "->",
   "_paginationNbModelByPage",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-208",
  "nl_tokens": [
   "Copy",
   "the",
   "contents",
   "of",
   "a",
   "stream",
   "into",
   "another",
   "stream",
   "until",
   "the",
   "given",
   "number",
   "of",
   "bytes",
   "have",
   "been",
   "read",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "copyToStream",
   "(",
   "StreamInterface",
   "$",
   "source",
   ",",
   "StreamInterface",
   "$",
   "dest",
   ",",
   "int",
   "$",
   "maxLen",
   "=",
   "-",
   "1",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "$",
   "maxLen",
   "===",
   "-",
   "1",
   ")",
   "{",
   "while",
   "(",
   "!",
   "$",
   "source",
   "->",
   "eof",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "(",
   "bool",
   ")",
   "$",
   "dest",
   "->",
   "write",
   "(",
   "$",
   "source",
   "->",
   "read",
   "(",
   "1048576",
   ")",
   ")",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "return",
   ";",
   "}",
   "$",
   "bufferSize",
   "=",
   "8192",
   ";",
   "if",
   "(",
   "$",
   "maxLen",
   "===",
   "-",
   "1",
   ")",
   "{",
   "while",
   "(",
   "!",
   "$",
   "source",
   "->",
   "eof",
   "(",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "(",
   "bool",
   ")",
   "$",
   "dest",
   "->",
   "write",
   "(",
   "$",
   "source",
   "->",
   "read",
   "(",
   "$",
   "bufferSize",
   ")",
   ")",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "}",
   "else",
   "{",
   "$",
   "remaining",
   "=",
   "$",
   "maxLen",
   ";",
   "while",
   "(",
   "$",
   "remaining",
   ">",
   "0",
   "&&",
   "!",
   "$",
   "source",
   "->",
   "eof",
   "(",
   ")",
   ")",
   "{",
   "$",
   "buf",
   "=",
   "$",
   "source",
   "->",
   "read",
   "(",
   "\\",
   "<mask>",
   "(",
   "$",
   "bufferSize",
   ",",
   "$",
   "remaining",
   ")",
   ")",
   ";",
   "$",
   "len",
   "=",
   "\\",
   "strlen",
   "(",
   "$",
   "buf",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "len",
   ")",
   "{",
   "break",
   ";",
   "}",
   "$",
   "remaining",
   "-=",
   "$",
   "len",
   ";",
   "$",
   "dest",
   "->",
   "write",
   "(",
   "$",
   "buf",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-209",
  "nl_tokens": [
   "\u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u7684\u968f\u673a\u6570"
  ],
  "pl_tokens": [
   "static",
   "function",
   "random",
   "(",
   "$",
   "length",
   ",",
   "$",
   "numeric",
   "=",
   "0",
   ")",
   "{",
   "$",
   "seed",
   "=",
   "md5",
   "(",
   "print_r",
   "(",
   "$",
   "_SERVER",
   ",",
   "1",
   ")",
   ".",
   "microtime",
   "(",
   "true",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "numeric",
   ")",
   "{",
   "$",
   "seed",
   "=",
   "str_replace",
   "(",
   "'0'",
   ",",
   "''",
   ",",
   "base_convert",
   "(",
   "$",
   "seed",
   ",",
   "16",
   ",",
   "10",
   ")",
   ")",
   ".",
   "'0123456789'",
   ";",
   "}",
   "else",
   "{",
   "$",
   "seed",
   "=",
   "base_convert",
   "(",
   "$",
   "seed",
   ",",
   "16",
   ",",
   "35",
   ")",
   ".",
   "'zZz'",
   ".",
   "strtoupper",
   "(",
   "$",
   "seed",
   ")",
   ";",
   "}",
   "$",
   "hash",
   "=",
   "''",
   ";",
   "$",
   "<mask>",
   "=",
   "strlen",
   "(",
   "$",
   "seed",
   ")",
   "-",
   "1",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "length",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "hash",
   ".=",
   "$",
   "seed",
   "[",
   "mt_rand",
   "(",
   "0",
   ",",
   "$",
   "max",
   ")",
   "]",
   ";",
   "}",
   "return",
   "$",
   "hash",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-210",
  "nl_tokens": [
   "lookup",
   "next",
   "n",
   "tokens"
  ],
  "pl_tokens": [
   "public",
   "function",
   "lookupMany",
   "(",
   "$",
   "n",
   "=",
   "1",
   ")",
   "{",
   "if",
   "(",
   "$",
   "n",
   ">",
   "$",
   "this",
   "->",
   "bufSize",
   ")",
   "{",
   "$",
   "this",
   "->",
   "bufSize",
   "=",
   "$",
   "n",
   ";",
   "}",
   "$",
   "this",
   "->",
   "fillBuffer",
   "(",
   ")",
   ";",
   "$",
   "tokens",
   "=",
   "[",
   "]",
   ";",
   "$",
   "size",
   "=",
   "<mask>",
   "(",
   "$",
   "n",
   ",",
   "count",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   ")",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "size",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "tokens",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "i",
   "]",
   ";",
   "}",
   "return",
   "$",
   "tokens",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-211",
  "nl_tokens": [
   "Return",
   "the",
   "dominant",
   "color",
   "for",
   "an",
   "image"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "imageDominant",
   "(",
   "$",
   "src",
   ",",
   "$",
   "granularity",
   "=",
   "1",
   ")",
   "{",
   "$",
   "granularity",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "abs",
   "(",
   "(",
   "int",
   ")",
   "$",
   "granularity",
   ")",
   ")",
   ";",
   "$",
   "channels",
   "=",
   "array",
   "(",
   "'red'",
   "=>",
   "0",
   ",",
   "'green'",
   "=>",
   "0",
   ",",
   "'blue'",
   "=>",
   "0",
   ")",
   ";",
   "$",
   "size",
   "=",
   "@",
   "getimagesize",
   "(",
   "$",
   "src",
   ")",
   ";",
   "if",
   "(",
   "$",
   "size",
   "===",
   "false",
   ")",
   "{",
   "user_error",
   "(",
   "\"Unable to get image size data: \"",
   ".",
   "$",
   "src",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "$",
   "img",
   "=",
   "@",
   "imagecreatefromstring",
   "(",
   "@",
   "file_get_contents",
   "(",
   "$",
   "src",
   ")",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "img",
   ")",
   "{",
   "user_error",
   "(",
   "\"Unable to open image file: \"",
   ".",
   "$",
   "src",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "for",
   "(",
   "$",
   "x",
   "=",
   "0",
   ";",
   "$",
   "x",
   "<",
   "$",
   "size",
   "[",
   "0",
   "]",
   ";",
   "$",
   "x",
   "+=",
   "$",
   "granularity",
   ")",
   "{",
   "for",
   "(",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "y",
   "<",
   "$",
   "size",
   "[",
   "1",
   "]",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "granularity",
   ")",
   "{",
   "$",
   "thisColor",
   "=",
   "imagecolorat",
   "(",
   "$",
   "img",
   ",",
   "$",
   "x",
   ",",
   "$",
   "y",
   ")",
   ";",
   "$",
   "rgb",
   "=",
   "imagecolorsforindex",
   "(",
   "$",
   "img",
   ",",
   "$",
   "thisColor",
   ")",
   ";",
   "$",
   "channels",
   "[",
   "'red'",
   "]",
   "+=",
   "$",
   "rgb",
   "[",
   "'red'",
   "]",
   ";",
   "$",
   "channels",
   "[",
   "'green'",
   "]",
   "+=",
   "$",
   "rgb",
   "[",
   "'green'",
   "]",
   ";",
   "$",
   "channels",
   "[",
   "'blue'",
   "]",
   "+=",
   "$",
   "rgb",
   "[",
   "'blue'",
   "]",
   ";",
   "}",
   "}",
   "$",
   "nbPixels",
   "=",
   "ceil",
   "(",
   "$",
   "size",
   "[",
   "0",
   "]",
   "/",
   "$",
   "granularity",
   ")",
   "*",
   "ceil",
   "(",
   "$",
   "size",
   "[",
   "1",
   "]",
   "/",
   "$",
   "granularity",
   ")",
   ";",
   "$",
   "channels",
   "[",
   "'red'",
   "]",
   "=",
   "round",
   "(",
   "$",
   "channels",
   "[",
   "'red'",
   "]",
   "/",
   "$",
   "nbPixels",
   ")",
   ";",
   "$",
   "channels",
   "[",
   "'green'",
   "]",
   "=",
   "round",
   "(",
   "$",
   "channels",
   "[",
   "'green'",
   "]",
   "/",
   "$",
   "nbPixels",
   ")",
   ";",
   "$",
   "channels",
   "[",
   "'blue'",
   "]",
   "=",
   "round",
   "(",
   "$",
   "channels",
   "[",
   "'blue'",
   "]",
   "/",
   "$",
   "nbPixels",
   ")",
   ";",
   "return",
   "$",
   "channels",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-212",
  "nl_tokens": [
   "Apply",
   "a",
   "worker",
   "to",
   "the",
   "working",
   "or",
   "pending",
   "queue"
  ],
  "pl_tokens": [
   "public",
   "function",
   "apply",
   "(",
   "$",
   "func",
   "=",
   "null",
   ")",
   "{",
   "// add new function to pending queue",
   "if",
   "(",
   "$",
   "func",
   "!==",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "func",
   "instanceof",
   "\\",
   "Closure",
   "or",
   "$",
   "func",
   "instanceof",
   "ProcessInterface",
   "or",
   "is_callable",
   "(",
   "$",
   "func",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "pending",
   "[",
   "]",
   "=",
   "func_get_args",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "\\",
   "UnexpectedValueException",
   "(",
   "\"Parameter 1 in ProcessPool#apply must be a Closure or callable\"",
   ")",
   ";",
   "}",
   "}",
   "// start a new worker if our current worker queue is low",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "pending",
   ")",
   "and",
   "count",
   "(",
   "$",
   "this",
   "->",
   "workers",
   ")",
   "<",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "{",
   "call_user_func_array",
   "(",
   "array",
   "(",
   "$",
   "this",
   ",",
   "'create'",
   ")",
   ",",
   "array_shift",
   "(",
   "$",
   "this",
   "->",
   "pending",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-213",
  "nl_tokens": [
   "Add",
   "Style",
   "into",
   "the",
   "cue",
   "of",
   "style",
   "vars",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "addStyles",
   "(",
   "$",
   "cssfile",
   ",",
   "$",
   "<mask>",
   "=",
   "FALSE",
   ")",
   "{",
   "//Check if we must minified the style",
   "$",
   "minTag",
   "=",
   "\"<link href='min/?f=\"",
   ".",
   "$",
   "this",
   "->",
   "asset",
   "(",
   "$",
   "cssfile",
   ",",
   "TRUE",
   ")",
   ".",
   "\"' rel='stylesheet' type='text/css'/>\"",
   ";",
   "$",
   "maxTag",
   "=",
   "\"<link href='\"",
   ".",
   "$",
   "this",
   "->",
   "asset",
   "(",
   "$",
   "cssfile",
   ",",
   "TRUE",
   ")",
   ".",
   "\"' rel='stylesheet' type='text/css'/>\"",
   ";",
   "//TODO: min styles",
   "$",
   "includeTag",
   "=",
   "$",
   "maxTag",
   ";",
   "$",
   "minPos",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "styles",
   ",",
   "$",
   "minTag",
   ")",
   ";",
   "$",
   "maxPos",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "styles",
   ",",
   "$",
   "maxTag",
   ")",
   ";",
   "//If it doesn't exist, we concat with the actual styles",
   "if",
   "(",
   "$",
   "minPos",
   "===",
   "FALSE",
   "&&",
   "$",
   "maxPos",
   "===",
   "FALSE",
   ")",
   "{",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "styles",
   ".",
   "$",
   "includeTag",
   ";",
   "$",
   "this",
   "->",
   "styles",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-214",
  "nl_tokens": [
   "Output",
   "formatted",
   "exception",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "outputException",
   "(",
   "\\",
   "Throwable",
   "$",
   "exception",
   ",",
   "OutputInterface",
   "$",
   "output",
   ")",
   "{",
   "$",
   "exceptionClass",
   "=",
   "get_class",
   "(",
   "$",
   "exception",
   ")",
   ";",
   "if",
   "(",
   "$",
   "exception",
   "instanceof",
   "SubProcessException",
   ")",
   "{",
   "$",
   "exceptionClass",
   "=",
   "$",
   "exception",
   "->",
   "getPreviousExceptionClass",
   "(",
   ")",
   ";",
   "}",
   "$",
   "title",
   "=",
   "sprintf",
   "(",
   "'[ %s ]'",
   ",",
   "$",
   "exceptionClass",
   ")",
   ";",
   "$",
   "messageLength",
   "=",
   "Helper",
   "::",
   "strlen",
   "(",
   "$",
   "title",
   ")",
   ";",
   "$",
   "maxWidth",
   "=",
   "$",
   "this",
   "->",
   "terminal",
   "->",
   "getWidth",
   "(",
   ")",
   "?",
   "$",
   "this",
   "->",
   "terminal",
   "->",
   "getWidth",
   "(",
   ")",
   "-",
   "1",
   ":",
   "PHP_INT_MAX",
   ";",
   "$",
   "lines",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "preg_split",
   "(",
   "'/\\r?\\n/'",
   ",",
   "trim",
   "(",
   "$",
   "exception",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ")",
   "as",
   "$",
   "line",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "splitStringByWidth",
   "(",
   "$",
   "line",
   ",",
   "$",
   "maxWidth",
   "-",
   "4",
   ")",
   "as",
   "$",
   "splitLine",
   ")",
   "{",
   "$",
   "lines",
   "[",
   "]",
   "=",
   "$",
   "splitLine",
   ";",
   "$",
   "messageLength",
   "=",
   "<mask>",
   "(",
   "Helper",
   "::",
   "strlen",
   "(",
   "$",
   "splitLine",
   ")",
   ",",
   "$",
   "messageLength",
   ")",
   ";",
   "}",
   "}",
   "$",
   "messages",
   "=",
   "[",
   "]",
   ";",
   "$",
   "messages",
   "[",
   "]",
   "=",
   "$",
   "emptyLine",
   "=",
   "$",
   "this",
   "->",
   "padMessage",
   "(",
   "''",
   ",",
   "$",
   "messageLength",
   ")",
   ";",
   "$",
   "messages",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "padMessage",
   "(",
   "$",
   "title",
   ",",
   "$",
   "messageLength",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "line",
   ")",
   "{",
   "$",
   "messages",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "padMessage",
   "(",
   "OutputFormatter",
   "::",
   "escape",
   "(",
   "$",
   "line",
   ")",
   ",",
   "$",
   "messageLength",
   ")",
   ";",
   "}",
   "$",
   "messages",
   "[",
   "]",
   "=",
   "$",
   "emptyLine",
   ";",
   "$",
   "messages",
   "[",
   "]",
   "=",
   "''",
   ";",
   "$",
   "output",
   "->",
   "writeln",
   "(",
   "$",
   "messages",
   ",",
   "OutputInterface",
   "::",
   "VERBOSITY_QUIET",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-215",
  "nl_tokens": [
   "Replaces",
   "the",
   "contents",
   "of",
   "the",
   "byte",
   "buffer",
   "with",
   "the",
   "bytes",
   "from",
   "the",
   "source",
   "string",
   "beginning",
   "at",
   "the",
   "current",
   "<var",
   ">",
   "position<",
   "/",
   "var",
   ">"
  ],
  "pl_tokens": [
   "public",
   "function",
   "put",
   "(",
   "$",
   "sourceByteArray",
   ")",
   "{",
   "$",
   "newPosition",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "remaining",
   "(",
   ")",
   ",",
   "strlen",
   "(",
   "$",
   "sourceByteArray",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "byteArray",
   "=",
   "substr_replace",
   "(",
   "$",
   "this",
   "->",
   "byteArray",
   ",",
   "$",
   "sourceByteArray",
   ",",
   "$",
   "this",
   "->",
   "position",
   ",",
   "$",
   "newPosition",
   ")",
   ";",
   "$",
   "this",
   "->",
   "position",
   "=",
   "$",
   "newPosition",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-216",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   "{",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CONFIG'",
   ",",
   "'Importing config'",
   "]",
   ")",
   ";",
   "try",
   "{",
   "$",
   "themes",
   "=",
   "array_reverse",
   "(",
   "$",
   "this",
   "->",
   "config",
   "->",
   "getTheme",
   "(",
   ")",
   ")",
   ";",
   "$",
   "count",
   "=",
   "0",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "themes",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "themes",
   "as",
   "$",
   "theme",
   ")",
   "{",
   "$",
   "count",
   "++",
   ";",
   "$",
   "themeConfigFile",
   "=",
   "$",
   "this",
   "->",
   "config",
   "->",
   "getThemesPath",
   "(",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "theme",
   ".",
   "'/'",
   ".",
   "self",
   "::",
   "THEME_CONFIG_FILE",
   ";",
   "if",
   "(",
   "Util",
   "::",
   "getFS",
   "(",
   ")",
   "->",
   "exists",
   "(",
   "$",
   "themeConfigFile",
   ")",
   ")",
   "{",
   "$",
   "themeConfig",
   "=",
   "Yaml",
   "::",
   "parse",
   "(",
   "file_get_contents",
   "(",
   "$",
   "themeConfigFile",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "config",
   "->",
   "import",
   "(",
   "$",
   "themeConfig",
   ")",
   ";",
   "$",
   "message",
   "=",
   "sprintf",
   "(",
   "'%s: config imported'",
   ",",
   "$",
   "theme",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "message",
   "=",
   "sprintf",
   "(",
   "'%s: no config file'",
   ",",
   "$",
   "theme",
   ")",
   ";",
   "}",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CONFIG_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "}",
   "}",
   "catch",
   "(",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "echo",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ".",
   "\"\\n\"",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-217",
  "nl_tokens": [
   "@param",
   "int",
   "$index",
   "@param",
   "int",
   "$size",
   "@param",
   "string|int",
   "$pattern",
   "@param",
   "int",
   "$searchPattern"
  ],
  "pl_tokens": [
   "public",
   "function",
   "invoke",
   "(",
   "$",
   "index",
   "=",
   "1",
   ",",
   "$",
   "size",
   "=",
   "10",
   ",",
   "$",
   "pattern",
   "=",
   "null",
   ",",
   "$",
   "searchPattern",
   "=",
   "MatchingStrategy",
   "::",
   "STARTS_WITH",
   ")",
   "{",
   "$",
   "size",
   "=",
   "<mask>",
   "(",
   "$",
   "size",
   ",",
   "100",
   ")",
   ";",
   "return",
   "new",
   "NumberCollection",
   "(",
   "$",
   "this",
   "->",
   "exec",
   "(",
   "[",
   "'index'",
   "=>",
   "$",
   "index",
   ",",
   "'size'",
   "=>",
   "$",
   "size",
   ",",
   "'pattern'",
   "=>",
   "$",
   "pattern",
   ",",
   "'search_pattern'",
   "=>",
   "$",
   "searchPattern",
   ",",
   "]",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-218",
  "nl_tokens": [
   "Get",
   "the",
   "middle",
   "of",
   "the",
   "segment",
   "as",
   "a",
   "\\",
   "Maths",
   "\\",
   "Geometry",
   "\\",
   "Point",
   "object"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getCenter",
   "(",
   ")",
   "{",
   "$",
   "abscissas",
   "=",
   "array",
   "(",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ")",
   ";",
   "$",
   "ordinates",
   "=",
   "array",
   "(",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ")",
   ";",
   "return",
   "new",
   "Point",
   "(",
   "(",
   "(",
   "<mask>",
   "(",
   "$",
   "abscissas",
   ")",
   "-",
   "min",
   "(",
   "$",
   "abscissas",
   ")",
   ")",
   "/",
   "2",
   ")",
   ",",
   "(",
   "(",
   "max",
   "(",
   "$",
   "ordinates",
   ")",
   "-",
   "min",
   "(",
   "$",
   "ordinates",
   ")",
   ")",
   "/",
   "2",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-219",
  "nl_tokens": [
   "PgSQL\u7684limit\u5982\u679c\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570",
   "\u90a3\u4e48\u548cmysql\u7684limit\u884c\u4e3a\u4fdd\u6301\u4e00\u81f4",
   "\u5e76\u4e14offset",
   "()",
   "\u4e0d\u751f\u6548"
  ],
  "pl_tokens": [
   "public",
   "function",
   "limit",
   "(",
   "$",
   "start",
   ",",
   "$",
   "end",
   "=",
   "false",
   ")",
   "{",
   "if",
   "(",
   "$",
   "end",
   ")",
   "{",
   "$",
   "limit",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "end",
   ")",
   ";",
   "$",
   "offset",
   "=",
   "$",
   "limit",
   "*",
   "(",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "start",
   ")",
   "-",
   "1",
   ")",
   ";",
   "$",
   "this",
   "->",
   "offset_is_valid",
   "=",
   "false",
   ";",
   "return",
   "\"LIMIT {$limit} OFFSET {$offset} \"",
   ";",
   "}",
   "$",
   "start",
   "=",
   "(",
   "int",
   ")",
   "$",
   "start",
   ";",
   "return",
   "\"LIMIT {$start} \"",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-220",
  "nl_tokens": [
   "Function",
   "to",
   "check",
   "if",
   "a",
   "value",
   "is",
   "longer",
   "than",
   "the",
   "$min",
   "length"
  ],
  "pl_tokens": [
   "public",
   "function",
   "longerThan",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "$",
   "result",
   "=",
   "false",
   ";",
   "if",
   "(",
   "function_exists",
   "(",
   "\"mb_strlen\"",
   ")",
   ")",
   "{",
   "if",
   "(",
   "mb_strlen",
   "(",
   "$",
   "value",
   ",",
   "'UTF-8'",
   ")",
   ">",
   "$",
   "min",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   ">",
   "$",
   "min",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_LONGER_THAN\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "min",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-221",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "this",
   "->",
   "resetMessages",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "value",
   "=",
   "$",
   "value",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isStringComparison",
   ")",
   "{",
   "if",
   "(",
   "strcmp",
   "(",
   "$",
   "this",
   "->",
   "value",
   ",",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "<",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "strcmp",
   "(",
   "$",
   "this",
   "->",
   "value",
   ",",
   "$",
   "this",
   "->",
   "max",
   ")",
   ">",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "return",
   "true",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_scalar",
   "(",
   "$",
   "value",
   ")",
   "||",
   "is_bool",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unexpected type: '",
   ".",
   "gettype",
   "(",
   "$",
   "value",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unexpected value: '",
   ".",
   "$",
   "value",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "value",
   "<",
   "$",
   "this",
   "->",
   "min",
   "||",
   "$",
   "value",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-222",
  "nl_tokens": [
   "@param",
   "string",
   "$format",
   "Sets",
   "format",
   "for",
   "size",
   ".",
   "Format",
   "should",
   "containt",
   "string",
   "parsable",
   "by",
   "sprintf",
   "()",
   "function",
   "and",
   "contain",
   "one",
   "%F",
   "macro",
   "that",
   "will",
   "be",
   "replaced",
   "by",
   "size",
   ".",
   "Another",
   "macro",
   "is",
   "U",
   "/",
   "u",
   ".",
   "It",
   "will",
   "be",
   "replaced",
   "with",
   "used",
   "unit",
   ".",
   "U",
   "for",
   "uppercase",
   "u",
   "-",
   "lowercase",
   ".",
   "If",
   "i",
   "is",
   "present",
   "at",
   "the",
   "end",
   "of",
   "format",
   "string",
   "size",
   "multiplier",
   "will",
   "be",
   "set",
   "to",
   "1024",
   "(",
   "and",
   "units",
   "be",
   "KiB",
   "MiB",
   "and",
   "so",
   "on",
   ")",
   "otherwise",
   "multiplier",
   "is",
   "set",
   "to",
   "1000",
   ".",
   "@example",
   "%",
   ".",
   "0F",
   "Ui",
   "617",
   "KiB",
   "@example",
   "%",
   ".",
   "3F",
   "Ui",
   "617",
   ".",
   "070",
   "KiB",
   "@example",
   "%10",
   ".",
   "3F",
   "Ui",
   "616",
   ".",
   "85",
   "KiB",
   "@example",
   "%",
   ".",
   "3F",
   "U",
   "632",
   ".",
   "096",
   "KB"
  ],
  "pl_tokens": [
   "public",
   "function",
   "formatSize",
   "(",
   "$",
   "format",
   ",",
   "$",
   "bytes",
   ",",
   "$",
   "unit",
   "=",
   "null",
   ")",
   "{",
   "$",
   "units",
   "=",
   "[",
   "'B'",
   ",",
   "'KB'",
   ",",
   "'MB'",
   ",",
   "'GB'",
   ",",
   "'TB'",
   ",",
   "'PB'",
   ",",
   "'EB'",
   ",",
   "'ZB'",
   ",",
   "'YB'",
   "]",
   ";",
   "$",
   "bytes",
   "=",
   "<mask>",
   "(",
   "$",
   "bytes",
   ",",
   "0",
   ")",
   ";",
   "$",
   "unit",
   "=",
   "strtoupper",
   "(",
   "$",
   "unit",
   ")",
   ";",
   "if",
   "(",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "-",
   "1",
   ")",
   "===",
   "'i'",
   ")",
   "{",
   "$",
   "multiplier",
   "=",
   "1024",
   ";",
   "$",
   "format",
   "=",
   "substr",
   "(",
   "$",
   "format",
   ",",
   "0",
   ",",
   "-",
   "1",
   ")",
   ";",
   "}",
   "else",
   "$",
   "multiplier",
   "=",
   "1000",
   ";",
   "if",
   "(",
   "$",
   "unit",
   "===",
   "null",
   "||",
   "!",
   "in_array",
   "(",
   "$",
   "unit",
   ",",
   "$",
   "units",
   ")",
   ")",
   "{",
   "$",
   "pow",
   "=",
   "floor",
   "(",
   "(",
   "$",
   "bytes",
   "?",
   "log",
   "(",
   "$",
   "bytes",
   ")",
   ":",
   "0",
   ")",
   "/",
   "log",
   "(",
   "$",
   "multiplier",
   ")",
   ")",
   ";",
   "$",
   "pow",
   "=",
   "min",
   "(",
   "$",
   "pow",
   ",",
   "count",
   "(",
   "$",
   "units",
   ")",
   "-",
   "1",
   ")",
   ";",
   "$",
   "bytes",
   "/=",
   "pow",
   "(",
   "$",
   "multiplier",
   ",",
   "$",
   "pow",
   ")",
   ";",
   "$",
   "unit",
   "=",
   "$",
   "units",
   "[",
   "$",
   "pow",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "pow",
   "=",
   "array_search",
   "(",
   "$",
   "unit",
   ",",
   "$",
   "units",
   ")",
   ";",
   "$",
   "bytes",
   "/=",
   "pow",
   "(",
   "$",
   "multiplier",
   ",",
   "$",
   "pow",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "multiplier",
   "==",
   "1024",
   ")",
   "$",
   "unit",
   "=",
   "(",
   "strlen",
   "(",
   "$",
   "unit",
   ")",
   "==",
   "2",
   ")",
   "?",
   "substr",
   "(",
   "$",
   "unit",
   ",",
   "0",
   ",",
   "1",
   ")",
   ".",
   "'iB'",
   ":",
   "$",
   "unit",
   ";",
   "if",
   "(",
   "strpos",
   "(",
   "$",
   "format",
   ",",
   "'u'",
   ")",
   "!==",
   "false",
   ")",
   "$",
   "format",
   "=",
   "str_replace",
   "(",
   "'u'",
   ",",
   "strtolower",
   "(",
   "$",
   "unit",
   ")",
   ",",
   "$",
   "format",
   ")",
   ";",
   "else",
   "$",
   "format",
   "=",
   "str_replace",
   "(",
   "'U'",
   ",",
   "$",
   "unit",
   ",",
   "$",
   "format",
   ")",
   ";",
   "return",
   "sprintf",
   "(",
   "$",
   "format",
   ",",
   "$",
   "bytes",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-223",
  "nl_tokens": [
   "Summary",
   "start",
   "and",
   "end",
   "of",
   "match",
   "key",
   "in",
   "a",
   "section",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "summaryMatchKey",
   "(",
   "$",
   "section",
   ",",
   "$",
   "matchKey",
   ",",
   "$",
   "sectionKey",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "section",
   ")",
   ")",
   "{",
   "$",
   "section",
   "=",
   "null",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "matchKey",
   ")",
   ")",
   "{",
   "$",
   "matchKey",
   "=",
   "null",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "sectionKey",
   ")",
   ")",
   "{",
   "$",
   "sectionKey",
   "=",
   "0",
   ";",
   "}",
   "$",
   "output",
   "=",
   "''",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "log_sections",
   "[",
   "$",
   "section",
   "]",
   ")",
   "&&",
   "is_array",
   "(",
   "$",
   "this",
   "->",
   "log_sections",
   "[",
   "$",
   "section",
   "]",
   ")",
   "&&",
   "$",
   "matchKey",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "matchKeyTime",
   "=",
   "[",
   "]",
   ";",
   "$",
   "matchKeyMemory",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "log_sections",
   "[",
   "$",
   "section",
   "]",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "item",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'matchKey'",
   "]",
   ")",
   "&&",
   "$",
   "item",
   "[",
   "'matchKey'",
   "]",
   "==",
   "$",
   "matchKey",
   "&&",
   "$",
   "key",
   "<=",
   "$",
   "sectionKey",
   ")",
   "{",
   "if",
   "(",
   "count",
   "(",
   "$",
   "matchKeyMemory",
   ")",
   ">=",
   "2",
   "||",
   "count",
   "(",
   "$",
   "matchKeyTime",
   ")",
   ">=",
   "2",
   ")",
   "{",
   "break",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'time'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "matchKeyTime",
   "[",
   "]",
   "=",
   "$",
   "item",
   "[",
   "'time'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'memory'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "matchKeyMemory",
   "[",
   "]",
   "=",
   "$",
   "item",
   "[",
   "'memory'",
   "]",
   ";",
   "}",
   "}",
   "}",
   "// endforeach;",
   "unset",
   "(",
   "$",
   "item",
   ",",
   "$",
   "key",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "matchKeyTime",
   ")",
   ">=",
   "2",
   ")",
   "{",
   "$",
   "output",
   "=",
   "$",
   "this",
   "->",
   "getReadableTime",
   "(",
   "(",
   "<mask>",
   "(",
   "$",
   "matchKeyTime",
   ")",
   "-",
   "min",
   "(",
   "$",
   "matchKeyTime",
   ")",
   ")",
   "*",
   "1000",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "count",
   "(",
   "$",
   "matchKeyMemory",
   ")",
   ">=",
   "2",
   ")",
   "{",
   "$",
   "output",
   "=",
   "$",
   "this",
   "->",
   "getReadableFileSize",
   "(",
   "max",
   "(",
   "$",
   "matchKeyMemory",
   ")",
   "-",
   "min",
   "(",
   "$",
   "matchKeyMemory",
   ")",
   ")",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "matchKeyMemory",
   ",",
   "$",
   "matchKeyTime",
   ")",
   ";",
   "}",
   "return",
   "$",
   "output",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-224",
  "nl_tokens": [
   "Verify",
   "if",
   "the",
   "current",
   "token",
   "is",
   "one",
   "of",
   "the",
   "targetted",
   "classes",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "check_for_matches",
   "(",
   "$",
   "stackPtr",
   ")",
   "{",
   "$",
   "skip_to",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "groups",
   "as",
   "$",
   "groupName",
   "=>",
   "$",
   "group",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "excluded_groups",
   "[",
   "$",
   "groupName",
   "]",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "preg_match",
   "(",
   "$",
   "group",
   "[",
   "'regex'",
   "]",
   ",",
   "$",
   "this",
   "->",
   "classname",
   ")",
   "===",
   "1",
   ")",
   "{",
   "$",
   "skip_to",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "process_matched_token",
   "(",
   "$",
   "stackPtr",
   ",",
   "$",
   "groupName",
   ",",
   "$",
   "this",
   "->",
   "classname",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "skip_to",
   ")",
   "||",
   "<mask>",
   "(",
   "$",
   "skip_to",
   ")",
   "===",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "return",
   "min",
   "(",
   "$",
   "skip_to",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-225",
  "nl_tokens": [
   "Resize",
   "image",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "resize",
   "(",
   "array",
   "$",
   "args",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "class_exists",
   "(",
   "'Imagick'",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "default_args",
   "=",
   "[",
   "'file'",
   "=>",
   "''",
   ",",
   "'format'",
   "=>",
   "''",
   ",",
   "'size'",
   "=>",
   "0",
   ",",
   "'width'",
   "=>",
   "0",
   ",",
   "'height'",
   "=>",
   "0",
   ",",
   "'crop'",
   "=>",
   "''",
   ",",
   "'filter'",
   "=>",
   "\\",
   "Imagick",
   "::",
   "FILTER_LANCZOS",
   ",",
   "'blur'",
   "=>",
   "1",
   ",",
   "'bestfit'",
   "=>",
   "false",
   ",",
   "'output_file'",
   "=>",
   "''",
   ",",
   "'output_format'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Defaults.",
   "$",
   "args",
   "=",
   "$",
   "this",
   "->",
   "parseFormatArgs",
   "(",
   "$",
   "args",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   "?",
   ":",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   "?",
   ":",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'crop'",
   "]",
   "=",
   "mb_strtolower",
   "(",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'crop'",
   "]",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'filter'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'filter'",
   "]",
   ";",
   "$",
   "args",
   "[",
   "'blur'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'blur'",
   "]",
   ";",
   "$",
   "args",
   "[",
   "'bestfit'",
   "]",
   "=",
   "(",
   "bool",
   ")",
   "$",
   "args",
   "[",
   "'bestfit'",
   "]",
   ";",
   "$",
   "output_file_existed_prior",
   "=",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "try",
   "{",
   "// Catch exceptions.",
   "$",
   "image",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "image",
   "->",
   "setBackgroundColor",
   "(",
   "'transparent'",
   ")",
   ";",
   "$",
   "image",
   "->",
   "readImage",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'crop'",
   "]",
   "===",
   "'thumbnail'",
   ")",
   "{",
   "$",
   "image",
   "->",
   "cropThumbnailImage",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   ")",
   ";",
   "//",
   "}",
   "elseif",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   "===",
   "'svg'",
   ")",
   "{",
   "$",
   "svg",
   "=",
   "$",
   "image",
   ";",
   "$",
   "image",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "res_x",
   "=",
   "ceil",
   "(",
   "300",
   "*",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   "/",
   "$",
   "svg",
   "->",
   "getImageWidth",
   "(",
   ")",
   ")",
   ")",
   ";",
   "$",
   "res_y",
   "=",
   "ceil",
   "(",
   "300",
   "*",
   "(",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   "/",
   "$",
   "svg",
   "->",
   "getImageHeight",
   "(",
   ")",
   ")",
   ")",
   ";",
   "$",
   "image",
   "->",
   "setResolution",
   "(",
   "$",
   "res_x",
   ",",
   "$",
   "res_y",
   ")",
   ";",
   "// Before filling.",
   "$",
   "image",
   "->",
   "setBackgroundColor",
   "(",
   "'transparent'",
   ")",
   ";",
   "$",
   "image",
   "->",
   "readImage",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   ";",
   "$",
   "image",
   "->",
   "scaleImage",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'bestfit'",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "image",
   "->",
   "resizeImage",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'filter'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'blur'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'bestfit'",
   "]",
   ")",
   ";",
   "}",
   "$",
   "image",
   "->",
   "writeImage",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "return",
   "true",
   ";",
   "// Success.",
   "//",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "Exception",
   ")",
   "{",
   "echo",
   "$",
   "Exception",
   "->",
   "getMessage",
   "(",
   ")",
   ".",
   "\"\\n\"",
   ";",
   "if",
   "(",
   "!",
   "$",
   "output_file_existed_prior",
   "&&",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ")",
   "{",
   "unlink",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-226",
  "nl_tokens": [
   "Saves",
   "the",
   "DetailForm",
   "and",
   "writes",
   "or",
   "creates",
   "a",
   "new",
   "object",
   "managed",
   "by",
   "the",
   "editor"
  ],
  "pl_tokens": [
   "public",
   "function",
   "saveDetail",
   "(",
   "$",
   "data",
   ",",
   "$",
   "form",
   ")",
   "{",
   "$",
   "item",
   "=",
   "$",
   "this",
   "->",
   "item",
   ";",
   "if",
   "(",
   "!",
   "$",
   "item",
   "->",
   "exists",
   "(",
   ")",
   ")",
   "{",
   "$",
   "item",
   "->",
   "DashboardPanelID",
   "=",
   "$",
   "this",
   "->",
   "panel",
   "->",
   "ID",
   ";",
   "$",
   "sort",
   "=",
   "DataList",
   "::",
   "create",
   "(",
   "$",
   "item",
   "->",
   "class",
   ")",
   "->",
   "<mask>",
   "(",
   "\"SortOrder\"",
   ")",
   ";",
   "$",
   "item",
   "->",
   "SortOrder",
   "=",
   "$",
   "sort",
   "+",
   "1",
   ";",
   "$",
   "item",
   "->",
   "write",
   "(",
   ")",
   ";",
   "}",
   "$",
   "form",
   "->",
   "saveInto",
   "(",
   "$",
   "item",
   ")",
   ";",
   "$",
   "item",
   "->",
   "write",
   "(",
   ")",
   ";",
   "return",
   "new",
   "SS_HTTPResponse",
   "(",
   "\"OK\"",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-227",
  "nl_tokens": [
   "@return",
   "$this"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "convertLines",
   "(",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "dataObject",
   "->",
   "count",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "lineNumber",
   "=",
   "0",
   ";",
   "$",
   "lineNumber",
   "<",
   "$",
   "max",
   ";",
   "$",
   "lineNumber",
   "++",
   ")",
   "{",
   "$",
   "this",
   "->",
   "dataObject",
   "->",
   "updateLine",
   "(",
   "$",
   "lineNumber",
   ",",
   "$",
   "this",
   "->",
   "createRowObjectByLineNumber",
   "(",
   "$",
   "lineNumber",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-228",
  "nl_tokens": [
   "Set|update",
   "cache",
   "key",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "set",
   "(",
   "string",
   "$",
   "primary_key",
   ",",
   "$",
   "sub_key",
   ",",
   "$",
   "value",
   ",",
   "int",
   "$",
   "expires_in",
   "=",
   "0",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "enabled",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "expires_in",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "expires_in",
   ")",
   ";",
   "$",
   "expires",
   "=",
   "$",
   "expires_in",
   "?",
   "time",
   "(",
   ")",
   "+",
   "$",
   "expires_in",
   ":",
   "0",
   ";",
   "if",
   "(",
   "!",
   "(",
   "$",
   "key",
   "=",
   "$",
   "this",
   "->",
   "key",
   "(",
   "$",
   "primary_key",
   ",",
   "$",
   "sub_key",
   ")",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Fail; e.g., race condition.",
   "//",
   "}",
   "elseif",
   "(",
   "$",
   "value",
   "===",
   "null",
   "||",
   "is_resource",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Incompatible data type.'",
   ")",
   ";",
   "}",
   "do",
   "{",
   "// Avoid race issues.",
   "$",
   "cas",
   "=",
   "$",
   "cas",
   "??",
   "0",
   ";",
   "$",
   "attempts",
   "=",
   "$",
   "attempts",
   "??",
   "0",
   ";",
   "++",
   "$",
   "attempts",
   ";",
   "// Counter.",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "get",
   "(",
   "$",
   "key",
   ",",
   "null",
   ",",
   "$",
   "cas",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "getResultCode",
   "(",
   ")",
   "===",
   "\\",
   "Memcached",
   "::",
   "RES_NOTFOUND",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "add",
   "(",
   "$",
   "key",
   ",",
   "$",
   "value",
   ",",
   "$",
   "expires",
   ")",
   ")",
   "{",
   "return",
   "true",
   ";",
   "// All good; stop here.",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "cas",
   "(",
   "$",
   "cas",
   ",",
   "$",
   "key",
   ",",
   "$",
   "value",
   ",",
   "$",
   "expires",
   ")",
   ")",
   "{",
   "return",
   "true",
   ";",
   "// All good; stop here.",
   "}",
   "$",
   "result_code",
   "=",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "getResultCode",
   "(",
   ")",
   ";",
   "//",
   "}",
   "while",
   "(",
   "$",
   "attempts",
   "<",
   "$",
   "this",
   "::",
   "MAX_WRITE_ATTEMPTS",
   "// Give up after X attempts.",
   "&&",
   "(",
   "$",
   "result_code",
   "===",
   "\\",
   "Memcached",
   "::",
   "RES_NOTSTORED",
   "||",
   "$",
   "result_code",
   "===",
   "\\",
   "Memcached",
   "::",
   "RES_DATA_EXISTS",
   ")",
   ")",
   ";",
   "return",
   "false",
   ";",
   "// Fail; e.g., race condition or unexpected error.",
   "}"
  ]
 },
 {
  "idx": "maxmin-229",
  "nl_tokens": [
   "Human",
   "time",
   "difference",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "humanDiff",
   "(",
   "int",
   "$",
   "from",
   ",",
   "int",
   "$",
   "to",
   "=",
   "null",
   ",",
   "string",
   "$",
   "format",
   "=",
   "''",
   ")",
   ":",
   "string",
   "{",
   "$",
   "to",
   "=",
   "$",
   "to",
   "??",
   "time",
   "(",
   ")",
   ";",
   "$",
   "diff",
   "=",
   "(",
   "int",
   ")",
   "abs",
   "(",
   "$",
   "to",
   "-",
   "$",
   "from",
   ")",
   ";",
   "if",
   "(",
   "$",
   "format",
   "!==",
   "'abbrev'",
   "&&",
   "$",
   "format",
   "!==",
   "'default'",
   ")",
   "{",
   "$",
   "format",
   "=",
   "'default'",
   ";",
   "// Must be valid.",
   "}",
   "if",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_MINUTE",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "diff",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$ss'",
   ",",
   "'%1$ss'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s sec'",
   ",",
   "'%1$s secs'",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_HOUR",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "$",
   "this",
   "::",
   "SECONDS_IN_MINUTE",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$sm'",
   ",",
   "'%1$sm'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s min'",
   ",",
   "'%1$s mins'",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_DAY",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "$",
   "this",
   "::",
   "SECONDS_IN_HOUR",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$sh'",
   ",",
   "'%1$sh'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s hour'",
   ",",
   "'%1$s hours'",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_WEEK",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "$",
   "this",
   "::",
   "SECONDS_IN_DAY",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$sd'",
   ",",
   "'%1$sd'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s day'",
   ",",
   "'%1$s days'",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_WEEK",
   "*",
   "4",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "$",
   "this",
   "::",
   "SECONDS_IN_WEEK",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$sw'",
   ",",
   "'%1$sw'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s week'",
   ",",
   "'%1$s weeks'",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "diff",
   "<",
   "$",
   "this",
   "::",
   "SECONDS_IN_YEAR",
   ")",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "(",
   "$",
   "this",
   "::",
   "SECONDS_IN_WEEK",
   "*",
   "4",
   ")",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$smo'",
   ",",
   "'%1$smo'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s month'",
   ",",
   "'%1$s months'",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "diff",
   "=",
   "max",
   "(",
   "1",
   ",",
   "round",
   "(",
   "$",
   "diff",
   "/",
   "$",
   "this",
   "::",
   "SECONDS_IN_YEAR",
   ")",
   ")",
   ";",
   "$",
   "fmat",
   "[",
   "'abbrev'",
   "]",
   "=",
   "[",
   "'%1$sy'",
   ",",
   "'%1$sy'",
   "]",
   ";",
   "$",
   "fmat",
   "[",
   "'default'",
   "]",
   "=",
   "[",
   "'%1$s year'",
   ",",
   "'%1$s years'",
   "]",
   ";",
   "}",
   "return",
   "sprintf",
   "(",
   "_n",
   "(",
   "$",
   "fmat",
   "[",
   "$",
   "format",
   "]",
   "[",
   "0",
   "]",
   ",",
   "$",
   "fmat",
   "[",
   "$",
   "format",
   "]",
   "[",
   "1",
   "]",
   ",",
   "$",
   "diff",
   ")",
   ",",
   "$",
   "diff",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-230",
  "nl_tokens": [
   "Add",
   "column",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "addColumn",
   "(",
   "Column",
   "$",
   "column",
   ",",
   "$",
   "position",
   "=",
   "0",
   ")",
   "{",
   "$",
   "column",
   "->",
   "setAuthorizationChecker",
   "(",
   "$",
   "this",
   "->",
   "authorizationChecker",
   ")",
   ";",
   "if",
   "(",
   "$",
   "position",
   "==",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "columns",
   "[",
   "]",
   "=",
   "$",
   "column",
   ";",
   "}",
   "else",
   "{",
   "if",
   "(",
   "$",
   "position",
   ">",
   "0",
   ")",
   "{",
   "--",
   "$",
   "position",
   ";",
   "}",
   "else",
   "{",
   "$",
   "position",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "count",
   "(",
   "$",
   "this",
   "->",
   "columns",
   ")",
   "+",
   "$",
   "position",
   ")",
   ";",
   "}",
   "$",
   "head",
   "=",
   "array_slice",
   "(",
   "$",
   "this",
   "->",
   "columns",
   ",",
   "0",
   ",",
   "$",
   "position",
   ")",
   ";",
   "$",
   "tail",
   "=",
   "array_slice",
   "(",
   "$",
   "this",
   "->",
   "columns",
   ",",
   "$",
   "position",
   ")",
   ";",
   "$",
   "this",
   "->",
   "columns",
   "=",
   "array_merge",
   "(",
   "$",
   "head",
   ",",
   "[",
   "$",
   "column",
   "]",
   ",",
   "$",
   "tail",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-231",
  "nl_tokens": [
   "Formatte",
   "un",
   "texte",
   "d",
   "erreur"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "prepareError",
   "(",
   "$",
   "code",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "getArgValue",
   "(",
   "'min'",
   ")",
   ";",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "getArgValue",
   "(",
   "'max'",
   ")",
   ";",
   "$",
   "error",
   "=",
   "Translation",
   "::",
   "get",
   "(",
   "$",
   "code",
   ")",
   ";",
   "$",
   "error",
   "=",
   "str_replace",
   "(",
   "'%min%'",
   ",",
   "$",
   "min",
   ",",
   "$",
   "error",
   ")",
   ";",
   "$",
   "error",
   "=",
   "str_replace",
   "(",
   "'%max%'",
   ",",
   "$",
   "max",
   ",",
   "$",
   "error",
   ")",
   ";",
   "return",
   "$",
   "error",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-232",
  "nl_tokens": [
   "Locate",
   "the",
   "best",
   "instance",
   "of",
   "pattern",
   "in",
   "text",
   "near",
   "loc",
   "using",
   "the",
   "Bitap",
   "algorithm",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "bitap",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ",",
   "$",
   "loc",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "getMaxBits",
   "(",
   ")",
   "!=",
   "0",
   "&&",
   "$",
   "this",
   "->",
   "getMaxBits",
   "(",
   ")",
   "<",
   "mb_strlen",
   "(",
   "$",
   "pattern",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "RangeException",
   "(",
   "'Pattern too long for this application.'",
   ")",
   ";",
   "}",
   "// Initialise the alphabet.",
   "$",
   "s",
   "=",
   "$",
   "this",
   "->",
   "alphabet",
   "(",
   "$",
   "pattern",
   ")",
   ";",
   "$",
   "patternLen",
   "=",
   "mb_strlen",
   "(",
   "$",
   "pattern",
   ")",
   ";",
   "$",
   "textLen",
   "=",
   "mb_strlen",
   "(",
   "$",
   "text",
   ")",
   ";",
   "// Highest score beyond which we give up.",
   "$",
   "scoreThreshold",
   "=",
   "$",
   "this",
   "->",
   "getThreshold",
   "(",
   ")",
   ";",
   "// Is there a nearby exact match? (speedup)",
   "$",
   "bestLoc",
   "=",
   "mb_strpos",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ",",
   "$",
   "loc",
   ")",
   ";",
   "if",
   "(",
   "$",
   "bestLoc",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "scoreThreshold",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "bitapScore",
   "(",
   "0",
   ",",
   "$",
   "bestLoc",
   ",",
   "$",
   "patternLen",
   ",",
   "$",
   "loc",
   ")",
   ",",
   "$",
   "scoreThreshold",
   ")",
   ";",
   "// What about in the other direction? (speedup)",
   "$",
   "bestLoc",
   "=",
   "mb_strrpos",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ",",
   "$",
   "loc",
   "+",
   "$",
   "patternLen",
   ")",
   ";",
   "if",
   "(",
   "$",
   "bestLoc",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "scoreThreshold",
   "=",
   "min",
   "(",
   "$",
   "this",
   "->",
   "bitapScore",
   "(",
   "0",
   ",",
   "$",
   "bestLoc",
   ",",
   "$",
   "patternLen",
   ",",
   "$",
   "loc",
   ")",
   ",",
   "$",
   "scoreThreshold",
   ")",
   ";",
   "}",
   "}",
   "// Initialise the bit arrays.",
   "$",
   "matchMask",
   "=",
   "1",
   "<<",
   "(",
   "$",
   "patternLen",
   "-",
   "1",
   ")",
   ";",
   "$",
   "bestLoc",
   "=",
   "-",
   "1",
   ";",
   "$",
   "binMax",
   "=",
   "$",
   "patternLen",
   "+",
   "$",
   "textLen",
   ";",
   "$",
   "lastRd",
   "=",
   "null",
   ";",
   "for",
   "(",
   "$",
   "d",
   "=",
   "0",
   ";",
   "$",
   "d",
   "<",
   "$",
   "patternLen",
   ";",
   "$",
   "d",
   "++",
   ")",
   "{",
   "// Scan for the best match each iteration allows for one more error.",
   "// Run a binary search to determine how far from 'loc' we can stray at",
   "// this error level.",
   "$",
   "binMin",
   "=",
   "0",
   ";",
   "$",
   "binMid",
   "=",
   "$",
   "binMax",
   ";",
   "while",
   "(",
   "$",
   "binMin",
   "<",
   "$",
   "binMid",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "bitapScore",
   "(",
   "$",
   "d",
   ",",
   "$",
   "loc",
   "+",
   "$",
   "binMid",
   ",",
   "$",
   "patternLen",
   ",",
   "$",
   "loc",
   ")",
   "<=",
   "$",
   "scoreThreshold",
   ")",
   "{",
   "$",
   "binMin",
   "=",
   "$",
   "binMid",
   ";",
   "}",
   "else",
   "{",
   "$",
   "binMax",
   "=",
   "$",
   "binMid",
   ";",
   "}",
   "$",
   "binMid",
   "=",
   "(",
   "int",
   ")",
   "(",
   "(",
   "$",
   "binMax",
   "-",
   "$",
   "binMin",
   ")",
   "/",
   "2",
   ")",
   "+",
   "$",
   "binMin",
   ";",
   "}",
   "// Use the result from this iteration as the maximum for the next.",
   "$",
   "binMax",
   "=",
   "$",
   "binMid",
   ";",
   "$",
   "start",
   "=",
   "max",
   "(",
   "1",
   ",",
   "$",
   "loc",
   "-",
   "$",
   "binMid",
   "+",
   "1",
   ")",
   ";",
   "$",
   "finish",
   "=",
   "min",
   "(",
   "$",
   "loc",
   "+",
   "$",
   "binMid",
   ",",
   "$",
   "textLen",
   ")",
   "+",
   "$",
   "patternLen",
   ";",
   "$",
   "rd",
   "=",
   "array_fill",
   "(",
   "0",
   ",",
   "$",
   "finish",
   "+",
   "2",
   ",",
   "0",
   ")",
   ";",
   "$",
   "rd",
   "[",
   "$",
   "finish",
   "+",
   "1",
   "]",
   "=",
   "(",
   "1",
   "<<",
   "$",
   "d",
   ")",
   "-",
   "1",
   ";",
   "for",
   "(",
   "$",
   "j",
   "=",
   "$",
   "finish",
   ";",
   "$",
   "j",
   ">",
   "$",
   "start",
   "-",
   "1",
   ";",
   "$",
   "j",
   "--",
   ")",
   "{",
   "if",
   "(",
   "$",
   "textLen",
   "<=",
   "$",
   "j",
   "-",
   "1",
   ")",
   "{",
   "// Out of range.",
   "$",
   "charMatch",
   "=",
   "0",
   ";",
   "}",
   "else",
   "{",
   "$",
   "charMatch",
   "=",
   "isset",
   "(",
   "$",
   "s",
   "[",
   "$",
   "text",
   "[",
   "$",
   "j",
   "-",
   "1",
   "]",
   "]",
   ")",
   "?",
   "$",
   "s",
   "[",
   "$",
   "text",
   "[",
   "$",
   "j",
   "-",
   "1",
   "]",
   "]",
   ":",
   "0",
   ";",
   "}",
   "if",
   "(",
   "$",
   "d",
   "==",
   "0",
   ")",
   "{",
   "// First pass: exact match.",
   "$",
   "rd",
   "[",
   "$",
   "j",
   "]",
   "=",
   "(",
   "(",
   "$",
   "rd",
   "[",
   "$",
   "j",
   "+",
   "1",
   "]",
   "<<",
   "1",
   ")",
   "|",
   "1",
   ")",
   "&",
   "$",
   "charMatch",
   ";",
   "}",
   "else",
   "{",
   "// Subsequent passes: fuzzy match.",
   "$",
   "rd",
   "[",
   "$",
   "j",
   "]",
   "=",
   "(",
   "(",
   "(",
   "$",
   "rd",
   "[",
   "$",
   "j",
   "+",
   "1",
   "]",
   "<<",
   "1",
   ")",
   "|",
   "1",
   ")",
   "&",
   "$",
   "charMatch",
   ")",
   "|",
   "(",
   "(",
   "(",
   "$",
   "lastRd",
   "[",
   "$",
   "j",
   "+",
   "1",
   "]",
   "|",
   "$",
   "lastRd",
   "[",
   "$",
   "j",
   "]",
   ")",
   "<<",
   "1",
   ")",
   "|",
   "1",
   ")",
   "|",
   "$",
   "lastRd",
   "[",
   "$",
   "j",
   "+",
   "1",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "rd",
   "[",
   "$",
   "j",
   "]",
   "&",
   "$",
   "matchMask",
   ")",
   "{",
   "$",
   "score",
   "=",
   "$",
   "this",
   "->",
   "bitapScore",
   "(",
   "$",
   "d",
   ",",
   "$",
   "j",
   "-",
   "1",
   ",",
   "$",
   "patternLen",
   ",",
   "$",
   "loc",
   ")",
   ";",
   "// This match will almost certainly be better than any existing match.",
   "// But check anyway.",
   "if",
   "(",
   "$",
   "score",
   "<=",
   "$",
   "scoreThreshold",
   ")",
   "{",
   "// Told you so.",
   "$",
   "scoreThreshold",
   "=",
   "$",
   "score",
   ";",
   "$",
   "bestLoc",
   "=",
   "$",
   "j",
   "-",
   "1",
   ";",
   "if",
   "(",
   "$",
   "bestLoc",
   ">",
   "$",
   "loc",
   ")",
   "{",
   "// When passing loc, don't exceed our current distance from loc.",
   "$",
   "start",
   "=",
   "max",
   "(",
   "1",
   ",",
   "2",
   "*",
   "$",
   "loc",
   "-",
   "$",
   "bestLoc",
   ")",
   ";",
   "}",
   "else",
   "{",
   "// Already passed loc, downhill from here on in.",
   "break",
   ";",
   "}",
   "}",
   "}",
   "}",
   "// No hope for a (better) match at greater error levels.",
   "if",
   "(",
   "$",
   "this",
   "->",
   "bitapScore",
   "(",
   "$",
   "d",
   "+",
   "1",
   ",",
   "$",
   "loc",
   ",",
   "$",
   "patternLen",
   ",",
   "$",
   "loc",
   ")",
   ">",
   "$",
   "scoreThreshold",
   ")",
   "{",
   "break",
   ";",
   "}",
   "$",
   "lastRd",
   "=",
   "$",
   "rd",
   ";",
   "}",
   "return",
   "$",
   "bestLoc",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-233",
  "nl_tokens": [
   "\u6700\u5927\u503c"
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "string",
   "$",
   "field",
   ",",
   "string",
   "$",
   "alias",
   "=",
   "'max_value'",
   ")",
   ":",
   "self",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "checkFlowControl",
   "(",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "addAggregate",
   "(",
   "'MAX'",
   ",",
   "$",
   "field",
   ",",
   "$",
   "alias",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-234",
  "nl_tokens": [
   "Sets",
   "a",
   "cookie",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "set",
   "(",
   "string",
   "$",
   "name",
   ",",
   "string",
   "$",
   "value",
   ",",
   "int",
   "$",
   "expires_after",
   "=",
   "null",
   ",",
   "string",
   "$",
   "path",
   "=",
   "null",
   ",",
   "string",
   "$",
   "domain",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "secure",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "http_only",
   "=",
   "null",
   ",",
   "string",
   "$",
   "key",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "name",
   ")",
   "{",
   "// Must have a cookie name!",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Missing cookie name.'",
   ")",
   ";",
   "//",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "key",
   "&&",
   "!",
   "(",
   "$",
   "key",
   "=",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9cookies[",
   "'",
   "\u00a9encryption_key'])",
   ")",
   " ",
   "{",
   "",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Missing cookie encryption key.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "value",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "// If not empty.",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "encrypt",
   "(",
   "$",
   "value",
   ",",
   "$",
   "key",
   ")",
   ";",
   "}",
   "$",
   "expires_after",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "expires_after",
   "??",
   "31556926",
   ")",
   ";",
   "$",
   "expires",
   "=",
   "$",
   "expires_after",
   "?",
   "time",
   "(",
   ")",
   "+",
   "$",
   "expires_after",
   ":",
   "0",
   ";",
   "$",
   "path",
   "=",
   "$",
   "path",
   "??",
   "'/'",
   ";",
   "// Entire site.",
   "$",
   "domain",
   "=",
   "$",
   "domain",
   "??",
   "$",
   "this",
   "->",
   "c",
   "::",
   "currentHost",
   "(",
   "false",
   ")",
   ";",
   "$",
   "domain",
   "=",
   "$",
   "domain",
   "===",
   "'root'",
   "?",
   "'.'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "currentRootHost",
   "(",
   "false",
   ")",
   ":",
   "$",
   "domain",
   ";",
   "$",
   "secure",
   "=",
   "$",
   "secure",
   "??",
   "$",
   "this",
   "->",
   "c",
   "::",
   "isSsl",
   "(",
   ")",
   ";",
   "$",
   "http_only",
   "=",
   "$",
   "http_only",
   "??",
   "true",
   ";",
   "if",
   "(",
   "headers_sent",
   "(",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Headers already sent.'",
   ")",
   ";",
   "}",
   "setcookie",
   "(",
   "$",
   "name",
   ",",
   "$",
   "value",
   ",",
   "$",
   "expires",
   ",",
   "$",
   "path",
   ",",
   "$",
   "domain",
   ",",
   "$",
   "secure",
   ",",
   "$",
   "http_only",
   ")",
   ";",
   "if",
   "(",
   "mb_stripos",
   "(",
   "$",
   "name",
   ",",
   "'_test_'",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "_COOKIE",
   "[",
   "$",
   "name",
   "]",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-235",
  "nl_tokens": [
   "Move",
   "a",
   "node",
   "to",
   "the",
   "new",
   "position",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "moveNode",
   "(",
   "$",
   "key",
   ",",
   "$",
   "position",
   ")",
   "{",
   "list",
   "(",
   "$",
   "lft",
   ",",
   "$",
   "rgt",
   ")",
   "=",
   "$",
   "this",
   "->",
   "model",
   "->",
   "newNestedSetQuery",
   "(",
   ")",
   "->",
   "getPlainNodeData",
   "(",
   "$",
   "key",
   ",",
   "TRUE",
   ")",
   ";",
   "if",
   "(",
   "$",
   "lft",
   "<",
   "$",
   "position",
   "&&",
   "$",
   "position",
   "<=",
   "$",
   "rgt",
   ")",
   "{",
   "throw",
   "new",
   "LogicException",
   "(",
   "'Cannot move node into itself.'",
   ")",
   ";",
   "}",
   "// Get boundaries of nodes that should be moved to new position",
   "$",
   "from",
   "=",
   "<mask>",
   "(",
   "$",
   "lft",
   ",",
   "$",
   "position",
   ")",
   ";",
   "$",
   "to",
   "=",
   "max",
   "(",
   "$",
   "rgt",
   ",",
   "$",
   "position",
   "-",
   "1",
   ")",
   ";",
   "// The height of node that is being moved",
   "$",
   "height",
   "=",
   "$",
   "rgt",
   "-",
   "$",
   "lft",
   "+",
   "1",
   ";",
   "// The distance that our node will travel to reach it's destination",
   "$",
   "distance",
   "=",
   "$",
   "to",
   "-",
   "$",
   "from",
   "+",
   "1",
   "-",
   "$",
   "height",
   ";",
   "// If no distance to travel, just return",
   "if",
   "(",
   "$",
   "distance",
   "===",
   "0",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "if",
   "(",
   "$",
   "position",
   ">",
   "$",
   "lft",
   ")",
   "{",
   "$",
   "height",
   "*=",
   "-",
   "1",
   ";",
   "}",
   "else",
   "{",
   "$",
   "distance",
   "*=",
   "-",
   "1",
   ";",
   "}",
   "$",
   "params",
   "=",
   "compact",
   "(",
   "'lft'",
   ",",
   "'rgt'",
   ",",
   "'from'",
   ",",
   "'to'",
   ",",
   "'height'",
   ",",
   "'distance'",
   ")",
   ";",
   "$",
   "boundary",
   "=",
   "[",
   "$",
   "from",
   ",",
   "$",
   "to",
   "]",
   ";",
   "$",
   "query",
   "=",
   "$",
   "this",
   "->",
   "toBase",
   "(",
   ")",
   "->",
   "where",
   "(",
   "function",
   "(",
   "Query",
   "$",
   "inner",
   ")",
   "use",
   "(",
   "$",
   "boundary",
   ")",
   "{",
   "$",
   "inner",
   "->",
   "whereBetween",
   "(",
   "$",
   "this",
   "->",
   "model",
   "->",
   "getLftName",
   "(",
   ")",
   ",",
   "$",
   "boundary",
   ")",
   ";",
   "$",
   "inner",
   "->",
   "orWhereBetween",
   "(",
   "$",
   "this",
   "->",
   "model",
   "->",
   "getRgtName",
   "(",
   ")",
   ",",
   "$",
   "boundary",
   ")",
   ";",
   "}",
   ")",
   ";",
   "return",
   "$",
   "query",
   "->",
   "update",
   "(",
   "$",
   "this",
   "->",
   "patch",
   "(",
   "$",
   "params",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-236",
  "nl_tokens": [
   "Consume",
   "lines",
   "for",
   "an",
   "HTML",
   "block"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "consumeHtml",
   "(",
   "$",
   "lines",
   ",",
   "$",
   "current",
   ")",
   "{",
   "$",
   "content",
   "=",
   "[",
   "]",
   ";",
   "if",
   "(",
   "strncmp",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ",",
   "'<!--'",
   ",",
   "4",
   ")",
   "===",
   "0",
   ")",
   "{",
   "// html comment",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "current",
   ",",
   "$",
   "count",
   "=",
   "count",
   "(",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "i",
   "<",
   "$",
   "count",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ";",
   "$",
   "content",
   "[",
   "]",
   "=",
   "$",
   "line",
   ";",
   "if",
   "(",
   "strpos",
   "(",
   "$",
   "line",
   ",",
   "'-->'",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "}",
   "else",
   "{",
   "$",
   "tag",
   "=",
   "rtrim",
   "(",
   "substr",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ",",
   "1",
   ",",
   "<mask>",
   "(",
   "strpos",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ",",
   "'>'",
   ")",
   ",",
   "strpos",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ".",
   "' '",
   ",",
   "' '",
   ")",
   ")",
   "-",
   "1",
   ")",
   ",",
   "'/'",
   ")",
   ";",
   "$",
   "level",
   "=",
   "0",
   ";",
   "if",
   "(",
   "in_array",
   "(",
   "$",
   "tag",
   ",",
   "$",
   "this",
   "->",
   "selfClosingHtmlElements",
   ")",
   ")",
   "{",
   "$",
   "level",
   "--",
   ";",
   "}",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "current",
   ",",
   "$",
   "count",
   "=",
   "count",
   "(",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "i",
   "<",
   "$",
   "count",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "lines",
   "[",
   "$",
   "i",
   "]",
   ";",
   "$",
   "content",
   "[",
   "]",
   "=",
   "$",
   "line",
   ";",
   "$",
   "level",
   "+=",
   "substr_count",
   "(",
   "$",
   "line",
   ",",
   "\"<$tag\"",
   ")",
   "-",
   "substr_count",
   "(",
   "$",
   "line",
   ",",
   "\"</$tag>\"",
   ")",
   "-",
   "substr_count",
   "(",
   "$",
   "line",
   ",",
   "\"/>\"",
   ")",
   ";",
   "if",
   "(",
   "$",
   "level",
   "<=",
   "0",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "}",
   "$",
   "block",
   "=",
   "[",
   "'html'",
   ",",
   "'content'",
   "=>",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "content",
   ")",
   ",",
   "]",
   ";",
   "return",
   "[",
   "$",
   "block",
   ",",
   "$",
   "i",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-237",
  "nl_tokens": [
   "Max",
   "allowed",
   "file",
   "upload",
   "size",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "limit",
   "(",
   ")",
   ":",
   "int",
   "{",
   "$",
   "limits",
   "=",
   "[",
   "PHP_INT_MAX",
   "]",
   ";",
   "// Initialize.",
   "if",
   "(",
   "(",
   "$",
   "max_upload_size",
   "=",
   "ini_get",
   "(",
   "'upload_max_filesize'",
   ")",
   ")",
   ")",
   "{",
   "$",
   "limits",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "abbrToBytes",
   "(",
   "$",
   "max_upload_size",
   ")",
   ";",
   "}",
   "if",
   "(",
   "(",
   "$",
   "post_max_size",
   "=",
   "ini_get",
   "(",
   "'post_max_size'",
   ")",
   ")",
   ")",
   "{",
   "$",
   "limits",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "abbrToBytes",
   "(",
   "$",
   "post_max_size",
   ")",
   ";",
   "}",
   "if",
   "(",
   "(",
   "$",
   "memory_limit",
   "=",
   "ini_get",
   "(",
   "'memory_limit'",
   ")",
   ")",
   ")",
   "{",
   "$",
   "limits",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "abbrToBytes",
   "(",
   "$",
   "memory_limit",
   ")",
   ";",
   "}",
   "return",
   "$",
   "<mask>",
   "=",
   "min",
   "(",
   "$",
   "limits",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-238",
  "nl_tokens": [
   "D\u00e9termine",
   "la",
   "valeur",
   "min",
   "d",
   "un",
   "tableau"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "<mask>",
   "(",
   "$",
   "array",
   ",",
   "$",
   "key",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "$",
   "key",
   ")",
   "{",
   "$",
   "min",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "is_numeric",
   "(",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   ")",
   "&&",
   "(",
   "is_null",
   "(",
   "$",
   "min",
   ")",
   "||",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   "<",
   "$",
   "min",
   ")",
   ")",
   "{",
   "$",
   "min",
   "=",
   "$",
   "value",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}",
   "else",
   "{",
   "$",
   "min",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "value",
   ")",
   "{",
   "if",
   "(",
   "is_numeric",
   "(",
   "$",
   "value",
   ")",
   "&&",
   "(",
   "is_null",
   "(",
   "$",
   "min",
   ")",
   "||",
   "$",
   "value",
   "<",
   "$",
   "min",
   ")",
   ")",
   "{",
   "$",
   "min",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-239",
  "nl_tokens": [
   "Encodes",
   "the",
   "parameter",
   "of",
   "a",
   "header",
   "."
  ],
  "pl_tokens": [
   "function",
   "_buildHeaderParam",
   "(",
   "$",
   "name",
   ",",
   "$",
   "value",
   ",",
   "$",
   "charset",
   "=",
   "null",
   ",",
   "$",
   "language",
   "=",
   "null",
   ",",
   "$",
   "encoding",
   "=",
   "null",
   ",",
   "$",
   "maxLength",
   "=",
   "75",
   ")",
   "{",
   "// RFC 2045:",
   "// value needs encoding if contains non-ASCII chars or is longer than 78 chars",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "'#[^\\x20-\\x7E]#'",
   ",",
   "$",
   "value",
   ")",
   ")",
   "{",
   "$",
   "token_regexp",
   "=",
   "'#([^\\x21\\x23-\\x27\\x2A\\x2B\\x2D'",
   ".",
   "'\\x2E\\x30-\\x39\\x41-\\x5A\\x5E-\\x7E])#'",
   ";",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "$",
   "token_regexp",
   ",",
   "$",
   "value",
   ")",
   ")",
   "{",
   "// token",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "name",
   ")",
   "+",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "+",
   "3",
   "<=",
   "$",
   "maxLength",
   ")",
   "{",
   "return",
   "\" {$name}={$value}\"",
   ";",
   "}",
   "}",
   "else",
   "{",
   "// quoted-string",
   "$",
   "quoted",
   "=",
   "addcslashes",
   "(",
   "$",
   "value",
   ",",
   "'\\\\\"'",
   ")",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "name",
   ")",
   "+",
   "strlen",
   "(",
   "$",
   "quoted",
   ")",
   "+",
   "5",
   "<=",
   "$",
   "maxLength",
   ")",
   "{",
   "return",
   "\" {$name}=\\\"{$quoted}\\\"\"",
   ";",
   "}",
   "}",
   "}",
   "// RFC2047: use quoted-printable/base64 encoding",
   "if",
   "(",
   "$",
   "encoding",
   "==",
   "'quoted-printable'",
   "||",
   "$",
   "encoding",
   "==",
   "'base64'",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "_buildRFC2047Param",
   "(",
   "$",
   "name",
   ",",
   "$",
   "value",
   ",",
   "$",
   "charset",
   ",",
   "$",
   "encoding",
   ")",
   ";",
   "}",
   "// RFC2231:",
   "$",
   "encValue",
   "=",
   "preg_replace_callback",
   "(",
   "'/([^\\x21\\x23\\x24\\x26\\x2B\\x2D\\x2E\\x30-\\x39\\x41-\\x5A\\x5E-\\x7E])/'",
   ",",
   "array",
   "(",
   "$",
   "this",
   ",",
   "'_encodeReplaceCallback'",
   ")",
   ",",
   "$",
   "value",
   ")",
   ";",
   "$",
   "value",
   "=",
   "\"$charset'$language'$encValue\"",
   ";",
   "$",
   "header",
   "=",
   "\" {$name}*={$value}\"",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "header",
   ")",
   "<=",
   "$",
   "maxLength",
   ")",
   "{",
   "return",
   "$",
   "header",
   ";",
   "}",
   "$",
   "preLength",
   "=",
   "strlen",
   "(",
   "\" {$name}*0*=\"",
   ")",
   ";",
   "$",
   "maxLength",
   "=",
   "<mask>",
   "(",
   "16",
   ",",
   "$",
   "maxLength",
   "-",
   "$",
   "preLength",
   "-",
   "3",
   ")",
   ";",
   "$",
   "maxLengthReg",
   "=",
   "\"|(.{0,$maxLength}[^\\%][^\\%])|\"",
   ";",
   "$",
   "headers",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "headCount",
   "=",
   "0",
   ";",
   "while",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "matches",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "found",
   "=",
   "preg_match",
   "(",
   "$",
   "maxLengthReg",
   ",",
   "$",
   "value",
   ",",
   "$",
   "matches",
   ")",
   ";",
   "if",
   "(",
   "$",
   "found",
   ")",
   "{",
   "$",
   "headers",
   "[",
   "]",
   "=",
   "\" {$name}*{$headCount}*={$matches[0]}\"",
   ";",
   "$",
   "value",
   "=",
   "substr",
   "(",
   "$",
   "value",
   ",",
   "strlen",
   "(",
   "$",
   "matches",
   "[",
   "0",
   "]",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "headers",
   "[",
   "]",
   "=",
   "\" {$name}*{$headCount}*={$value}\"",
   ";",
   "$",
   "value",
   "=",
   "''",
   ";",
   "}",
   "$",
   "headCount",
   "++",
   ";",
   "}",
   "$",
   "headers",
   "=",
   "implode",
   "(",
   "';'",
   ".",
   "$",
   "this",
   "->",
   "_eol",
   ",",
   "$",
   "headers",
   ")",
   ";",
   "return",
   "$",
   "headers",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-240",
  "nl_tokens": [
   "Create",
   "a",
   "new",
   "BusinessHours",
   "with",
   "a",
   "different",
   "timezone",
   "from",
   "an",
   "existing",
   "BusinessHours",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "shiftToTimezone",
   "(",
   "BusinessHours",
   "$",
   "businessHours",
   ",",
   "\\",
   "DateTimeZone",
   "$",
   "newTimezone",
   ")",
   ":",
   "BusinessHours",
   "{",
   "$",
   "now",
   "=",
   "new",
   "\\",
   "DateTime",
   "(",
   "'now'",
   ")",
   ";",
   "$",
   "oldTimezone",
   "=",
   "$",
   "businessHours",
   "->",
   "getTimezone",
   "(",
   ")",
   ";",
   "$",
   "offset",
   "=",
   "$",
   "newTimezone",
   "->",
   "getOffset",
   "(",
   "$",
   "now",
   ")",
   "-",
   "$",
   "oldTimezone",
   "->",
   "getOffset",
   "(",
   "$",
   "now",
   ")",
   ";",
   "if",
   "(",
   "$",
   "offset",
   "===",
   "0",
   ")",
   "{",
   "return",
   "clone",
   "$",
   "businessHours",
   ";",
   "}",
   "$",
   "tmpDays",
   "=",
   "\\",
   "array_fill_keys",
   "(",
   "Day",
   "::",
   "getDaysOfWeek",
   "(",
   ")",
   ",",
   "[",
   "]",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "businessHours",
   "->",
   "getDays",
   "(",
   ")",
   "as",
   "$",
   "day",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "day",
   "->",
   "getOpeningHoursIntervals",
   "(",
   ")",
   "as",
   "$",
   "interval",
   ")",
   "{",
   "$",
   "start",
   "=",
   "$",
   "interval",
   "->",
   "getStart",
   "(",
   ")",
   "->",
   "toSeconds",
   "(",
   ")",
   "+",
   "$",
   "offset",
   ";",
   "$",
   "end",
   "=",
   "$",
   "interval",
   "->",
   "getEnd",
   "(",
   ")",
   "->",
   "toSeconds",
   "(",
   ")",
   "+",
   "$",
   "offset",
   ";",
   "// Current day.",
   "if",
   "(",
   "$",
   "start",
   "<",
   "86400",
   "&&",
   "$",
   "end",
   ">",
   "0",
   ")",
   "{",
   "$",
   "startForCurrentDay",
   "=",
   "\\",
   "<mask>",
   "(",
   "$",
   "start",
   ",",
   "0",
   ")",
   ";",
   "$",
   "endForCurrentDay",
   "=",
   "\\",
   "min",
   "(",
   "$",
   "end",
   ",",
   "86400",
   ")",
   ";",
   "$",
   "dayOfWeek",
   "=",
   "$",
   "day",
   "->",
   "getDayOfWeek",
   "(",
   ")",
   ";",
   "$",
   "interval",
   "=",
   "new",
   "TimeInterval",
   "(",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "startForCurrentDay",
   ")",
   ",",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "endForCurrentDay",
   ")",
   ")",
   ";",
   "$",
   "tmpDays",
   "[",
   "$",
   "dayOfWeek",
   "]",
   "[",
   "]",
   "=",
   "$",
   "interval",
   ";",
   "}",
   "// Previous day.",
   "if",
   "(",
   "$",
   "start",
   "<",
   "0",
   ")",
   "{",
   "$",
   "startForPreviousDay",
   "=",
   "86400",
   "+",
   "$",
   "start",
   ";",
   "$",
   "endForPreviousDay",
   "=",
   "\\",
   "min",
   "(",
   "86400",
   ",",
   "86400",
   "+",
   "$",
   "end",
   ")",
   ";",
   "$",
   "dayOfWeek",
   "=",
   "self",
   "::",
   "getPreviousDayOfWeek",
   "(",
   "$",
   "day",
   "->",
   "getDayOfWeek",
   "(",
   ")",
   ")",
   ";",
   "$",
   "interval",
   "=",
   "new",
   "TimeInterval",
   "(",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "startForPreviousDay",
   ")",
   ",",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "endForPreviousDay",
   ")",
   ")",
   ";",
   "$",
   "tmpDays",
   "[",
   "$",
   "dayOfWeek",
   "]",
   "[",
   "]",
   "=",
   "$",
   "interval",
   ";",
   "}",
   "// Next day.",
   "if",
   "(",
   "$",
   "end",
   ">",
   "86400",
   ")",
   "{",
   "$",
   "startForNextDay",
   "=",
   "\\",
   "max",
   "(",
   "0",
   ",",
   "$",
   "start",
   "-",
   "86400",
   ")",
   ";",
   "$",
   "endForNextDay",
   "=",
   "$",
   "end",
   "-",
   "86400",
   ";",
   "$",
   "dayOfWeek",
   "=",
   "self",
   "::",
   "getNextDayOfWeek",
   "(",
   "$",
   "day",
   "->",
   "getDayOfWeek",
   "(",
   ")",
   ")",
   ";",
   "$",
   "interval",
   "=",
   "new",
   "TimeInterval",
   "(",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "startForNextDay",
   ")",
   ",",
   "TimeBuilder",
   "::",
   "fromSeconds",
   "(",
   "$",
   "endForNextDay",
   ")",
   ")",
   ";",
   "$",
   "tmpDays",
   "[",
   "$",
   "dayOfWeek",
   "]",
   "[",
   "]",
   "=",
   "$",
   "interval",
   ";",
   "}",
   "}",
   "}",
   "$",
   "tmpDays",
   "=",
   "\\",
   "array_filter",
   "(",
   "$",
   "tmpDays",
   ")",
   ";",
   "$",
   "days",
   "=",
   "self",
   "::",
   "flattenDaysIntervals",
   "(",
   "$",
   "tmpDays",
   ")",
   ";",
   "return",
   "new",
   "BusinessHours",
   "(",
   "$",
   "days",
   ",",
   "$",
   "newTimezone",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-241",
  "nl_tokens": [
   "Get",
   "rectangle",
   "s",
   "width",
   "(",
   "by",
   "convention",
   "width",
   ">",
   "height",
   ")"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getWidth",
   "(",
   ")",
   "{",
   "return",
   "<mask>",
   "(",
   "array",
   "(",
   "(",
   "$",
   "this",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   "-",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ")",
   ",",
   "(",
   "$",
   "this",
   "->",
   "getPointD",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   "-",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-242",
  "nl_tokens": [
   "Optimize",
   "order",
   "of",
   "tests",
   "in",
   "given",
   "tree",
   "based",
   "on",
   "their",
   "defined",
   "delay",
   ".",
   "The",
   "aim",
   "is",
   "to",
   "run",
   "as",
   "first",
   "processes",
   "having",
   "the",
   "longest",
   "delay",
   "of",
   "their",
   "sub",
   "-",
   "dependencies",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "optimize",
   "(",
   "OutTree",
   "$",
   "tree",
   ")",
   ":",
   "array",
   "{",
   "// get root node of the tree",
   "$",
   "root",
   "=",
   "$",
   "tree",
   "->",
   "getVertexRoot",
   "(",
   ")",
   ";",
   "// get all root descendants vertices (without the root vertex itself)",
   "$",
   "children",
   "=",
   "$",
   "tree",
   "->",
   "getVerticesDescendant",
   "(",
   "$",
   "root",
   ")",
   ";",
   "// for each vertex (process) get maximum total weight of its subtree (longest distance)",
   "$",
   "subTreeMaxDistances",
   "=",
   "[",
   "]",
   ";",
   "/** @var Vertex $childVertex */",
   "foreach",
   "(",
   "$",
   "children",
   "as",
   "$",
   "childVertex",
   ")",
   "{",
   "$",
   "alg",
   "=",
   "new",
   "Dijkstra",
   "(",
   "$",
   "childVertex",
   ")",
   ";",
   "// get map with distances to all linked reachable vertexes",
   "$",
   "distanceMap",
   "=",
   "$",
   "alg",
   "->",
   "getDistanceMap",
   "(",
   ")",
   ";",
   "// save the longest distance",
   "$",
   "subTreeMaxDistances",
   "[",
   "$",
   "childVertex",
   "->",
   "getId",
   "(",
   ")",
   "]",
   "=",
   "$",
   "distanceMap",
   "?",
   "<mask>",
   "(",
   "$",
   "distanceMap",
   ")",
   ":",
   "0",
   ";",
   "}",
   "return",
   "$",
   "subTreeMaxDistances",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-243",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "this",
   "->",
   "resetMessages",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "value",
   "=",
   "$",
   "value",
   ";",
   "if",
   "(",
   "!",
   "is_scalar",
   "(",
   "$",
   "value",
   ")",
   "||",
   "is_bool",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unexpected type: '",
   ".",
   "gettype",
   "(",
   "$",
   "value",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "value",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Unexpected value: '",
   ".",
   "$",
   "value",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "value",
   ">",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addMessage",
   "(",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-244",
  "nl_tokens": [
   "@param",
   "int",
   "$index",
   "@param",
   "int",
   "$size",
   "@param",
   "string|int",
   "$pattern",
   "@param",
   "int",
   "$searchPattern"
  ],
  "pl_tokens": [
   "public",
   "function",
   "invoke",
   "(",
   "$",
   "country",
   "=",
   "null",
   ",",
   "$",
   "index",
   "=",
   "1",
   ",",
   "$",
   "size",
   "=",
   "10",
   ",",
   "$",
   "pattern",
   "=",
   "null",
   ",",
   "$",
   "searchPattern",
   "=",
   "MatchingStrategy",
   "::",
   "STARTS_WITH",
   ",",
   "$",
   "features",
   "=",
   "'SMS'",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "country",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "\"\\$country parameter cannot be blank\"",
   ")",
   ";",
   "}",
   "$",
   "size",
   "=",
   "<mask>",
   "(",
   "$",
   "size",
   ",",
   "100",
   ")",
   ";",
   "return",
   "new",
   "NumberCollection",
   "(",
   "$",
   "this",
   "->",
   "exec",
   "(",
   "[",
   "// Nexmo API requires $country value to be uppercase.",
   "'country'",
   "=>",
   "strtoupper",
   "(",
   "$",
   "country",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "index",
   ",",
   "'size'",
   "=>",
   "$",
   "size",
   ",",
   "'pattern'",
   "=>",
   "$",
   "pattern",
   ",",
   "'search_pattern'",
   "=>",
   "$",
   "searchPattern",
   ",",
   "'features'",
   "=>",
   "$",
   "features",
   ",",
   "]",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-245",
  "nl_tokens": [
   "Built",
   "-",
   "in",
   "\\",
   "Zend",
   "less",
   "than",
   "check",
   ".",
   "Returns",
   "true",
   "if",
   "and",
   "only",
   "if",
   "$value",
   "is",
   "less",
   "than",
   "the",
   "minimum",
   "boundary",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "lessThan",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "require_once",
   "'Zend/Validate/LessThan.php'",
   ";",
   "$",
   "validator",
   "=",
   "new",
   "\\",
   "Zend_Validate_LessThan",
   "(",
   "$",
   "max",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "validator",
   "->",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_LESS_THAN\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-246",
  "nl_tokens": [
   "num_pack",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "num_pack",
   "(",
   "$",
   "n",
   ",",
   "$",
   "blocksize",
   ",",
   "$",
   "unsigned",
   ")",
   "{",
   "$",
   "bitnumber",
   "=",
   "$",
   "blocksize",
   "*",
   "8",
   ";",
   "if",
   "(",
   "$",
   "unsigned",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "switch",
   "(",
   "$",
   "bitnumber",
   ")",
   "{",
   "case",
   "'8'",
   ":",
   "$",
   "max",
   "=",
   "255",
   ";",
   "break",
   ";",
   "case",
   "'16'",
   ":",
   "$",
   "max",
   "=",
   "65535",
   ";",
   "break",
   ";",
   "case",
   "'32'",
   ":",
   "$",
   "max",
   "=",
   "4294967295",
   ";",
   "break",
   ";",
   "case",
   "'64'",
   ":",
   "$",
   "max",
   "=",
   "18446744073709551615",
   ";",
   "break",
   ";",
   "default",
   ":",
   "$",
   "max",
   "=",
   "pow",
   "(",
   "2",
   ",",
   "$",
   "bitnumber",
   ")",
   "-",
   "1",
   ";",
   "break",
   ";",
   "}",
   "}",
   "else",
   "{",
   "switch",
   "(",
   "$",
   "bitnumber",
   ")",
   "{",
   "case",
   "'8'",
   ":",
   "$",
   "min",
   "=",
   "-",
   "128",
   ";",
   "$",
   "max",
   "=",
   "127",
   ";",
   "break",
   ";",
   "case",
   "'16'",
   ":",
   "$",
   "min",
   "=",
   "-",
   "32768",
   ";",
   "$",
   "max",
   "=",
   "32767",
   ";",
   "break",
   ";",
   "case",
   "'32'",
   ":",
   "$",
   "min",
   "=",
   "-",
   "2147483648",
   ";",
   "$",
   "max",
   "=",
   "2147483647",
   ";",
   "break",
   ";",
   "case",
   "'64'",
   ":",
   "$",
   "min",
   "=",
   "-",
   "9223372036854775808",
   ";",
   "$",
   "max",
   "=",
   "9223372036854775807",
   ";",
   "break",
   ";",
   "default",
   ":",
   "$",
   "max",
   "=",
   "pow",
   "(",
   "2",
   ",",
   "$",
   "bitnumber",
   "-",
   "1",
   ")",
   "-",
   "1",
   ";",
   "$",
   "min",
   "=",
   "-",
   "pow",
   "(",
   "2",
   ",",
   "$",
   "bitnumber",
   "-",
   "1",
   ")",
   ";",
   "break",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "n",
   "<",
   "$",
   "min",
   "||",
   "$",
   "n",
   ">",
   "$",
   "max",
   ")",
   "{",
   "trigger_error",
   "(",
   "'Number is not within required range ('",
   ".",
   "$",
   "min",
   ".",
   "' <= number <= '",
   ".",
   "$",
   "max",
   ".",
   "').'",
   ")",
   ";",
   "}",
   "$",
   "bits",
   "=",
   "$",
   "this",
   "->",
   "decbin",
   "(",
   "$",
   "n",
   ",",
   "$",
   "bitnumber",
   ")",
   ";",
   "$",
   "s",
   "=",
   "''",
   ";",
   "foreach",
   "(",
   "str_split",
   "(",
   "$",
   "bits",
   ",",
   "8",
   ")",
   "as",
   "$",
   "byte",
   ")",
   "{",
   "$",
   "s",
   ".=",
   "chr",
   "(",
   "$",
   "this",
   "->",
   "bindec",
   "(",
   "$",
   "byte",
   ")",
   ")",
   ";",
   "}",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "s",
   ")",
   ">",
   "$",
   "blocksize",
   ")",
   "{",
   "trigger_error",
   "(",
   "'Generated data length ('",
   ".",
   "strlen",
   "(",
   "$",
   "s",
   ")",
   ".",
   "') is bigger than required length ('",
   ".",
   "$",
   "blocksize",
   ".",
   "').'",
   ")",
   ";",
   "}",
   "return",
   "$",
   "s",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-247",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   "{",
   "if",
   "(",
   "count",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   ")",
   "<=",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "message",
   "=",
   "'Converting pages'",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getBuildOptions",
   "(",
   ")",
   "[",
   "'drafts'",
   "]",
   ")",
   "{",
   "$",
   "message",
   ".=",
   "' (drafts included)'",
   ";",
   "}",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CONVERT'",
   ",",
   "$",
   "message",
   "]",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   ")",
   ";",
   "$",
   "count",
   "=",
   "0",
   ";",
   "$",
   "countError",
   "=",
   "0",
   ";",
   "/* @var $page Page */",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "as",
   "$",
   "page",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "page",
   "->",
   "isVirtual",
   "(",
   ")",
   ")",
   "{",
   "$",
   "count",
   "++",
   ";",
   "$",
   "convertedPage",
   "=",
   "$",
   "this",
   "->",
   "convertPage",
   "(",
   "$",
   "page",
   ",",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getConfig",
   "(",
   ")",
   "->",
   "get",
   "(",
   "'frontmatter.format'",
   ")",
   ")",
   ";",
   "if",
   "(",
   "false",
   "!==",
   "$",
   "convertedPage",
   ")",
   "{",
   "$",
   "message",
   "=",
   "$",
   "page",
   "->",
   "getPathname",
   "(",
   ")",
   ";",
   "// force convert drafts?",
   "if",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getBuildOptions",
   "(",
   ")",
   "[",
   "'drafts'",
   "]",
   ")",
   "{",
   "$",
   "page",
   "->",
   "setVariable",
   "(",
   "'published'",
   ",",
   "true",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "page",
   "->",
   "getVariable",
   "(",
   "'published'",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "replace",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ",",
   "$",
   "convertedPage",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "remove",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ")",
   ";",
   "$",
   "message",
   ".=",
   "' (not published)'",
   ";",
   "}",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CONVERT_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "remove",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ")",
   ";",
   "$",
   "countError",
   "++",
   ";",
   "}",
   "}",
   "}",
   "if",
   "(",
   "$",
   "countError",
   ">",
   "0",
   ")",
   "{",
   "$",
   "message",
   "=",
   "sprintf",
   "(",
   "'Number of errors: %s'",
   ",",
   "$",
   "countError",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CONVERT_ERROR'",
   ",",
   "$",
   "message",
   "]",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-248",
  "nl_tokens": [
   "Get",
   "help",
   "about",
   "a",
   "procedure",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "methodHelp",
   "(",
   "$",
   "method",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_string",
   "(",
   "$",
   "method",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "server",
   "[",
   "$",
   "method",
   "]",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "'Invalid method'",
   ")",
   ";",
   "}",
   "$",
   "reflector",
   "=",
   "$",
   "this",
   "->",
   "server",
   "[",
   "$",
   "method",
   "]",
   "->",
   "getReflector",
   "(",
   ")",
   ";",
   "$",
   "doc",
   "=",
   "$",
   "reflector",
   "->",
   "getDocComment",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "doc",
   "===",
   "false",
   ")",
   "{",
   "return",
   "''",
   ";",
   "}",
   "// Remove comment delimiters.",
   "$",
   "doc",
   "=",
   "substr",
   "(",
   "$",
   "doc",
   ",",
   "2",
   ",",
   "-",
   "2",
   ")",
   ";",
   "// Normalize line endings.",
   "$",
   "doc",
   "=",
   "str_replace",
   "(",
   "array",
   "(",
   "\"\\r\\n\"",
   ",",
   "\"\\r\"",
   ")",
   ",",
   "\"\\n\"",
   ",",
   "$",
   "doc",
   ")",
   ";",
   "// Trim leading/trailing whitespace and '*' for every line.",
   "$",
   "help",
   "=",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "l",
   ")",
   "{",
   "return",
   "trim",
   "(",
   "trim",
   "(",
   "$",
   "l",
   ")",
   ",",
   "'*'",
   ")",
   ";",
   "}",
   ",",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "doc",
   ")",
   ")",
   ";",
   "// Count number of empty columns on non-empty lines",
   "// before the actual start of the text.",
   "$",
   "cols",
   "=",
   "<mask>",
   "(",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "l",
   ")",
   "{",
   "return",
   "strspn",
   "(",
   "$",
   "l",
   ",",
   "\" \\t\"",
   ")",
   ";",
   "}",
   ",",
   "array_filter",
   "(",
   "$",
   "help",
   ",",
   "'strlen'",
   ")",
   ")",
   ")",
   ";",
   "// Remove those columns from the result.",
   "$",
   "help",
   "=",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "l",
   ")",
   "use",
   "(",
   "$",
   "cols",
   ")",
   "{",
   "return",
   "(",
   "string",
   ")",
   "substr",
   "(",
   "$",
   "l",
   ",",
   "$",
   "cols",
   ")",
   ";",
   "}",
   ",",
   "$",
   "help",
   ")",
   ";",
   "// Produce the final output.",
   "return",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "help",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-249",
  "nl_tokens": [
   "Returns",
   "true",
   "if",
   "$input",
   "uses",
   "only",
   "number",
   "value",
   "characters",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "validate",
   "(",
   "$",
   "input",
   ")",
   "{",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "'/^[\\d]+$/'",
   ",",
   "$",
   "input",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "integerOnly",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_int",
   "(",
   "$",
   "input",
   "+",
   "0",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "eq",
   ")",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   "&&",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "min",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "input",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "max",
   ")",
   "&&",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "min",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "input",
   "<",
   "$",
   "this",
   "->",
   "min",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "max",
   ")",
   "&&",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "min",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "input",
   "<",
   "$",
   "this",
   "->",
   "min",
   "||",
   "$",
   "input",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "$",
   "input",
   "!=",
   "$",
   "this",
   "->",
   "eq",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-250",
  "nl_tokens": [
   "Built",
   "-",
   "in",
   "\\",
   "Zend",
   "between",
   "check",
   ".",
   "Returns",
   "true",
   "if",
   "and",
   "only",
   "if",
   "$value",
   "is",
   "between",
   "the",
   "minimum",
   "and",
   "maximum",
   "boundary",
   "values",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "between",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "inclusive",
   "=",
   "true",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "require_once",
   "'Zend/Validate/Between.php'",
   ";",
   "$",
   "validator",
   "=",
   "new",
   "\\",
   "Zend_Validate_Between",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "inclusive",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "validator",
   "->",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_BETWEEN\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-251",
  "nl_tokens": [
   "Handles",
   "removal",
   "or",
   "modification",
   "of",
   "lines"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "linesRemovedOrModified",
   "(",
   "array",
   "$",
   "ancestor",
   ",",
   "array",
   "$",
   "local",
   ",",
   "array",
   "$",
   "remote",
   ",",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_local",
   ",",
   "$",
   "count_remote",
   ")",
   "{",
   "$",
   "merged",
   "=",
   "[",
   "]",
   ";",
   "$",
   "count_array",
   "=",
   "[",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_local",
   ",",
   "$",
   "count_remote",
   "]",
   ";",
   "sort",
   "(",
   "$",
   "count_array",
   ")",
   ";",
   "$",
   "mincount",
   "=",
   "<mask>",
   "(",
   "$",
   "count_local",
   ",",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_remote",
   ")",
   ";",
   "// First for loop compares all 3 nodes and returns updated node.",
   "for",
   "(",
   "$",
   "key",
   "=",
   "0",
   ";",
   "$",
   "key",
   "<",
   "$",
   "mincount",
   ";",
   "$",
   "key",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   "||",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A conflict has occured\"",
   ")",
   ";",
   "}",
   "}",
   "for",
   "(",
   "$",
   "key",
   "=",
   "$",
   "mincount",
   ";",
   "$",
   "key",
   "<",
   "$",
   "count_array",
   "[",
   "1",
   "]",
   ";",
   "$",
   "key",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "mincount",
   "==",
   "$",
   "count_local",
   "&&",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "!=",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A whole new conflict arised\"",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "mincount",
   "==",
   "$",
   "count_remote",
   "&&",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "!=",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A whole new conflict arised\"",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "merged",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-252",
  "nl_tokens": [
   "@param",
   "array",
   "$markers"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getMin",
   "(",
   "array",
   "$",
   "markers",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "[",
   "'time'",
   "=>",
   "0",
   ",",
   "'memory'",
   "=>",
   "0",
   ",",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "markers",
   "as",
   "$",
   "marker",
   ")",
   "{",
   "$",
   "total",
   "=",
   "$",
   "this",
   "->",
   "getTotal",
   "(",
   "$",
   "marker",
   ")",
   ";",
   "if",
   "(",
   "$",
   "min",
   "[",
   "'time'",
   "]",
   "===",
   "0",
   "||",
   "$",
   "total",
   "[",
   "'time'",
   "]",
   "<",
   "$",
   "min",
   "[",
   "'time'",
   "]",
   ")",
   "{",
   "$",
   "min",
   "[",
   "'time'",
   "]",
   "=",
   "$",
   "total",
   "[",
   "'time'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "min",
   "[",
   "'memory'",
   "]",
   "===",
   "0",
   "||",
   "$",
   "total",
   "[",
   "'memory'",
   "]",
   "<",
   "$",
   "min",
   "[",
   "'memory'",
   "]",
   ")",
   "{",
   "$",
   "min",
   "[",
   "'memory'",
   "]",
   "=",
   "$",
   "total",
   "[",
   "'memory'",
   "]",
   ";",
   "}",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-253",
  "nl_tokens": [
   "Process",
   "the",
   "schedule",
   "and",
   "run",
   "all",
   "jobs",
   "which",
   "are",
   "due",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   ":",
   "void",
   "{",
   "global",
   "$",
   "argv",
   ";",
   "$",
   "specific",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "argv",
   "as",
   "$",
   "arg",
   ")",
   "{",
   "if",
   "(",
   "preg_match",
   "(",
   "'@--job=(.*?)$@'",
   ",",
   "$",
   "arg",
   ",",
   "$",
   "match",
   ")",
   ")",
   "{",
   "$",
   "specific",
   "=",
   "$",
   "match",
   "[",
   "1",
   "]",
   ";",
   "}",
   "}",
   "$",
   "start",
   "=",
   "time",
   "(",
   ")",
   ";",
   "$",
   "tmp",
   "=",
   "sys_get_temp_dir",
   "(",
   ")",
   ";",
   "array_walk",
   "(",
   "$",
   "this",
   "->",
   "jobs",
   ",",
   "function",
   "(",
   "$",
   "job",
   ",",
   "$",
   "idx",
   ")",
   "use",
   "(",
   "$",
   "tmp",
   ",",
   "$",
   "specific",
   ",",
   "$",
   "argv",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "specific",
   ")",
   "&&",
   "$",
   "specific",
   "!==",
   "$",
   "idx",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "in_array",
   "(",
   "'--verbose'",
   ",",
   "$",
   "argv",
   ")",
   "||",
   "in_array",
   "(",
   "'-v'",
   ",",
   "$",
   "argv",
   ")",
   ")",
   "{",
   "echo",
   "\"Starting $idx...\"",
   ";",
   "}",
   "$",
   "fp",
   "=",
   "fopen",
   "(",
   "\"$tmp/\"",
   ".",
   "md5",
   "(",
   "$",
   "idx",
   ")",
   ".",
   "'.lock'",
   ",",
   "'w+'",
   ")",
   ";",
   "flock",
   "(",
   "$",
   "fp",
   ",",
   "LOCK_EX",
   ")",
   ";",
   "try",
   "{",
   "$",
   "job",
   "->",
   "call",
   "(",
   "$",
   "this",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "NotDueException",
   "$",
   "e",
   ")",
   "{",
   "}",
   "catch",
   "(",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "$",
   "this",
   "->",
   "logger",
   "->",
   "addCritial",
   "(",
   "sprintf",
   "(",
   "\"%s in file %s on line %d\"",
   ",",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ",",
   "$",
   "e",
   "->",
   "getFile",
   "(",
   ")",
   ",",
   "$",
   "e",
   "->",
   "getLine",
   "(",
   ")",
   ")",
   ")",
   ";",
   "}",
   "flock",
   "(",
   "$",
   "fp",
   ",",
   "LOCK_UN",
   ")",
   ";",
   "fclose",
   "(",
   "$",
   "fp",
   ")",
   ";",
   "if",
   "(",
   "in_array",
   "(",
   "'--verbose'",
   ",",
   "$",
   "argv",
   ")",
   "||",
   "in_array",
   "(",
   "'-v'",
   ",",
   "$",
   "argv",
   ")",
   ")",
   "{",
   "echo",
   "\" [done]\\n\"",
   ";",
   "}",
   "}",
   ")",
   ";",
   "if",
   "(",
   "--",
   "$",
   "this",
   "->",
   "minutes",
   ">",
   "0",
   ")",
   "{",
   "$",
   "wait",
   "=",
   "<mask>",
   "(",
   "60",
   "-",
   "(",
   "time",
   "(",
   ")",
   "-",
   "$",
   "start",
   ")",
   ",",
   "0",
   ")",
   ";",
   "if",
   "(",
   "!",
   "getenv",
   "(",
   "'TOAST'",
   ")",
   ")",
   "{",
   "sleep",
   "(",
   "$",
   "wait",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "now",
   "+=",
   "60",
   ";",
   "$",
   "this",
   "->",
   "process",
   "(",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-254",
  "nl_tokens": [
   "Function",
   "to",
   "check",
   "if",
   "a",
   "value",
   "is",
   "between",
   "a",
   "$min",
   "and",
   "$max",
   "length"
  ],
  "pl_tokens": [
   "public",
   "function",
   "betweenLength",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "(",
   "int",
   ")",
   "$",
   "min",
   ">",
   "(",
   "int",
   ")",
   "$",
   "max",
   ")",
   "{",
   "$",
   "tmp",
   "=",
   "$",
   "min",
   ";",
   "$",
   "min",
   "=",
   "$",
   "max",
   ";",
   "$",
   "max",
   "=",
   "$",
   "tmp",
   ";",
   "}",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "$",
   "result",
   "=",
   "false",
   ";",
   "if",
   "(",
   "function_exists",
   "(",
   "\"mb_strlen\"",
   ")",
   ")",
   "{",
   "if",
   "(",
   "mb_strlen",
   "(",
   "$",
   "value",
   ",",
   "'UTF-8'",
   ")",
   "<=",
   "$",
   "max",
   "&&",
   "mb_strlen",
   "(",
   "$",
   "value",
   ",",
   "'UTF-8'",
   ")",
   ">=",
   "$",
   "min",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "<=",
   "$",
   "max",
   "&&",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   ">=",
   "$",
   "min",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_BETWEEN_LENGTH\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-255",
  "nl_tokens": [
   "Interface",
   "required",
   "method",
   "responsible",
   "for",
   "generating",
   "the",
   "token",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "generate",
   "(",
   ")",
   "{",
   "$",
   "randomCompat",
   "=",
   "join",
   "(",
   "DIRECTORY_SEPARATOR",
   ",",
   "[",
   "dirname",
   "(",
   "dirname",
   "(",
   "__DIR__",
   ")",
   ")",
   ",",
   "'vendor'",
   ",",
   "'paragonie'",
   ",",
   "'random_compat'",
   ",",
   "'lib'",
   ",",
   "'random.php'",
   "]",
   ")",
   ";",
   "// PHP 5.x native",
   "if",
   "(",
   "version_compare",
   "(",
   "PHP_VERSION",
   ",",
   "'7.0.0'",
   ",",
   "'<'",
   ")",
   "&&",
   "!",
   "file_exists",
   "(",
   "$",
   "randomCompat",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "function",
   "=",
   "[",
   "'PHP 5.x native'",
   "=>",
   "'mt_rand'",
   "]",
   ";",
   "return",
   "mt_rand",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   ",",
   "$",
   "this",
   "->",
   "max",
   ")",
   ";",
   "}",
   "// PHP 7.x",
   "if",
   "(",
   "version_compare",
   "(",
   "PHP_VERSION",
   ",",
   "'7.0.0'",
   ")",
   ">=",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "function",
   "=",
   "[",
   "'PHP 7.x'",
   "=>",
   "'random_int'",
   "]",
   ";",
   "}",
   "// PHP 5.x with random_compat polyfill",
   "if",
   "(",
   "version_compare",
   "(",
   "PHP_VERSION",
   ",",
   "'7.0.0'",
   ",",
   "'<'",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "function",
   "=",
   "[",
   "'PHP 5.x paragonie/random_compat'",
   "=>",
   "'random_int'",
   "]",
   ";",
   "require_once",
   "(",
   "$",
   "randomCompat",
   ")",
   ";",
   "}",
   "// Handle token generating the PHP 7.x way",
   "try",
   "{",
   "$",
   "token",
   "=",
   "random_int",
   "(",
   "$",
   "this",
   "->",
   "min",
   ",",
   "$",
   "this",
   "->",
   "max",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "TypeError",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'Unexpected TypeError whilst generating the RandomInt token: '",
   ".",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "Error",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'Unexpected Error whilst generating the RandomInt token: '",
   ".",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'Could not generate RandomInt token due to failing CSPRNG: '",
   ".",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "token",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-256",
  "nl_tokens": [
   "Calculates",
   "and",
   "returns",
   "values",
   "for",
   "the",
   "size",
   "constraint"
  ],
  "pl_tokens": [
   "public",
   "function",
   "calcMin",
   "(",
   "$",
   "option",
   ",",
   "array",
   "$",
   "options",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "(",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "$",
   "option",
   "]",
   ")",
   "?",
   "(",
   "int",
   ")",
   "$",
   "options",
   "[",
   "$",
   "option",
   "]",
   ":",
   "0",
   ")",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'instances'",
   "]",
   ")",
   "&&",
   "is_array",
   "(",
   "$",
   "options",
   "[",
   "'instances'",
   "]",
   ")",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "options",
   "[",
   "'instances'",
   "]",
   "as",
   "$",
   "instance",
   ")",
   "{",
   "$",
   "value",
   "=",
   "(",
   "isset",
   "(",
   "$",
   "instance",
   "[",
   "$",
   "option",
   "]",
   ")",
   "?",
   "(",
   "int",
   ")",
   "$",
   "instance",
   "[",
   "$",
   "option",
   "]",
   ":",
   "0",
   ")",
   ";",
   "if",
   "(",
   "$",
   "value",
   ">",
   "$",
   "min",
   ")",
   "{",
   "$",
   "min",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-257",
  "nl_tokens": [
   "Process",
   "each",
   "generators",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   "PageCollection",
   "$",
   "pageCollection",
   ",",
   "\\",
   "Closure",
   "$",
   "messageCallback",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "count",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "max",
   ">",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "top",
   "(",
   ")",
   ";",
   "while",
   "(",
   "$",
   "this",
   "->",
   "valid",
   "(",
   ")",
   ")",
   "{",
   "/* @var GeneratorInterface $generator */",
   "$",
   "generator",
   "=",
   "$",
   "this",
   "->",
   "current",
   "(",
   ")",
   ";",
   "/* @var $generatedPages PageCollection */",
   "$",
   "generatedPages",
   "=",
   "$",
   "generator",
   "->",
   "generate",
   "(",
   "$",
   "pageCollection",
   ",",
   "$",
   "messageCallback",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "generatedPages",
   "as",
   "$",
   "page",
   ")",
   "{",
   "/* @var $page \\PHPoole\\Collection\\Page\\Page */",
   "if",
   "(",
   "$",
   "pageCollection",
   "->",
   "has",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ")",
   ")",
   "{",
   "$",
   "pageCollection",
   "->",
   "replace",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ",",
   "$",
   "page",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "pageCollection",
   "->",
   "add",
   "(",
   "$",
   "page",
   ")",
   ";",
   "}",
   "}",
   "$",
   "message",
   "=",
   "substr",
   "(",
   "strrchr",
   "(",
   "get_class",
   "(",
   "$",
   "generator",
   ")",
   ",",
   "'\\\\'",
   ")",
   ",",
   "1",
   ")",
   ".",
   "': '",
   ".",
   "count",
   "(",
   "$",
   "generatedPages",
   ")",
   ";",
   "$",
   "count",
   "=",
   "(",
   "$",
   "max",
   "-",
   "$",
   "this",
   "->",
   "key",
   "(",
   ")",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "messageCallback",
   ",",
   "[",
   "'GENERATE_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "$",
   "this",
   "->",
   "next",
   "(",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "pageCollection",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-258",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   "{",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "setPages",
   "(",
   "new",
   "PageCollection",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   "<=",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CREATE'",
   ",",
   "'Creating pages'",
   "]",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ";",
   "$",
   "count",
   "=",
   "0",
   ";",
   "/* @var $file \\Symfony\\Component\\Finder\\SplFileInfo */",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getContent",
   "(",
   ")",
   "as",
   "$",
   "file",
   ")",
   "{",
   "$",
   "count",
   "++",
   ";",
   "/* @var $page Page */",
   "$",
   "page",
   "=",
   "(",
   "new",
   "Page",
   "(",
   "$",
   "file",
   ")",
   ")",
   "->",
   "parse",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "add",
   "(",
   "$",
   "page",
   ")",
   ";",
   "$",
   "message",
   "=",
   "$",
   "page",
   "->",
   "getPathname",
   "(",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'CREATE_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-259",
  "nl_tokens": [
   "Returns",
   "the",
   "age",
   "of",
   "the",
   "response",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getAge",
   "(",
   ")",
   ":",
   "int",
   "{",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "age",
   "=",
   "$",
   "this",
   "->",
   "headers",
   "->",
   "get",
   "(",
   "'Age'",
   ")",
   ")",
   "{",
   "return",
   "$",
   "age",
   ";",
   "}",
   "return",
   "<mask>",
   "(",
   "time",
   "(",
   ")",
   "-",
   "date",
   "(",
   "'U'",
   ",",
   "strtotime",
   "(",
   "$",
   "this",
   "->",
   "getDateHeader",
   "(",
   ")",
   ")",
   ")",
   ",",
   "0",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-260",
  "nl_tokens": [
   "CloudFront",
   "URL",
   "signer",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "cloudFrontSignUrl",
   "(",
   "string",
   "$",
   "url",
   ",",
   "int",
   "$",
   "expires_after",
   "=",
   "86400",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ",",
   "array",
   "$",
   "client_args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "string",
   "{",
   "$",
   "default_args",
   "=",
   "[",
   "// Global config defaults.",
   "'key_pair_id'",
   "=>",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9aws[",
   "'",
   "\u00a9cf_key_pair_id'],",
   "",
   "",
   "'private_key'",
   "=>",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9aws[",
   "'",
   "\u00a9cf_private_key_file'],",
   "",
   "",
   "]",
   ";",
   "$",
   "args",
   "=",
   "array_replace_recursive",
   "(",
   "$",
   "default_args",
   ",",
   "$",
   "args",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'url'",
   "]",
   "=",
   "$",
   "url",
   ";",
   "// `url` and `expires` via params.",
   "$",
   "args",
   "[",
   "'expires'",
   "]",
   "=",
   "time",
   "(",
   ")",
   "+",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "expires_after",
   ")",
   ";",
   "$",
   "CloudFrontClient",
   "=",
   "$",
   "this",
   "->",
   "cloudFrontClient",
   "(",
   "$",
   "client_args",
   ")",
   ";",
   "return",
   "$",
   "signed_url",
   "=",
   "$",
   "CloudFrontClient",
   "->",
   "getSignedUrl",
   "(",
   "$",
   "args",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-261",
  "nl_tokens": [
   "------------------------------------------------------------------"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "convert_date_time",
   "(",
   "$",
   "date_input",
   ")",
   "//thanks to Excel::Writer::XLSX::Worksheet.pm (perl)",
   "{",
   "$",
   "days",
   "=",
   "0",
   ";",
   "# Number of days since epoch",
   "$",
   "seconds",
   "=",
   "0",
   ";",
   "# Time expressed as fraction of 24h hours in seconds",
   "$",
   "year",
   "=",
   "$",
   "month",
   "=",
   "$",
   "day",
   "=",
   "0",
   ";",
   "$",
   "hour",
   "=",
   "$",
   "<mask>",
   "=",
   "$",
   "sec",
   "=",
   "0",
   ";",
   "$",
   "date_time",
   "=",
   "$",
   "date_input",
   ";",
   "if",
   "(",
   "preg_match",
   "(",
   "\"/(\\d{4})\\-(\\d{2})\\-(\\d{2})/\"",
   ",",
   "$",
   "date_time",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "junk",
   ",",
   "$",
   "year",
   ",",
   "$",
   "month",
   ",",
   "$",
   "day",
   ")",
   "=",
   "$",
   "matches",
   ";",
   "}",
   "if",
   "(",
   "preg_match",
   "(",
   "\"/(\\d+):(\\d{2}):(\\d{2})/\"",
   ",",
   "$",
   "date_time",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "junk",
   ",",
   "$",
   "hour",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ")",
   "=",
   "$",
   "matches",
   ";",
   "$",
   "seconds",
   "=",
   "(",
   "$",
   "hour",
   "*",
   "60",
   "*",
   "60",
   "+",
   "$",
   "min",
   "*",
   "60",
   "+",
   "$",
   "sec",
   ")",
   "/",
   "(",
   "24",
   "*",
   "60",
   "*",
   "60",
   ")",
   ";",
   "}",
   "//using 1900 as epoch, not 1904, ignoring 1904 special case",
   "# Special cases for Excel.",
   "if",
   "(",
   "\"$year-$month-$day\"",
   "==",
   "'1899-12-31'",
   ")",
   "return",
   "$",
   "seconds",
   ";",
   "# Excel 1900 epoch",
   "if",
   "(",
   "\"$year-$month-$day\"",
   "==",
   "'1900-01-00'",
   ")",
   "return",
   "$",
   "seconds",
   ";",
   "# Excel 1900 epoch",
   "if",
   "(",
   "\"$year-$month-$day\"",
   "==",
   "'1900-02-29'",
   ")",
   "return",
   "60",
   "+",
   "$",
   "seconds",
   ";",
   "# Excel false leapday",
   "# We calculate the date by calculating the number of days since the epoch",
   "# and adjust for the number of leap days. We calculate the number of leap",
   "# days by normalising the year in relation to the epoch. Thus the year 2000",
   "# becomes 100 for 4 and 100 year leapdays and 400 for 400 year leapdays.",
   "$",
   "epoch",
   "=",
   "1900",
   ";",
   "$",
   "offset",
   "=",
   "0",
   ";",
   "$",
   "norm",
   "=",
   "300",
   ";",
   "$",
   "range",
   "=",
   "$",
   "year",
   "-",
   "$",
   "epoch",
   ";",
   "# Set month days and check for leap year.",
   "$",
   "leap",
   "=",
   "(",
   "(",
   "$",
   "year",
   "%",
   "400",
   "==",
   "0",
   ")",
   "||",
   "(",
   "(",
   "$",
   "year",
   "%",
   "4",
   "==",
   "0",
   ")",
   "&&",
   "(",
   "$",
   "year",
   "%",
   "100",
   ")",
   ")",
   ")",
   "?",
   "1",
   ":",
   "0",
   ";",
   "$",
   "mdays",
   "=",
   "array",
   "(",
   "31",
   ",",
   "(",
   "$",
   "leap",
   "?",
   "29",
   ":",
   "28",
   ")",
   ",",
   "31",
   ",",
   "30",
   ",",
   "31",
   ",",
   "30",
   ",",
   "31",
   ",",
   "31",
   ",",
   "30",
   ",",
   "31",
   ",",
   "30",
   ",",
   "31",
   ")",
   ";",
   "# Some boundary checks",
   "if",
   "(",
   "$",
   "year",
   "<",
   "$",
   "epoch",
   "||",
   "$",
   "year",
   ">",
   "9999",
   ")",
   "return",
   "0",
   ";",
   "if",
   "(",
   "$",
   "month",
   "<",
   "1",
   "||",
   "$",
   "month",
   ">",
   "12",
   ")",
   "return",
   "0",
   ";",
   "if",
   "(",
   "$",
   "day",
   "<",
   "1",
   "||",
   "$",
   "day",
   ">",
   "$",
   "mdays",
   "[",
   "$",
   "month",
   "-",
   "1",
   "]",
   ")",
   "return",
   "0",
   ";",
   "# Accumulate the number of days since the epoch.",
   "$",
   "days",
   "=",
   "$",
   "day",
   ";",
   "# Add days for current month",
   "$",
   "days",
   "+=",
   "array_sum",
   "(",
   "array_slice",
   "(",
   "$",
   "mdays",
   ",",
   "0",
   ",",
   "$",
   "month",
   "-",
   "1",
   ")",
   ")",
   ";",
   "# Add days for past months",
   "$",
   "days",
   "+=",
   "$",
   "range",
   "*",
   "365",
   ";",
   "# Add days for past years",
   "$",
   "days",
   "+=",
   "intval",
   "(",
   "(",
   "$",
   "range",
   ")",
   "/",
   "4",
   ")",
   ";",
   "# Add leapdays",
   "$",
   "days",
   "-=",
   "intval",
   "(",
   "(",
   "$",
   "range",
   "+",
   "$",
   "offset",
   ")",
   "/",
   "100",
   ")",
   ";",
   "# Subtract 100 year leapdays",
   "$",
   "days",
   "+=",
   "intval",
   "(",
   "(",
   "$",
   "range",
   "+",
   "$",
   "offset",
   "+",
   "$",
   "norm",
   ")",
   "/",
   "400",
   ")",
   ";",
   "# Add 400 year leapdays",
   "$",
   "days",
   "-=",
   "$",
   "leap",
   ";",
   "# Already counted above",
   "# Adjust for Excel erroneously treating 1900 as a leap year.",
   "if",
   "(",
   "$",
   "days",
   ">",
   "59",
   ")",
   "{",
   "$",
   "days",
   "++",
   ";",
   "}",
   "return",
   "$",
   "days",
   "+",
   "$",
   "seconds",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-262",
  "nl_tokens": [
   "Function",
   "to",
   "check",
   "if",
   "a",
   "value",
   "is",
   "shorter",
   "than",
   "the",
   "$max",
   "length"
  ],
  "pl_tokens": [
   "public",
   "function",
   "shorterThan",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "$",
   "result",
   "=",
   "false",
   ";",
   "if",
   "(",
   "function_exists",
   "(",
   "\"mb_strlen\"",
   ")",
   ")",
   "{",
   "if",
   "(",
   "mb_strlen",
   "(",
   "$",
   "value",
   ",",
   "'UTF-8'",
   ")",
   "<",
   "$",
   "max",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   "<",
   "$",
   "max",
   ")",
   "{",
   "$",
   "result",
   "=",
   "true",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_SHORTER_THAN\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-263",
  "nl_tokens": [
   "\u6c42\u6982\u7387",
   "\u8fd4\u56dekey",
   "<pre",
   ">",
   "array",
   "(",
   "a",
   "=",
   ">",
   "60",
   "b",
   "=",
   ">",
   "30",
   "c",
   "=",
   ">",
   "10",
   ")",
   ";",
   "<",
   "/",
   "pre",
   ">"
  ],
  "pl_tokens": [
   "static",
   "function",
   "arrayRandomRate",
   "(",
   "array",
   "$",
   "array",
   ")",
   "{",
   "asort",
   "(",
   "$",
   "array",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "array_sum",
   "(",
   "$",
   "array",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "a_key",
   "=>",
   "$",
   "a_value",
   ")",
   "{",
   "$",
   "rand",
   "=",
   "mt_rand",
   "(",
   "0",
   ",",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "rand",
   "<=",
   "$",
   "a_value",
   ")",
   "{",
   "return",
   "$",
   "a_key",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "-=",
   "$",
   "a_value",
   ";",
   "}",
   "}",
   "return",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-264",
  "nl_tokens": [
   "\u56fe\u50cf\u6dfb\u52a0\u6587\u5b57"
  ],
  "pl_tokens": [
   "public",
   "function",
   "text",
   "(",
   "$",
   "text",
   ",",
   "$",
   "font",
   ",",
   "$",
   "size",
   ",",
   "$",
   "color",
   "=",
   "'#00000000'",
   ",",
   "$",
   "locate",
   "=",
   "Image",
   "::",
   "IMAGE_WATER_SOUTHEAST",
   ",",
   "$",
   "offset",
   "=",
   "0",
   ",",
   "$",
   "angle",
   "=",
   "0",
   ")",
   "{",
   "//\u8d44\u6e90\u68c0\u6d4b",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "img",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "BaseException",
   "(",
   "'\u6ca1\u6709\u53ef\u4ee5\u88ab\u5199\u5165\u6587\u5b57\u7684\u56fe\u50cf\u8d44\u6e90');",
   "",
   "",
   "}",
   "if",
   "(",
   "!",
   "is_file",
   "(",
   "$",
   "font",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "BaseException",
   "(",
   "\"\u4e0d\u5b58\u5728\u7684\u5b57\u4f53\u6587\u4ef6\uff1a{$font}\");",
   "",
   "",
   "}",
   "//\u83b7\u53d6\u6587\u5b57\u4fe1\u606f",
   "$",
   "_info",
   "=",
   "imagettfbbox",
   "(",
   "$",
   "size",
   ",",
   "$",
   "angle",
   ",",
   "$",
   "font",
   ",",
   "$",
   "text",
   ")",
   ";",
   "$",
   "minx",
   "=",
   "<mask>",
   "(",
   "$",
   "_info",
   "[",
   "0",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "2",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "4",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "6",
   "]",
   ")",
   ";",
   "$",
   "maxx",
   "=",
   "max",
   "(",
   "$",
   "_info",
   "[",
   "0",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "2",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "4",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "6",
   "]",
   ")",
   ";",
   "$",
   "miny",
   "=",
   "min",
   "(",
   "$",
   "_info",
   "[",
   "1",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "3",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "5",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "7",
   "]",
   ")",
   ";",
   "$",
   "maxy",
   "=",
   "max",
   "(",
   "$",
   "_info",
   "[",
   "1",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "3",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "5",
   "]",
   ",",
   "$",
   "_info",
   "[",
   "7",
   "]",
   ")",
   ";",
   "/* \u8ba1\u7b97\u6587\u5b57\u521d\u59cb\u5750\u6807\u548c\u5c3a\u5bf8 */",
   "$",
   "x",
   "=",
   "$",
   "minx",
   ";",
   "$",
   "y",
   "=",
   "abs",
   "(",
   "$",
   "miny",
   ")",
   ";",
   "$",
   "w",
   "=",
   "$",
   "maxx",
   "-",
   "$",
   "minx",
   ";",
   "$",
   "h",
   "=",
   "$",
   "maxy",
   "-",
   "$",
   "miny",
   ";",
   "/* \u8bbe\u5b9a\u6587\u5b57\u4f4d\u7f6e */",
   "switch",
   "(",
   "$",
   "locate",
   ")",
   "{",
   "/* \u53f3\u4e0b\u89d2\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_SOUTHEAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0b\u89d2\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_SOUTHWEST",
   ":",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u5de6\u4e0a\u89d2\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_NORTHWEST",
   ":",
   "// \u8d77\u59cb\u5750\u6807\u5373\u4e3a\u5de6\u4e0a\u89d2\u5750\u6807\uff0c\u65e0\u9700\u8c03\u6574",
   "break",
   ";",
   "/* \u53f3\u4e0a\u89d2\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_NORTHEAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "break",
   ";",
   "/* \u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_CENTER",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u4e0b\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_SOUTH",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ";",
   "break",
   ";",
   "/* \u53f3\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_EAST",
   ":",
   "$",
   "x",
   "+=",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ";",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u4e0a\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_NORTH",
   ":",
   "$",
   "x",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'width'",
   "]",
   "-",
   "$",
   "w",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "/* \u5de6\u5c45\u4e2d\u6587\u5b57 */",
   "case",
   "Image",
   "::",
   "IMAGE_WATER_WEST",
   ":",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "this",
   "->",
   "info",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "h",
   ")",
   "/",
   "2",
   ";",
   "break",
   ";",
   "default",
   ":",
   "/* \u81ea\u5b9a\u4e49\u6587\u5b57\u5750\u6807 */",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "locate",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "posx",
   ",",
   "$",
   "posy",
   ")",
   "=",
   "$",
   "locate",
   ";",
   "$",
   "x",
   "+=",
   "$",
   "posx",
   ";",
   "$",
   "y",
   "+=",
   "$",
   "posy",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "BaseException",
   "(",
   "'\u4e0d\u652f\u6301\u7684\u6587\u5b57\u4f4d\u7f6e\u7c7b\u578b');",
   "",
   "",
   "}",
   "}",
   "/* \u8bbe\u7f6e\u504f\u79fb\u91cf */",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "offset",
   ")",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "array_map",
   "(",
   "'intval'",
   ",",
   "$",
   "offset",
   ")",
   ";",
   "list",
   "(",
   "$",
   "ox",
   ",",
   "$",
   "oy",
   ")",
   "=",
   "$",
   "offset",
   ";",
   "}",
   "else",
   "{",
   "$",
   "offset",
   "=",
   "intval",
   "(",
   "$",
   "offset",
   ")",
   ";",
   "$",
   "ox",
   "=",
   "$",
   "oy",
   "=",
   "$",
   "offset",
   ";",
   "}",
   "/* \u8bbe\u7f6e\u989c\u8272 */",
   "if",
   "(",
   "is_string",
   "(",
   "$",
   "color",
   ")",
   "&&",
   "0",
   "===",
   "strpos",
   "(",
   "$",
   "color",
   ",",
   "'#'",
   ")",
   ")",
   "{",
   "$",
   "color",
   "=",
   "str_split",
   "(",
   "substr",
   "(",
   "$",
   "color",
   ",",
   "1",
   ")",
   ",",
   "2",
   ")",
   ";",
   "$",
   "color",
   "=",
   "array_map",
   "(",
   "'hexdec'",
   ",",
   "$",
   "color",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "color",
   "[",
   "3",
   "]",
   ")",
   "||",
   "$",
   "color",
   "[",
   "3",
   "]",
   ">",
   "127",
   ")",
   "{",
   "$",
   "color",
   "[",
   "3",
   "]",
   "=",
   "0",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "!",
   "is_array",
   "(",
   "$",
   "color",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "BaseException",
   "(",
   "'\u9519\u8bef\u7684\u989c\u8272\u503c');",
   "",
   "",
   "}",
   "do",
   "{",
   "/* \u5199\u5165\u6587\u5b57 */",
   "$",
   "col",
   "=",
   "imagecolorallocatealpha",
   "(",
   "$",
   "this",
   "->",
   "img",
   ",",
   "$",
   "color",
   "[",
   "0",
   "]",
   ",",
   "$",
   "color",
   "[",
   "1",
   "]",
   ",",
   "$",
   "color",
   "[",
   "2",
   "]",
   ",",
   "$",
   "color",
   "[",
   "3",
   "]",
   ")",
   ";",
   "imagettftext",
   "(",
   "$",
   "this",
   "->",
   "img",
   ",",
   "$",
   "size",
   ",",
   "$",
   "angle",
   ",",
   "$",
   "x",
   "+",
   "$",
   "ox",
   ",",
   "$",
   "y",
   "+",
   "$",
   "oy",
   ",",
   "$",
   "col",
   ",",
   "$",
   "font",
   ",",
   "$",
   "text",
   ")",
   ";",
   "}",
   "while",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "gif",
   ")",
   "&&",
   "$",
   "this",
   "->",
   "gifNext",
   "(",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-265",
  "nl_tokens": [
   "Parse",
   "formatted",
   "date",
   "to",
   "time",
   "value"
  ],
  "pl_tokens": [
   "private",
   "function",
   "_parseDate",
   "(",
   "$",
   "fmt",
   ",",
   "$",
   "fmtValue",
   ")",
   "{",
   "$",
   "y",
   "=",
   "0",
   ";",
   "$",
   "m",
   "=",
   "0",
   ";",
   "$",
   "d",
   "=",
   "0",
   ";",
   "$",
   "hr",
   "=",
   "0",
   ";",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "$",
   "sec",
   "=",
   "0",
   ";",
   "$",
   "a",
   "=",
   "preg_split",
   "(",
   "\"/\\W+/\"",
   ",",
   "$",
   "fmtValue",
   ")",
   ";",
   "preg_match_all",
   "(",
   "\"/%./\"",
   ",",
   "$",
   "fmt",
   ",",
   "$",
   "b",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "count",
   "(",
   "$",
   "a",
   ")",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "switch",
   "(",
   "$",
   "b",
   "[",
   "0",
   "]",
   "[",
   "$",
   "i",
   "]",
   ")",
   "{",
   "case",
   "\"%d\"",
   ":",
   "// the day of the month ( 00 .. 31 )",
   "case",
   "\"%e\"",
   ":",
   "// the day of the month ( 0 .. 31 )",
   "$",
   "d",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "break",
   ";",
   "case",
   "\"%m\"",
   ":",
   "// month ( 01 .. 12 )",
   "$",
   "m",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "break",
   ";",
   "case",
   "\"%Y\"",
   ":",
   "// year including the century ( ex. 1979 )",
   "case",
   "\"%y\"",
   ":",
   "// year without the century ( 00 .. 99 )",
   "$",
   "y",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "if",
   "(",
   "$",
   "y",
   "<",
   "100",
   ")",
   "{",
   "$",
   "y",
   "+=",
   "(",
   "$",
   "y",
   ">",
   "29",
   ")",
   "?",
   "1900",
   ":",
   "2000",
   ";",
   "}",
   "break",
   ";",
   "case",
   "\"%H\"",
   ":",
   "// hour ( 00 .. 23 )",
   "case",
   "\"%I\"",
   ":",
   "// hour ( 01 .. 12 )",
   "case",
   "\"%k\"",
   ":",
   "// hour ( 00 .. 23 )",
   "case",
   "\"%l\"",
   ":",
   "// hour ( 01 .. 12 )",
   "$",
   "hr",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "break",
   ";",
   "case",
   "\"%P\"",
   ":",
   "// PM or AM",
   "case",
   "\"%p\"",
   ":",
   "// pm or am",
   "if",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   "==",
   "'pm'",
   "&&",
   "$",
   "hr",
   "<",
   "12",
   ")",
   "{",
   "$",
   "hr",
   "+=",
   "12",
   ";",
   "}",
   "else",
   "if",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   "==",
   "'am'",
   "&&",
   "$",
   "hr",
   ">=",
   "12",
   ")",
   "{",
   "$",
   "hr",
   "-=",
   "12",
   ";",
   "}",
   "break",
   ";",
   "case",
   "\"%M\"",
   ":",
   "// minute ( 00 .. 59 )",
   "$",
   "min",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "break",
   ";",
   "case",
   "\"%S\"",
   ":",
   "// second ( 00 .. 59 )",
   "$",
   "sec",
   "=",
   "intval",
   "(",
   "$",
   "a",
   "[",
   "$",
   "i",
   "]",
   ",",
   "10",
   ")",
   ";",
   "break",
   ";",
   "//default:",
   "}",
   "}",
   "$",
   "timeStamp",
   "=",
   "mktime",
   "(",
   "$",
   "hr",
   ",",
   "$",
   "min",
   ",",
   "$",
   "sec",
   ",",
   "$",
   "m",
   ",",
   "$",
   "d",
   ",",
   "$",
   "y",
   ")",
   ";",
   "return",
   "$",
   "timeStamp",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-266",
  "nl_tokens": [
   "Compress",
   "image",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "compress",
   "(",
   "array",
   "$",
   "args",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "class_exists",
   "(",
   "'Imagick'",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "default_args",
   "=",
   "[",
   "'file'",
   "=>",
   "''",
   ",",
   "'format'",
   "=>",
   "''",
   ",",
   "// For SVGs (1-8).",
   "'precision'",
   "=>",
   "0",
   ",",
   "// For PNGs (1-100).",
   "'min_quality'",
   "=>",
   "0",
   ",",
   "'max_quality'",
   "=>",
   "0",
   ",",
   "// For JPGs (1-100).",
   "'quality'",
   "=>",
   "0",
   ",",
   "'output_file'",
   "=>",
   "''",
   ",",
   "'output_format'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Defaults.",
   "$",
   "args",
   "=",
   "$",
   "this",
   "->",
   "parseFormatArgs",
   "(",
   "$",
   "args",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   "===",
   "'svg'",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "compressSvg",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ",",
   "$",
   "args",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "mb_stripos",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ",",
   "'png'",
   ")",
   "===",
   "0",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "compressPng",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ",",
   "$",
   "args",
   ")",
   ";",
   "}",
   "$",
   "args",
   "[",
   "'quality'",
   "]",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "100",
   ",",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'quality'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "output_file_existed_prior",
   "=",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "$",
   "compression_type",
   "=",
   "$",
   "this",
   "->",
   "formatToCompressionType",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   ";",
   "$",
   "compression_quality",
   "=",
   "$",
   "args",
   "[",
   "'quality'",
   "]",
   "?",
   ":",
   "$",
   "this",
   "->",
   "formatToCompressionQuality",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   ";",
   "try",
   "{",
   "// Catch exceptions.",
   "$",
   "image",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "image",
   "->",
   "setBackgroundColor",
   "(",
   "'transparent'",
   ")",
   ";",
   "$",
   "image",
   "->",
   "readImage",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   ";",
   "$",
   "image",
   "->",
   "stripImage",
   "(",
   ")",
   ";",
   "// Profiles/comments.",
   "$",
   "image",
   "->",
   "setImageCompression",
   "(",
   "$",
   "compression_type",
   ")",
   ";",
   "$",
   "image",
   "->",
   "setImageCompressionQuality",
   "(",
   "$",
   "compression_quality",
   ")",
   ";",
   "$",
   "image",
   "->",
   "writeImage",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "return",
   "true",
   ";",
   "// Success.",
   "//",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "Exception",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "output_file_existed_prior",
   "&&",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ")",
   "{",
   "unlink",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-267",
  "nl_tokens": [
   "Define",
   "o",
   "maior",
   "valor",
   "poss\u00edvel",
   "para",
   "um",
   "tipo",
   "num\u00e9rico",
   "ou",
   "DateTime",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "setMax",
   "(",
   "$",
   "m",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isSimpleTypeNumeric",
   "(",
   ")",
   "===",
   "true",
   "||",
   "$",
   "this",
   "->",
   "isSimpleTypeDateTime",
   "(",
   ")",
   "===",
   "true",
   ")",
   "{",
   "if",
   "(",
   "$",
   "m",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "type",
   "::",
   "max",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "// Verifica se o valor passado \u00e9 v\u00e1lido",
   "$",
   "err",
   "=",
   "null",
   ";",
   "$",
   "m",
   "=",
   "$",
   "this",
   "->",
   "type",
   "::",
   "parseIfValidate",
   "(",
   "$",
   "m",
   ",",
   "$",
   "err",
   ")",
   ";",
   "if",
   "(",
   "$",
   "err",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "msg",
   "=",
   "\"Invalid max value.\"",
   ";",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "$",
   "msg",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "max",
   "=",
   "$",
   "m",
   ";",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-268",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "displayTxt",
   "(",
   "array",
   "$",
   "filesInfo",
   ",",
   "bool",
   "$",
   "displayCorrectFiles",
   ")",
   ":",
   "int",
   "{",
   "$",
   "countFiles",
   "=",
   "\\",
   "count",
   "(",
   "$",
   "filesInfo",
   ")",
   ";",
   "$",
   "erroredFiles",
   "=",
   "0",
   ";",
   "$",
   "output",
   "=",
   "$",
   "this",
   "->",
   "getOutput",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "filesInfo",
   "as",
   "$",
   "info",
   ")",
   "{",
   "if",
   "(",
   "$",
   "displayCorrectFiles",
   "&&",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "output",
   "->",
   "comment",
   "(",
   "'<info>OK</info>'",
   ".",
   "(",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   "?",
   "\\",
   "sprintf",
   "(",
   "' in %s'",
   ",",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   ")",
   ":",
   "''",
   ")",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "erroredFiles",
   "++",
   ";",
   "$",
   "output",
   "->",
   "text",
   "(",
   "'<error>ERROR</error>'",
   ".",
   "(",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   "?",
   "\\",
   "sprintf",
   "(",
   "' in %s'",
   ",",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   ")",
   ":",
   "''",
   ")",
   ")",
   ";",
   "$",
   "output",
   "->",
   "text",
   "(",
   "\\",
   "sprintf",
   "(",
   "'<error> >> %s</error>'",
   ",",
   "$",
   "info",
   "[",
   "'message'",
   "]",
   ")",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "erroredFiles",
   "===",
   "0",
   ")",
   "{",
   "$",
   "output",
   "->",
   "success",
   "(",
   "\\",
   "sprintf",
   "(",
   "'All %d YAML files contain valid syntax.'",
   ",",
   "$",
   "countFiles",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "output",
   "->",
   "warning",
   "(",
   "\\",
   "sprintf",
   "(",
   "'%d YAML files have valid syntax and %d contain errors.'",
   ",",
   "$",
   "countFiles",
   "-",
   "$",
   "erroredFiles",
   ",",
   "$",
   "erroredFiles",
   ")",
   ")",
   ";",
   "}",
   "return",
   "\\",
   "<mask>",
   "(",
   "$",
   "erroredFiles",
   ",",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-269",
  "nl_tokens": [
   "Output",
   "the",
   "results",
   "as",
   "text",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "displayText",
   "(",
   "array",
   "$",
   "details",
   ",",
   "bool",
   "$",
   "verbose",
   "=",
   "false",
   ")",
   ":",
   "int",
   "{",
   "$",
   "errors",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "details",
   "as",
   "$",
   "info",
   ")",
   "{",
   "if",
   "(",
   "$",
   "verbose",
   "&&",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "file",
   "=",
   "' in '",
   ".",
   "$",
   "info",
   "[",
   "'file'",
   "]",
   ";",
   "$",
   "this",
   "->",
   "line",
   "(",
   "'<info>OK</info>'",
   ".",
   "$",
   "file",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "info",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "errors",
   "++",
   ";",
   "$",
   "this",
   "->",
   "renderException",
   "(",
   "$",
   "info",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "errors",
   "===",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "comment",
   "(",
   "\\",
   "sprintf",
   "(",
   "'All %d Twig files contain valid syntax.'",
   ",",
   "\\",
   "count",
   "(",
   "$",
   "details",
   ")",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "warn",
   "(",
   "\\",
   "sprintf",
   "(",
   "'%d Twig files have valid syntax and %d contain errors.'",
   ",",
   "\\",
   "count",
   "(",
   "$",
   "details",
   ")",
   "-",
   "$",
   "errors",
   ",",
   "$",
   "errors",
   ")",
   ")",
   ";",
   "}",
   "return",
   "\\",
   "<mask>",
   "(",
   "$",
   "errors",
   ",",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-270",
  "nl_tokens": [
   "Build",
   "pagination",
   "links",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "links",
   "(",
   ")",
   ":",
   "string",
   "{",
   "$",
   "first_page",
   "=",
   "1",
   ";",
   "// Always `1` (first page).",
   "$",
   "last_page",
   "=",
   "(",
   "int",
   ")",
   "ceil",
   "(",
   "$",
   "this",
   "->",
   "found_rows",
   "/",
   "$",
   "this",
   "->",
   "per_page",
   ")",
   ";",
   "// Note: `6` = Prev, [x], ..., ..., [x], Next.",
   "// Calculations below force a consistent menu width.",
   "// i.e., Always the same number of links in the menu.",
   "if",
   "(",
   "$",
   "last_page",
   "<",
   "(",
   "$",
   "this",
   "->",
   "range",
   "*",
   "2",
   ")",
   "+",
   "6",
   ")",
   "{",
   "$",
   "start_page",
   "=",
   "$",
   "first_page",
   ";",
   "$",
   "end_page",
   "=",
   "$",
   "last_page",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "page",
   "<",
   "(",
   "$",
   "this",
   "->",
   "range",
   "*",
   "2",
   ")",
   "+",
   "1",
   ")",
   "{",
   "$",
   "start_page",
   "=",
   "$",
   "first_page",
   ";",
   "$",
   "end_page",
   "=",
   "(",
   "$",
   "this",
   "->",
   "range",
   "*",
   "2",
   ")",
   "+",
   "3",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "page",
   ">",
   "$",
   "last_page",
   "-",
   "(",
   "$",
   "this",
   "->",
   "range",
   "*",
   "2",
   ")",
   ")",
   "{",
   "$",
   "start_page",
   "=",
   "$",
   "last_page",
   "-",
   "(",
   "$",
   "this",
   "->",
   "range",
   "*",
   "2",
   ")",
   "-",
   "2",
   ";",
   "$",
   "end_page",
   "=",
   "$",
   "last_page",
   ";",
   "}",
   "else",
   "{",
   "$",
   "start_page",
   "=",
   "$",
   "this",
   "->",
   "page",
   "-",
   "$",
   "this",
   "->",
   "range",
   ";",
   "$",
   "end_page",
   "=",
   "$",
   "this",
   "->",
   "page",
   "+",
   "$",
   "this",
   "->",
   "range",
   ";",
   "}",
   "$",
   "start_page",
   "=",
   "<mask>",
   "(",
   "$",
   "first_page",
   ",",
   "$",
   "start_page",
   ")",
   ";",
   "$",
   "end_page",
   "=",
   "min",
   "(",
   "$",
   "last_page",
   ",",
   "$",
   "end_page",
   ")",
   ";",
   "$",
   "links",
   "=",
   "'<div class=\"'",
   ".",
   "$",
   "this",
   "->",
   "pages_class",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "'<a class=\"-prev-page '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page",
   "===",
   "$",
   "first_page",
   "?",
   "$",
   "this",
   "->",
   "page_icon_disabled_class",
   ":",
   "$",
   "this",
   "->",
   "page_icon_class",
   ")",
   ".",
   "'\"'",
   ".",
   "' href=\"'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escUrl",
   "(",
   "$",
   "this",
   "->",
   "page",
   "===",
   "$",
   "first_page",
   "?",
   "'#'",
   ":",
   "$",
   "this",
   "->",
   "pageUrl",
   "(",
   "$",
   "this",
   "->",
   "page",
   "-",
   "1",
   ")",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "this",
   "->",
   "prev_page_icon",
   ".",
   "' '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escHtml",
   "(",
   "$",
   "this",
   "->",
   "prev_page_text",
   ")",
   ";",
   "$",
   "links",
   ".=",
   "'</a>'",
   ";",
   "if",
   "(",
   "$",
   "start_page",
   ">",
   "$",
   "first_page",
   ")",
   "{",
   "$",
   "links",
   ".=",
   "'<a class=\"-first-page '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page_class",
   ")",
   ".",
   "'\"'",
   ".",
   "' href=\"'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escUrl",
   "(",
   "$",
   "this",
   "->",
   "pageUrl",
   "(",
   "$",
   "first_page",
   ")",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "this",
   "->",
   "first_page_icon",
   ".",
   "' '",
   ".",
   "$",
   "first_page",
   ";",
   "$",
   "links",
   ".=",
   "'</a>'",
   ";",
   "$",
   "links",
   ".=",
   "'<span class=\"-ellipsis '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page_icon_disabled_class",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "this",
   "->",
   "ellipsis_icon",
   ";",
   "$",
   "links",
   ".=",
   "'</span>'",
   ";",
   "}",
   "for",
   "(",
   "$",
   "_page",
   "=",
   "$",
   "start_page",
   ";",
   "$",
   "_page",
   "<=",
   "$",
   "end_page",
   ";",
   "++",
   "$",
   "_page",
   ")",
   "{",
   "$",
   "links",
   ".=",
   "'<a class=\"-page '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "_page",
   "===",
   "$",
   "this",
   "->",
   "page",
   "?",
   "$",
   "this",
   "->",
   "page_active_class",
   ":",
   "$",
   "this",
   "->",
   "page_class",
   ")",
   ".",
   "'\"'",
   ".",
   "' href=\"'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escUrl",
   "(",
   "$",
   "_page",
   "===",
   "$",
   "this",
   "->",
   "page",
   "?",
   "'#'",
   ":",
   "$",
   "this",
   "->",
   "pageUrl",
   "(",
   "$",
   "_page",
   ")",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "_page",
   ";",
   "$",
   "links",
   ".=",
   "'</a>'",
   ";",
   "}",
   "if",
   "(",
   "$",
   "end_page",
   "<",
   "$",
   "last_page",
   ")",
   "{",
   "$",
   "links",
   ".=",
   "'<span class=\"-ellipsis '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page_icon_disabled_class",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "this",
   "->",
   "ellipsis_icon",
   ";",
   "$",
   "links",
   ".=",
   "'</span>'",
   ";",
   "$",
   "links",
   ".=",
   "'<a class=\"-last-page '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page_class",
   ")",
   ".",
   "'\"'",
   ".",
   "' href=\"'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escUrl",
   "(",
   "$",
   "this",
   "->",
   "pageUrl",
   "(",
   "$",
   "last_page",
   ")",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "last_page",
   ".",
   "' '",
   ".",
   "$",
   "this",
   "->",
   "last_page_icon",
   ";",
   "$",
   "links",
   ".=",
   "'</a>'",
   ";",
   "}",
   "$",
   "links",
   ".=",
   "'<a class=\"-next-page '",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escAttr",
   "(",
   "$",
   "this",
   "->",
   "page",
   "===",
   "$",
   "last_page",
   "?",
   "$",
   "this",
   "->",
   "page_icon_disabled_class",
   ":",
   "$",
   "this",
   "->",
   "page_icon_class",
   ")",
   ".",
   "'\"'",
   ".",
   "' href=\"'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escUrl",
   "(",
   "$",
   "this",
   "->",
   "page",
   "===",
   "$",
   "last_page",
   "?",
   "'#'",
   ":",
   "$",
   "this",
   "->",
   "pageUrl",
   "(",
   "$",
   "this",
   "->",
   "page",
   "+",
   "1",
   ")",
   ")",
   ".",
   "'\">'",
   ";",
   "$",
   "links",
   ".=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escHtml",
   "(",
   "$",
   "this",
   "->",
   "next_page_text",
   ")",
   ".",
   "' '",
   ".",
   "$",
   "this",
   "->",
   "next_page_icon",
   ";",
   "$",
   "links",
   ".=",
   "'</a>'",
   ";",
   "$",
   "links",
   ".=",
   "'</div>'",
   ";",
   "return",
   "$",
   "links",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-271",
  "nl_tokens": [
   "Mark",
   "a",
   "package",
   "as",
   "conflicting",
   "with",
   "this",
   "package"
  ],
  "pl_tokens": [
   "function",
   "addConflictingPackageDepWithChannel",
   "(",
   "$",
   "name",
   ",",
   "$",
   "channel",
   ",",
   "$",
   "providesextension",
   "=",
   "false",
   ",",
   "$",
   "<mask>",
   "=",
   "false",
   ",",
   "$",
   "max",
   "=",
   "false",
   ",",
   "$",
   "exclude",
   "=",
   "false",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_isValid",
   "=",
   "0",
   ";",
   "$",
   "dep",
   "=",
   "$",
   "this",
   "->",
   "_constructDep",
   "(",
   "$",
   "name",
   ",",
   "$",
   "channel",
   ",",
   "false",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "false",
   ",",
   "$",
   "exclude",
   ",",
   "$",
   "providesextension",
   ",",
   "false",
   ",",
   "true",
   ")",
   ";",
   "$",
   "this",
   "->",
   "_packageInfo",
   "=",
   "$",
   "this",
   "->",
   "_mergeTag",
   "(",
   "$",
   "this",
   "->",
   "_packageInfo",
   ",",
   "$",
   "dep",
   ",",
   "array",
   "(",
   "'dependencies'",
   "=>",
   "array",
   "(",
   "'providesextension'",
   ",",
   "'usesrole'",
   ",",
   "'usestask'",
   ",",
   "'srcpackage'",
   ",",
   "'srcuri'",
   ",",
   "'phprelease'",
   ",",
   "'extsrcrelease'",
   ",",
   "'extbinrelease'",
   ",",
   "'zendextsrcrelease'",
   ",",
   "'zendextbinrelease'",
   ",",
   "'bundle'",
   ",",
   "'changelog'",
   ")",
   ",",
   "'required'",
   "=>",
   "array",
   "(",
   "'optional'",
   ",",
   "'group'",
   ")",
   ",",
   "'package'",
   "=>",
   "array",
   "(",
   "'subpackage'",
   ",",
   "'extension'",
   ",",
   "'os'",
   ",",
   "'arch'",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-272",
  "nl_tokens": [
   "@param",
   "array",
   "$markers"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getMax",
   "(",
   "array",
   "$",
   "markers",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "[",
   "'time'",
   "=>",
   "0",
   ",",
   "'memory'",
   "=>",
   "0",
   ",",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "markers",
   "as",
   "$",
   "marker",
   ")",
   "{",
   "$",
   "total",
   "=",
   "$",
   "this",
   "->",
   "getTotal",
   "(",
   "$",
   "marker",
   ")",
   ";",
   "if",
   "(",
   "$",
   "total",
   "[",
   "'time'",
   "]",
   ">",
   "$",
   "max",
   "[",
   "'time'",
   "]",
   ")",
   "{",
   "$",
   "max",
   "[",
   "'time'",
   "]",
   "=",
   "$",
   "total",
   "[",
   "'time'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "total",
   "[",
   "'memory'",
   "]",
   ">",
   "$",
   "max",
   "[",
   "'memory'",
   "]",
   ")",
   "{",
   "$",
   "max",
   "[",
   "'memory'",
   "]",
   "=",
   "$",
   "total",
   "[",
   "'memory'",
   "]",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-273",
  "nl_tokens": [
   "Get",
   "depth",
   "of",
   "node"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getNumberOfChilds",
   "(",
   "Node",
   "$",
   "node",
   ",",
   "$",
   "uniqs",
   "=",
   "false",
   ")",
   "{",
   "$",
   "edges",
   "=",
   "$",
   "node",
   "->",
   "getEdges",
   "(",
   ")",
   ";",
   "if",
   "(",
   "0",
   "===",
   "sizeof",
   "(",
   "$",
   "edges",
   ")",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "// our tree is not binary : interface can have more than one parent",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "$",
   "n",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "edges",
   "as",
   "$",
   "edge",
   ")",
   "{",
   "if",
   "(",
   "$",
   "edge",
   "->",
   "getTo",
   "(",
   ")",
   "==",
   "$",
   "node",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "true",
   "==",
   "$",
   "uniqs",
   "&&",
   "$",
   "edge",
   "->",
   "getTo",
   "(",
   ")",
   "->",
   "visited",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "edge",
   "->",
   "getTo",
   "(",
   ")",
   "->",
   "visited",
   "=",
   "true",
   ";",
   "$",
   "n",
   "+=",
   "1",
   "+",
   "$",
   "this",
   "->",
   "getNumberOfChilds",
   "(",
   "$",
   "edge",
   "->",
   "getTo",
   "(",
   ")",
   ",",
   "$",
   "uniqs",
   ")",
   ";",
   "$",
   "edge",
   "->",
   "getTo",
   "(",
   ")",
   "->",
   "visited",
   "=",
   "false",
   ";",
   "if",
   "(",
   "$",
   "n",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "n",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-274",
  "nl_tokens": [
   "binadd",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "binadd",
   "(",
   "$",
   "x",
   ",",
   "$",
   "y",
   ")",
   "{",
   "$",
   "maxlen",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "x",
   ")",
   ",",
   "strlen",
   "(",
   "$",
   "y",
   ")",
   ")",
   ";",
   "//Normalize lengths",
   "$",
   "x",
   "=",
   "str_pad",
   "(",
   "$",
   "x",
   ",",
   "$",
   "maxlen",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "$",
   "y",
   "=",
   "str_pad",
   "(",
   "$",
   "y",
   ",",
   "$",
   "maxlen",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "$",
   "result",
   "=",
   "''",
   ";",
   "$",
   "carry",
   "=",
   "0",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "maxlen",
   "-",
   "1",
   ";",
   "$",
   "i",
   ">=",
   "0",
   ";",
   "$",
   "i",
   "--",
   ")",
   "{",
   "$",
   "r",
   "=",
   "(",
   "int",
   ")",
   "(",
   "$",
   "carry",
   "+",
   "$",
   "x",
   "[",
   "$",
   "i",
   "]",
   "+",
   "$",
   "y",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "result",
   "=",
   "(",
   "$",
   "r",
   "&",
   "1",
   ")",
   ".",
   "$",
   "result",
   ";",
   "$",
   "carry",
   "=",
   "$",
   "r",
   ">>",
   "1",
   ";",
   "}",
   "if",
   "(",
   "$",
   "carry",
   "!=",
   "0",
   ")",
   "{",
   "$",
   "result",
   "=",
   "'1'",
   ".",
   "$",
   "result",
   ";",
   "}",
   "return",
   "str_pad",
   "(",
   "$",
   "result",
   ",",
   "$",
   "maxlen",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-275",
  "nl_tokens": [
   "Registers",
   "the",
   "built",
   "-",
   "in",
   "rule",
   "factories"
  ],
  "pl_tokens": [
   "public",
   "function",
   "registerRuleFactories",
   "(",
   "IRuleFactory",
   "$",
   "ruleFactory",
   ")",
   ":",
   "IRuleFactory",
   "{",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "AlphaRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "new",
   "AlphaRule",
   "(",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "AlphanumericRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "new",
   "AlphanumericRule",
   "(",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "BetweenRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "bool",
   "$",
   "isInclusive",
   "=",
   "true",
   ")",
   "{",
   "return",
   "new",
   "BetweenRule",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "isInclusive",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "DateRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   "$",
   "formats",
   ")",
   "{",
   "return",
   "new",
   "DateRule",
   "(",
   "$",
   "formats",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "InRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   "array",
   "$",
   "acceptableValues",
   ")",
   "{",
   "return",
   "new",
   "InRule",
   "(",
   "$",
   "acceptableValues",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "IntegerRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "new",
   "IntegerRule",
   "(",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "NotInRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   "array",
   "$",
   "unacceptableValues",
   ")",
   "{",
   "return",
   "new",
   "NotInRule",
   "(",
   "$",
   "unacceptableValues",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "NumericRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "new",
   "NumericRule",
   "(",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "RegexRule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   "string",
   "$",
   "regex",
   ")",
   "{",
   "return",
   "new",
   "RegexRule",
   "(",
   "$",
   "regex",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "ruleFactory",
   "->",
   "registerRuleFactory",
   "(",
   "UuidV4Rule",
   "::",
   "getSlug",
   "(",
   ")",
   ",",
   "function",
   "(",
   ")",
   "{",
   "return",
   "new",
   "UuidV4Rule",
   "(",
   ")",
   ";",
   "}",
   ")",
   ";",
   "return",
   "$",
   "ruleFactory",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-276",
  "nl_tokens": [
   "@param",
   "DataObjectInterface",
   "$dataObject"
  ],
  "pl_tokens": [
   "public",
   "function",
   "changeLineType",
   "(",
   "DataObjectInterface",
   "$",
   "dataObject",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "dataObject",
   "->",
   "count",
   "(",
   ")",
   ";",
   "$",
   "delimiterFound",
   "=",
   "0",
   ";",
   "$",
   "blockContent",
   "=",
   "[",
   "]",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "this",
   "->",
   "lineNumber",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "currentLine",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   ")",
   ";",
   "$",
   "lineContent",
   "=",
   "$",
   "currentLine",
   "->",
   "getContent",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "createSkipLine",
   "(",
   "$",
   "dataObject",
   ",",
   "$",
   "i",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isBlockDelimiterLine",
   "(",
   "$",
   "lineContent",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "setContentBlockKeyByContent",
   "(",
   "$",
   "lineContent",
   ")",
   ";",
   "$",
   "delimiterFound",
   "++",
   ";",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "$",
   "delimiterFound",
   ">",
   "1",
   ")",
   "{",
   "break",
   ";",
   "}",
   "$",
   "blockContent",
   "[",
   "]",
   "=",
   "$",
   "lineContent",
   ";",
   "}",
   "$",
   "content",
   "=",
   "$",
   "this",
   "->",
   "getSubBlockParsedContent",
   "(",
   "$",
   "blockContent",
   ")",
   ";",
   "$",
   "dataObject",
   "->",
   "saveAvailableBlock",
   "(",
   "$",
   "this",
   "->",
   "contentBlockKey",
   ",",
   "$",
   "content",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-277",
  "nl_tokens": [
   "Returns",
   "the",
   "age",
   "in",
   "years",
   "from",
   "the",
   "current",
   "date",
   "and",
   "now"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getAge",
   "(",
   ")",
   "{",
   "$",
   "now",
   "=",
   "Time",
   "::",
   "now",
   "(",
   ")",
   "->",
   "getTimestamp",
   "(",
   ")",
   ";",
   "$",
   "time",
   "=",
   "$",
   "this",
   "->",
   "getTimestamp",
   "(",
   ")",
   ";",
   "// future dates have no age",
   "return",
   "<mask>",
   "(",
   "0",
   ",",
   "date",
   "(",
   "'Y'",
   ",",
   "$",
   "now",
   ")",
   "-",
   "date",
   "(",
   "'Y'",
   ",",
   "$",
   "time",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-278",
  "nl_tokens": [
   "Get",
   "Total",
   "count",
   "of",
   "data",
   "items",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getTotalCountFromData",
   "(",
   "$",
   "maxResults",
   "=",
   "null",
   ")",
   "{",
   "return",
   "$",
   "maxResults",
   "===",
   "null",
   "?",
   "$",
   "this",
   "->",
   "count",
   ":",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "count",
   ",",
   "$",
   "maxResults",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-279",
  "nl_tokens": [
   "Set",
   "an",
   "installation",
   "condition",
   "based",
   "on",
   "php",
   "version",
   "for",
   "the",
   "current",
   "release",
   "set"
  ],
  "pl_tokens": [
   "function",
   "setPhpInstallCondition",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "exclude",
   "=",
   "false",
   ")",
   "{",
   "$",
   "r",
   "=",
   "&",
   "$",
   "this",
   "->",
   "_getCurrentRelease",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "r",
   "===",
   "null",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "this",
   "->",
   "_isValid",
   "=",
   "0",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "r",
   "[",
   "'installconditions'",
   "]",
   "[",
   "'php'",
   "]",
   ")",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "r",
   "[",
   "'installconditions'",
   "]",
   "[",
   "'php'",
   "]",
   ")",
   ";",
   "}",
   "$",
   "dep",
   "=",
   "array",
   "(",
   "'min'",
   "=>",
   "$",
   "min",
   ",",
   "'max'",
   "=>",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "exclude",
   ")",
   "{",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "exclude",
   ")",
   "&&",
   "count",
   "(",
   "$",
   "exclude",
   ")",
   "==",
   "1",
   ")",
   "{",
   "$",
   "exclude",
   "=",
   "$",
   "exclude",
   "[",
   "0",
   "]",
   ";",
   "}",
   "$",
   "dep",
   "[",
   "'exclude'",
   "]",
   "=",
   "$",
   "exclude",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "getPackageType",
   "(",
   ")",
   "==",
   "'extsrc'",
   "||",
   "$",
   "this",
   "->",
   "getPackageType",
   "(",
   ")",
   "==",
   "'zendextsrc'",
   ")",
   "{",
   "$",
   "r",
   "=",
   "$",
   "this",
   "->",
   "_mergeTag",
   "(",
   "$",
   "r",
   ",",
   "$",
   "dep",
   ",",
   "array",
   "(",
   "'installconditions'",
   "=>",
   "array",
   "(",
   "'configureoption'",
   ",",
   "'binarypackage'",
   ",",
   "'filelist'",
   ")",
   ",",
   "'php'",
   "=>",
   "array",
   "(",
   "'extension'",
   ",",
   "'os'",
   ",",
   "'arch'",
   ")",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "r",
   "=",
   "$",
   "this",
   "->",
   "_mergeTag",
   "(",
   "$",
   "r",
   ",",
   "$",
   "dep",
   ",",
   "array",
   "(",
   "'installconditions'",
   "=>",
   "array",
   "(",
   "'filelist'",
   ")",
   ",",
   "'php'",
   "=>",
   "array",
   "(",
   "'extension'",
   ",",
   "'os'",
   ",",
   "'arch'",
   ")",
   ")",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-280",
  "nl_tokens": [
   "\u5e26\u5206\u9875\u7684\u6570\u636e\u67e5\u8be2"
  ],
  "pl_tokens": [
   "public",
   "function",
   "find",
   "(",
   "$",
   "table",
   ",",
   "$",
   "fields",
   ",",
   "$",
   "where",
   ",",
   "$",
   "order",
   "=",
   "1",
   ",",
   "array",
   "&",
   "$",
   "page",
   "=",
   "array",
   "(",
   "'p'",
   "=>",
   "1",
   ",",
   "'limit'",
   "=>",
   "50",
   ")",
   ",",
   "$",
   "group_by",
   "=",
   "1",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "page",
   "[",
   "'result_count'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "total",
   "=",
   "$",
   "this",
   "->",
   "get",
   "(",
   "$",
   "table",
   ",",
   "'COUNT(*) as total'",
   ",",
   "$",
   "where",
   ")",
   ";",
   "$",
   "page",
   "[",
   "'result_count'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "$",
   "total",
   "[",
   "'total'",
   "]",
   ";",
   "}",
   "$",
   "page",
   "[",
   "'limit'",
   "]",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "page",
   "[",
   "'limit'",
   "]",
   ")",
   ";",
   "$",
   "page",
   "[",
   "'total_page'",
   "]",
   "=",
   "ceil",
   "(",
   "$",
   "page",
   "[",
   "'result_count'",
   "]",
   "/",
   "$",
   "page",
   "[",
   "'limit'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "page",
   "[",
   "'p'",
   "]",
   "<=",
   "$",
   "page",
   "[",
   "'total_page'",
   "]",
   ")",
   "{",
   "$",
   "page",
   "[",
   "'p'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "$",
   "page",
   "[",
   "'p'",
   "]",
   ")",
   ";",
   "$",
   "this",
   "->",
   "SQLAssembler",
   "->",
   "find",
   "(",
   "$",
   "table",
   ",",
   "$",
   "fields",
   ",",
   "$",
   "where",
   ",",
   "$",
   "order",
   ",",
   "$",
   "page",
   ",",
   "$",
   "group_by",
   ")",
   ";",
   "return",
   "$",
   "this",
   "->",
   "getPrepareResult",
   "(",
   "true",
   ")",
   ";",
   "}",
   "return",
   "array",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-281",
  "nl_tokens": [
   "@param",
   "(",
   "Command|string",
   ")",
   "[]",
   "$commands"
  ],
  "pl_tokens": [
   "private",
   "function",
   "getColumnWidth",
   "(",
   "array",
   "$",
   "commands",
   ")",
   "{",
   "$",
   "widths",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "commands",
   "as",
   "$",
   "command",
   ")",
   "{",
   "if",
   "(",
   "$",
   "command",
   "instanceof",
   "Command",
   ")",
   "{",
   "$",
   "widths",
   "[",
   "]",
   "=",
   "Helper",
   "::",
   "strlen",
   "(",
   "$",
   "command",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "command",
   "->",
   "getAliases",
   "(",
   ")",
   "as",
   "$",
   "alias",
   ")",
   "{",
   "$",
   "widths",
   "[",
   "]",
   "=",
   "Helper",
   "::",
   "strlen",
   "(",
   "$",
   "alias",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "widths",
   "[",
   "]",
   "=",
   "Helper",
   "::",
   "strlen",
   "(",
   "$",
   "command",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "widths",
   "?",
   "<mask>",
   "(",
   "$",
   "widths",
   ")",
   "+",
   "2",
   ":",
   "0",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-282",
  "nl_tokens": [
   "Simplifies",
   "path",
   "to",
   "fit",
   "in",
   "specific",
   "width"
  ],
  "pl_tokens": [
   "public",
   "function",
   "normalizeAndTruncatePath",
   "(",
   "$",
   "path",
   ",",
   "$",
   "maxLength",
   ")",
   "{",
   "$",
   "truncated",
   "=",
   "1",
   ";",
   "$",
   "path_parts",
   "=",
   "explode",
   "(",
   "'/'",
   ",",
   "str_replace",
   "(",
   "'\\\\'",
   ",",
   "'/'",
   ",",
   "$",
   "path",
   ")",
   ")",
   ";",
   "$",
   "total_parts",
   "=",
   "count",
   "(",
   "$",
   "path_parts",
   ")",
   ";",
   "while",
   "(",
   "strlen",
   "(",
   "$",
   "path",
   ")",
   ">",
   "$",
   "maxLength",
   ")",
   "{",
   "if",
   "(",
   "(",
   "$",
   "truncated",
   "+",
   "1",
   ")",
   "===",
   "$",
   "total_parts",
   ")",
   "break",
   ";",
   "$",
   "part_to_modify",
   "=",
   "$",
   "total_parts",
   "-",
   "1",
   "-",
   "$",
   "truncated",
   ";",
   "$",
   "chars_to_truncate",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "path_parts",
   "[",
   "$",
   "part_to_modify",
   "]",
   ")",
   "-",
   "1",
   ",",
   "strlen",
   "(",
   "$",
   "path",
   ")",
   "-",
   "$",
   "maxLength",
   ")",
   ";",
   "if",
   "(",
   "(",
   "strlen",
   "(",
   "$",
   "path",
   ")",
   "-",
   "$",
   "maxLength",
   "+",
   "2",
   ")",
   "<",
   "strlen",
   "(",
   "$",
   "path_parts",
   "[",
   "$",
   "part_to_modify",
   "]",
   ")",
   ")",
   "$",
   "chars_to_truncate",
   "+=",
   "2",
   ";",
   "$",
   "path_parts",
   "[",
   "$",
   "part_to_modify",
   "]",
   "=",
   "substr",
   "(",
   "$",
   "path_parts",
   "[",
   "$",
   "part_to_modify",
   "]",
   ",",
   "0",
   ",",
   "-",
   "$",
   "chars_to_truncate",
   ")",
   ".",
   "'..'",
   ";",
   "$",
   "path",
   "=",
   "implode",
   "(",
   "'/'",
   ",",
   "$",
   "path_parts",
   ")",
   ";",
   "$",
   "truncated",
   "++",
   ";",
   "}",
   "return",
   "$",
   "path",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-283",
  "nl_tokens": [
   "Reads",
   "a",
   "part",
   "of",
   "response",
   "body",
   "encoded",
   "with",
   "chunked",
   "Transfer",
   "-",
   "Encoding"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "readChunked",
   "(",
   "$",
   "bufferSize",
   ")",
   "{",
   "// at start of the next chunk?\r",
   "if",
   "(",
   "0",
   "==",
   "$",
   "this",
   "->",
   "chunkLength",
   ")",
   "{",
   "$",
   "line",
   "=",
   "$",
   "this",
   "->",
   "socket",
   "->",
   "readLine",
   "(",
   "$",
   "bufferSize",
   ")",
   ";",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "'/^([0-9a-f]+)/i'",
   ",",
   "$",
   "line",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "HTTP_Request2_MessageException",
   "(",
   "\"Cannot decode chunked response, invalid chunk length '{$line}'\"",
   ",",
   "HTTP_Request2_Exception",
   "::",
   "DECODE_ERROR",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "chunkLength",
   "=",
   "hexdec",
   "(",
   "$",
   "matches",
   "[",
   "1",
   "]",
   ")",
   ";",
   "// Chunk with zero length indicates the end\r",
   "if",
   "(",
   "0",
   "==",
   "$",
   "this",
   "->",
   "chunkLength",
   ")",
   "{",
   "$",
   "this",
   "->",
   "socket",
   "->",
   "readLine",
   "(",
   "$",
   "bufferSize",
   ")",
   ";",
   "return",
   "''",
   ";",
   "}",
   "}",
   "}",
   "$",
   "data",
   "=",
   "$",
   "this",
   "->",
   "socket",
   "->",
   "read",
   "(",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "chunkLength",
   ",",
   "$",
   "bufferSize",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "chunkLength",
   "-=",
   "strlen",
   "(",
   "$",
   "data",
   ")",
   ";",
   "if",
   "(",
   "0",
   "==",
   "$",
   "this",
   "->",
   "chunkLength",
   ")",
   "{",
   "$",
   "this",
   "->",
   "socket",
   "->",
   "readLine",
   "(",
   "$",
   "bufferSize",
   ")",
   ";",
   "// Trailing CRLF\r",
   "}",
   "return",
   "$",
   "data",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-284",
  "nl_tokens": [
   "Increments",
   "value",
   "for",
   "assets",
   "version",
   "found",
   "in",
   "parameters",
   "file",
   "Only",
   "works",
   "when",
   "current",
   "value",
   "is",
   "integer",
   "or",
   "has",
   "integer",
   "ending",
   "e",
   ".",
   "g",
   ".",
   "v42",
   "If",
   "delta",
   "is",
   "given",
   "incrementing",
   "is",
   "done",
   "by",
   "that",
   "value",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "incrementVersion",
   "(",
   "$",
   "delta",
   "=",
   "1",
   ",",
   "$",
   "rereadFile",
   "=",
   "false",
   ")",
   "{",
   "if",
   "(",
   "$",
   "rereadFile",
   ")",
   "{",
   "$",
   "this",
   "->",
   "readFile",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "delta",
   ")",
   "||",
   "round",
   "(",
   "$",
   "delta",
   ")",
   "!=",
   "$",
   "delta",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "sprintf",
   "(",
   "'Delta must be integer, %s given'",
   ",",
   "var_export",
   "(",
   "$",
   "delta",
   ",",
   "true",
   ")",
   ")",
   ")",
   ";",
   "}",
   "preg_match",
   "(",
   "'/^(.*)(\\d+)$/U'",
   ",",
   "$",
   "this",
   "->",
   "versionValue",
   ",",
   "$",
   "matches",
   ")",
   ";",
   "if",
   "(",
   "!",
   "array_key_exists",
   "(",
   "2",
   ",",
   "$",
   "matches",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "UnexpectedValueException",
   "(",
   "sprintf",
   "(",
   "'Could not increment assets version %s - it should be integer or at least have integer ending'",
   ",",
   "var_export",
   "(",
   "$",
   "this",
   "->",
   "versionValue",
   ",",
   "true",
   ")",
   ")",
   ")",
   ";",
   "}",
   "$",
   "newValue",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "matches",
   "[",
   "2",
   "]",
   "+",
   "$",
   "delta",
   ")",
   ".",
   "''",
   ";",
   "// Preserve leading zeros",
   "if",
   "(",
   "$",
   "matches",
   "[",
   "2",
   "]",
   "[",
   "0",
   "]",
   "==",
   "'0'",
   ")",
   "{",
   "$",
   "newValue",
   "=",
   "str_pad",
   "(",
   "$",
   "newValue",
   ",",
   "strlen",
   "(",
   "$",
   "matches",
   "[",
   "2",
   "]",
   ")",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "setVersion",
   "(",
   "$",
   "matches",
   "[",
   "1",
   "]",
   ".",
   "$",
   "newValue",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-285",
  "nl_tokens": [
   "Get",
   "average",
   "height",
   "of",
   "graph"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getAverageHeightOfGraph",
   "(",
   ")",
   "{",
   "$",
   "ns",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "graph",
   "->",
   "getRootNodes",
   "(",
   ")",
   "as",
   "$",
   "node",
   ")",
   "{",
   "array_push",
   "(",
   "$",
   "ns",
   ",",
   "$",
   "this",
   "->",
   "getLongestBranch",
   "(",
   "$",
   "node",
   ")",
   ")",
   ";",
   "}",
   "return",
   "round",
   "(",
   "array_sum",
   "(",
   "$",
   "ns",
   ")",
   "/",
   "<mask>",
   "(",
   "1",
   ",",
   "sizeof",
   "(",
   "$",
   "ns",
   ")",
   ")",
   ",",
   "2",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-286",
  "nl_tokens": [
   "Touch",
   "a",
   "cache",
   "key",
   "(",
   "i",
   ".",
   "e",
   ".",
   "new",
   "expiration",
   ")",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "touch",
   "(",
   "string",
   "$",
   "primary_key",
   ",",
   "$",
   "sub_key",
   ",",
   "int",
   "$",
   "expires_in",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "enabled",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "expires_in",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "expires_in",
   ")",
   ";",
   "$",
   "expires",
   "=",
   "$",
   "expires_in",
   "?",
   "time",
   "(",
   ")",
   "+",
   "$",
   "expires_in",
   ":",
   "0",
   ";",
   "if",
   "(",
   "!",
   "(",
   "$",
   "key",
   "=",
   "$",
   "this",
   "->",
   "key",
   "(",
   "$",
   "primary_key",
   ",",
   "$",
   "sub_key",
   ")",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Fail; e.g., race condition.",
   "}",
   "return",
   "$",
   "this",
   "->",
   "Pool",
   "->",
   "touch",
   "(",
   "$",
   "key",
   ",",
   "$",
   "expires",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-287",
  "nl_tokens": [
   "\u5220\u9664\u914d\u7f6e",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "delete",
   "(",
   "string",
   "$",
   "name",
   ")",
   ":",
   "void",
   "{",
   "$",
   "name",
   "=",
   "$",
   "this",
   "->",
   "parseNamespace",
   "(",
   "$",
   "name",
   ")",
   ";",
   "$",
   "namespaces",
   "=",
   "$",
   "name",
   "[",
   "0",
   "]",
   ";",
   "$",
   "name",
   "=",
   "$",
   "name",
   "[",
   "1",
   "]",
   ";",
   "if",
   "(",
   "'*'",
   "===",
   "$",
   "name",
   ")",
   "{",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   "=",
   "[",
   "]",
   ";",
   "return",
   ";",
   "}",
   "if",
   "(",
   "!",
   "strpos",
   "(",
   "$",
   "name",
   ",",
   "'.'",
   ")",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   "[",
   "$",
   "name",
   "]",
   ")",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   "[",
   "$",
   "name",
   "]",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "parts",
   "=",
   "explode",
   "(",
   "'.'",
   ",",
   "$",
   "name",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "parts",
   ")",
   "-",
   "1",
   ";",
   "$",
   "option",
   "=",
   "&",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "part",
   "=",
   "$",
   "parts",
   "[",
   "$",
   "i",
   "]",
   ";",
   "if",
   "(",
   "$",
   "i",
   "<",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ")",
   ")",
   "{",
   "break",
   ";",
   "}",
   "$",
   "option",
   "=",
   "&",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ";",
   "}",
   "else",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ")",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ")",
   ";",
   "}",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-288",
  "nl_tokens": [
   "@param",
   "DataObjectInterface",
   "$dataObject"
  ],
  "pl_tokens": [
   "public",
   "function",
   "changeLineType",
   "(",
   "DataObjectInterface",
   "$",
   "dataObject",
   ")",
   "{",
   "$",
   "nextLineNumber",
   "=",
   "$",
   "this",
   "->",
   "lineNumber",
   "+",
   "1",
   ";",
   "if",
   "(",
   "!",
   "$",
   "dataObject",
   "->",
   "hasLine",
   "(",
   "$",
   "nextLineNumber",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "$",
   "dataObject",
   "->",
   "count",
   "(",
   ")",
   ";",
   "$",
   "changeNextLine",
   "=",
   "true",
   ";",
   "$",
   "htmlCotent",
   "=",
   "[",
   "]",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "this",
   "->",
   "lineNumber",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "currentLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   ")",
   ";",
   "$",
   "htmlCotent",
   "[",
   "]",
   "=",
   "$",
   "currentLineObject",
   "->",
   "getContent",
   "(",
   ")",
   ";",
   "$",
   "nextLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   "+",
   "1",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "lineIsObjectOf",
   "(",
   "$",
   "nextLineObject",
   ",",
   "BlockTypes",
   "::",
   "BLOCK_PARAGRAPH",
   ")",
   ")",
   "{",
   "$",
   "changeNextLine",
   "=",
   "false",
   ";",
   "}",
   "$",
   "this",
   "->",
   "createSkipLine",
   "(",
   "$",
   "dataObject",
   ",",
   "$",
   "i",
   ")",
   ";",
   "if",
   "(",
   "$",
   "changeNextLine",
   "===",
   "false",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "$",
   "newLineObject",
   "=",
   "$",
   "this",
   "->",
   "factory",
   "->",
   "create",
   "(",
   "BlockTypes",
   "::",
   "BLOCK_PARAGRAPH",
   ")",
   ";",
   "$",
   "newLineObject",
   "->",
   "setContent",
   "(",
   "implode",
   "(",
   "' '",
   ",",
   "$",
   "htmlCotent",
   ")",
   ")",
   "->",
   "setLineNumber",
   "(",
   "$",
   "this",
   "->",
   "lineNumber",
   ")",
   ";",
   "$",
   "dataObject",
   "->",
   "updateLine",
   "(",
   "$",
   "this",
   "->",
   "lineNumber",
   ",",
   "$",
   "newLineObject",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-289",
  "nl_tokens": [
   "Displays",
   "the",
   "commands",
   "on",
   "the",
   "CLI",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "describeCommands",
   "(",
   "array",
   "$",
   "commands",
   "=",
   "[",
   "]",
   ")",
   "{",
   "ksort",
   "(",
   "$",
   "commands",
   ")",
   ";",
   "// Sort into buckets by group",
   "$",
   "sorted",
   "=",
   "[",
   "]",
   ";",
   "$",
   "maxTitleLength",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "commands",
   "as",
   "$",
   "title",
   "=>",
   "$",
   "command",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "sorted",
   "[",
   "$",
   "command",
   "[",
   "'group'",
   "]",
   "]",
   ")",
   ")",
   "{",
   "$",
   "sorted",
   "[",
   "$",
   "command",
   "[",
   "'group'",
   "]",
   "]",
   "=",
   "[",
   "]",
   ";",
   "}",
   "$",
   "sorted",
   "[",
   "$",
   "command",
   "[",
   "'group'",
   "]",
   "]",
   "[",
   "$",
   "title",
   "]",
   "=",
   "$",
   "command",
   ";",
   "$",
   "maxTitleLength",
   "=",
   "<mask>",
   "(",
   "$",
   "maxTitleLength",
   ",",
   "strlen",
   "(",
   "$",
   "title",
   ")",
   ")",
   ";",
   "}",
   "ksort",
   "(",
   "$",
   "sorted",
   ")",
   ";",
   "// Display it all...",
   "foreach",
   "(",
   "$",
   "sorted",
   "as",
   "$",
   "group",
   "=>",
   "$",
   "items",
   ")",
   "{",
   "CLI",
   "::",
   "newLine",
   "(",
   ")",
   ";",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "group",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "items",
   "as",
   "$",
   "title",
   "=>",
   "$",
   "item",
   ")",
   "{",
   "$",
   "title",
   "=",
   "$",
   "this",
   "->",
   "padTitle",
   "(",
   "$",
   "title",
   ",",
   "$",
   "maxTitleLength",
   ",",
   "2",
   ",",
   "2",
   ")",
   ";",
   "$",
   "out",
   "=",
   "CLI",
   "::",
   "color",
   "(",
   "$",
   "title",
   ",",
   "'yellow'",
   ")",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "item",
   "[",
   "'description'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "out",
   ".=",
   "CLI",
   "::",
   "wrap",
   "(",
   "$",
   "item",
   "[",
   "'description'",
   "]",
   ",",
   "125",
   ",",
   "strlen",
   "(",
   "$",
   "title",
   ")",
   ")",
   ";",
   "}",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "out",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-290",
  "nl_tokens": [
   "process",
   "multiple",
   "dependencies",
   "that",
   "have",
   "a",
   "name",
   "like",
   "package",
   "deps"
  ],
  "pl_tokens": [
   "function",
   "_processMultipleDepsName",
   "(",
   "$",
   "deps",
   ")",
   "{",
   "$",
   "ret",
   "=",
   "$",
   "tests",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "deps",
   "as",
   "$",
   "name",
   "=>",
   "$",
   "dep",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "dep",
   "as",
   "$",
   "d",
   ")",
   "{",
   "$",
   "tests",
   "[",
   "$",
   "name",
   "]",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "_processDep",
   "(",
   "$",
   "d",
   ")",
   ";",
   "}",
   "}",
   "foreach",
   "(",
   "$",
   "tests",
   "as",
   "$",
   "name",
   "=>",
   "$",
   "test",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "$",
   "min",
   "=",
   "$",
   "php",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "php",
   "[",
   "'name'",
   "]",
   "=",
   "$",
   "name",
   ";",
   "foreach",
   "(",
   "$",
   "test",
   "as",
   "$",
   "dep",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "dep",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "dep",
   "[",
   "'channel'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "php",
   "[",
   "'channel'",
   "]",
   "=",
   "'pear.php.net'",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "dep",
   "[",
   "'conflicts'",
   "]",
   ")",
   "&&",
   "$",
   "dep",
   "[",
   "'conflicts'",
   "]",
   "==",
   "'yes'",
   ")",
   "{",
   "$",
   "php",
   "[",
   "'conflicts'",
   "]",
   "=",
   "'yes'",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "dep",
   "[",
   "'min'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "min",
   "[",
   "$",
   "dep",
   "[",
   "'min'",
   "]",
   "]",
   "=",
   "count",
   "(",
   "$",
   "min",
   ")",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "dep",
   "[",
   "'max'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "max",
   "[",
   "$",
   "dep",
   "[",
   "'max'",
   "]",
   "]",
   "=",
   "count",
   "(",
   "$",
   "max",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "min",
   ")",
   ">",
   "0",
   ")",
   "{",
   "uksort",
   "(",
   "$",
   "min",
   ",",
   "'version_compare'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "max",
   ")",
   ">",
   "0",
   ")",
   "{",
   "uksort",
   "(",
   "$",
   "max",
   ",",
   "'version_compare'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "min",
   ")",
   ")",
   "{",
   "// get the highest minimum",
   "$",
   "min",
   "=",
   "array_pop",
   "(",
   "$",
   "a",
   "=",
   "array_flip",
   "(",
   "$",
   "min",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "min",
   "=",
   "false",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "max",
   ")",
   ")",
   "{",
   "// get the lowest maximum",
   "$",
   "max",
   "=",
   "array_shift",
   "(",
   "$",
   "a",
   "=",
   "array_flip",
   "(",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "max",
   "=",
   "false",
   ";",
   "}",
   "if",
   "(",
   "$",
   "min",
   ")",
   "{",
   "$",
   "php",
   "[",
   "'min'",
   "]",
   "=",
   "$",
   "min",
   ";",
   "}",
   "if",
   "(",
   "$",
   "max",
   ")",
   "{",
   "$",
   "php",
   "[",
   "'max'",
   "]",
   "=",
   "$",
   "max",
   ";",
   "}",
   "$",
   "exclude",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "test",
   "as",
   "$",
   "dep",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "dep",
   "[",
   "'exclude'",
   "]",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "exclude",
   "[",
   "]",
   "=",
   "$",
   "dep",
   "[",
   "'exclude'",
   "]",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "exclude",
   ")",
   ")",
   "{",
   "$",
   "php",
   "[",
   "'exclude'",
   "]",
   "=",
   "$",
   "exclude",
   ";",
   "}",
   "$",
   "ret",
   "[",
   "]",
   "=",
   "$",
   "php",
   ";",
   "}",
   "return",
   "$",
   "ret",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-291",
  "nl_tokens": [
   "Calculates",
   "percentage",
   "difference",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "diff",
   "(",
   "float",
   "$",
   "from",
   ",",
   "float",
   "$",
   "to",
   ",",
   "int",
   "$",
   "precision",
   "=",
   "0",
   ",",
   "bool",
   "$",
   "format_string",
   "=",
   "false",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "from",
   ")",
   "{",
   "++",
   "$",
   "from",
   ";",
   "++",
   "$",
   "to",
   ";",
   "}",
   "// Stop division by `0`.",
   "$",
   "precision",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "precision",
   ")",
   ";",
   "$",
   "percent",
   "=",
   "(",
   "$",
   "to",
   "-",
   "$",
   "from",
   ")",
   "/",
   "$",
   "from",
   "*",
   "100",
   ";",
   "if",
   "(",
   "$",
   "precision",
   ")",
   "{",
   "$",
   "percent",
   "=",
   "(",
   "float",
   ")",
   "number_format",
   "(",
   "$",
   "percent",
   ",",
   "$",
   "precision",
   ",",
   "'.'",
   ",",
   "''",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "percent",
   "=",
   "(",
   "int",
   ")",
   "$",
   "percent",
   ";",
   "}",
   "if",
   "(",
   "$",
   "format_string",
   ")",
   "{",
   "// e.g., add a prefix/suffix?",
   "$",
   "percent",
   "=",
   "$",
   "percent",
   ">",
   "0",
   "?",
   "'+'",
   ".",
   "$",
   "percent",
   ".",
   "'%'",
   ":",
   "$",
   "percent",
   ".",
   "'%'",
   ";",
   "}",
   "return",
   "$",
   "percent",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-292",
  "nl_tokens": [
   "Parses",
   "the",
   "formatting",
   "modifiers",
   "and",
   "produces",
   "the",
   "corresponding",
   "LoggerFormattingInfo",
   "object",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "parseModifiers",
   "(",
   "$",
   "modifiers",
   ")",
   "{",
   "$",
   "info",
   "=",
   "new",
   "LoggerFormattingInfo",
   "(",
   ")",
   ";",
   "// If no modifiers are given, return default values\r",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "modifiers",
   ")",
   ")",
   "{",
   "return",
   "$",
   "info",
   ";",
   "}",
   "// Validate\r",
   "$",
   "pattern",
   "=",
   "'/^(-?[0-9]+)?\\.?-?[0-9]+$/'",
   ";",
   "if",
   "(",
   "!",
   "preg_match",
   "(",
   "$",
   "pattern",
   ",",
   "$",
   "modifiers",
   ")",
   ")",
   "{",
   "trigger_error",
   "(",
   "\"log4php: Invalid modifier in conversion pattern: [$modifiers]. Ignoring modifier.\"",
   ",",
   "E_USER_WARNING",
   ")",
   ";",
   "return",
   "$",
   "info",
   ";",
   "}",
   "$",
   "parts",
   "=",
   "explode",
   "(",
   "'.'",
   ",",
   "$",
   "modifiers",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "parts",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "minPart",
   "=",
   "(",
   "integer",
   ")",
   "$",
   "parts",
   "[",
   "0",
   "]",
   ";",
   "$",
   "info",
   "->",
   "<mask>",
   "=",
   "abs",
   "(",
   "$",
   "minPart",
   ")",
   ";",
   "$",
   "info",
   "->",
   "padLeft",
   "=",
   "(",
   "$",
   "minPart",
   ">",
   "0",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "parts",
   "[",
   "1",
   "]",
   ")",
   ")",
   "{",
   "$",
   "maxPart",
   "=",
   "(",
   "integer",
   ")",
   "$",
   "parts",
   "[",
   "1",
   "]",
   ";",
   "$",
   "info",
   "->",
   "max",
   "=",
   "abs",
   "(",
   "$",
   "maxPart",
   ")",
   ";",
   "$",
   "info",
   "->",
   "trimLeft",
   "=",
   "(",
   "$",
   "maxPart",
   "<",
   "0",
   ")",
   ";",
   "}",
   "return",
   "$",
   "info",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-293",
  "nl_tokens": [
   "Generate",
   "a",
   "password",
   "salt",
   "based",
   "on",
   "the",
   "given",
   "input",
   "string",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "gensaltPrivate",
   "(",
   "$",
   "input",
   ")",
   "{",
   "$",
   "output",
   "=",
   "'$P$'",
   ";",
   "$",
   "output",
   ".=",
   "$",
   "this",
   "->",
   "itoa64",
   "[",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "iteration_count_log2",
   "+",
   "(",
   "(",
   "PHP_VERSION",
   ">=",
   "'5'",
   ")",
   "?",
   "5",
   ":",
   "3",
   ")",
   ",",
   "30",
   ")",
   "]",
   ";",
   "$",
   "output",
   ".=",
   "$",
   "this",
   "->",
   "encode64",
   "(",
   "$",
   "input",
   ",",
   "6",
   ")",
   ";",
   "return",
   "$",
   "output",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-294",
  "nl_tokens": [
   "Determine",
   "if",
   "the",
   "suffix",
   "of",
   "one",
   "string",
   "is",
   "the",
   "prefix",
   "of",
   "another",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "commontOverlap",
   "(",
   "$",
   "text1",
   ",",
   "$",
   "text2",
   ")",
   "{",
   "// Cache the text lengths to prevent multiple calls.",
   "$",
   "text1_length",
   "=",
   "mb_strlen",
   "(",
   "$",
   "text1",
   ")",
   ";",
   "$",
   "text2_length",
   "=",
   "mb_strlen",
   "(",
   "$",
   "text2",
   ")",
   ";",
   "// Eliminate the null case.",
   "if",
   "(",
   "!",
   "$",
   "text1_length",
   "||",
   "!",
   "$",
   "text2_length",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "// Truncate the longer string.",
   "if",
   "(",
   "$",
   "text1_length",
   ">",
   "$",
   "text2_length",
   ")",
   "{",
   "$",
   "text1",
   "=",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "-",
   "$",
   "text2_length",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "text1_length",
   "<",
   "$",
   "text2_length",
   ")",
   "{",
   "$",
   "text2",
   "=",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "0",
   ",",
   "$",
   "text1_length",
   ")",
   ";",
   "}",
   "$",
   "text_length",
   "=",
   "<mask>",
   "(",
   "$",
   "text1_length",
   ",",
   "$",
   "text2_length",
   ")",
   ";",
   "// Quick check for the worst case.",
   "if",
   "(",
   "$",
   "text1",
   "==",
   "$",
   "text2",
   ")",
   "{",
   "return",
   "$",
   "text_length",
   ";",
   "}",
   "// Start by looking for a single character match",
   "// and increase length until no match is found.",
   "// Performance analysis: http://neil.fraser.name/news/2010/11/04/",
   "$",
   "best",
   "=",
   "0",
   ";",
   "$",
   "length",
   "=",
   "1",
   ";",
   "while",
   "(",
   "true",
   ")",
   "{",
   "$",
   "pattern",
   "=",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "-",
   "$",
   "length",
   ")",
   ";",
   "$",
   "found",
   "=",
   "mb_strpos",
   "(",
   "$",
   "text2",
   ",",
   "$",
   "pattern",
   ")",
   ";",
   "if",
   "(",
   "$",
   "found",
   "===",
   "false",
   ")",
   "{",
   "break",
   ";",
   "}",
   "$",
   "length",
   "+=",
   "$",
   "found",
   ";",
   "if",
   "(",
   "$",
   "found",
   "==",
   "0",
   "||",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "-",
   "$",
   "length",
   ")",
   "==",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "0",
   ",",
   "$",
   "length",
   ")",
   ")",
   "{",
   "$",
   "best",
   "=",
   "$",
   "length",
   ";",
   "$",
   "length",
   "+=",
   "1",
   ";",
   "}",
   "}",
   "return",
   "$",
   "best",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-295",
  "nl_tokens": [
   "Run",
   "the",
   "data",
   "through",
   "and",
   "make",
   "the",
   "width",
   "as",
   "wide",
   "as",
   "the",
   "widest",
   "text"
  ],
  "pl_tokens": [
   "public",
   "function",
   "calculateWidth",
   "(",
   "$",
   "data",
   ",",
   "$",
   "markupDefinition",
   "=",
   "null",
   ")",
   "{",
   "// if the width is not calculated, or the data is invalid",
   "if",
   "(",
   "(",
   "$",
   "this",
   "->",
   "calculateWidth",
   "===",
   "false",
   ")",
   "||",
   "!",
   "is_array",
   "(",
   "$",
   "data",
   ")",
   "||",
   "(",
   "count",
   "(",
   "$",
   "data",
   ")",
   "===",
   "0",
   ")",
   ")",
   "{",
   "// nothing to do, it is not a calculated width",
   "return",
   ";",
   "}",
   "// initialize the array of sizes of each string",
   "$",
   "sizes",
   "=",
   "[",
   "]",
   ";",
   "// reset the width",
   "$",
   "this",
   "->",
   "width",
   "=",
   "null",
   ";",
   "// if the header text was specified",
   "if",
   "(",
   "$",
   "this",
   "->",
   "headerText",
   ")",
   "{",
   "// add the length to the array of string lengths",
   "$",
   "sizes",
   "[",
   "]",
   "=",
   "strlen",
   "(",
   "$",
   "this",
   "->",
   "headerText",
   ")",
   ";",
   "}",
   "// go through and create an array sizes",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "count",
   "(",
   "$",
   "data",
   ")",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "// get the text (make it into a string)",
   "$",
   "text",
   "=",
   "strval",
   "(",
   "$",
   "data",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "// if the markup definition was sent in",
   "if",
   "(",
   "$",
   "markupDefinition",
   ")",
   "{",
   "// strip out any markup symbols",
   "$",
   "text",
   "=",
   "$",
   "markupDefinition",
   "->",
   "stripMarkupSymbols",
   "(",
   "$",
   "text",
   ")",
   ";",
   "}",
   "// add the size of this text to the array of sizes",
   "$",
   "sizes",
   "[",
   "]",
   "=",
   "strlen",
   "(",
   "$",
   "text",
   ")",
   ";",
   "}",
   "// now get the highest value in the array of sizes and add the padding",
   "$",
   "widestText",
   "=",
   "<mask>",
   "(",
   "$",
   "sizes",
   ")",
   "+",
   "$",
   "this",
   "->",
   "rightPadding",
   "+",
   "$",
   "this",
   "->",
   "leftPadding",
   ";",
   "// if the maximum width is defined and the width hasn't already maxed out",
   "if",
   "(",
   "$",
   "this",
   "->",
   "maximumWidth",
   ")",
   "{",
   "// check to ensure the text length is less than or equal to the maximum width",
   "if",
   "(",
   "$",
   "widestText",
   "<=",
   "$",
   "this",
   "->",
   "maximumWidth",
   ")",
   "{",
   "// the width is now the newest text length",
   "$",
   "this",
   "->",
   "width",
   "=",
   "$",
   "widestText",
   ";",
   "}",
   "else",
   "{",
   "// set the width to the maximum width (text will be truncated)",
   "$",
   "this",
   "->",
   "width",
   "=",
   "$",
   "this",
   "->",
   "maximumWidth",
   ";",
   "}",
   "// there is no maximum width",
   "}",
   "else",
   "{",
   "// just set the width to that widest text",
   "$",
   "this",
   "->",
   "width",
   "=",
   "$",
   "widestText",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-296",
  "nl_tokens": [
   "Prints",
   "analyzer",
   "report"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "printReport",
   "(",
   ")",
   "{",
   "// adjustable output width",
   "if",
   "(",
   "TerminalInfo",
   "::",
   "isInteractive",
   "(",
   ")",
   ")",
   "{",
   "$",
   "width",
   "=",
   "TerminalInfo",
   "::",
   "getWidth",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "width",
   "=",
   "80",
   ";",
   "}",
   "$",
   "current_php",
   "=",
   "substr",
   "(",
   "PHP_VERSION",
   ",",
   "0",
   ",",
   "3",
   ")",
   ";",
   "$",
   "variable_length",
   "=",
   "<mask>",
   "(",
   "30",
   ",",
   "floor",
   "(",
   "(",
   "$",
   "width",
   "-",
   "31",
   ")",
   "*",
   "0.4",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "hasIssue",
   "=",
   "false",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "reports",
   ")",
   ")",
   "{",
   "$",
   "total_issues",
   "=",
   "0",
   ";",
   "$",
   "replace_suggestions",
   "=",
   "$",
   "notes",
   "=",
   "[",
   "]",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "reports",
   "as",
   "$",
   "report",
   ")",
   "{",
   "echo",
   "PHP_EOL",
   ";",
   "TerminalInfo",
   "::",
   "echoWithColor",
   "(",
   "$",
   "report",
   "->",
   "getTitle",
   "(",
   ")",
   ".",
   "PHP_EOL",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ";",
   "$",
   "report",
   "=",
   "$",
   "report",
   "->",
   "getIssues",
   "(",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "report",
   ")",
   ")",
   "{",
   "echo",
   "sprintf",
   "(",
   "' %3s | %-'",
   ".",
   "$",
   "variable_length",
   ".",
   "'s | %16s | %s'",
   ",",
   "'PHP'",
   ",",
   "'File:Line'",
   ",",
   "'Type'",
   ",",
   "'Issue'",
   ")",
   ".",
   "PHP_EOL",
   ";",
   "$",
   "versions",
   "=",
   "array_keys",
   "(",
   "$",
   "report",
   ")",
   ";",
   "sort",
   "(",
   "$",
   "versions",
   ")",
   ";",
   "// print issues by version",
   "foreach",
   "(",
   "$",
   "versions",
   "as",
   "$",
   "version",
   ")",
   "{",
   "$",
   "issues",
   "=",
   "$",
   "report",
   "[",
   "$",
   "version",
   "]",
   ";",
   "// iterate issues",
   "foreach",
   "(",
   "$",
   "issues",
   "as",
   "$",
   "issue",
   ")",
   "{",
   "$",
   "this",
   "->",
   "hasIssue",
   "=",
   "true",
   ";",
   "$",
   "total_issues",
   "++",
   ";",
   "switch",
   "(",
   "$",
   "issue",
   "[",
   "0",
   "]",
   ")",
   "{",
   "case",
   "'function'",
   ":",
   "case",
   "'function_usage'",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "YELLOW_TEXT",
   ";",
   "break",
   ";",
   "case",
   "'variable'",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "RED_TEXT",
   ";",
   "break",
   ";",
   "case",
   "'ini'",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "GREEN_TEXT",
   ";",
   "break",
   ";",
   "case",
   "'identifier'",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "BLUE_TEXT",
   ";",
   "break",
   ";",
   "case",
   "'constant'",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "GRAY_TEXT",
   ";",
   "break",
   ";",
   "default",
   ":",
   "$",
   "color",
   "=",
   "TerminalInfo",
   "::",
   "YELLOW_TEXT",
   ";",
   "break",
   ";",
   "}",
   "$",
   "line_length",
   "=",
   "strlen",
   "(",
   "$",
   "issue",
   "[",
   "4",
   "]",
   ")",
   ";",
   "echo",
   "sprintf",
   "(",
   "' %3s | %-'",
   ".",
   "(",
   "$",
   "variable_length",
   "+",
   "(",
   "TerminalInfo",
   "::",
   "isColorsCapable",
   "(",
   ")",
   "?",
   "22",
   ":",
   "0",
   ")",
   ")",
   ".",
   "'s | %-16s | %s'",
   ",",
   "strcmp",
   "(",
   "$",
   "current_php",
   ",",
   "$",
   "version",
   ")",
   ">=",
   "0",
   "?",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "version",
   ",",
   "TerminalInfo",
   "::",
   "RED_BACKGROUND",
   ")",
   ":",
   "$",
   "version",
   ",",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "this",
   "->",
   "normalizeAndTruncatePath",
   "(",
   "$",
   "issue",
   "[",
   "3",
   "]",
   ",",
   "$",
   "variable_length",
   "-",
   "$",
   "line_length",
   "-",
   "1",
   ")",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ".",
   "':'",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "issue",
   "[",
   "4",
   "]",
   ",",
   "TerminalInfo",
   "::",
   "GRAY_TEXT",
   ")",
   ",",
   "$",
   "issue",
   "[",
   "0",
   "]",
   ",",
   "str_replace",
   "(",
   "'_'",
   ",",
   "' '",
   ",",
   "ucfirst",
   "(",
   "$",
   "issue",
   "[",
   "0",
   "]",
   ")",
   ")",
   ".",
   "' '",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "issue",
   "[",
   "1",
   "]",
   ".",
   "(",
   "$",
   "issue",
   "[",
   "0",
   "]",
   "==",
   "'function'",
   "?",
   "'()'",
   ":",
   "null",
   ")",
   ",",
   "$",
   "color",
   ")",
   ".",
   "' is '",
   ".",
   "(",
   "$",
   "issue",
   "[",
   "0",
   "]",
   "==",
   "'identifier'",
   "?",
   "'reserved by PHP core'",
   ":",
   "'deprecated'",
   ")",
   ".",
   "'. '",
   ")",
   ".",
   "PHP_EOL",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "issue",
   "[",
   "2",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "issue",
   "[",
   "0",
   "]",
   "===",
   "'function_usage'",
   ")",
   "{",
   "$",
   "notes",
   "[",
   "$",
   "issue",
   "[",
   "0",
   "]",
   "]",
   "[",
   "$",
   "issue",
   "[",
   "1",
   "]",
   "]",
   "=",
   "$",
   "issue",
   "[",
   "2",
   "]",
   ";",
   "}",
   "else",
   "$",
   "replace_suggestions",
   "[",
   "$",
   "issue",
   "[",
   "0",
   "]",
   "]",
   "[",
   "$",
   "issue",
   "[",
   "1",
   "]",
   "]",
   "=",
   "$",
   "issue",
   "[",
   "2",
   "]",
   ";",
   "}",
   "}",
   "}",
   "}",
   "}",
   "echo",
   "PHP_EOL",
   ";",
   "if",
   "(",
   "$",
   "total_issues",
   ">",
   "0",
   ")",
   "TerminalInfo",
   "::",
   "echoWithColor",
   "(",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "'Total problems: '",
   ".",
   "$",
   "total_issues",
   ",",
   "TerminalInfo",
   "::",
   "RED_BACKGROUND",
   ")",
   ".",
   "PHP_EOL",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ";",
   "else",
   "TerminalInfo",
   "::",
   "echoWithColor",
   "(",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "'Analyzer has not detected any problems in your code.'",
   ",",
   "TerminalInfo",
   "::",
   "GREEN_BACKGROUND",
   ")",
   ".",
   "PHP_EOL",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "replace_suggestions",
   ")",
   ")",
   "{",
   "echo",
   "PHP_EOL",
   ";",
   "TerminalInfo",
   "::",
   "echoWithColor",
   "(",
   "'Replace Suggestions:'",
   ".",
   "PHP_EOL",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ";",
   "$",
   "i",
   "=",
   "1",
   ";",
   "foreach",
   "(",
   "$",
   "replace_suggestions",
   "as",
   "$",
   "type",
   "=>",
   "$",
   "suggestion",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "suggestion",
   "as",
   "$",
   "issue",
   "=>",
   "$",
   "replacement",
   ")",
   "{",
   "echo",
   "(",
   "$",
   "i",
   "++",
   ")",
   ".",
   "'. Don\\'t use '",
   ".",
   "$",
   "type",
   ".",
   "' '",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "issue",
   ".",
   "(",
   "$",
   "type",
   "===",
   "'function'",
   "?",
   "'()'",
   ":",
   "null",
   ")",
   ",",
   "TerminalInfo",
   "::",
   "RED_UNDERLINED_TEXT",
   ")",
   ".",
   "' => Consider replace to '",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "replacement",
   ".",
   "(",
   "$",
   "type",
   "===",
   "'function'",
   "?",
   "'()'",
   ":",
   "null",
   ")",
   ",",
   "TerminalInfo",
   "::",
   "GREEN_TEXT",
   ")",
   ".",
   "'.'",
   ".",
   "PHP_EOL",
   ";",
   "}",
   "}",
   "}",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "notes",
   ")",
   ")",
   "{",
   "echo",
   "PHP_EOL",
   ";",
   "TerminalInfo",
   "::",
   "echoWithColor",
   "(",
   "'Notes:'",
   ".",
   "PHP_EOL",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ";",
   "$",
   "i",
   "=",
   "1",
   ";",
   "foreach",
   "(",
   "$",
   "notes",
   "as",
   "$",
   "type",
   "=>",
   "$",
   "note",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "note",
   "as",
   "$",
   "issue",
   "=>",
   "$",
   "issue_note",
   ")",
   "{",
   "echo",
   "(",
   "$",
   "i",
   "++",
   ")",
   ".",
   "'. Usage '",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "issue",
   ",",
   "TerminalInfo",
   "::",
   "RED_UNDERLINED_TEXT",
   ")",
   ".",
   "': '",
   ".",
   "TerminalInfo",
   "::",
   "colorize",
   "(",
   "$",
   "issue_note",
   ",",
   "TerminalInfo",
   "::",
   "WHITE_TEXT",
   ")",
   ".",
   "PHP_EOL",
   ";",
   "}",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-297",
  "nl_tokens": [
   "Create",
   "the",
   "column",
   "type",
   "definition",
   "for",
   "a",
   "enum",
   "type",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "typeEnum",
   "(",
   "Fluent",
   "$",
   "column",
   ")",
   "{",
   "$",
   "values",
   "=",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "a",
   ")",
   "{",
   "return",
   "\"'{$a}'\"",
   ";",
   "}",
   ",",
   "$",
   "column",
   "->",
   "get",
   "(",
   "'values'",
   ")",
   ")",
   ";",
   "$",
   "maxlen",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "values",
   "as",
   "$",
   "value",
   ")",
   "{",
   "$",
   "maxlen",
   "=",
   "<mask>",
   "(",
   "$",
   "maxlen",
   ",",
   "strlen",
   "(",
   "$",
   "value",
   ")",
   ")",
   ";",
   "}",
   "return",
   "[",
   "'type'",
   "=>",
   "\"varchar($maxlen) check (\\\"{$column->get('name')}\\\" in (\"",
   ".",
   "implode",
   "(",
   "', '",
   ",",
   "$",
   "values",
   ")",
   ".",
   "'))'",
   ",",
   "'typeReference'",
   "=>",
   "-",
   "1",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-298",
  "nl_tokens": [
   "Process",
   "tri",
   "-",
   "state",
   "responses",
   "from",
   "permission",
   "-",
   "alterting",
   "extensions",
   ".",
   "The",
   "extensions",
   "are",
   "expected",
   "to",
   "return",
   "one",
   "of",
   "three",
   "values",
   ":",
   "-",
   "false",
   ":",
   "Disallow",
   "this",
   "permission",
   "regardless",
   "of",
   "what",
   "other",
   "extensions",
   "say",
   "-",
   "true",
   ":",
   "Allow",
   "this",
   "permission",
   "as",
   "long",
   "as",
   "no",
   "other",
   "extensions",
   "return",
   "false",
   "-",
   "NULL",
   ":",
   "Don",
   "t",
   "affect",
   "the",
   "outcome",
   "This",
   "method",
   "itself",
   "returns",
   "a",
   "tri",
   "-",
   "state",
   "value",
   "and",
   "is",
   "designed",
   "to",
   "be",
   "used",
   "like",
   "this",
   ":",
   "<code",
   ">",
   "$extended",
   "=",
   "$this",
   "-",
   ">",
   "extendedCan",
   "(",
   "canDoSomething",
   "$member",
   ")",
   ";",
   "if",
   "(",
   "$extended",
   "!",
   "==",
   "null",
   ")",
   "return",
   "$extended",
   ";",
   "else",
   "return",
   "$normalValue",
   ";",
   "<",
   "/",
   "code",
   ">"
  ],
  "pl_tokens": [
   "public",
   "function",
   "extendedCan",
   "(",
   "$",
   "methodName",
   ",",
   "$",
   "member",
   ")",
   "{",
   "$",
   "results",
   "=",
   "$",
   "this",
   "->",
   "extend",
   "(",
   "$",
   "methodName",
   ",",
   "$",
   "member",
   ")",
   ";",
   "if",
   "(",
   "$",
   "results",
   "&&",
   "is_array",
   "(",
   "$",
   "results",
   ")",
   ")",
   "{",
   "// Remove NULLs",
   "$",
   "results",
   "=",
   "array_filter",
   "(",
   "$",
   "results",
   ",",
   "function",
   "(",
   "$",
   "v",
   ")",
   "{",
   "return",
   "!",
   "is_null",
   "(",
   "$",
   "v",
   ")",
   ";",
   "}",
   ")",
   ";",
   "// If there are any non-NULL responses, then return the lowest one of them.",
   "// If any explicitly deny the permission, then we don't get access",
   "if",
   "(",
   "$",
   "results",
   ")",
   "return",
   "<mask>",
   "(",
   "$",
   "results",
   ")",
   ";",
   "}",
   "return",
   "null",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-299",
  "nl_tokens": [
   "Gets",
   "a",
   "line"
  ],
  "pl_tokens": [
   "public",
   "function",
   "row",
   "(",
   "$",
   "y",
   ",",
   "array",
   "$",
   "options",
   "=",
   "[",
   "]",
   ")",
   "{",
   "$",
   "row",
   "=",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "chars",
   "[",
   "$",
   "y",
   "]",
   ")",
   "?",
   "$",
   "this",
   "->",
   "chars",
   "[",
   "$",
   "y",
   "]",
   ":",
   "[",
   "]",
   ";",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "(",
   "$",
   "keys",
   "=",
   "array_keys",
   "(",
   "$",
   "row",
   ")",
   ")",
   ")",
   "{",
   "return",
   "''",
   ";",
   "}",
   "}",
   "$",
   "<mask>",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ":",
   "min",
   "(",
   "$",
   "keys",
   ")",
   ";",
   "$",
   "max",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ":",
   "max",
   "(",
   "$",
   "keys",
   ")",
   ";",
   "return",
   "array_reduce",
   "(",
   "range",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ",",
   "function",
   "(",
   "$",
   "carry",
   ",",
   "$",
   "item",
   ")",
   "use",
   "(",
   "$",
   "row",
   ")",
   "{",
   "return",
   "$",
   "carry",
   ".=",
   "$",
   "this",
   "->",
   "toBraille",
   "(",
   "isset",
   "(",
   "$",
   "row",
   "[",
   "$",
   "item",
   "]",
   ")",
   "?",
   "$",
   "row",
   "[",
   "$",
   "item",
   "]",
   ":",
   "0",
   ")",
   ";",
   "}",
   ",",
   "''",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-300",
  "nl_tokens": [
   "\u8fd4\u56de\u5b57\u4f53\u53c2\u6570",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getFontOption",
   "(",
   ")",
   ":",
   "array",
   "{",
   "$",
   "code",
   "=",
   "$",
   "this",
   "->",
   "getCode",
   "(",
   ")",
   ";",
   "$",
   "ttf",
   "=",
   "$",
   "this",
   "->",
   "getTtf",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isChinese",
   "(",
   "$",
   "code",
   ")",
   ")",
   "{",
   "$",
   "code",
   "=",
   "str_split",
   "(",
   "$",
   "code",
   ",",
   "3",
   ")",
   ";",
   "$",
   "codeLength",
   "=",
   "count",
   "(",
   "$",
   "code",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "codeLength",
   "=",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ";",
   "}",
   "$",
   "font",
   "=",
   "[",
   "]",
   ";",
   "$",
   "widthTotal",
   "=",
   "0",
   ";",
   "$",
   "width",
   "=",
   "$",
   "this",
   "->",
   "normalizeWidth",
   "(",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "codeLength",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   ")",
   ")",
   "{",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "=",
   "[",
   "]",
   ";",
   "}",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'font'",
   "]",
   "=",
   "$",
   "ttf",
   "[",
   "array_rand",
   "(",
   "$",
   "ttf",
   ")",
   "]",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'tilt'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "option",
   "[",
   "'tilt'",
   "]",
   "?",
   "$",
   "this",
   "->",
   "mtRand",
   "(",
   "-",
   "30",
   ",",
   "30",
   ")",
   ":",
   "0",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   "=",
   "$",
   "width",
   "/",
   "6",
   ";",
   "$",
   "this",
   "->",
   "option",
   "[",
   "'size'",
   "]",
   "&&",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "mtRand",
   "(",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   "-",
   "$",
   "width",
   "/",
   "40",
   ",",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   "+",
   "$",
   "width",
   "/",
   "20",
   ")",
   ";",
   "$",
   "resBox",
   "=",
   "imagettfbbox",
   "(",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   ",",
   "0",
   ",",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'font'",
   "]",
   ",",
   "$",
   "code",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'zheight'",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "resBox",
   "[",
   "1",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "3",
   "]",
   ")",
   "-",
   "min",
   "(",
   "$",
   "resBox",
   "[",
   "5",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "7",
   "]",
   ")",
   ";",
   "$",
   "resBox",
   "=",
   "imagettfbbox",
   "(",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'size'",
   "]",
   ",",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'tilt'",
   "]",
   ",",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'font'",
   "]",
   ",",
   "$",
   "code",
   "[",
   "$",
   "i",
   "]",
   ")",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'height'",
   "]",
   "=",
   "max",
   "(",
   "$",
   "resBox",
   "[",
   "1",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "3",
   "]",
   ")",
   "-",
   "min",
   "(",
   "$",
   "resBox",
   "[",
   "5",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "7",
   "]",
   ")",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'hd'",
   "]",
   "=",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'height'",
   "]",
   "-",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'zheight'",
   "]",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'width'",
   "]",
   "=",
   "(",
   "max",
   "(",
   "$",
   "resBox",
   "[",
   "2",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "4",
   "]",
   ")",
   "-",
   "min",
   "(",
   "$",
   "resBox",
   "[",
   "0",
   "]",
   ",",
   "$",
   "resBox",
   "[",
   "6",
   "]",
   ")",
   ")",
   "+",
   "$",
   "this",
   "->",
   "mtRand",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "width",
   "/",
   "8",
   ")",
   ")",
   ";",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'width'",
   "]",
   "=",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'width'",
   "]",
   ">",
   "$",
   "width",
   "/",
   "$",
   "codeLength",
   "?",
   "$",
   "width",
   "/",
   "$",
   "codeLength",
   ":",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'width'",
   "]",
   ";",
   "$",
   "widthTotal",
   "+=",
   "$",
   "font",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'width'",
   "]",
   ";",
   "}",
   "return",
   "[",
   "$",
   "font",
   ",",
   "$",
   "code",
   ",",
   "$",
   "widthTotal",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-301",
  "nl_tokens": [
   "Get",
   "pad",
   "for",
   "$key",
   "=",
   ">",
   "$value",
   "array",
   "output"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getPad",
   "(",
   "array",
   "$",
   "array",
   ",",
   "int",
   "$",
   "pad",
   ")",
   ":",
   "int",
   "{",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "array",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "$",
   "max",
   "=",
   "max",
   "(",
   "$",
   "max",
   ",",
   "strlen",
   "(",
   "$",
   "key",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "max",
   "+",
   "$",
   "pad",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-302",
  "nl_tokens": [
   "Normalize",
   "precision",
   "value"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "normalizePrecision",
   "(",
   "$",
   "precision",
   ")",
   "{",
   "$",
   "precisionFiltered",
   "=",
   "filter_var",
   "(",
   "$",
   "precision",
   ",",
   "FILTER_SANITIZE_NUMBER_INT",
   ")",
   ";",
   "return",
   "(",
   "int",
   ")",
   "<mask>",
   "(",
   "10",
   ",",
   "max",
   "(",
   "0",
   ",",
   "$",
   "precisionFiltered",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-303",
  "nl_tokens": [
   "\u8bbe\u7f6e\u914d\u7f6e",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "set",
   "(",
   "$",
   "name",
   ",",
   "$",
   "value",
   "=",
   "null",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "name",
   ")",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "name",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "value",
   ")",
   "{",
   "$",
   "this",
   "->",
   "set",
   "(",
   "$",
   "key",
   ",",
   "$",
   "value",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "name",
   "=",
   "$",
   "this",
   "->",
   "parseNamespace",
   "(",
   "$",
   "name",
   ")",
   ";",
   "$",
   "namespaces",
   "=",
   "$",
   "name",
   "[",
   "0",
   "]",
   ";",
   "$",
   "name",
   "=",
   "$",
   "name",
   "[",
   "1",
   "]",
   ";",
   "if",
   "(",
   "'*'",
   "===",
   "$",
   "name",
   ")",
   "{",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   "=",
   "$",
   "value",
   ";",
   "return",
   ";",
   "}",
   "if",
   "(",
   "!",
   "strpos",
   "(",
   "$",
   "name",
   ",",
   "'.'",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   "[",
   "$",
   "name",
   "]",
   "=",
   "$",
   "value",
   ";",
   "}",
   "else",
   "{",
   "$",
   "parts",
   "=",
   "explode",
   "(",
   "'.'",
   ",",
   "$",
   "name",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "parts",
   ")",
   "-",
   "1",
   ";",
   "$",
   "option",
   "=",
   "&",
   "$",
   "this",
   "->",
   "option",
   "[",
   "$",
   "namespaces",
   "]",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "part",
   "=",
   "$",
   "parts",
   "[",
   "$",
   "i",
   "]",
   ";",
   "if",
   "(",
   "$",
   "i",
   "<",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ")",
   ")",
   "{",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   "=",
   "[",
   "]",
   ";",
   "}",
   "$",
   "option",
   "=",
   "&",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "option",
   "[",
   "$",
   "part",
   "]",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-304",
  "nl_tokens": [
   "Get",
   "the",
   "max",
   "value",
   "of",
   "a",
   "given",
   "key",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "$",
   "key",
   "=",
   "null",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "reduce",
   "(",
   "function",
   "(",
   "$",
   "result",
   ",",
   "$",
   "item",
   ")",
   "use",
   "(",
   "$",
   "key",
   ")",
   "{",
   "$",
   "value",
   "=",
   "data_get",
   "(",
   "$",
   "item",
   ",",
   "$",
   "key",
   ")",
   ";",
   "return",
   "is_null",
   "(",
   "$",
   "result",
   ")",
   "||",
   "$",
   "value",
   ">",
   "$",
   "result",
   "?",
   "$",
   "value",
   ":",
   "$",
   "result",
   ";",
   "}",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-305",
  "nl_tokens": [
   "Converts",
   "the",
   "event",
   "and",
   "formats",
   "it",
   "according",
   "to",
   "setting",
   "in",
   "the",
   "Formatting",
   "information",
   "object",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "format",
   "(",
   "&",
   "$",
   "sbuf",
   ",",
   "$",
   "event",
   ")",
   "{",
   "$",
   "string",
   "=",
   "$",
   "this",
   "->",
   "convert",
   "(",
   "$",
   "event",
   ")",
   ";",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "formattingInfo",
   ")",
   ")",
   "{",
   "$",
   "sbuf",
   ".=",
   "$",
   "string",
   ";",
   "return",
   ";",
   "}",
   "$",
   "fi",
   "=",
   "$",
   "this",
   "->",
   "formattingInfo",
   ";",
   "// Empty string\r",
   "if",
   "(",
   "$",
   "string",
   "===",
   "''",
   "||",
   "is_null",
   "(",
   "$",
   "string",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "fi",
   "->",
   "<mask>",
   ">",
   "0",
   ")",
   "{",
   "$",
   "sbuf",
   ".=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "fi",
   "->",
   "min",
   ")",
   ";",
   "}",
   "return",
   ";",
   "}",
   "$",
   "len",
   "=",
   "strlen",
   "(",
   "$",
   "string",
   ")",
   ";",
   "// Trim the string if needed\r",
   "if",
   "(",
   "$",
   "len",
   ">",
   "$",
   "fi",
   "->",
   "max",
   ")",
   "{",
   "if",
   "(",
   "$",
   "fi",
   "->",
   "trimLeft",
   ")",
   "{",
   "$",
   "sbuf",
   ".=",
   "substr",
   "(",
   "$",
   "string",
   ",",
   "$",
   "len",
   "-",
   "$",
   "fi",
   "->",
   "max",
   ",",
   "$",
   "fi",
   "->",
   "max",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "sbuf",
   ".=",
   "substr",
   "(",
   "$",
   "string",
   ",",
   "0",
   ",",
   "$",
   "fi",
   "->",
   "max",
   ")",
   ";",
   "}",
   "}",
   "// Add padding if needed\r",
   "else",
   "if",
   "(",
   "$",
   "len",
   "<",
   "$",
   "fi",
   "->",
   "min",
   ")",
   "{",
   "if",
   "(",
   "$",
   "fi",
   "->",
   "padLeft",
   ")",
   "{",
   "$",
   "sbuf",
   ".=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "fi",
   "->",
   "min",
   "-",
   "$",
   "len",
   ")",
   ";",
   "$",
   "sbuf",
   ".=",
   "$",
   "string",
   ";",
   "}",
   "else",
   "{",
   "$",
   "sbuf",
   ".=",
   "$",
   "string",
   ";",
   "$",
   "sbuf",
   ".=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "fi",
   "->",
   "min",
   "-",
   "$",
   "len",
   ")",
   ";",
   "}",
   "}",
   "// No action needed\r",
   "else",
   "{",
   "$",
   "sbuf",
   ".=",
   "$",
   "string",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-306",
  "nl_tokens": [
   "Gets",
   "a",
   "usage",
   "message",
   "for",
   "this",
   "parser",
   ".",
   "The",
   "optional",
   "$maxWidth",
   "parameter",
   "can",
   "be",
   "used",
   "to",
   "specify",
   "with",
   "width",
   "at",
   "which",
   "the",
   "message",
   "should",
   "wrap",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getUsage",
   "(",
   "$",
   "maxWidth",
   "=",
   "80",
   ")",
   "{",
   "$",
   "head",
   "=",
   "wordwrap",
   "(",
   "implode",
   "(",
   "''",
   ",",
   "$",
   "this",
   "->",
   "_head",
   ")",
   ",",
   "$",
   "maxWidth",
   ")",
   ";",
   "$",
   "tail",
   "=",
   "wordwrap",
   "(",
   "implode",
   "(",
   "''",
   ",",
   "$",
   "this",
   "->",
   "_tail",
   ")",
   ",",
   "$",
   "maxWidth",
   ")",
   ";",
   "# determine if there are any short flags",
   "$",
   "hasShortFlag",
   "=",
   "false",
   ";",
   "$",
   "allFlags",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "_flags",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "allFlags",
   "as",
   "$",
   "flag",
   ")",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "flag",
   ")",
   "==",
   "1",
   ")",
   "{",
   "$",
   "hasShortFlag",
   "=",
   "true",
   ";",
   "break",
   ";",
   "}",
   "}",
   "$",
   "maxFlagsWidth",
   "=",
   "0",
   ";",
   "$",
   "flagDescriptions",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "_rules",
   "as",
   "$",
   "ruleIndex",
   "=>",
   "$",
   "rule",
   ")",
   "{",
   "$",
   "flagList",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "_flags",
   ",",
   "$",
   "ruleIndex",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "flagList",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "usort",
   "(",
   "$",
   "flagList",
   ",",
   "array",
   "(",
   "$",
   "this",
   ",",
   "'compareFlags'",
   ")",
   ")",
   ";",
   "$",
   "flags",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "short",
   "=",
   "false",
   ";",
   "foreach",
   "(",
   "$",
   "flagList",
   "as",
   "$",
   "flag",
   ")",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "flag",
   ")",
   "==",
   "1",
   ")",
   "{",
   "$",
   "flags",
   "[",
   "]",
   "=",
   "\"-$flag\"",
   ";",
   "$",
   "short",
   "=",
   "true",
   ";",
   "}",
   "else",
   "{",
   "$",
   "flags",
   "[",
   "]",
   "=",
   "\"--$flag\"",
   ";",
   "}",
   "}",
   "$",
   "flags",
   "=",
   "implode",
   "(",
   "', '",
   ",",
   "$",
   "flags",
   ")",
   ";",
   "if",
   "(",
   "$",
   "hasShortFlag",
   "&&",
   "!",
   "$",
   "short",
   ")",
   "{",
   "$",
   "flags",
   "=",
   "\"    $flags\"",
   ";",
   "}",
   "$",
   "maxFlagsWidth",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "flags",
   ")",
   ",",
   "$",
   "maxFlagsWidth",
   ")",
   ";",
   "$",
   "flagDescriptions",
   "[",
   "$",
   "flags",
   "]",
   "=",
   "$",
   "rule",
   "[",
   "'description'",
   "]",
   ";",
   "}",
   "$",
   "options",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "format",
   "=",
   "\" %-{$maxFlagsWidth}s  \"",
   ";",
   "foreach",
   "(",
   "$",
   "flagDescriptions",
   "as",
   "$",
   "flags",
   "=>",
   "$",
   "description",
   ")",
   "{",
   "$",
   "wrap",
   "=",
   "wordwrap",
   "(",
   "$",
   "description",
   ",",
   "$",
   "maxWidth",
   "-",
   "(",
   "$",
   "maxFlagsWidth",
   "+",
   "3",
   ")",
   ")",
   ";",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "wrap",
   ")",
   ";",
   "$",
   "option",
   "=",
   "array",
   "(",
   "sprintf",
   "(",
   "$",
   "format",
   ",",
   "$",
   "flags",
   ")",
   ".",
   "array_shift",
   "(",
   "$",
   "lines",
   ")",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "lines",
   "as",
   "$",
   "line",
   ")",
   "{",
   "$",
   "option",
   "[",
   "]",
   "=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "maxFlagsWidth",
   "+",
   "3",
   ")",
   ".",
   "$",
   "line",
   ";",
   "}",
   "$",
   "options",
   "[",
   "]",
   "=",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "option",
   ")",
   ";",
   "}",
   "$",
   "usage",
   "=",
   "$",
   "head",
   ".",
   "\"\\n\"",
   ".",
   "implode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "options",
   ")",
   ".",
   "\"\\n\"",
   ".",
   "$",
   "tail",
   ";",
   "return",
   "$",
   "usage",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-307",
  "nl_tokens": [
   "A",
   "better",
   "var_dump",
   "()",
   "(",
   "helper",
   "routine",
   "by",
   "reference",
   ")",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "dump",
   "(",
   "&",
   "$",
   "var",
   ",",
   "bool",
   "$",
   "return_only",
   ",",
   "int",
   "$",
   "indent_size",
   ",",
   "string",
   "$",
   "indent_char",
   ",",
   "bool",
   "$",
   "dump_circular_ids",
   ",",
   "int",
   "$",
   "___current_indent_size",
   "=",
   "0",
   ",",
   "array",
   "$",
   "___nested_circular_ids",
   "=",
   "[",
   "]",
   ",",
   "bool",
   "$",
   "___recursion",
   "=",
   "false",
   ")",
   ":",
   "string",
   "{",
   "if",
   "(",
   "!",
   "$",
   "___recursion",
   ")",
   "{",
   "$",
   "indent_size",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "indent_size",
   ")",
   ";",
   "}",
   "switch",
   "(",
   "(",
   "$",
   "type",
   "=",
   "$",
   "display_type",
   "=",
   "gettype",
   "(",
   "$",
   "var",
   ")",
   ")",
   ")",
   "{",
   "case",
   "'object'",
   ":",
   "// Iterates each object property.",
   "case",
   "'array'",
   ":",
   "// Or, each array key (if this is an array).",
   "$",
   "longest_nested_key_prop_length",
   "=",
   "0",
   ";",
   "$",
   "nested_dumps",
   "=",
   "[",
   "]",
   ";",
   "$",
   "dump_indent_size",
   "=",
   "$",
   "___current_indent_size",
   "+",
   "(",
   "$",
   "indent_size",
   "*",
   "1",
   ")",
   ";",
   "$",
   "nested_dump_indent_size",
   "=",
   "$",
   "___current_indent_size",
   "+",
   "(",
   "$",
   "indent_size",
   "*",
   "2",
   ")",
   ";",
   "$",
   "current_indents",
   "=",
   "str_repeat",
   "(",
   "$",
   "indent_char",
   ",",
   "$",
   "___current_indent_size",
   ")",
   ";",
   "$",
   "dump_indents",
   "=",
   "$",
   "current_indents",
   ".",
   "str_repeat",
   "(",
   "$",
   "indent_char",
   ",",
   "$",
   "dump_indent_size",
   ")",
   ";",
   "$",
   "nested_dump_indents",
   "=",
   "$",
   "current_indents",
   ".",
   "str_repeat",
   "(",
   "$",
   "indent_char",
   ",",
   "$",
   "nested_dump_indent_size",
   ")",
   ";",
   "$",
   "opening_encap",
   "=",
   "$",
   "type",
   "===",
   "'object'",
   "?",
   "'{'",
   ":",
   "'['",
   ";",
   "$",
   "closing_encap",
   "=",
   "$",
   "type",
   "===",
   "'object'",
   "?",
   "'}'",
   ":",
   "']'",
   ";",
   "$",
   "key_prop_value_sep",
   "=",
   "$",
   "type",
   "===",
   "'object'",
   "?",
   "': '",
   ":",
   "' => '",
   ";",
   "if",
   "(",
   "$",
   "type",
   "===",
   "'object'",
   ")",
   "{",
   "$",
   "display_type",
   "=",
   "(",
   "$",
   "dump_circular_ids",
   "?",
   "spl_object_hash",
   "(",
   "$",
   "var",
   ")",
   ".",
   "' '",
   ":",
   "''",
   ")",
   ".",
   "get_class",
   "(",
   "$",
   "var",
   ")",
   ".",
   "' object'",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "type",
   "===",
   "'array'",
   ")",
   "{",
   "$",
   "display_type",
   "=",
   "$",
   "dump_circular_ids",
   "?",
   "sha1",
   "(",
   "serialize",
   "(",
   "$",
   "var",
   ")",
   ")",
   ":",
   "''",
   ";",
   "}",
   "$",
   "var_dump",
   "=",
   "$",
   "display_type",
   ".",
   "\"\\n\"",
   ".",
   "$",
   "dump_indents",
   ".",
   "$",
   "opening_encap",
   ".",
   "\"\\n\"",
   ";",
   "foreach",
   "(",
   "$",
   "type",
   "===",
   "'object'",
   "&&",
   "method_exists",
   "(",
   "$",
   "var",
   ",",
   "'__debugInfo'",
   ")",
   "?",
   "$",
   "var",
   "->",
   "__debugInfo",
   "(",
   ")",
   "// Use magic properties.",
   ":",
   "$",
   "var",
   "as",
   "$",
   "_nested_key_prop",
   "=>",
   "$",
   "_nested_value",
   ")",
   "{",
   "// See: <http://php.net/manual/en/language.oop5.magic.php#object.debuginfo>",
   "// Do NOT use `&`. Some iterators CANNOT be iterated by reference.",
   "if",
   "(",
   "is_string",
   "(",
   "$",
   "_nested_key_prop",
   ")",
   ")",
   "{",
   "$",
   "_nested_key_prop",
   "=",
   "\"'\"",
   ".",
   "$",
   "_nested_key_prop",
   ".",
   "\"'\"",
   ";",
   "}",
   "$",
   "_nested_key_prop_length",
   "=",
   "mb_strlen",
   "(",
   "(",
   "string",
   ")",
   "$",
   "_nested_key_prop",
   ")",
   ";",
   "if",
   "(",
   "$",
   "_nested_key_prop_length",
   ">",
   "$",
   "longest_nested_key_prop_length",
   ")",
   "{",
   "$",
   "longest_nested_key_prop_length",
   "=",
   "$",
   "_nested_key_prop_length",
   ";",
   "}",
   "switch",
   "(",
   "(",
   "$",
   "_nested_type",
   "=",
   "$",
   "_nested_display_type",
   "=",
   "gettype",
   "(",
   "$",
   "_nested_value",
   ")",
   ")",
   ")",
   "{",
   "case",
   "'int'",
   ":",
   "case",
   "'integer'",
   ":",
   "$",
   "_nested_display_type",
   "=",
   "'int'",
   ";",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "_nested_value",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'real'",
   ":",
   "case",
   "'double'",
   ":",
   "case",
   "'float'",
   ":",
   "$",
   "_nested_display_type",
   "=",
   "'float'",
   ";",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "_nested_value",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'bool'",
   ":",
   "case",
   "'boolean'",
   ":",
   "$",
   "_nested_display_type",
   "=",
   "'bool'",
   ";",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "(",
   "$",
   "_nested_value",
   ")",
   "?",
   "'true'",
   ":",
   "'false'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'string'",
   ":",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "\"'\"",
   ".",
   "$",
   "_nested_value",
   ".",
   "\"'\"",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'object'",
   ":",
   "// Recurses into object values.",
   "$",
   "_nested_circular_id_key",
   "=",
   "spl_object_hash",
   "(",
   "$",
   "_nested_value",
   ")",
   ";",
   "$",
   "_nested_display_type",
   "=",
   "(",
   "$",
   "dump_circular_ids",
   "?",
   "$",
   "_nested_circular_id_key",
   ".",
   "' '",
   ":",
   "''",
   ")",
   ".",
   "get_class",
   "(",
   "$",
   "_nested_value",
   ")",
   ".",
   "' object'",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "___nested_circular_ids",
   "[",
   "$",
   "_nested_circular_id_key",
   "]",
   ")",
   ")",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_display_type",
   ".",
   "'{} *circular*'",
   ";",
   "}",
   "elseif",
   "(",
   "(",
   "$",
   "___nested_circular_ids",
   "[",
   "$",
   "_nested_circular_id_key",
   "]",
   "=",
   "-",
   "1",
   ")",
   "&&",
   "(",
   "$",
   "_nested_dump",
   "=",
   "$",
   "this",
   "->",
   "dump",
   "(",
   "$",
   "_nested_value",
   ",",
   "true",
   ",",
   "$",
   "indent_size",
   ",",
   "$",
   "indent_char",
   ",",
   "$",
   "dump_circular_ids",
   ",",
   "$",
   "dump_indent_size",
   ",",
   "$",
   "___nested_circular_ids",
   ",",
   "true",
   ")",
   ")",
   ")",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_dump",
   ";",
   "}",
   "else",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_display_type",
   ".",
   "'{}'",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "_nested_display_type",
   ",",
   "$",
   "_nested_circular_id_key",
   ",",
   "$",
   "_nested_dump",
   ")",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'array'",
   ":",
   "// Recurses into array values.",
   "$",
   "_nested_circular_id_key",
   "=",
   "sha1",
   "(",
   "serialize",
   "(",
   "$",
   "_nested_value",
   ")",
   ")",
   ";",
   "$",
   "_nested_display_type",
   ".=",
   "$",
   "dump_circular_ids",
   "?",
   "$",
   "_nested_circular_id_key",
   ":",
   "''",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "___nested_circular_ids",
   "[",
   "$",
   "_nested_circular_id_key",
   "]",
   ")",
   ")",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_display_type",
   ".",
   "'[] *circular*'",
   ";",
   "}",
   "elseif",
   "(",
   "(",
   "$",
   "___nested_circular_ids",
   "[",
   "$",
   "_nested_circular_id_key",
   "]",
   "=",
   "-",
   "1",
   ")",
   "&&",
   "(",
   "$",
   "_nested_dump",
   "=",
   "$",
   "this",
   "->",
   "dump",
   "(",
   "$",
   "_nested_value",
   ",",
   "true",
   ",",
   "$",
   "indent_size",
   ",",
   "$",
   "indent_char",
   ",",
   "$",
   "dump_circular_ids",
   ",",
   "$",
   "dump_indent_size",
   ",",
   "$",
   "___nested_circular_ids",
   ",",
   "true",
   ")",
   ")",
   ")",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_dump",
   ";",
   "}",
   "else",
   "{",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "$",
   "_nested_display_type",
   ".",
   "'[]'",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "_nested_display_type",
   ",",
   "$",
   "_nested_circular_id_key",
   ",",
   "$",
   "_nested_dump",
   ")",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'null'",
   ":",
   "case",
   "'NULL'",
   ":",
   "$",
   "_nested_display_type",
   "=",
   "'null'",
   ";",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "'null'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'resource'",
   ":",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "'['",
   ".",
   "(",
   "string",
   ")",
   "$",
   "_nested_value",
   ".",
   "']'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'unknown'",
   ":",
   "case",
   "'unknown type'",
   ":",
   "default",
   ":",
   "// Default case handler.",
   "$",
   "_nested_display_type",
   "=",
   "'unknown'",
   ";",
   "$",
   "nested_dumps",
   "[",
   "$",
   "_nested_key_prop",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "_nested_value",
   ";",
   "break",
   ";",
   "// Break switch.",
   "}",
   "}",
   "unset",
   "(",
   "$",
   "_nested_key_prop",
   ",",
   "$",
   "_nested_value",
   ",",
   "$",
   "_nested_type",
   ",",
   "$",
   "_nested_key_prop_length",
   ")",
   ";",
   "if",
   "(",
   "$",
   "nested_dumps",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "nested_dumps",
   "as",
   "$",
   "_nested_key_prop",
   "=>",
   "$",
   "_nested_dump",
   ")",
   "{",
   "$",
   "_aligning_spaces",
   "=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "longest_nested_key_prop_length",
   "-",
   "mb_strlen",
   "(",
   "(",
   "string",
   ")",
   "$",
   "_nested_key_prop",
   ")",
   ")",
   ";",
   "$",
   "var_dump",
   ".=",
   "$",
   "nested_dump_indents",
   ".",
   "$",
   "_nested_key_prop",
   ".",
   "$",
   "_aligning_spaces",
   ".",
   "$",
   "key_prop_value_sep",
   ".",
   "$",
   "_nested_dump",
   ".",
   "\"\\n\"",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "_nested_key_prop",
   ",",
   "$",
   "_nested_dump",
   ",",
   "$",
   "_aligning_spaces",
   ")",
   ";",
   "$",
   "var_dump",
   "=",
   "$",
   "var_dump",
   ".",
   "$",
   "dump_indents",
   ".",
   "$",
   "closing_encap",
   ";",
   "}",
   "else",
   "{",
   "$",
   "var_dump",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbRTrim",
   "(",
   "$",
   "var_dump",
   ",",
   "\"\\n\"",
   ".",
   "$",
   "indent_char",
   ".",
   "$",
   "opening_encap",
   ")",
   ".",
   "$",
   "opening_encap",
   ".",
   "$",
   "closing_encap",
   ";",
   "}",
   "break",
   ";",
   "// Break switch.",
   "// Everything else is MUCH simpler to handle.",
   "case",
   "'int'",
   ":",
   "case",
   "'integer'",
   ":",
   "$",
   "display_type",
   "=",
   "'int'",
   ";",
   "$",
   "var_dump",
   "=",
   "(",
   "string",
   ")",
   "$",
   "var",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'real'",
   ":",
   "case",
   "'double'",
   ":",
   "case",
   "'float'",
   ":",
   "$",
   "display_type",
   "=",
   "'float'",
   ";",
   "$",
   "var_dump",
   "=",
   "'(float) '",
   ".",
   "(",
   "string",
   ")",
   "$",
   "var",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'bool'",
   ":",
   "case",
   "'boolean'",
   ":",
   "$",
   "display_type",
   "=",
   "'bool'",
   ";",
   "$",
   "var_dump",
   "=",
   "$",
   "var",
   "?",
   "'true'",
   ":",
   "'false'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'string'",
   ":",
   "$",
   "var_dump",
   "=",
   "\"'\"",
   ".",
   "$",
   "var",
   ".",
   "\"'\"",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'null'",
   ":",
   "case",
   "'NULL'",
   ":",
   "$",
   "display_type",
   "=",
   "'null'",
   ";",
   "$",
   "var_dump",
   "=",
   "'null'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'resource'",
   ":",
   "$",
   "var_dump",
   "=",
   "'['",
   ".",
   "(",
   "string",
   ")",
   "$",
   "var",
   ".",
   "']'",
   ";",
   "break",
   ";",
   "// Break switch.",
   "case",
   "'unknown'",
   ":",
   "case",
   "'unknown type'",
   ":",
   "default",
   ":",
   "// Default case handler.",
   "$",
   "display_type",
   "=",
   "'unknown'",
   ";",
   "$",
   "var_dump",
   "=",
   "(",
   "string",
   ")",
   "$",
   "var",
   ";",
   "break",
   ";",
   "// Break switch.",
   "}",
   "if",
   "(",
   "!",
   "$",
   "return_only",
   ")",
   "{",
   "echo",
   "$",
   "var_dump",
   ".",
   "\"\\n\"",
   ";",
   "}",
   "return",
   "$",
   "var_dump",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-308",
  "nl_tokens": [
   "Conditions",
   "for",
   "whether",
   "a",
   "product",
   "can",
   "be",
   "purchased",
   ":",
   "-",
   "global",
   "allow",
   "purchase",
   "is",
   "enabled",
   "-",
   "product",
   "AllowPurchase",
   "field",
   "is",
   "true",
   "-",
   "if",
   "variations",
   "then",
   "one",
   "of",
   "them",
   "needs",
   "to",
   "be",
   "purchasable",
   "-",
   "if",
   "not",
   "variations",
   "selling",
   "price",
   "must",
   "be",
   "above",
   "0"
  ],
  "pl_tokens": [
   "public",
   "function",
   "canPurchase",
   "(",
   "$",
   "member",
   "=",
   "null",
   ",",
   "$",
   "quantity",
   "=",
   "1",
   ")",
   "{",
   "$",
   "global",
   "=",
   "self",
   "::",
   "config",
   "(",
   ")",
   "->",
   "global_allow_purchase",
   ";",
   "if",
   "(",
   "!",
   "$",
   "global",
   "||",
   "!",
   "$",
   "this",
   "->",
   "AllowPurchase",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "allowpurchase",
   "=",
   "false",
   ";",
   "$",
   "extension",
   "=",
   "self",
   "::",
   "has_extension",
   "(",
   "ProductVariationsExtension",
   "::",
   "class",
   ")",
   ";",
   "if",
   "(",
   "$",
   "extension",
   "&&",
   "Variation",
   "::",
   "get",
   "(",
   ")",
   "->",
   "filter",
   "(",
   "'ProductID'",
   ",",
   "$",
   "this",
   "->",
   "ID",
   ")",
   "->",
   "first",
   "(",
   ")",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "Variations",
   "(",
   ")",
   "as",
   "$",
   "variation",
   ")",
   "{",
   "if",
   "(",
   "$",
   "variation",
   "->",
   "canPurchase",
   "(",
   "$",
   "member",
   ",",
   "$",
   "quantity",
   ")",
   ")",
   "{",
   "$",
   "allowpurchase",
   "=",
   "true",
   ";",
   "break",
   ";",
   "}",
   "}",
   "}",
   "else",
   "{",
   "$",
   "allowpurchase",
   "=",
   "(",
   "$",
   "this",
   "->",
   "sellingPrice",
   "(",
   ")",
   ">",
   "0",
   "||",
   "self",
   "::",
   "config",
   "(",
   ")",
   "->",
   "allow_zero_price",
   ")",
   ";",
   "}",
   "// Standard mechanism for accepting permission changes from decorators",
   "$",
   "permissions",
   "=",
   "$",
   "this",
   "->",
   "extend",
   "(",
   "'canPurchase'",
   ",",
   "$",
   "member",
   ",",
   "$",
   "quantity",
   ")",
   ";",
   "$",
   "permissions",
   "[",
   "]",
   "=",
   "$",
   "allowpurchase",
   ";",
   "return",
   "<mask>",
   "(",
   "$",
   "permissions",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-309",
  "nl_tokens": [
   "Calculate",
   "the",
   "current",
   "progress",
   "(",
   "what",
   "percentage",
   "done",
   "are",
   "we",
   "with",
   "this",
   "session?",
   ")"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "_calculateProgress",
   "(",
   "$",
   "ticket",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_driver",
   "->",
   "authCheck",
   "(",
   "$",
   "ticket",
   ")",
   ")",
   "// Check the ticket",
   "{",
   "$",
   "user",
   "=",
   "$",
   "this",
   "->",
   "_driver",
   "->",
   "authResolve",
   "(",
   "$",
   "ticket",
   ")",
   ";",
   "$",
   "current",
   "=",
   "$",
   "this",
   "->",
   "_driver",
   "->",
   "queueLeft",
   "(",
   "$",
   "user",
   ")",
   ";",
   "// Number of items currently in the queue",
   "$",
   "processed",
   "=",
   "$",
   "this",
   "->",
   "_driver",
   "->",
   "queueProcessed",
   "(",
   "$",
   "ticket",
   ")",
   ";",
   "// Number of items we've processed during this session",
   "$",
   "percentage",
   "=",
   "100",
   ";",
   "if",
   "(",
   "$",
   "current",
   ")",
   "{",
   "$",
   "percentage",
   "=",
   "<mask>",
   "(",
   "99",
   ",",
   "floor",
   "(",
   "100",
   "*",
   "(",
   "$",
   "processed",
   "/",
   "(",
   "$",
   "processed",
   "+",
   "$",
   "current",
   ")",
   ")",
   ")",
   ")",
   ";",
   "}",
   "// Call the percentage done hook",
   "$",
   "hookerr",
   "=",
   "null",
   ";",
   "$",
   "hookdata",
   "=",
   "array",
   "(",
   "'user'",
   "=>",
   "$",
   "user",
   ",",
   "'percentage'",
   "=>",
   "$",
   "percentage",
   ",",
   "'items_left'",
   "=>",
   "$",
   "current",
   ",",
   "'items_processed'",
   "=>",
   "$",
   "processed",
   ",",
   ")",
   ";",
   "$",
   "this",
   "->",
   "_callHook",
   "(",
   "$",
   "ticket",
   ",",
   "QUICKBOOKS_HANDLERS_HOOK_PERCENT",
   ",",
   "null",
   ",",
   "null",
   ",",
   "null",
   ",",
   "null",
   ",",
   "$",
   "hookerr",
   ",",
   "null",
   ",",
   "array",
   "(",
   ")",
   ",",
   "$",
   "hookdata",
   ")",
   ";",
   "if",
   "(",
   "$",
   "current",
   ")",
   "{",
   "return",
   "$",
   "percentage",
   ";",
   "}",
   "else",
   "{",
   "return",
   "100",
   ";",
   "}",
   "}",
   "return",
   "-",
   "1",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-310",
  "nl_tokens": [
   "Create",
   "command"
  ],
  "pl_tokens": [
   "public",
   "function",
   "create",
   "(",
   "$",
   "key",
   ",",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withScores",
   "=",
   "false",
   ",",
   "$",
   "limit",
   "=",
   "null",
   ",",
   "$",
   "offset",
   "=",
   "null",
   ",",
   "$",
   "revert",
   "=",
   "false",
   ")",
   "{",
   "if",
   "(",
   "$",
   "revert",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_throwExceptionIfNotSupported",
   "(",
   "'2.1.6'",
   ")",
   ";",
   "}",
   "$",
   "connection",
   "=",
   "$",
   "this",
   "->",
   "_rediska",
   "->",
   "getConnectionByKeyName",
   "(",
   "$",
   "key",
   ")",
   ";",
   "$",
   "command",
   "=",
   "array",
   "(",
   "$",
   "revert",
   "?",
   "'ZREVRANGEBYSCORE'",
   ":",
   "'ZRANGEBYSCORE'",
   ",",
   "$",
   "this",
   "->",
   "_rediska",
   "->",
   "getOption",
   "(",
   "'namespace'",
   ")",
   ".",
   "$",
   "key",
   ",",
   "$",
   "revert",
   "?",
   "$",
   "max",
   ":",
   "$",
   "min",
   ",",
   "$",
   "revert",
   "?",
   "$",
   "min",
   ":",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_null",
   "(",
   "$",
   "limit",
   ")",
   ")",
   "{",
   "if",
   "(",
   "is_null",
   "(",
   "$",
   "offset",
   ")",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "0",
   ";",
   "}",
   "$",
   "command",
   "[",
   "]",
   "=",
   "'LIMIT'",
   ";",
   "$",
   "command",
   "[",
   "]",
   "=",
   "$",
   "offset",
   ";",
   "$",
   "command",
   "[",
   "]",
   "=",
   "$",
   "limit",
   ";",
   "}",
   "if",
   "(",
   "$",
   "withScores",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_throwExceptionIfNotSupported",
   "(",
   "'1.3.4'",
   ")",
   ";",
   "$",
   "command",
   "[",
   "]",
   "=",
   "'WITHSCORES'",
   ";",
   "}",
   "return",
   "new",
   "Rediska_Connection_Exec",
   "(",
   "$",
   "connection",
   ",",
   "$",
   "command",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-311",
  "nl_tokens": [
   "@coroutine"
  ],
  "pl_tokens": [
   "public",
   "function",
   "peek",
   "(",
   "int",
   "$",
   "length",
   "=",
   "1",
   ",",
   "float",
   "$",
   "timeout",
   "=",
   "0",
   ")",
   ":",
   "\\",
   "Generator",
   "{",
   "// Read chunks of bytes until we reach the desired length.",
   "while",
   "(",
   "mb_strlen",
   "(",
   "(",
   "string",
   ")",
   "$",
   "this",
   "->",
   "buffer",
   ",",
   "$",
   "this",
   "->",
   "encoding",
   ")",
   "<",
   "$",
   "length",
   "&&",
   "$",
   "this",
   "->",
   "stream",
   "->",
   "isReadable",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "buffer",
   "->",
   "push",
   "(",
   "yield",
   "from",
   "$",
   "this",
   "->",
   "stream",
   "->",
   "read",
   "(",
   "0",
   ",",
   "null",
   ",",
   "$",
   "timeout",
   ")",
   ")",
   ";",
   "}",
   "return",
   "mb_substr",
   "(",
   "(",
   "string",
   ")",
   "$",
   "this",
   "->",
   "buffer",
   ",",
   "0",
   ",",
   "<mask>",
   "(",
   "$",
   "length",
   ",",
   "$",
   "this",
   "->",
   "buffer",
   "->",
   "getLength",
   "(",
   ")",
   ")",
   ",",
   "$",
   "this",
   "->",
   "encoding",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-312",
  "nl_tokens": [
   "Get",
   "Sorted",
   "set",
   "by",
   "score"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getByScore",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withScores",
   "=",
   "false",
   ",",
   "$",
   "limit",
   "=",
   "null",
   ",",
   "$",
   "offset",
   "=",
   "null",
   ",",
   "$",
   "revert",
   "=",
   "false",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "_getRediskaOn",
   "(",
   ")",
   "->",
   "getFromSortedSetByScore",
   "(",
   "$",
   "this",
   "->",
   "getName",
   "(",
   ")",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ",",
   "$",
   "withScores",
   ",",
   "$",
   "limit",
   ",",
   "$",
   "offset",
   ",",
   "$",
   "revert",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-313",
  "nl_tokens": [
   "Define",
   "o",
   "menor",
   "valor",
   "poss\u00edvel",
   "para",
   "um",
   "tipo",
   "num\u00e9rico",
   "ou",
   "DateTime",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "setMin",
   "(",
   "$",
   "m",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isSimpleTypeNumeric",
   "(",
   ")",
   "===",
   "true",
   "||",
   "$",
   "this",
   "->",
   "isSimpleTypeDateTime",
   "(",
   ")",
   "===",
   "true",
   ")",
   "{",
   "if",
   "(",
   "$",
   "m",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "type",
   "::",
   "min",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "// Verifica se o valor passado \u00e9 v\u00e1lido",
   "$",
   "err",
   "=",
   "null",
   ";",
   "$",
   "m",
   "=",
   "$",
   "this",
   "->",
   "type",
   "::",
   "parseIfValidate",
   "(",
   "$",
   "m",
   ",",
   "$",
   "err",
   ")",
   ";",
   "if",
   "(",
   "$",
   "err",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "msg",
   "=",
   "\"Invalid min value.\"",
   ";",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "$",
   "msg",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "min",
   "=",
   "$",
   "m",
   ";",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-314",
  "nl_tokens": [
   "Advance",
   "progress",
   "bar"
  ],
  "pl_tokens": [
   "public",
   "function",
   "advance",
   "(",
   ")",
   "{",
   "$",
   "this",
   "->",
   "current",
   "++",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "hasAnsi",
   "(",
   ")",
   ")",
   "{",
   "$",
   "percent",
   "=",
   "round",
   "(",
   "$",
   "this",
   "->",
   "current",
   "/",
   "$",
   "this",
   "->",
   "<mask>",
   "*",
   "100",
   ")",
   ";",
   "$",
   "this",
   "->",
   "output",
   "->",
   "write",
   "(",
   "\"\\x0D\"",
   ")",
   ";",
   "$",
   "this",
   "->",
   "output",
   "->",
   "write",
   "(",
   "\"\\x1B[2K\"",
   ")",
   ";",
   "$",
   "this",
   "->",
   "output",
   "->",
   "write",
   "(",
   "sprintf",
   "(",
   "'... %s%% ...'",
   ",",
   "$",
   "percent",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "output",
   "->",
   "write",
   "(",
   "'.'",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-315",
  "nl_tokens": [
   "\u6700\u5c0f\u503c"
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "string",
   "$",
   "field",
   ",",
   "string",
   "$",
   "alias",
   "=",
   "'min_value'",
   ")",
   ":",
   "self",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "checkFlowControl",
   "(",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "addAggregate",
   "(",
   "'MIN'",
   ",",
   "$",
   "field",
   ",",
   "$",
   "alias",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-316",
  "nl_tokens": [
   "Called",
   "before",
   "the",
   "execution",
   "of",
   "handler"
  ],
  "pl_tokens": [
   "public",
   "function",
   "before",
   "(",
   "Event",
   "$",
   "event",
   ",",
   "$",
   "source",
   ",",
   "$",
   "data",
   "=",
   "null",
   ")",
   "{",
   "$",
   "signature",
   "=",
   "$",
   "this",
   "->",
   "resolveRequestSignature",
   "(",
   ")",
   ";",
   "$",
   "limiter",
   "=",
   "$",
   "this",
   "->",
   "getLimiter",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "limiter",
   "->",
   "tooManyAttempts",
   "(",
   "$",
   "signature",
   ",",
   "$",
   "this",
   "->",
   "<mask>",
   ",",
   "$",
   "this",
   "->",
   "decay",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "addHeader",
   "(",
   "$",
   "signature",
   ",",
   "true",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "$",
   "limiter",
   "->",
   "hit",
   "(",
   "$",
   "signature",
   ",",
   "$",
   "this",
   "->",
   "decay",
   ")",
   ";",
   "$",
   "this",
   "->",
   "addHeader",
   "(",
   "$",
   "this",
   "->",
   "resolveRequestSignature",
   "(",
   ")",
   ",",
   "false",
   ")",
   ";",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-317",
  "nl_tokens": [
   "{",
   "@inheritdoc",
   "}"
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   "{",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'SAVE'",
   ",",
   "'Saving pages'",
   "]",
   ")",
   ";",
   "/* @var $page Page */",
   "$",
   "filteredPages",
   "=",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "filter",
   "(",
   "function",
   "(",
   "Page",
   "$",
   "page",
   ")",
   "{",
   "return",
   "!",
   "empty",
   "(",
   "$",
   "page",
   "->",
   "getVariable",
   "(",
   "'rendered'",
   ")",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "filteredPages",
   ")",
   ";",
   "$",
   "count",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "filteredPages",
   "as",
   "$",
   "page",
   ")",
   "{",
   "$",
   "count",
   "++",
   ";",
   "$",
   "pathname",
   "=",
   "$",
   "this",
   "->",
   "cleanPath",
   "(",
   "$",
   "this",
   "->",
   "config",
   "->",
   "getOutputPath",
   "(",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "this",
   "->",
   "getPathname",
   "(",
   "$",
   "page",
   ")",
   ")",
   ";",
   "Util",
   "::",
   "getFS",
   "(",
   ")",
   "->",
   "dumpFile",
   "(",
   "$",
   "pathname",
   ",",
   "$",
   "page",
   "->",
   "getVariable",
   "(",
   "'rendered'",
   ")",
   ")",
   ";",
   "$",
   "message",
   "=",
   "substr",
   "(",
   "$",
   "pathname",
   ",",
   "strlen",
   "(",
   "$",
   "this",
   "->",
   "config",
   "->",
   "getDestinationDir",
   "(",
   ")",
   ")",
   "+",
   "1",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'SAVE_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-318",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "validateValue",
   "(",
   "$",
   "value",
   ")",
   "{",
   "$",
   "timestamp",
   "=",
   "$",
   "this",
   "->",
   "parseDateValueFormat",
   "(",
   "$",
   "value",
   ",",
   "$",
   "this",
   "->",
   "format",
   ")",
   ";",
   "if",
   "(",
   "$",
   "timestamp",
   "===",
   "false",
   ")",
   "{",
   "return",
   "[",
   "$",
   "this",
   "->",
   "message",
   ",",
   "[",
   "]",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "!==",
   "null",
   "&&",
   "$",
   "timestamp",
   "<",
   "$",
   "this",
   "->",
   "min",
   ")",
   "{",
   "return",
   "[",
   "$",
   "this",
   "->",
   "tooSmall",
   ",",
   "[",
   "'min'",
   "=>",
   "$",
   "this",
   "->",
   "minString",
   "]",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "max",
   "!==",
   "null",
   "&&",
   "$",
   "timestamp",
   ">",
   "$",
   "this",
   "->",
   "max",
   ")",
   "{",
   "return",
   "[",
   "$",
   "this",
   "->",
   "tooBig",
   ",",
   "[",
   "'max'",
   "=>",
   "$",
   "this",
   "->",
   "maxString",
   "]",
   "]",
   ";",
   "}",
   "return",
   "null",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-319",
  "nl_tokens": [
   "Reads",
   "until",
   "either",
   "the",
   "end",
   "of",
   "the",
   "socket",
   "or",
   "a",
   "newline",
   "whichever",
   "comes",
   "first"
  ],
  "pl_tokens": [
   "public",
   "function",
   "readLine",
   "(",
   "$",
   "bufferSize",
   ",",
   "$",
   "localTimeout",
   "=",
   "null",
   ")",
   "{",
   "$",
   "line",
   "=",
   "''",
   ";",
   "while",
   "(",
   "!",
   "feof",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ")",
   ")",
   "{",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "localTimeout",
   ")",
   "{",
   "stream_set_timeout",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "$",
   "localTimeout",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "deadline",
   ")",
   "{",
   "stream_set_timeout",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "deadline",
   "-",
   "time",
   "(",
   ")",
   ",",
   "1",
   ")",
   ")",
   ";",
   "}",
   "$",
   "line",
   ".=",
   "@",
   "fgets",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "$",
   "bufferSize",
   ")",
   ";",
   "if",
   "(",
   "null",
   "===",
   "$",
   "localTimeout",
   ")",
   "{",
   "$",
   "this",
   "->",
   "checkTimeout",
   "(",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "info",
   "=",
   "stream_get_meta_data",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ")",
   ";",
   "// reset socket timeout if we don't have request timeout specified,\r",
   "// prevents further calls failing with a bogus Exception\r",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "deadline",
   ")",
   "{",
   "$",
   "default",
   "=",
   "(",
   "int",
   ")",
   "@",
   "ini_get",
   "(",
   "'default_socket_timeout'",
   ")",
   ";",
   "stream_set_timeout",
   "(",
   "$",
   "this",
   "->",
   "socket",
   ",",
   "$",
   "default",
   ">",
   "0",
   "?",
   "$",
   "default",
   ":",
   "PHP_INT_MAX",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "info",
   "[",
   "'timed_out'",
   "]",
   ")",
   "{",
   "throw",
   "new",
   "HTTP_Request2_MessageException",
   "(",
   "\"readLine() call timed out\"",
   ",",
   "HTTP_Request2_Exception",
   "::",
   "TIMEOUT",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "substr",
   "(",
   "$",
   "line",
   ",",
   "-",
   "1",
   ")",
   "==",
   "\"\\n\"",
   ")",
   "{",
   "return",
   "rtrim",
   "(",
   "$",
   "line",
   ",",
   "\"\\r\\n\"",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "line",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-320",
  "nl_tokens": [
   "Render",
   "property",
   "html",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "html",
   "(",
   ")",
   "{",
   "$",
   "settings",
   "=",
   "$",
   "this",
   "->",
   "get_settings",
   "(",
   ")",
   ";",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "get_value",
   "(",
   ")",
   ";",
   "// If range type is used change the default values if empty.",
   "if",
   "(",
   "$",
   "settings",
   "->",
   "type",
   "===",
   "'range'",
   ")",
   "{",
   "$",
   "settings",
   "->",
   "<mask>",
   "=",
   "papi_is_empty",
   "(",
   "$",
   "settings",
   "->",
   "max",
   ")",
   "?",
   "100",
   ":",
   "$",
   "settings",
   "->",
   "max",
   ";",
   "$",
   "settings",
   "->",
   "min",
   "=",
   "papi_is_empty",
   "(",
   "$",
   "settings",
   "->",
   "min",
   ")",
   "?",
   "0",
   ":",
   "$",
   "settings",
   "->",
   "min",
   ";",
   "$",
   "settings",
   "->",
   "step",
   "=",
   "papi_is_empty",
   "(",
   "$",
   "settings",
   "->",
   "step",
   ")",
   "?",
   "1",
   ":",
   "$",
   "settings",
   "->",
   "step",
   ";",
   "}",
   "if",
   "(",
   "$",
   "settings",
   "->",
   "min",
   "!==",
   "0",
   "&&",
   "$",
   "value",
   "<",
   "$",
   "settings",
   "->",
   "min",
   ")",
   "{",
   "$",
   "value",
   "=",
   "$",
   "settings",
   "->",
   "min",
   ";",
   "}",
   "papi_render_html_tag",
   "(",
   "'input'",
   ",",
   "[",
   "'id'",
   "=>",
   "$",
   "this",
   "->",
   "html_id",
   "(",
   ")",
   ",",
   "'max'",
   "=>",
   "$",
   "settings",
   "->",
   "max",
   ",",
   "'min'",
   "=>",
   "$",
   "settings",
   "->",
   "min",
   ",",
   "'name'",
   "=>",
   "esc_attr",
   "(",
   "$",
   "this",
   "->",
   "html_name",
   "(",
   ")",
   ")",
   ",",
   "'step'",
   "=>",
   "$",
   "settings",
   "->",
   "step",
   ",",
   "'type'",
   "=>",
   "esc_attr",
   "(",
   "$",
   "settings",
   "->",
   "type",
   ")",
   ",",
   "'value'",
   "=>",
   "$",
   "value",
   "]",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-321",
  "nl_tokens": [
   "Get",
   "configured",
   "paginator",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getPaginator",
   "(",
   "AdapterInterface",
   "$",
   "adapter",
   ",",
   "int",
   "$",
   "itemsPerPage",
   ")",
   ":",
   "Paginator",
   "{",
   "$",
   "paginator",
   "=",
   "new",
   "Paginator",
   "(",
   "$",
   "adapter",
   ")",
   ";",
   "$",
   "paginator",
   "->",
   "setItemCountPerPage",
   "(",
   "<mask>",
   "(",
   "-",
   "1",
   ",",
   "$",
   "itemsPerPage",
   ")",
   ")",
   ";",
   "return",
   "$",
   "paginator",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-322",
  "nl_tokens": [
   "Locate",
   "the",
   "best",
   "instance",
   "of",
   "pattern",
   "in",
   "text",
   "near",
   "loc",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "main",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ",",
   "$",
   "loc",
   "=",
   "0",
   ")",
   "{",
   "// Check for null inputs.",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "\"Null inputs.\"",
   ")",
   ";",
   "}",
   "$",
   "loc",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "loc",
   ",",
   "mb_strlen",
   "(",
   "$",
   "text",
   ")",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "text",
   "==",
   "$",
   "pattern",
   ")",
   "{",
   "// Shortcut (potentially not guaranteed by the algorithm)",
   "return",
   "0",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "text",
   "==",
   "''",
   ")",
   "{",
   "// Nothing to match.",
   "return",
   "-",
   "1",
   ";",
   "}",
   "elseif",
   "(",
   "mb_substr",
   "(",
   "$",
   "text",
   ",",
   "$",
   "loc",
   ",",
   "mb_strlen",
   "(",
   "$",
   "pattern",
   ")",
   ")",
   "==",
   "$",
   "pattern",
   ")",
   "{",
   "// Perfect match at the perfect spot!  (Includes case of null pattern)",
   "return",
   "$",
   "loc",
   ";",
   "}",
   "else",
   "{",
   "// Do a fuzzy compare.",
   "return",
   "$",
   "this",
   "->",
   "bitap",
   "(",
   "$",
   "text",
   ",",
   "$",
   "pattern",
   ",",
   "$",
   "loc",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-323",
  "nl_tokens": [
   "The",
   "options",
   "section",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "optionsSection",
   "(",
   "Option",
   "...",
   "$",
   "options",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "!",
   "$",
   "options",
   ")",
   "{",
   "$",
   "options",
   "=",
   "$",
   "this",
   "->",
   "getOptions",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "options",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "longestLength",
   "=",
   "0",
   ";",
   "$",
   "this",
   "->",
   "sectionDivider",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "sectionTitleMessage",
   "(",
   "'Options'",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "options",
   "as",
   "$",
   "option",
   ")",
   "{",
   "$",
   "longestLength",
   "=",
   "<mask>",
   "(",
   "\\",
   "strlen",
   "(",
   "$",
   "this",
   "->",
   "getOptionName",
   "(",
   "$",
   "option",
   ")",
   ")",
   ",",
   "$",
   "longestLength",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "options",
   "as",
   "$",
   "option",
   ")",
   "{",
   "$",
   "this",
   "->",
   "sectionMessage",
   "(",
   "$",
   "this",
   "->",
   "getOptionName",
   "(",
   "$",
   "option",
   ")",
   ",",
   "$",
   "option",
   "->",
   "getDescription",
   "(",
   ")",
   ",",
   "$",
   "longestLength",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-324",
  "nl_tokens": [
   "The",
   "static",
   "method",
   "used",
   "during",
   "Events",
   "to",
   "collect",
   "data",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "collect",
   "(",
   "Query",
   "$",
   "query",
   ")",
   "{",
   "$",
   "config",
   "=",
   "config",
   "(",
   "'Toolbar'",
   ")",
   ";",
   "// Provide default in case it's not set",
   "$",
   "<mask>",
   "=",
   "$",
   "config",
   "->",
   "maxQueries",
   "?",
   ":",
   "100",
   ";",
   "if",
   "(",
   "count",
   "(",
   "static",
   "::",
   "$",
   "queries",
   ")",
   "<",
   "$",
   "max",
   ")",
   "{",
   "static",
   "::",
   "$",
   "queries",
   "[",
   "]",
   "=",
   "$",
   "query",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-325",
  "nl_tokens": [
   "\u8ba1\u7b97\u8981\u53d1\u9001\u7684\u5b57\u8282\u8303\u56f4"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "_calculateByteRange",
   "(",
   "$",
   "size",
   ")",
   "{",
   "$",
   "start",
   "=",
   "0",
   ";",
   "$",
   "end",
   "=",
   "$",
   "size",
   "-",
   "1",
   ";",
   "if",
   "(",
   "$",
   "range",
   "=",
   "$",
   "this",
   "->",
   "_parseByteRange",
   "(",
   ")",
   ")",
   "{",
   "// HTTP_RANGE\u4e2d\u8bfb\u53d6\u6570\u636e",
   "$",
   "start",
   "=",
   "Arr",
   "::",
   "get",
   "(",
   "$",
   "range",
   ",",
   "1",
   ",",
   "$",
   "start",
   ")",
   ";",
   "if",
   "(",
   "'-'",
   "===",
   "Arr",
   "::",
   "get",
   "(",
   "$",
   "range",
   ",",
   "0",
   ")",
   ")",
   "{",
   "// \u8d1f\u6570\u8868\u793a\u8fd4\u56de\u4ece\u540e\u9762\u5f00\u59cb\u7b97\u8d77\u7684\u5b57\u8282\u6570",
   "$",
   "start",
   "=",
   "$",
   "size",
   "-",
   "abs",
   "(",
   "$",
   "start",
   ")",
   ";",
   "}",
   "$",
   "end",
   "=",
   "Arr",
   "::",
   "get",
   "(",
   "$",
   "range",
   ",",
   "2",
   ",",
   "$",
   "end",
   ")",
   ";",
   "}",
   "// \u683c\u5f0f\u5316\u6570\u503c\uff0c\u4fdd\u8bc1\u5728\u8303\u56f4\u5185",
   "$",
   "start",
   "=",
   "abs",
   "(",
   "intval",
   "(",
   "$",
   "start",
   ")",
   ")",
   ";",
   "$",
   "end",
   "=",
   "<mask>",
   "(",
   "abs",
   "(",
   "intval",
   "(",
   "$",
   "end",
   ")",
   ")",
   ",",
   "$",
   "size",
   "-",
   "1",
   ")",
   ";",
   "$",
   "start",
   "=",
   "(",
   "$",
   "end",
   "<",
   "$",
   "start",
   ")",
   "?",
   "0",
   ":",
   "max",
   "(",
   "$",
   "start",
   ",",
   "0",
   ")",
   ";",
   "return",
   "[",
   "$",
   "start",
   ",",
   "$",
   "end",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-326",
  "nl_tokens": [
   "CLI",
   "trace"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "getCliTraceInfo",
   "(",
   "&",
   "$",
   "trace",
   ",",
   "&",
   "$",
   "trace_table",
   ")",
   "{",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "trace",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "alignmentTraceData",
   "(",
   "$",
   "trace",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "trace",
   "as",
   "&",
   "$",
   "t",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "t",
   "as",
   "$",
   "type_name",
   "=>",
   "&",
   "$",
   "trace_content",
   ")",
   "{",
   "switch",
   "(",
   "$",
   "type_name",
   ")",
   "{",
   "case",
   "'file'",
   ":",
   "case",
   "'line'",
   ":",
   "case",
   "'function'",
   ":",
   "$",
   "line_max_width",
   "=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "type_name",
   ")",
   ",",
   "strlen",
   "(",
   "$",
   "trace_content",
   ")",
   ")",
   ";",
   "if",
   "(",
   "(",
   "$",
   "line_max_width",
   "%",
   "2",
   ")",
   "!=",
   "0",
   ")",
   "{",
   "$",
   "line_max_width",
   "+=",
   "5",
   ";",
   "}",
   "else",
   "{",
   "$",
   "line_max_width",
   "+=",
   "4",
   ";",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "trace_table",
   "[",
   "$",
   "type_name",
   "]",
   ")",
   "||",
   "$",
   "line_max_width",
   ">",
   "$",
   "trace_table",
   "[",
   "$",
   "type_name",
   "]",
   ")",
   "{",
   "$",
   "trace_table",
   "[",
   "$",
   "type_name",
   "]",
   "=",
   "$",
   "line_max_width",
   ";",
   "}",
   "break",
   ";",
   "default",
   ":",
   "unset",
   "(",
   "$",
   "t",
   "[",
   "$",
   "type_name",
   "]",
   ")",
   ";",
   "}",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-327",
  "nl_tokens": [
   "/",
   "*",
   "Use",
   "a",
   "lazy",
   "loader"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getValues",
   "(",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "values",
   "??",
   "range",
   "(",
   "$",
   "this",
   "->",
   "<mask>",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "max",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "stepSize",
   "(",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-328",
  "nl_tokens": [
   "Remove",
   "members",
   "from",
   "sorted",
   "set",
   "by",
   "score"
  ],
  "pl_tokens": [
   "public",
   "function",
   "removeByScore",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "_getRediskaOn",
   "(",
   ")",
   "->",
   "DeleteFromSortedSetByScore",
   "(",
   "$",
   "this",
   "->",
   "getName",
   "(",
   ")",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-329",
  "nl_tokens": [
   "Calculate",
   "estimated",
   "time",
   "to",
   "read",
   "a",
   "text",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "readtime",
   "(",
   "$",
   "text",
   ")",
   "{",
   "$",
   "words",
   "=",
   "str_word_count",
   "(",
   "strip_tags",
   "(",
   "$",
   "text",
   ")",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "floor",
   "(",
   "$",
   "words",
   "/",
   "200",
   ")",
   ";",
   "if",
   "(",
   "$",
   "min",
   "===",
   "0",
   ")",
   "{",
   "return",
   "'1'",
   ";",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-330",
  "nl_tokens": [
   "Teste",
   "la",
   "validit\u00e9"
  ],
  "pl_tokens": [
   "public",
   "function",
   "isValid",
   "(",
   "$",
   "valeur",
   ")",
   "{",
   "parent",
   "::",
   "resetErrors",
   "(",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "getArgValue",
   "(",
   "'min'",
   ")",
   ";",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "getArgValue",
   "(",
   "'max'",
   ")",
   ";",
   "if",
   "(",
   "$",
   "min",
   "==",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "valeur",
   ")",
   "!=",
   "$",
   "min",
   ")",
   "{",
   "parent",
   "::",
   "addError",
   "(",
   "$",
   "this",
   "->",
   "prepareError",
   "(",
   "'valisatorerror_length_exact'",
   ")",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "}",
   "else",
   "if",
   "(",
   "$",
   "min",
   "==",
   "-",
   "1",
   ")",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "valeur",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "parent",
   "::",
   "addError",
   "(",
   "$",
   "this",
   "->",
   "prepareError",
   "(",
   "'valisatorerror_length_max'",
   ")",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "}",
   "else",
   "if",
   "(",
   "$",
   "max",
   "==",
   "-",
   "1",
   ")",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "valeur",
   ")",
   "<",
   "$",
   "min",
   ")",
   "{",
   "parent",
   "::",
   "addError",
   "(",
   "$",
   "this",
   "->",
   "prepareError",
   "(",
   "'valisatorerror_length_min'",
   ")",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "valeur",
   ")",
   "<",
   "$",
   "min",
   "||",
   "strlen",
   "(",
   "$",
   "valeur",
   ")",
   ">",
   "$",
   "max",
   ")",
   "{",
   "parent",
   "::",
   "addError",
   "(",
   "$",
   "this",
   "->",
   "prepareError",
   "(",
   "'valisatorerror_length_range'",
   ")",
   ")",
   ";",
   "return",
   "false",
   ";",
   "}",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-331",
  "nl_tokens": [
   "Convert",
   "css",
   "into",
   "list",
   "of",
   "tokens"
  ],
  "pl_tokens": [
   "public",
   "function",
   "tokenize",
   "(",
   "$",
   "css",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_css",
   "=",
   "$",
   "css",
   ";",
   "$",
   "this",
   "->",
   "_cssLC",
   "=",
   "strtolower",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ")",
   ";",
   "$",
   "this",
   "->",
   "errors",
   "=",
   "[",
   "]",
   ";",
   "$",
   "start",
   "=",
   "0",
   ";",
   "$",
   "words",
   "=",
   "[",
   "]",
   ";",
   "$",
   "items",
   "=",
   "[",
   "]",
   ";",
   "$",
   "depth",
   "=",
   "0",
   ";",
   "$",
   "functionDepth",
   "=",
   "0",
   ";",
   "$",
   "expressionDepth",
   "=",
   "0",
   ";",
   "$",
   "blockStart",
   "=",
   "0",
   ";",
   "$",
   "selectorStart",
   "=",
   "0",
   ";",
   "$",
   "error",
   "=",
   "false",
   ";",
   "$",
   "cssLength",
   "=",
   "strlen",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ")",
   ";",
   "$",
   "validTokens",
   "=",
   "[",
   "'\"'",
   ",",
   "\"'\"",
   ",",
   "'/*'",
   ",",
   "'{'",
   ",",
   "'}'",
   ",",
   "';'",
   ",",
   "'url('",
   ",",
   "'\\\\'",
   "]",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "lessSyntax",
   ")",
   "{",
   "$",
   "validTokens",
   "=",
   "array_merge",
   "(",
   "$",
   "validTokens",
   ",",
   "[",
   "'('",
   ",",
   "')'",
   ",",
   "'//'",
   ",",
   "'@{'",
   ",",
   "'#{'",
   "]",
   ")",
   ";",
   "}",
   "$",
   "tokens",
   "=",
   "$",
   "this",
   "->",
   "_findTokens",
   "(",
   "$",
   "validTokens",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "tokens",
   "as",
   "$",
   "token",
   ")",
   "{",
   "if",
   "(",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "<",
   "$",
   "start",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "switch",
   "(",
   "$",
   "token",
   "[",
   "'token'",
   "]",
   ")",
   "{",
   "case",
   "'//'",
   ":",
   "// Skip to end of line",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ";",
   "$",
   "end1",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "\"\\n\"",
   ",",
   "$",
   "start",
   "+",
   "2",
   ")",
   ";",
   "$",
   "end2",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "\"\\r\"",
   ",",
   "$",
   "start",
   "+",
   "2",
   ")",
   ";",
   "$",
   "end",
   "=",
   "$",
   "end1",
   "===",
   "false",
   "?",
   "$",
   "end2",
   ":",
   "(",
   "$",
   "end2",
   "===",
   "false",
   "?",
   "$",
   "end1",
   ":",
   "<mask>",
   "(",
   "$",
   "end1",
   ",",
   "$",
   "end2",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "end",
   "===",
   "false",
   ")",
   "{",
   "// Last string",
   "$",
   "start",
   "=",
   "$",
   "cssLength",
   ";",
   "break",
   ";",
   "}",
   "$",
   "start",
   "=",
   "$",
   "end",
   "+",
   "1",
   ";",
   "break",
   ";",
   "case",
   "'/*'",
   ":",
   "// Skip to end of comment",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ";",
   "$",
   "end",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "'*/'",
   ",",
   "$",
   "start",
   "+",
   "2",
   ")",
   ";",
   "if",
   "(",
   "$",
   "end",
   "===",
   "false",
   ")",
   "{",
   "// Skip to end of file",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "ignoreErrors",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errors",
   "[",
   "]",
   "=",
   "new",
   "ParseError",
   "(",
   "'Missing comment closing statement'",
   ",",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ")",
   ";",
   "$",
   "error",
   "=",
   "true",
   ";",
   "}",
   "$",
   "start",
   "=",
   "$",
   "cssLength",
   ";",
   "break",
   ";",
   "}",
   "$",
   "start",
   "=",
   "$",
   "end",
   "+",
   "2",
   ";",
   "break",
   ";",
   "case",
   "'\\\\'",
   ":",
   "// Escaped character, skip next character",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   "+",
   "2",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "2",
   ";",
   "break",
   ";",
   "case",
   "'url('",
   ":",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ";",
   "// Skip to end of URL",
   "$",
   "end",
   "=",
   "$",
   "this",
   "->",
   "_findEndOfURL",
   "(",
   "$",
   "start",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_numeric",
   "(",
   "$",
   "end",
   ")",
   ")",
   "{",
   "// Invalid URL - skip \"url\"",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "3",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "ignoreErrors",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errors",
   "[",
   "]",
   "=",
   "new",
   "ParseError",
   "(",
   "'Incomplete URL'",
   ",",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ")",
   ";",
   "$",
   "error",
   "=",
   "true",
   ";",
   "}",
   "$",
   "start",
   "+=",
   "3",
   ";",
   "break",
   ";",
   "}",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'url'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "end",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "end",
   ";",
   "break",
   ";",
   "case",
   "'\"'",
   ":",
   "case",
   "'\\''",
   ":",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ";",
   "// Skip to end of quoted string",
   "$",
   "end",
   "=",
   "$",
   "this",
   "->",
   "_findEndOfQuotedString",
   "(",
   "$",
   "token",
   "[",
   "'token'",
   "]",
   ",",
   "$",
   "start",
   ")",
   ";",
   "if",
   "(",
   "$",
   "end",
   "===",
   "false",
   ")",
   "{",
   "// Missing closing quote",
   "if",
   "(",
   "$",
   "this",
   "->",
   "ignoreErrors",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "1",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "++",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "errors",
   "[",
   "]",
   "=",
   "new",
   "ParseError",
   "(",
   "'Missing closing '",
   ".",
   "$",
   "token",
   "[",
   "'token'",
   "]",
   ",",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ")",
   ";",
   "$",
   "error",
   "=",
   "true",
   ";",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'code'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "cssLength",
   ";",
   "}",
   "break",
   ";",
   "}",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'string'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "end",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "start",
   "=",
   "$",
   "end",
   ";",
   "break",
   ";",
   "case",
   "';'",
   ":",
   "if",
   "(",
   "$",
   "functionDepth",
   ">",
   "0",
   ")",
   "{",
   "break",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "items",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "_checkRule",
   "(",
   "$",
   "words",
   ",",
   "$",
   "token",
   "[",
   "'token'",
   "]",
   ",",
   "$",
   "error",
   ")",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "$",
   "error",
   "=",
   "false",
   ";",
   "}",
   "}",
   "$",
   "selectorStart",
   "=",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "1",
   ";",
   "$",
   "words",
   "=",
   "[",
   "]",
   ";",
   "break",
   ";",
   "case",
   "'{'",
   ":",
   "// Get selector",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "if",
   "(",
   "$",
   "selectorStart",
   ">",
   "$",
   "blockStart",
   ")",
   "{",
   "$",
   "code",
   "=",
   "trim",
   "(",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "blockStart",
   ",",
   "$",
   "selectorStart",
   "-",
   "$",
   "blockStart",
   ")",
   ")",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ")",
   "{",
   "$",
   "items",
   "[",
   "]",
   "=",
   "[",
   "'token'",
   "=>",
   "'code'",
   ",",
   "'code'",
   "=>",
   "$",
   "code",
   ",",
   "'index'",
   "=>",
   "$",
   "blockStart",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "$",
   "error",
   "=",
   "false",
   ";",
   "}",
   "}",
   "}",
   "}",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "items",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "_checkSelectors",
   "(",
   "$",
   "words",
   ")",
   ";",
   "$",
   "blockStart",
   "=",
   "$",
   "selectorStart",
   "=",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "1",
   ";",
   "$",
   "words",
   "=",
   "[",
   "]",
   ";",
   "$",
   "depth",
   "++",
   ";",
   "break",
   ";",
   "case",
   "'}'",
   ":",
   "if",
   "(",
   "$",
   "expressionDepth",
   ">",
   "0",
   ")",
   "{",
   "// LESS/SASS expression",
   "if",
   "(",
   "$",
   "expressionDepth",
   "===",
   "1",
   "&&",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "// Find start of expression",
   "$",
   "found",
   "=",
   "false",
   ";",
   "$",
   "text",
   "=",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   "+",
   "1",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "count",
   "(",
   "$",
   "words",
   ")",
   "-",
   "1",
   ";",
   "$",
   "i",
   ">=",
   "0",
   ";",
   "$",
   "i",
   "--",
   ")",
   "{",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'beforeExpression'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "found",
   "=",
   "true",
   ";",
   "unset",
   "(",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'beforeExpression'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "i",
   "===",
   "count",
   "(",
   "$",
   "words",
   ")",
   "-",
   "1",
   ")",
   "{",
   "// Previous token starts expression - do not change word tokens",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'expression'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   "]",
   ";",
   "}",
   "else",
   "{",
   "// Merge with previous tokens",
   "$",
   "start",
   "=",
   "$",
   "words",
   "[",
   "$",
   "i",
   "+",
   "1",
   "]",
   "[",
   "'index'",
   "]",
   ";",
   "$",
   "words",
   "=",
   "array_slice",
   "(",
   "$",
   "words",
   ",",
   "0",
   ",",
   "$",
   "i",
   "+",
   "1",
   ")",
   ";",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'expression'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   "]",
   ";",
   "}",
   "break",
   ";",
   "}",
   "$",
   "text",
   "=",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'text'",
   "]",
   ".",
   "$",
   "text",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "found",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'expression'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "'error'",
   "=>",
   "true",
   "]",
   ";",
   "}",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "1",
   ";",
   "}",
   "$",
   "expressionDepth",
   "--",
   ";",
   "break",
   ";",
   "}",
   "// End of block",
   "if",
   "(",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "items",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "_checkRule",
   "(",
   "$",
   "words",
   ",",
   "''",
   ",",
   "$",
   "error",
   ")",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "code",
   "=",
   "trim",
   "(",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "blockStart",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "blockStart",
   ")",
   ")",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ")",
   "{",
   "$",
   "items",
   "[",
   "]",
   "=",
   "[",
   "'token'",
   "=>",
   "'code'",
   ",",
   "'code'",
   "=>",
   "$",
   "code",
   ",",
   "'index'",
   "=>",
   "$",
   "blockStart",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "}",
   "}",
   "$",
   "error",
   "=",
   "false",
   ";",
   "$",
   "items",
   "[",
   "]",
   "=",
   "[",
   "'token'",
   "=>",
   "'}'",
   ",",
   "'index'",
   "=>",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ",",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "depth",
   "&&",
   "!",
   "$",
   "this",
   "->",
   "ignoreErrors",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errors",
   "[",
   "]",
   "=",
   "new",
   "ParseError",
   "(",
   "'Unexpected }'",
   ",",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ")",
   ";",
   "}",
   "$",
   "depth",
   "--",
   ";",
   "$",
   "blockStart",
   "=",
   "$",
   "selectorStart",
   "=",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "1",
   ";",
   "$",
   "words",
   "=",
   "[",
   "]",
   ";",
   "$",
   "functionDepth",
   "=",
   "0",
   ";",
   "break",
   ";",
   "case",
   "'('",
   ":",
   "// Function with LESS syntax enabled",
   "if",
   "(",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "$",
   "row",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "functionDepth",
   ")",
   "{",
   "$",
   "row",
   "[",
   "'beforeFunction'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "$",
   "words",
   "[",
   "]",
   "=",
   "$",
   "row",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   ";",
   "}",
   "$",
   "functionDepth",
   "++",
   ";",
   "break",
   ";",
   "case",
   "')'",
   ":",
   "// End of function with LESS syntax enabled",
   "if",
   "(",
   "$",
   "functionDepth",
   "===",
   "1",
   "&&",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "// Find start of function",
   "$",
   "found",
   "=",
   "false",
   ";",
   "$",
   "text",
   "=",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   "+",
   "1",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "count",
   "(",
   "$",
   "words",
   ")",
   "-",
   "1",
   ";",
   "$",
   "i",
   ">=",
   "0",
   ";",
   "$",
   "i",
   "--",
   ")",
   "{",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'beforeFunction'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "found",
   "=",
   "true",
   ";",
   "unset",
   "(",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'beforeFunction'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "i",
   "===",
   "count",
   "(",
   "$",
   "words",
   ")",
   "-",
   "1",
   ")",
   "{",
   "// Previous token starts function - do not change word tokens",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'function'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   "]",
   ";",
   "}",
   "else",
   "{",
   "// Merge with previous tokens",
   "$",
   "start",
   "=",
   "$",
   "words",
   "[",
   "$",
   "i",
   "+",
   "1",
   "]",
   "[",
   "'index'",
   "]",
   ";",
   "$",
   "words",
   "=",
   "array_slice",
   "(",
   "$",
   "words",
   ",",
   "0",
   ",",
   "$",
   "i",
   "+",
   "1",
   ")",
   ";",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'function'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   "]",
   ";",
   "}",
   "break",
   ";",
   "}",
   "$",
   "text",
   "=",
   "$",
   "words",
   "[",
   "$",
   "i",
   "]",
   "[",
   "'text'",
   "]",
   ".",
   "$",
   "text",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "found",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'function'",
   ",",
   "'text'",
   "=>",
   "$",
   "text",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "'error'",
   "=>",
   "true",
   "]",
   ";",
   "}",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "1",
   ";",
   "}",
   "$",
   "functionDepth",
   "--",
   ";",
   "if",
   "(",
   "$",
   "functionDepth",
   "<",
   "0",
   ")",
   "{",
   "$",
   "functionDepth",
   "=",
   "0",
   ";",
   "}",
   "break",
   ";",
   "case",
   "'@{'",
   ":",
   "case",
   "'#{'",
   ":",
   "// Expression with LESS/SASS syntax enabled",
   "if",
   "(",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "$",
   "row",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ",",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "-",
   "$",
   "start",
   "+",
   "2",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "expressionDepth",
   ")",
   "{",
   "$",
   "row",
   "[",
   "'beforeExpression'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "$",
   "words",
   "[",
   "]",
   "=",
   "$",
   "row",
   ";",
   "$",
   "start",
   "=",
   "$",
   "token",
   "[",
   "'index'",
   "]",
   "+",
   "2",
   ";",
   "}",
   "$",
   "expressionDepth",
   "++",
   ";",
   "break",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "depth",
   ">",
   "0",
   "&&",
   "!",
   "$",
   "this",
   "->",
   "ignoreErrors",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errors",
   "[",
   "]",
   "=",
   "new",
   "ParseError",
   "(",
   "'Missing }'",
   ",",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "cssLength",
   ")",
   ";",
   "}",
   "// Add remaining code",
   "if",
   "(",
   "$",
   "this",
   "->",
   "splitRules",
   ")",
   "{",
   "$",
   "words",
   "[",
   "]",
   "=",
   "[",
   "'type'",
   "=>",
   "'text'",
   ",",
   "'text'",
   "=>",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "start",
   ")",
   ",",
   "'index'",
   "=>",
   "$",
   "start",
   ",",
   "]",
   ";",
   "$",
   "items",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "_checkRule",
   "(",
   "$",
   "words",
   ",",
   "''",
   ",",
   "$",
   "error",
   ")",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "code",
   "=",
   "trim",
   "(",
   "substr",
   "(",
   "$",
   "this",
   "->",
   "_css",
   ",",
   "$",
   "blockStart",
   ")",
   ")",
   ";",
   "if",
   "(",
   "strlen",
   "(",
   "$",
   "code",
   ")",
   ")",
   "{",
   "$",
   "items",
   "[",
   "]",
   "=",
   "[",
   "'token'",
   "=>",
   "'code'",
   ",",
   "'code'",
   "=>",
   "$",
   "code",
   ",",
   "'index'",
   "=>",
   "$",
   "blockStart",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "error",
   ")",
   "{",
   "$",
   "items",
   "[",
   "count",
   "(",
   "$",
   "items",
   ")",
   "-",
   "1",
   "]",
   "[",
   "'error'",
   "]",
   "=",
   "true",
   ";",
   "}",
   "}",
   "}",
   "return",
   "array_values",
   "(",
   "array_filter",
   "(",
   "$",
   "items",
   ",",
   "function",
   "(",
   "$",
   "item",
   ")",
   "{",
   "return",
   "$",
   "item",
   "!==",
   "false",
   ";",
   "}",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-332",
  "nl_tokens": [
   "conn",
   "sta",
   "checking"
  ],
  "pl_tokens": [
   "private",
   "function",
   "checking",
   "(",
   ")",
   ":",
   "void",
   "{",
   "$",
   "cleared",
   "=",
   "!",
   "(",
   "$",
   "this",
   "->",
   "cIdleCount",
   "(",
   ")",
   "+",
   "$",
   "this",
   "->",
   "cBusyCount",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "exiting",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "pool",
   "&&",
   "(",
   "$",
   "closed",
   "=",
   "$",
   "this",
   "->",
   "pool",
   "->",
   "closed",
   "(",
   ")",
   ")",
   "->",
   "pended",
   "(",
   ")",
   "&&",
   "$",
   "cleared",
   ")",
   "{",
   "$",
   "closed",
   "->",
   "resolve",
   "(",
   ")",
   ";",
   "}",
   "return",
   ";",
   "}",
   "$",
   "cleared",
   "&&",
   "$",
   "this",
   "->",
   "resizing",
   "(",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "this",
   "->",
   "options",
   "->",
   "initial",
   ",",
   "min",
   "(",
   "$",
   "this",
   "->",
   "getWaitQ",
   "->",
   "count",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "options",
   "->",
   "maxIdle",
   ")",
   ")",
   ",",
   "'minimum-scaling'",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-333",
  "nl_tokens": [
   "Displays",
   "this",
   "message"
  ],
  "pl_tokens": [
   "public",
   "function",
   "helpCommand",
   "(",
   ")",
   "{",
   "$",
   "availableCommands",
   "=",
   "$",
   "this",
   "->",
   "getAvailableCommands",
   "(",
   ")",
   ";",
   "$",
   "longestCommandNameLength",
   "=",
   "<mask>",
   "(",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "item",
   ")",
   "{",
   "return",
   "strlen",
   "(",
   "$",
   "item",
   ")",
   ";",
   "}",
   ",",
   "array_keys",
   "(",
   "$",
   "availableCommands",
   ")",
   ")",
   ")",
   ";",
   "$",
   "longestCommandNameLength",
   "+=",
   "4",
   ";",
   "foreach",
   "(",
   "$",
   "availableCommands",
   "as",
   "$",
   "command",
   "=>",
   "$",
   "help",
   ")",
   "{",
   "$",
   "line",
   "=",
   "''",
   ".",
   "self",
   "::",
   "ESCAPE",
   ".",
   "self",
   "::",
   "GREEN",
   ".",
   "str_pad",
   "(",
   "$",
   "command",
   ",",
   "$",
   "longestCommandNameLength",
   ")",
   ".",
   "self",
   "::",
   "ESCAPE",
   ".",
   "self",
   "::",
   "NORMAL",
   ".",
   "$",
   "help",
   ";",
   "$",
   "this",
   "->",
   "outputLine",
   "(",
   "$",
   "line",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-334",
  "nl_tokens": [
   "Adjust",
   "luminosity",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "adjustLuminosity",
   "(",
   "string",
   "$",
   "hex",
   ",",
   "float",
   "$",
   "adjust",
   ")",
   ":",
   "string",
   "{",
   "$",
   "hex",
   "=",
   "$",
   "this",
   "->",
   "cleanHex",
   "(",
   "$",
   "hex",
   ")",
   ";",
   "for",
   "(",
   "$",
   "adjusted_hex",
   "=",
   "''",
   ",",
   "$",
   "_dec",
   ",",
   "$",
   "_hex",
   ",",
   "$",
   "_i",
   "=",
   "0",
   ";",
   "$",
   "_i",
   "<",
   "3",
   ";",
   "++",
   "$",
   "_i",
   ")",
   "{",
   "$",
   "_dec",
   "=",
   "hexdec",
   "(",
   "mb_substr",
   "(",
   "$",
   "hex",
   ",",
   "$",
   "_i",
   "*",
   "2",
   ",",
   "2",
   ")",
   ")",
   ";",
   "$",
   "_hex",
   "=",
   "dechex",
   "(",
   "round",
   "(",
   "<mask>",
   "(",
   "max",
   "(",
   "0",
   ",",
   "$",
   "_dec",
   "+",
   "(",
   "$",
   "_dec",
   "*",
   "$",
   "adjust",
   ")",
   ")",
   ",",
   "255",
   ")",
   ")",
   ")",
   ";",
   "$",
   "adjusted_hex",
   ".=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbStrPad",
   "(",
   "$",
   "_hex",
   ",",
   "2",
   ",",
   "'0'",
   ",",
   "STR_PAD_LEFT",
   ")",
   ";",
   "}",
   "// unset($_dec, $_hex, $_i); // Housekeeping.",
   "return",
   "'#'",
   ".",
   "$",
   "adjusted_hex",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-335",
  "nl_tokens": [
   "Get",
   "a",
   "list",
   "of",
   "records",
   "from",
   "the",
   "queue",
   "for",
   "use",
   "in",
   "a",
   "report"
  ],
  "pl_tokens": [
   "final",
   "public",
   "function",
   "queueReport",
   "(",
   "$",
   "user",
   ",",
   "$",
   "date_from",
   ",",
   "$",
   "date_to",
   ",",
   "$",
   "offset",
   "=",
   "0",
   ",",
   "$",
   "limit",
   "=",
   "null",
   ")",
   "{",
   "$",
   "offset",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "offset",
   ")",
   ";",
   "$",
   "limit",
   "=",
   "min",
   "(",
   "999999999",
   ",",
   "(",
   "int",
   ")",
   "$",
   "limit",
   ")",
   ";",
   "$",
   "hookdata",
   "=",
   "array",
   "(",
   "'offset'",
   "=>",
   "$",
   "offset",
   ",",
   "'limit'",
   "=>",
   "$",
   "limit",
   ",",
   "'from'",
   "=>",
   "$",
   "date_from",
   ",",
   "'to'",
   "=>",
   "$",
   "date_to",
   ",",
   ")",
   ";",
   "$",
   "hookerr",
   "=",
   "''",
   ";",
   "$",
   "this",
   "->",
   "_callHook",
   "(",
   "QuickBooks_Driver",
   "::",
   "HOOK_QUEUEREPORT",
   ",",
   "null",
   ",",
   "$",
   "hookerr",
   ",",
   "$",
   "hookdata",
   ")",
   ";",
   "return",
   "$",
   "this",
   "->",
   "_queueReport",
   "(",
   "$",
   "user",
   ",",
   "$",
   "date_from",
   ",",
   "$",
   "date_to",
   ",",
   "$",
   "offset",
   ",",
   "$",
   "limit",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-336",
  "nl_tokens": [
   "Texturize",
   "image",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "texturize",
   "(",
   "array",
   "$",
   "args",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "class_exists",
   "(",
   "'Imagick'",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "default_args",
   "=",
   "[",
   "'file'",
   "=>",
   "''",
   ",",
   "'format'",
   "=>",
   "''",
   ",",
   "'size'",
   "=>",
   "0",
   ",",
   "'width'",
   "=>",
   "0",
   ",",
   "'height'",
   "=>",
   "0",
   ",",
   "'output_file'",
   "=>",
   "''",
   ",",
   "'output_format'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Defaults.",
   "$",
   "args",
   "=",
   "$",
   "this",
   "->",
   "parseFormatArgs",
   "(",
   "$",
   "args",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "elseif",
   "(",
   "!",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "||",
   "!",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   "?",
   ":",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   "?",
   ":",
   "$",
   "args",
   "[",
   "'size'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "output_file_existed_prior",
   "=",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "try",
   "{",
   "// Catch exceptions.",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   "===",
   "'svg'",
   "&&",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   "===",
   "'svg'",
   ")",
   "{",
   "$",
   "xml",
   "=",
   "new",
   "\\",
   "DOMDocument",
   "(",
   "'1.0'",
   ",",
   "'utf-8'",
   ")",
   ";",
   "$",
   "svg",
   "=",
   "[",
   "'texture_nodes'",
   "=>",
   "[",
   "]",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "xml",
   "->",
   "load",
   "(",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'SVG load failure.'",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "!",
   "(",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "=",
   "$",
   "xml",
   "->",
   "getElementsByTagName",
   "(",
   "'svg'",
   ")",
   "->",
   "item",
   "(",
   "0",
   ")",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'SVG tag parse failure.'",
   ")",
   ";",
   "}",
   "while",
   "(",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "hasChildNodes",
   "(",
   ")",
   ")",
   "{",
   "$",
   "svg",
   "[",
   "'texture_nodes'",
   "]",
   "[",
   "]",
   "=",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "firstChild",
   ";",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "removeChild",
   "(",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "firstChild",
   ")",
   ";",
   "}",
   "$",
   "svg",
   "[",
   "'defs'",
   "]",
   "=",
   "$",
   "xml",
   "->",
   "createElement",
   "(",
   "'defs'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "=",
   "$",
   "xml",
   "->",
   "createElement",
   "(",
   "'pattern'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'rect'",
   "]",
   "=",
   "$",
   "xml",
   "->",
   "createElement",
   "(",
   "'rect'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "appendChild",
   "(",
   "$",
   "svg",
   "[",
   "'defs'",
   "]",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'defs'",
   "]",
   "->",
   "appendChild",
   "(",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "appendChild",
   "(",
   "$",
   "svg",
   "[",
   "'rect'",
   "]",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'id'",
   ",",
   "'texture'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'patternUnits'",
   ",",
   "'userSpaceOnUse'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'width'",
   ",",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "getAttribute",
   "(",
   "'width'",
   ")",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'height'",
   ",",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "getAttribute",
   "(",
   "'height'",
   ")",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "svg",
   "[",
   "'texture_nodes'",
   "]",
   "as",
   "$",
   "_texture_node",
   ")",
   "{",
   "$",
   "svg",
   "[",
   "'texture'",
   "]",
   "->",
   "appendChild",
   "(",
   "$",
   "_texture_node",
   ")",
   ";",
   "}",
   "// unset($_texture_node); // Housekeeping.",
   "$",
   "svg",
   "[",
   "'rect'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'width'",
   ",",
   "'100%'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'rect'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'height'",
   ",",
   "'100%'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'rect'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'fill'",
   ",",
   "'url(#texture)'",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'width'",
   ",",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   ")",
   ";",
   "$",
   "svg",
   "[",
   "'tag'",
   "]",
   "->",
   "setAttribute",
   "(",
   "'height'",
   ",",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "file_put_contents",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ",",
   "$",
   "xml",
   "->",
   "saveXML",
   "(",
   ")",
   ")",
   "===",
   "false",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'SVG save failure.'",
   ")",
   ";",
   "}",
   "return",
   "true",
   ";",
   "// Success.",
   "}",
   "else",
   "{",
   "$",
   "image",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "$",
   "image",
   "->",
   "setBackgroundColor",
   "(",
   "'transparent'",
   ")",
   ";",
   "$",
   "image",
   "->",
   "readImage",
   "(",
   "$",
   "args",
   "[",
   "'format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'file'",
   "]",
   ")",
   ";",
   "$",
   "canvas",
   "=",
   "new",
   "\\",
   "Imagick",
   "(",
   ")",
   ";",
   "// To hold texturization.",
   "$",
   "canvas",
   "->",
   "newImage",
   "(",
   "$",
   "args",
   "[",
   "'width'",
   "]",
   ",",
   "$",
   "args",
   "[",
   "'height'",
   "]",
   ",",
   "'transparent'",
   ",",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ")",
   ";",
   "$",
   "image",
   "=",
   "$",
   "canvas",
   "->",
   "textureImage",
   "(",
   "$",
   "image",
   ")",
   ";",
   "$",
   "image",
   "->",
   "writeImage",
   "(",
   "$",
   "args",
   "[",
   "'output_format'",
   "]",
   ".",
   "':'",
   ".",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "return",
   "true",
   ";",
   "// Success.",
   "}",
   "}",
   "catch",
   "(",
   "\\",
   "Throwable",
   "$",
   "Exception",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "output_file_existed_prior",
   "&&",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ")",
   "{",
   "unlink",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-337",
  "nl_tokens": [
   "\u6dfb\u52a0"
  ],
  "pl_tokens": [
   "public",
   "function",
   "add",
   "(",
   "$",
   "data",
   "=",
   "''",
   ")",
   "{",
   "$",
   "newField",
   "=",
   "''",
   ";",
   "$",
   "data",
   "=",
   "is_array",
   "(",
   "$",
   "data",
   ")",
   "?",
   "$",
   "data",
   ":",
   "explode",
   "(",
   "','",
   ",",
   "$",
   "data",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "data",
   "as",
   "$",
   "k",
   "=>",
   "$",
   "v",
   ")",
   "{",
   "$",
   "v",
   "=",
   "str_replace",
   "(",
   "'\\''",
   ",",
   "'\\\\\\''",
   ",",
   "$",
   "v",
   ")",
   ";",
   "$",
   "v",
   "=",
   "str_replace",
   "(",
   "'\\\\'",
   ",",
   "'\\\\/\\\\'",
   ",",
   "$",
   "v",
   ")",
   ";",
   "$",
   "newField",
   ".=",
   "$",
   "this",
   "->",
   "addFieldTag",
   "(",
   "$",
   "k",
   ")",
   ".",
   "' = \\''",
   ".",
   "$",
   "v",
   ".",
   "'\\','",
   ";",
   "}",
   "$",
   "newField",
   "=",
   "substr",
   "(",
   "$",
   "newField",
   ",",
   "0",
   ",",
   "-",
   "1",
   ")",
   ";",
   "$",
   "this",
   "->",
   "field",
   "=",
   "$",
   "newField",
   ";",
   "$",
   "this",
   "->",
   "_sql",
   "=",
   "'INSERT INTO `'",
   ".",
   "$",
   "this",
   "->",
   "table",
   ".",
   "'` SET '",
   ".",
   "$",
   "this",
   "->",
   "field",
   ";",
   "$",
   "result",
   "=",
   "$",
   "this",
   "->",
   "query",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "result",
   ")",
   "{",
   "$",
   "result",
   "=",
   "<mask>",
   "(",
   "mysqli_insert_id",
   "(",
   "$",
   "this",
   "->",
   "linkId",
   ")",
   ",",
   "1",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-338",
  "nl_tokens": [
   "Restricts",
   "the",
   "number",
   "of",
   "requests",
   "made",
   "by",
   "a",
   "single",
   "IP",
   "address",
   "within",
   "a",
   "set",
   "number",
   "of",
   "seconds",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "check",
   "(",
   "string",
   "$",
   "key",
   ",",
   "int",
   "$",
   "capacity",
   ",",
   "int",
   "$",
   "seconds",
   ",",
   "int",
   "$",
   "cost",
   "=",
   "1",
   ")",
   ":",
   "bool",
   "{",
   "$",
   "tokenName",
   "=",
   "$",
   "this",
   "->",
   "prefix",
   ".",
   "$",
   "key",
   ";",
   "// Check to see if the bucket has even been created yet.",
   "if",
   "(",
   "(",
   "$",
   "tokens",
   "=",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "get",
   "(",
   "$",
   "tokenName",
   ")",
   ")",
   "===",
   "false",
   ")",
   "{",
   "// If it hasn't been created, then we'll set it to the maximum",
   "// capacity - 1, and save it to the cache.",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "save",
   "(",
   "$",
   "tokenName",
   ",",
   "$",
   "capacity",
   "-",
   "$",
   "cost",
   ",",
   "$",
   "seconds",
   ")",
   ";",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "save",
   "(",
   "$",
   "tokenName",
   ".",
   "'Time'",
   ",",
   "time",
   "(",
   ")",
   ")",
   ";",
   "return",
   "true",
   ";",
   "}",
   "// If $tokens > 0, then we need to replenish the bucket",
   "// based on how long it's been since the last update.",
   "$",
   "throttleTime",
   "=",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "get",
   "(",
   "$",
   "tokenName",
   ".",
   "'Time'",
   ")",
   ";",
   "$",
   "elapsed",
   "=",
   "$",
   "this",
   "->",
   "time",
   "(",
   ")",
   "-",
   "$",
   "throttleTime",
   ";",
   "// Number of tokens to add back per second",
   "$",
   "rate",
   "=",
   "$",
   "capacity",
   "/",
   "$",
   "seconds",
   ";",
   "// We must have a minimum wait of 1 second for a new token",
   "// Primarily stored to allow devs to report back to users.",
   "$",
   "this",
   "->",
   "tokenTime",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "rate",
   ")",
   ";",
   "// Add tokens based up on number per second that",
   "// should be refilled, then checked against capacity",
   "// to be sure the bucket didn't overflow.",
   "$",
   "tokens",
   "+=",
   "$",
   "rate",
   "*",
   "$",
   "elapsed",
   ";",
   "$",
   "tokens",
   "=",
   "$",
   "tokens",
   ">",
   "$",
   "capacity",
   "?",
   "$",
   "capacity",
   ":",
   "$",
   "tokens",
   ";",
   "// If $tokens > 0, then we are save to perform the action, but",
   "// we need to decrement the number of available tokens.",
   "$",
   "response",
   "=",
   "false",
   ";",
   "if",
   "(",
   "$",
   "tokens",
   ">",
   "0",
   ")",
   "{",
   "$",
   "response",
   "=",
   "true",
   ";",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "save",
   "(",
   "$",
   "tokenName",
   ",",
   "$",
   "tokens",
   "-",
   "$",
   "cost",
   ",",
   "$",
   "elapsed",
   ")",
   ";",
   "$",
   "this",
   "->",
   "cache",
   "->",
   "save",
   "(",
   "$",
   "tokenName",
   ".",
   "'Time'",
   ",",
   "time",
   "(",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "response",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-339",
  "nl_tokens": [
   "Compute",
   "the",
   "Levenshtein",
   "distance",
   ";",
   "the",
   "number",
   "of",
   "inserted",
   "deleted",
   "or",
   "substituted",
   "characters",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "levenshtein",
   "(",
   ")",
   "{",
   "$",
   "diffs",
   "=",
   "$",
   "this",
   "->",
   "getChanges",
   "(",
   ")",
   ";",
   "$",
   "levenshtein",
   "=",
   "0",
   ";",
   "$",
   "insertions",
   "=",
   "0",
   ";",
   "$",
   "deletions",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "diffs",
   "as",
   "$",
   "change",
   ")",
   "{",
   "$",
   "op",
   "=",
   "$",
   "change",
   "[",
   "0",
   "]",
   ";",
   "$",
   "text",
   "=",
   "$",
   "change",
   "[",
   "1",
   "]",
   ";",
   "switch",
   "(",
   "$",
   "op",
   ")",
   "{",
   "case",
   "self",
   "::",
   "INSERT",
   ":",
   "$",
   "insertions",
   "+=",
   "mb_strlen",
   "(",
   "$",
   "text",
   ")",
   ";",
   "break",
   ";",
   "case",
   "self",
   "::",
   "DELETE",
   ":",
   "$",
   "deletions",
   "+=",
   "mb_strlen",
   "(",
   "$",
   "text",
   ")",
   ";",
   "break",
   ";",
   "case",
   "self",
   "::",
   "EQUAL",
   ":",
   "// A deletion and an insertion is one substitution.",
   "$",
   "levenshtein",
   "+=",
   "<mask>",
   "(",
   "$",
   "insertions",
   ",",
   "$",
   "deletions",
   ")",
   ";",
   "$",
   "insertions",
   "=",
   "0",
   ";",
   "$",
   "deletions",
   "=",
   "0",
   ";",
   "break",
   ";",
   "}",
   "}",
   "$",
   "levenshtein",
   "+=",
   "max",
   "(",
   "$",
   "insertions",
   ",",
   "$",
   "deletions",
   ")",
   ";",
   "return",
   "$",
   "levenshtein",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-340",
  "nl_tokens": [
   "Add",
   "Script",
   "into",
   "the",
   "cue",
   "of",
   "Script",
   "vars",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "addScript",
   "(",
   "$",
   "jsfile",
   ",",
   "$",
   "<mask>",
   "=",
   "FALSE",
   ",",
   "$",
   "type",
   "=",
   "'text/javascript'",
   ")",
   "{",
   "//Check if we must minified the style",
   "$",
   "minTag",
   "=",
   "\"<script type='$type' src='min/?f=\"",
   ".",
   "$",
   "this",
   "->",
   "asset",
   "(",
   "$",
   "jsfile",
   ",",
   "TRUE",
   ")",
   ".",
   "\"' ></script>\"",
   ";",
   "$",
   "maxTag",
   "=",
   "\"<script type='$type' src='\"",
   ".",
   "$",
   "this",
   "->",
   "asset",
   "(",
   "$",
   "jsfile",
   ",",
   "TRUE",
   ")",
   ".",
   "\"' ></script>\"",
   ";",
   "//TODO: min files",
   "$",
   "includeTag",
   "=",
   "$",
   "maxTag",
   ";",
   "$",
   "minPos",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "scripts",
   ",",
   "$",
   "minTag",
   ")",
   ";",
   "$",
   "maxPos",
   "=",
   "strpos",
   "(",
   "$",
   "this",
   "->",
   "scripts",
   ",",
   "$",
   "maxTag",
   ")",
   ";",
   "if",
   "(",
   "$",
   "minPos",
   "===",
   "FALSE",
   "&&",
   "$",
   "maxPos",
   "===",
   "FALSE",
   ")",
   "{",
   "// Si no esta, concatenamos",
   "$",
   "this",
   "->",
   "scripts",
   ".=",
   "$",
   "includeTag",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-341",
  "nl_tokens": [
   "Return",
   "true",
   "if",
   "pager",
   "panel",
   "is",
   "visible",
   "in",
   "template",
   "-",
   "internal",
   "helper",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "isPagerSectionVisible",
   "(",
   ")",
   "{",
   "$",
   "limits",
   "=",
   "$",
   "this",
   "->",
   "getLimits",
   "(",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "limits",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "// true when totalCount rows exceed the minimum pager limit",
   "return",
   "<mask>",
   "(",
   "array_keys",
   "(",
   "$",
   "limits",
   ")",
   ")",
   "<",
   "$",
   "this",
   "->",
   "totalCount",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-342",
  "nl_tokens": [
   "Returns",
   "the",
   "number",
   "of",
   "results",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getTotalHits",
   "(",
   "$",
   "genuineTotal",
   "=",
   "false",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "totalHits",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "totalHits",
   "=",
   "$",
   "this",
   "->",
   "searchable",
   "->",
   "count",
   "(",
   "$",
   "this",
   "->",
   "query",
   ")",
   ";",
   "}",
   "return",
   "$",
   "this",
   "->",
   "query",
   "->",
   "hasParam",
   "(",
   "'size'",
   ")",
   "&&",
   "!",
   "$",
   "genuineTotal",
   "?",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "totalHits",
   ",",
   "(",
   "int",
   ")",
   "$",
   "this",
   "->",
   "query",
   "->",
   "getParam",
   "(",
   "'size'",
   ")",
   ")",
   ":",
   "$",
   "this",
   "->",
   "totalHits",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-343",
  "nl_tokens": [
   "\u83b7\u53d6\u6587\u4ef6\u4ee3\u7801"
  ],
  "pl_tokens": [
   "private",
   "static",
   "function",
   "getFileContent",
   "(",
   "$",
   "file",
   ",",
   "$",
   "line",
   ")",
   "{",
   "$",
   "content",
   "=",
   "''",
   ";",
   "if",
   "(",
   "is_file",
   "(",
   "$",
   "file",
   ")",
   ")",
   "{",
   "$",
   "fp",
   "=",
   "new",
   "\\",
   "SplFileObject",
   "(",
   "$",
   "file",
   ",",
   "'r'",
   ")",
   ";",
   "$",
   "fp",
   "->",
   "seek",
   "(",
   "$",
   "i",
   "=",
   "<mask>",
   "(",
   "$",
   "line",
   "-",
   "10",
   ",",
   "0",
   ")",
   ")",
   ";",
   "// \u8f6c\u5230\u7b2cN\u884c, seek\u65b9\u6cd5\u53c2\u6570\u4ece0\u5f00\u59cb\u8ba1\u6570",
   "$",
   "count",
   "=",
   "$",
   "line",
   "+",
   "10",
   ";",
   "for",
   "(",
   ";",
   "$",
   "i",
   "<=",
   "$",
   "count",
   ";",
   "++",
   "$",
   "i",
   ")",
   "{",
   "$",
   "content",
   ".=",
   "$",
   "i",
   ".",
   "' '",
   ".",
   "trim",
   "(",
   "$",
   "fp",
   "->",
   "current",
   "(",
   ")",
   ")",
   ".",
   "PHP_EOL",
   ";",
   "// current()\u83b7\u53d6\u5f53\u524d\u884c\u5185\u5bb9",
   "if",
   "(",
   "$",
   "i",
   "==",
   "$",
   "line",
   ")",
   "{",
   "}",
   "$",
   "fp",
   "->",
   "next",
   "(",
   ")",
   ";",
   "// \u4e0b\u4e00\u884c",
   "}",
   "$",
   "content",
   "=",
   "'<pre>'",
   ".",
   "htmlspecialchars",
   "(",
   "$",
   "content",
   ")",
   ".",
   "'</pre>'",
   ";",
   "}",
   "return",
   "$",
   "content",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-344",
  "nl_tokens": [
   "@param",
   "string",
   "$value",
   "@param",
   "string",
   "$maskSymbol",
   "@param",
   "int",
   "$showLast"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "mask",
   "(",
   "$",
   "value",
   ",",
   "$",
   "maskSymbol",
   "=",
   "null",
   ",",
   "$",
   "showLast",
   "=",
   "3",
   ")",
   "{",
   "$",
   "maskSymbol",
   "=",
   "$",
   "maskSymbol",
   "?",
   ":",
   "'X'",
   ";",
   "$",
   "showLast",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "showLast",
   ")",
   ";",
   "if",
   "(",
   "mb_strlen",
   "(",
   "$",
   "value",
   ")",
   "<=",
   "(",
   "$",
   "showLast",
   "+",
   "1",
   ")",
   "*",
   "2",
   "||",
   "false",
   "==",
   "$",
   "showLast",
   ")",
   "{",
   "$",
   "showRegExpPart",
   "=",
   "\"\"",
   ";",
   "}",
   "else",
   "{",
   "$",
   "showRegExpPart",
   "=",
   "\"(?!(.){0,$showLast}$)\"",
   ";",
   "}",
   "return",
   "preg_replace",
   "(",
   "\"/(?!^.?)[^-_\\s]$showRegExpPart/u\"",
   ",",
   "$",
   "maskSymbol",
   ",",
   "$",
   "value",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-345",
  "nl_tokens": [
   "Print",
   "statistics",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "printAllStatistics",
   "(",
   ")",
   "{",
   "$",
   "longest_label_chars",
   "=",
   "0",
   ";",
   "// Initialize.",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "stats",
   "as",
   "$",
   "_label",
   "=>",
   "$",
   "_value",
   ")",
   "{",
   "$",
   "longest_label_chars",
   "=",
   "<mask>",
   "(",
   "$",
   "longest_label_chars",
   ",",
   "mb_strlen",
   "(",
   "$",
   "_label",
   ")",
   ")",
   ";",
   "}",
   "echo",
   "\"\\n\\n\"",
   ";",
   "// Two lines down...",
   "echo",
   "'- Benchmark ----------------------------------------'",
   ".",
   "\"\\n\"",
   ";",
   "$",
   "statistics",
   "=",
   "''",
   ";",
   "// Initialize.",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "stats",
   "as",
   "$",
   "_label",
   "=>",
   "$",
   "_value",
   ")",
   "{",
   "$",
   "_label_chars",
   "=",
   "mb_strlen",
   "(",
   "$",
   "_label",
   ")",
   ";",
   "$",
   "_alignment_chars",
   "=",
   "$",
   "longest_label_chars",
   "-",
   "$",
   "_label_chars",
   ";",
   "$",
   "statistics",
   ".=",
   "$",
   "_label",
   ".",
   "':    '",
   ".",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "_alignment_chars",
   ")",
   ".",
   "$",
   "_value",
   ".",
   "\"\\n\"",
   ";",
   "}",
   "// unset($_label_chars, $_alignment_chars);",
   "echo",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbTrim",
   "(",
   "$",
   "statistics",
   ")",
   ".",
   "\"\\n\"",
   ";",
   "echo",
   "'----------------------------------------------------'",
   ".",
   "\"\\n\\n\"",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-346",
  "nl_tokens": [
   "Runs",
   "through",
   "all",
   "of",
   "the",
   "tests",
   "that",
   "have",
   "been",
   "added",
   "recording",
   "time",
   "to",
   "execute",
   "the",
   "desired",
   "number",
   "of",
   "iterations",
   "and",
   "the",
   "approximate",
   "memory",
   "usage",
   "used",
   "during",
   "those",
   "iterations",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "run",
   "(",
   "int",
   "$",
   "iterations",
   "=",
   "1000",
   ",",
   "bool",
   "$",
   "output",
   "=",
   "true",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "tests",
   "as",
   "$",
   "name",
   "=>",
   "$",
   "test",
   ")",
   "{",
   "// clear memory before start",
   "gc_collect_cycles",
   "(",
   ")",
   ";",
   "$",
   "start",
   "=",
   "microtime",
   "(",
   "true",
   ")",
   ";",
   "$",
   "start_mem",
   "=",
   "$",
   "max_memory",
   "=",
   "memory_get_usage",
   "(",
   "true",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "$",
   "iterations",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "result",
   "=",
   "$",
   "test",
   "(",
   ")",
   ";",
   "$",
   "max_memory",
   "=",
   "<mask>",
   "(",
   "$",
   "max_memory",
   ",",
   "memory_get_usage",
   "(",
   "true",
   ")",
   ")",
   ";",
   "unset",
   "(",
   "$",
   "result",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "results",
   "[",
   "$",
   "name",
   "]",
   "=",
   "[",
   "'time'",
   "=>",
   "microtime",
   "(",
   "true",
   ")",
   "-",
   "$",
   "start",
   ",",
   "'memory'",
   "=>",
   "$",
   "max_memory",
   "-",
   "$",
   "start_mem",
   ",",
   "'n'",
   "=>",
   "$",
   "iterations",
   ",",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "output",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "getReport",
   "(",
   ")",
   ";",
   "}",
   "return",
   "null",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-347",
  "nl_tokens": [
   "Greater",
   "than"
  ],
  "pl_tokens": [
   "public",
   "function",
   "greater_than",
   "(",
   "string",
   "$",
   "str",
   "=",
   "null",
   ",",
   "string",
   "$",
   "<mask>",
   ",",
   "array",
   "$",
   "data",
   ")",
   ":",
   "bool",
   "{",
   "return",
   "is_numeric",
   "(",
   "$",
   "str",
   ")",
   "?",
   "(",
   "$",
   "str",
   ">",
   "$",
   "min",
   ")",
   ":",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-348",
  "nl_tokens": [
   "Returns",
   "found",
   "integers",
   "between",
   "the",
   "given",
   "min",
   "and",
   "max",
   "if",
   "set",
   ".",
   "If",
   "no",
   "max",
   "or",
   "min",
   "is",
   "set",
   "just",
   "validate",
   "integers",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "int",
   "(",
   "int",
   "$",
   "<mask>",
   "=",
   "null",
   ",",
   "int",
   "$",
   "max",
   "=",
   "null",
   ")",
   "// inclusive max and min",
   "{",
   "$",
   "array",
   "=",
   "[",
   "]",
   ";",
   "return",
   "$",
   "this",
   "->",
   "closure_array_walk",
   "(",
   "function",
   "(",
   "$",
   "key",
   ")",
   "use",
   "(",
   "&",
   "$",
   "array",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   "{",
   "if",
   "(",
   "(",
   "$",
   "key",
   "=",
   "(",
   "int",
   ")",
   "$",
   "key",
   ")",
   "===",
   "false",
   ")",
   "{",
   "return",
   "$",
   "array",
   "[",
   "]",
   "=",
   "false",
   ";",
   "}",
   "if",
   "(",
   "$",
   "max",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "key",
   "=",
   "(",
   "$",
   "key",
   "<=",
   "$",
   "max",
   "?",
   "$",
   "key",
   ":",
   "false",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "min",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "key",
   "=",
   "(",
   "$",
   "key",
   ">=",
   "$",
   "min",
   "?",
   "$",
   "key",
   ":",
   "false",
   ")",
   ";",
   "}",
   "return",
   "$",
   "array",
   "[",
   "]",
   "=",
   "$",
   "key",
   ";",
   "}",
   ")",
   "(",
   "$",
   "array",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-349",
  "nl_tokens": [
   "Built",
   "-",
   "in",
   "\\",
   "Zend",
   "greater",
   "than",
   "check",
   ".",
   "Returns",
   "true",
   "if",
   "and",
   "only",
   "if",
   "$value",
   "is",
   "greater",
   "than",
   "the",
   "minimum",
   "boundary",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "greaterThan",
   "(",
   "$",
   "value",
   ",",
   "$",
   "<mask>",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "null",
   ";",
   "require_once",
   "'Zend/Validate/GreaterThan.php'",
   ";",
   "$",
   "validator",
   "=",
   "new",
   "\\",
   "Zend_Validate_GreaterThan",
   "(",
   "$",
   "min",
   ")",
   ";",
   "$",
   "result",
   "=",
   "$",
   "validator",
   "->",
   "isValid",
   "(",
   "$",
   "value",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "result",
   ")",
   "{",
   "$",
   "this",
   "->",
   "errorMessage",
   "=",
   "MessageHelper",
   "::",
   "getMessage",
   "(",
   "\"VALIDATESVC_GREATER_THAN\"",
   ",",
   "array",
   "(",
   "$",
   "this",
   "->",
   "fieldNameMask",
   ",",
   "$",
   "min",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "result",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-350",
  "nl_tokens": [
   "Gets",
   "the",
   "cache",
   "file",
   "name"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getCacheFile",
   "(",
   "$",
   "filename",
   ",",
   "$",
   "actual",
   "=",
   "false",
   ",",
   "$",
   "mkdir",
   "=",
   "false",
   ")",
   "{",
   "$",
   "path",
   "=",
   "array",
   "(",
   ")",
   ";",
   "// Getting the length of the filename before the extension",
   "$",
   "parts",
   "=",
   "explode",
   "(",
   "'.'",
   ",",
   "$",
   "filename",
   ")",
   ";",
   "$",
   "len",
   "=",
   "strlen",
   "(",
   "$",
   "parts",
   "[",
   "0",
   "]",
   ")",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "0",
   ";",
   "$",
   "i",
   "<",
   "<mask>",
   "(",
   "$",
   "len",
   ",",
   "$",
   "this",
   "->",
   "prefixSize",
   ")",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "path",
   "[",
   "]",
   "=",
   "$",
   "filename",
   "[",
   "$",
   "i",
   "]",
   ";",
   "}",
   "$",
   "path",
   "=",
   "implode",
   "(",
   "'/'",
   ",",
   "$",
   "path",
   ")",
   ";",
   "if",
   "(",
   "$",
   "mkdir",
   ")",
   "{",
   "$",
   "actualDir",
   "=",
   "$",
   "this",
   "->",
   "getActualCacheDirectory",
   "(",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "path",
   ";",
   "$",
   "this",
   "->",
   "mkdir",
   "(",
   "$",
   "actualDir",
   ")",
   ";",
   "}",
   "$",
   "path",
   ".=",
   "'/'",
   ".",
   "$",
   "filename",
   ";",
   "if",
   "(",
   "$",
   "actual",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "getActualCacheDirectory",
   "(",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "path",
   ";",
   "}",
   "else",
   "{",
   "return",
   "$",
   "this",
   "->",
   "getCacheDirectory",
   "(",
   ")",
   ".",
   "'/'",
   ".",
   "$",
   "path",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-351",
  "nl_tokens": [
   "A",
   "partir",
   "da",
   "contagem",
   "total",
   "de",
   "uma",
   "cole\u00e7\u00e3o",
   "identifica",
   "se",
   "o",
   "n\u00famero",
   "de",
   "itens",
   "est\u00e1",
   "de",
   "acordo",
   "com",
   "as",
   "defini\u00e7\u00f5es",
   "configuradas",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "collectionCheckAcceptedCount",
   "(",
   "int",
   "$",
   "count",
   ")",
   ":",
   "string",
   "{",
   "$",
   "r",
   "=",
   "\"valid\"",
   ";",
   "// Se a cole\u00e7\u00e3o de dados passou em todas as valida\u00e7\u00f5es at\u00e9 aqui",
   "// E",
   "// se ela possui crit\u00e9rios de valida\u00e7\u00e3o sobre a",
   "// contagem de seus elementos, efetua estas verifica\u00e7\u00f5es",
   "if",
   "(",
   "$",
   "this",
   "->",
   "acceptedCount",
   "!==",
   "null",
   ")",
   "{",
   "$",
   "exactValues",
   "=",
   "$",
   "this",
   "->",
   "acceptedCount",
   "[",
   "\"exactValues\"",
   "]",
   ";",
   "$",
   "multiples",
   "=",
   "$",
   "this",
   "->",
   "acceptedCount",
   "[",
   "\"multiples\"",
   "]",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "this",
   "->",
   "acceptedCount",
   "[",
   "\"min\"",
   "]",
   ";",
   "$",
   "max",
   "=",
   "$",
   "this",
   "->",
   "acceptedCount",
   "[",
   "\"max\"",
   "]",
   ";",
   "if",
   "(",
   "$",
   "count",
   "<",
   "$",
   "min",
   "||",
   "$",
   "count",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "r",
   "=",
   "\"error.dm.field.collection.constraint.range.violated\"",
   ";",
   "}",
   "else",
   "{",
   "$",
   "checked",
   "=",
   "false",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "exactValues",
   ")",
   ">",
   "0",
   "&&",
   "in_array",
   "(",
   "$",
   "count",
   ",",
   "$",
   "exactValues",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "checked",
   "=",
   "true",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "multiples",
   ")",
   ">",
   "0",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "multiples",
   "as",
   "$",
   "mul",
   ")",
   "{",
   "if",
   "(",
   "(",
   "$",
   "count",
   "%",
   "$",
   "mul",
   ")",
   "===",
   "0",
   ")",
   "{",
   "$",
   "checked",
   "=",
   "true",
   ";",
   "}",
   "}",
   "}",
   "if",
   "(",
   "$",
   "checked",
   "===",
   "false",
   ")",
   "{",
   "$",
   "r",
   "=",
   "\"error.dm.field.collection.constraint.accepted.count.violated\"",
   ";",
   "}",
   "}",
   "}",
   "return",
   "$",
   "r",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-352",
  "nl_tokens": [
   "Filter",
   "the",
   "commands",
   "by",
   "type",
   "and",
   "name",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "filterCommands",
   "(",
   "array",
   "&",
   "$",
   "commands",
   ",",
   "int",
   "&",
   "$",
   "longestLength",
   ",",
   "string",
   "$",
   "namespace",
   "=",
   "null",
   ")",
   ":",
   "void",
   "{",
   "$",
   "globalCommands",
   "=",
   "[",
   "]",
   ";",
   "/** @var \\Valkyrja\\Console\\Command $command */",
   "foreach",
   "(",
   "$",
   "commands",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "command",
   ")",
   "{",
   "$",
   "parts",
   "=",
   "explode",
   "(",
   "':'",
   ",",
   "$",
   "command",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ";",
   "$",
   "commandName",
   "=",
   "$",
   "parts",
   "[",
   "1",
   "]",
   "??",
   "null",
   ";",
   "$",
   "commandNamespace",
   "=",
   "$",
   "commandName",
   "?",
   "$",
   "parts",
   "[",
   "0",
   "]",
   ":",
   "'global'",
   ";",
   "// If there was a namespace passed to the command (commands",
   "// namespace)  and the namespace for this command doesn't match",
   "// what was passed then get rid of it so only commands in the",
   "// namespace are shown.",
   "if",
   "(",
   "$",
   "commandNamespace",
   "!==",
   "$",
   "namespace",
   "&&",
   "null",
   "!==",
   "$",
   "namespace",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "commands",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "$",
   "longestLength",
   "=",
   "<mask>",
   "(",
   "\\",
   "strlen",
   "(",
   "$",
   "command",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ",",
   "$",
   "longestLength",
   ")",
   ";",
   "// If this is a global namespaced command",
   "if",
   "(",
   "'global'",
   "===",
   "$",
   "commandNamespace",
   ")",
   "{",
   "// Set it in the global commands array so when we show the list",
   "// of commands global commands will be at the top",
   "$",
   "globalCommands",
   "[",
   "]",
   "=",
   "$",
   "command",
   ";",
   "// Unset from the commands list to avoid duplicates",
   "unset",
   "(",
   "$",
   "commands",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "}",
   "}",
   "// Sort the global commands by name",
   "$",
   "this",
   "->",
   "sortCommands",
   "(",
   "$",
   "globalCommands",
   ")",
   ";",
   "// Sort the rest of the commands by name",
   "$",
   "this",
   "->",
   "sortCommands",
   "(",
   "$",
   "commands",
   ")",
   ";",
   "// Set the commands as the merged results of the global and other",
   "// commands with the global commands at the top of the list",
   "$",
   "commands",
   "=",
   "array_merge",
   "(",
   "$",
   "globalCommands",
   ",",
   "$",
   "commands",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-353",
  "nl_tokens": [
   "Get",
   "count",
   "of",
   "members",
   "from",
   "sorted",
   "set",
   "by",
   "min",
   "and",
   "max",
   "score"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getLengthByScore",
   "(",
   "$",
   "<mask>",
   ",",
   "$",
   "max",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "_getRediskaOn",
   "(",
   ")",
   "->",
   "getSortedSetLengthByScore",
   "(",
   "$",
   "this",
   "->",
   "getName",
   "(",
   ")",
   ",",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-354",
  "nl_tokens": [
   "Calculate",
   "the",
   "length",
   "of",
   "the",
   "art"
  ],
  "pl_tokens": [
   "private",
   "function",
   "calculateArtLength",
   "(",
   ")",
   ":",
   "void",
   "{",
   "$",
   "this",
   "->",
   "artLength",
   "=",
   "(",
   "int",
   ")",
   "<mask>",
   "(",
   "array_map",
   "(",
   "'mb_strlen'",
   ",",
   "explode",
   "(",
   "\"\\n\"",
   ",",
   "$",
   "this",
   "->",
   "text",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-355",
  "nl_tokens": [
   "Reduce",
   "the",
   "number",
   "of",
   "edits",
   "by",
   "eliminating",
   "semantically",
   "trivial",
   "equalities",
   ".",
   "TODO",
   "refactor",
   "this",
   "cap",
   "s",
   "code"
  ],
  "pl_tokens": [
   "public",
   "function",
   "cleanupSemantic",
   "(",
   ")",
   "{",
   "$",
   "diffs",
   "=",
   "$",
   "this",
   "->",
   "getChanges",
   "(",
   ")",
   ";",
   "$",
   "changes",
   "=",
   "false",
   ";",
   "// Stack of indices where equalities are found.",
   "$",
   "equalities",
   "=",
   "array",
   "(",
   ")",
   ";",
   "// Always equal to diffs[equalities[-1]][1]",
   "$",
   "lastequality",
   "=",
   "null",
   ";",
   "// Index of current position.",
   "$",
   "pointer",
   "=",
   "0",
   ";",
   "// Number of chars that changed prior to the equality.",
   "$",
   "length_insertions1",
   "=",
   "0",
   ";",
   "$",
   "length_deletions1",
   "=",
   "0",
   ";",
   "// Number of chars that changed after the equality.",
   "$",
   "length_insertions2",
   "=",
   "0",
   ";",
   "$",
   "length_deletions2",
   "=",
   "0",
   ";",
   "while",
   "(",
   "$",
   "pointer",
   "<",
   "count",
   "(",
   "$",
   "diffs",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "0",
   "]",
   "==",
   "self",
   "::",
   "EQUAL",
   ")",
   "{",
   "$",
   "equalities",
   "[",
   "]",
   "=",
   "$",
   "pointer",
   ";",
   "$",
   "length_insertions1",
   "=",
   "$",
   "length_insertions2",
   ";",
   "$",
   "length_insertions2",
   "=",
   "0",
   ";",
   "$",
   "length_deletions1",
   "=",
   "$",
   "length_deletions2",
   ";",
   "$",
   "length_deletions2",
   "=",
   "0",
   ";",
   "$",
   "lastequality",
   "=",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "1",
   "]",
   ";",
   "}",
   "else",
   "{",
   "if",
   "(",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "0",
   "]",
   "==",
   "self",
   "::",
   "INSERT",
   ")",
   "{",
   "$",
   "length_insertions2",
   "+=",
   "mb_strlen",
   "(",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "1",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "length_deletions2",
   "+=",
   "mb_strlen",
   "(",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "1",
   "]",
   ")",
   ";",
   "}",
   "// Eliminate an equality that is smaller or equal to the edits on both sides of it.",
   "if",
   "(",
   "$",
   "lastequality",
   "!=",
   "''",
   "&&",
   "mb_strlen",
   "(",
   "$",
   "lastequality",
   ")",
   "<=",
   "<mask>",
   "(",
   "$",
   "length_insertions1",
   ",",
   "$",
   "length_deletions1",
   ")",
   "&&",
   "mb_strlen",
   "(",
   "$",
   "lastequality",
   ")",
   "<=",
   "max",
   "(",
   "$",
   "length_insertions2",
   ",",
   "$",
   "length_deletions2",
   ")",
   ")",
   "{",
   "$",
   "insertPointer",
   "=",
   "array_pop",
   "(",
   "$",
   "equalities",
   ")",
   ";",
   "// Duplicate record.",
   "array_splice",
   "(",
   "$",
   "diffs",
   ",",
   "$",
   "insertPointer",
   ",",
   "0",
   ",",
   "array",
   "(",
   "array",
   "(",
   "self",
   "::",
   "DELETE",
   ",",
   "$",
   "lastequality",
   ",",
   ")",
   ")",
   ")",
   ";",
   "// Change second copy to insert.",
   "$",
   "diffs",
   "[",
   "$",
   "insertPointer",
   "+",
   "1",
   "]",
   "[",
   "0",
   "]",
   "=",
   "self",
   "::",
   "INSERT",
   ";",
   "// Throw away the previous equality (it needs to be reevaluated).",
   "if",
   "(",
   "count",
   "(",
   "$",
   "equalities",
   ")",
   ")",
   "{",
   "array_pop",
   "(",
   "$",
   "equalities",
   ")",
   ";",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "equalities",
   ")",
   ")",
   "{",
   "$",
   "pointer",
   "=",
   "end",
   "(",
   "$",
   "equalities",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "pointer",
   "=",
   "-",
   "1",
   ";",
   "}",
   "// Reset the counters.",
   "$",
   "length_insertions1",
   "=",
   "0",
   ";",
   "$",
   "length_deletions1",
   "=",
   "0",
   ";",
   "$",
   "length_insertions2",
   "=",
   "0",
   ";",
   "$",
   "length_deletions2",
   "=",
   "0",
   ";",
   "$",
   "lastequality",
   "=",
   "null",
   ";",
   "$",
   "changes",
   "=",
   "true",
   ";",
   "}",
   "}",
   "$",
   "pointer",
   "++",
   ";",
   "}",
   "$",
   "this",
   "->",
   "setChanges",
   "(",
   "$",
   "diffs",
   ")",
   ";",
   "// Normalize the diff.",
   "if",
   "(",
   "$",
   "changes",
   ")",
   "{",
   "$",
   "this",
   "->",
   "cleanupMerge",
   "(",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "cleanupSemanticLossless",
   "(",
   ")",
   ";",
   "$",
   "diffs",
   "=",
   "$",
   "this",
   "->",
   "getChanges",
   "(",
   ")",
   ";",
   "// Find any overlaps between deletions and insertions.",
   "// e.g: <del>abcxxx</del><ins>xxxdef</ins>",
   "//   -> <del>abc</del>xxx<ins>def</ins>",
   "// e.g: <del>xxxabc</del><ins>defxxx</ins>",
   "//   -> <ins>def</ins>xxx<del>abc</del>",
   "// Only extract an overlap if it is as big as the edit ahead or behind it.",
   "$",
   "pointer",
   "=",
   "1",
   ";",
   "while",
   "(",
   "$",
   "pointer",
   "<",
   "count",
   "(",
   "$",
   "diffs",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "-",
   "1",
   "]",
   "[",
   "0",
   "]",
   "==",
   "self",
   "::",
   "DELETE",
   "&&",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "0",
   "]",
   "==",
   "self",
   "::",
   "INSERT",
   ")",
   "{",
   "$",
   "deletion",
   "=",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "-",
   "1",
   "]",
   "[",
   "1",
   "]",
   ";",
   "$",
   "insertion",
   "=",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "]",
   "[",
   "1",
   "]",
   ";",
   "$",
   "overlap_length1",
   "=",
   "$",
   "this",
   "->",
   "getToolkit",
   "(",
   ")",
   "->",
   "commontOverlap",
   "(",
   "$",
   "deletion",
   ",",
   "$",
   "insertion",
   ")",
   ";",
   "$",
   "overlap_length2",
   "=",
   "$",
   "this",
   "->",
   "getToolkit",
   "(",
   ")",
   "->",
   "commontOverlap",
   "(",
   "$",
   "insertion",
   ",",
   "$",
   "deletion",
   ")",
   ";",
   "if",
   "(",
   "$",
   "overlap_length1",
   ">=",
   "$",
   "overlap_length2",
   ")",
   "{",
   "if",
   "(",
   "$",
   "overlap_length1",
   ">=",
   "mb_strlen",
   "(",
   "$",
   "deletion",
   ")",
   "/",
   "2",
   "||",
   "$",
   "overlap_length1",
   ">=",
   "mb_strlen",
   "(",
   "$",
   "insertion",
   ")",
   "/",
   "2",
   ")",
   "{",
   "// Overlap found. Insert an equality and trim the surrounding edits.",
   "array_splice",
   "(",
   "$",
   "diffs",
   ",",
   "$",
   "pointer",
   ",",
   "0",
   ",",
   "array",
   "(",
   "array",
   "(",
   "self",
   "::",
   "EQUAL",
   ",",
   "mb_substr",
   "(",
   "$",
   "insertion",
   ",",
   "0",
   ",",
   "$",
   "overlap_length1",
   ")",
   ",",
   ")",
   ")",
   ")",
   ";",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "-",
   "1",
   "]",
   "[",
   "1",
   "]",
   "=",
   "mb_substr",
   "(",
   "$",
   "deletion",
   ",",
   "0",
   ",",
   "-",
   "$",
   "overlap_length1",
   ")",
   ";",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "+",
   "1",
   "]",
   "[",
   "1",
   "]",
   "=",
   "mb_substr",
   "(",
   "$",
   "insertion",
   ",",
   "$",
   "overlap_length1",
   ")",
   ";",
   "$",
   "pointer",
   "++",
   ";",
   "}",
   "}",
   "else",
   "{",
   "if",
   "(",
   "$",
   "overlap_length2",
   ">=",
   "mb_strlen",
   "(",
   "$",
   "deletion",
   ")",
   "/",
   "2",
   "||",
   "$",
   "overlap_length2",
   ">=",
   "mb_strlen",
   "(",
   "$",
   "insertion",
   ")",
   "/",
   "2",
   ")",
   "{",
   "// Reverse overlap found.",
   "// Insert an equality and swap and trim the surrounding edits.",
   "array_splice",
   "(",
   "$",
   "diffs",
   ",",
   "$",
   "pointer",
   ",",
   "0",
   ",",
   "array",
   "(",
   "array",
   "(",
   "self",
   "::",
   "EQUAL",
   ",",
   "mb_substr",
   "(",
   "$",
   "deletion",
   ",",
   "0",
   ",",
   "$",
   "overlap_length2",
   ")",
   ",",
   ")",
   ")",
   ")",
   ";",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "-",
   "1",
   "]",
   "=",
   "array",
   "(",
   "self",
   "::",
   "INSERT",
   ",",
   "mb_substr",
   "(",
   "$",
   "insertion",
   ",",
   "0",
   ",",
   "$",
   "overlap_length2",
   ")",
   ",",
   ")",
   ";",
   "$",
   "diffs",
   "[",
   "$",
   "pointer",
   "+",
   "1",
   "]",
   "=",
   "array",
   "(",
   "self",
   "::",
   "DELETE",
   ",",
   "mb_substr",
   "(",
   "$",
   "deletion",
   ",",
   "$",
   "overlap_length2",
   ")",
   ",",
   ")",
   ";",
   "$",
   "pointer",
   "++",
   ";",
   "}",
   "}",
   "$",
   "pointer",
   "++",
   ";",
   "}",
   "$",
   "pointer",
   "++",
   ";",
   "}",
   "$",
   "this",
   "->",
   "setChanges",
   "(",
   "$",
   "diffs",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-356",
  "nl_tokens": [
   "Determine",
   "the",
   "common",
   "prefix",
   "of",
   "two",
   "strings",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "commonPrefix",
   "(",
   "$",
   "text1",
   ",",
   "$",
   "text2",
   ")",
   "{",
   "// Quick check for common null cases.",
   "if",
   "(",
   "$",
   "text1",
   "==",
   "''",
   "||",
   "$",
   "text2",
   "==",
   "''",
   "||",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "0",
   ",",
   "1",
   ")",
   "!=",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "0",
   ",",
   "1",
   ")",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "// Binary search.",
   "// Performance analysis: http://neil.fraser.name/news/2007/10/09/",
   "$",
   "pointermin",
   "=",
   "0",
   ";",
   "$",
   "pointermax",
   "=",
   "<mask>",
   "(",
   "mb_strlen",
   "(",
   "$",
   "text1",
   ")",
   ",",
   "mb_strlen",
   "(",
   "$",
   "text2",
   ")",
   ")",
   ";",
   "$",
   "pointermid",
   "=",
   "$",
   "pointermax",
   ";",
   "$",
   "pointerstart",
   "=",
   "0",
   ";",
   "while",
   "(",
   "$",
   "pointermin",
   "<",
   "$",
   "pointermid",
   ")",
   "{",
   "if",
   "(",
   "mb_substr",
   "(",
   "$",
   "text1",
   ",",
   "$",
   "pointerstart",
   ",",
   "$",
   "pointermid",
   "-",
   "$",
   "pointerstart",
   ")",
   "==",
   "mb_substr",
   "(",
   "$",
   "text2",
   ",",
   "$",
   "pointerstart",
   ",",
   "$",
   "pointermid",
   "-",
   "$",
   "pointerstart",
   ")",
   ")",
   "{",
   "$",
   "pointermin",
   "=",
   "$",
   "pointermid",
   ";",
   "$",
   "pointerstart",
   "=",
   "$",
   "pointermin",
   ";",
   "}",
   "else",
   "{",
   "$",
   "pointermax",
   "=",
   "$",
   "pointermid",
   ";",
   "}",
   "$",
   "pointermid",
   "=",
   "(",
   "int",
   ")",
   "(",
   "(",
   "$",
   "pointermax",
   "-",
   "$",
   "pointermin",
   ")",
   "/",
   "2",
   ")",
   "+",
   "$",
   "pointermin",
   ";",
   "}",
   "return",
   "$",
   "pointermid",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-357",
  "nl_tokens": [
   "Get",
   "rectangle",
   "s",
   "height",
   "(",
   "by",
   "convention",
   "width",
   ">",
   "height",
   ")"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getHeight",
   "(",
   ")",
   "{",
   "return",
   "<mask>",
   "(",
   "array",
   "(",
   "(",
   "$",
   "this",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   "-",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ")",
   ",",
   "(",
   "$",
   "this",
   "->",
   "getPointD",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   "-",
   "$",
   "this",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-358",
  "nl_tokens": [
   "Generate",
   "a",
   "password",
   "salt",
   "based",
   "on",
   "the",
   "given",
   "input",
   "string",
   "."
  ],
  "pl_tokens": [
   "private",
   "function",
   "gensaltPrivate",
   "(",
   "$",
   "input",
   ")",
   "{",
   "$",
   "itoa64",
   "=",
   "PhpbbPassword",
   "::",
   "ITOA64",
   ";",
   "$",
   "output",
   "=",
   "'$H$'",
   ";",
   "$",
   "output",
   ".=",
   "$",
   "itoa64",
   "[",
   "<mask>",
   "(",
   "8",
   "+",
   "(",
   "(",
   "PHP_VERSION",
   ">=",
   "'5'",
   ")",
   "?",
   "5",
   ":",
   "3",
   ")",
   ",",
   "30",
   ")",
   "]",
   ";",
   "$",
   "output",
   ".=",
   "$",
   "this",
   "->",
   "encode64",
   "(",
   "$",
   "input",
   ",",
   "6",
   ")",
   ";",
   "return",
   "$",
   "output",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-359",
  "nl_tokens": [
   "\u6574\u7406trace\u6570\u636e"
  ],
  "pl_tokens": [
   "private",
   "function",
   "alignmentTraceData",
   "(",
   "array",
   "&",
   "$",
   "trace",
   "=",
   "array",
   "(",
   ")",
   ")",
   "{",
   "foreach",
   "(",
   "$",
   "trace",
   "as",
   "&",
   "$",
   "t",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "t",
   "[",
   "'file'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "t",
   "[",
   "'show_file'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "hiddenFileRealPath",
   "(",
   "$",
   "t",
   "[",
   "'file'",
   "]",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'start_line'",
   "]",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "t",
   "[",
   "'line'",
   "]",
   "-",
   "6",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'end_line'",
   "]",
   "=",
   "$",
   "t",
   "[",
   "'line'",
   "]",
   "+",
   "6",
   ";",
   "}",
   "elseif",
   "(",
   "isset",
   "(",
   "$",
   "t",
   "[",
   "'function'",
   "]",
   ")",
   "&&",
   "isset",
   "(",
   "$",
   "t",
   "[",
   "'class'",
   "]",
   ")",
   ")",
   "{",
   "try",
   "{",
   "$",
   "rc",
   "=",
   "new",
   "ReflectionClass",
   "(",
   "$",
   "t",
   "[",
   "'class'",
   "]",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'file'",
   "]",
   "=",
   "$",
   "rc",
   "->",
   "getFileName",
   "(",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'show_file'",
   "]",
   "=",
   "$",
   "this",
   "->",
   "hiddenFileRealPath",
   "(",
   "$",
   "rc",
   "->",
   "getFileName",
   "(",
   ")",
   ")",
   ";",
   "$",
   "rf",
   "=",
   "new",
   "ReflectionMethod",
   "(",
   "$",
   "t",
   "[",
   "'class'",
   "]",
   ",",
   "$",
   "t",
   "[",
   "'function'",
   "]",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'start_line'",
   "]",
   "=",
   "$",
   "rf",
   "->",
   "getStartLine",
   "(",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'end_line'",
   "]",
   "=",
   "$",
   "rf",
   "->",
   "getEndLine",
   "(",
   ")",
   ";",
   "$",
   "t",
   "[",
   "'line'",
   "]",
   "=",
   "sprintf",
   "(",
   "\"%s ~ %s\"",
   ",",
   "$",
   "t",
   "[",
   "'start_line'",
   "]",
   ",",
   "$",
   "t",
   "[",
   "'end_line'",
   "]",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "}",
   "else",
   "{",
   "continue",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-360",
  "nl_tokens": [
   "cURL",
   "for",
   "remote",
   "HTTP",
   "communication",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "curl",
   "(",
   "string",
   "$",
   "url",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   "{",
   "# Parse arguments.",
   "$",
   "default_args",
   "=",
   "[",
   "'headers'",
   "=>",
   "[",
   "]",
   ",",
   "'body'",
   "=>",
   "''",
   ",",
   "'cookie_file'",
   "=>",
   "''",
   ",",
   "'max_redirects'",
   "=>",
   "5",
   ",",
   "'max_con_secs'",
   "=>",
   "20",
   ",",
   "'max_stream_secs'",
   "=>",
   "20",
   ",",
   "'max_stream_size'",
   "=>",
   "0",
   ",",
   "'fail_on_error'",
   "=>",
   "true",
   ",",
   "'return_array'",
   "=>",
   "false",
   ",",
   "// Deprecated.",
   "'return'",
   "=>",
   "''",
   ",",
   "// Use this instead.",
   "]",
   ";",
   "$",
   "args",
   "=",
   "array_merge",
   "(",
   "$",
   "default_args",
   ",",
   "$",
   "args",
   ")",
   ";",
   "$",
   "args",
   "=",
   "array_intersect_key",
   "(",
   "$",
   "args",
   ",",
   "$",
   "default_args",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "args",
   "[",
   "'return_array'",
   "]",
   ")",
   "&&",
   "empty",
   "(",
   "$",
   "args",
   "[",
   "'return'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "args",
   "[",
   "'return'",
   "]",
   "=",
   "'array'",
   ";",
   "// Back compat.",
   "}",
   "// NOTE: Please use `return` instead of `return_array`.",
   "unset",
   "(",
   "$",
   "args",
   "[",
   "'return_array'",
   "]",
   ")",
   ";",
   "// Ditch this old argument now.",
   "# Extract and sanitize all args.",
   "extract",
   "(",
   "$",
   "args",
   ")",
   ";",
   "// Typify args.",
   "$",
   "headers",
   "=",
   "(",
   "array",
   ")",
   "$",
   "headers",
   ";",
   "$",
   "cookie_file",
   "=",
   "(",
   "string",
   ")",
   "$",
   "cookie_file",
   ";",
   "$",
   "max_redirects",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "max_redirects",
   ")",
   ";",
   "$",
   "max_con_secs",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "max_con_secs",
   ")",
   ";",
   "$",
   "max_stream_secs",
   "=",
   "max",
   "(",
   "1",
   ",",
   "(",
   "int",
   ")",
   "$",
   "max_stream_secs",
   ")",
   ";",
   "$",
   "max_stream_size",
   "=",
   "max",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "max_stream_size",
   ")",
   ";",
   "$",
   "fail_on_error",
   "=",
   "(",
   "bool",
   ")",
   "$",
   "fail_on_error",
   ";",
   "$",
   "return",
   "=",
   "(",
   "string",
   ")",
   "$",
   "return",
   ";",
   "# Parse request method from URL; e.g., `POST::`",
   "$",
   "method",
   "=",
   "''",
   ";",
   "// Initialize, parsed below.",
   "if",
   "(",
   "mb_stripos",
   "(",
   "$",
   "url",
   ",",
   "'::'",
   ")",
   "!==",
   "false",
   "&&",
   "preg_match",
   "(",
   "$",
   "this",
   "->",
   "method_regex",
   ",",
   "$",
   "url",
   ",",
   "$",
   "_m",
   ")",
   ")",
   "{",
   "$",
   "method",
   "=",
   "mb_strtoupper",
   "(",
   "$",
   "_m",
   "[",
   "'method'",
   "]",
   ")",
   ";",
   "$",
   "url",
   "=",
   "$",
   "_m",
   "[",
   "'url'",
   "]",
   ";",
   "// URL after `::`.",
   "if",
   "(",
   "$",
   "method",
   "===",
   "'HEAD'",
   "&&",
   "!",
   "$",
   "return",
   ")",
   "{",
   "$",
   "return",
   "=",
   "'array'",
   ";",
   "// Default for `HEAD` requests.",
   "}",
   "// This preserves back compat, otherwise it would be `object`.",
   "}",
   "// unset($_m); // Housekeeping.",
   "# Validate URL.",
   "if",
   "(",
   "!",
   "$",
   "url",
   ")",
   "{",
   "$",
   "response",
   "=",
   "[",
   "'code'",
   "=>",
   "0",
   ",",
   "'headers'",
   "=>",
   "[",
   "]",
   ",",
   "'body'",
   "=>",
   "''",
   ",",
   "'info'",
   "=>",
   "[",
   "]",
   ",",
   "'errno'",
   "=>",
   "0",
   ",",
   "'error'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "return",
   "===",
   "'object'",
   ")",
   "{",
   "return",
   "(",
   "object",
   ")",
   "$",
   "response",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "return",
   "===",
   "'array'",
   ")",
   "{",
   "return",
   "$",
   "response",
   ";",
   "}",
   "else",
   "{",
   "// Body only.",
   "return",
   "$",
   "response",
   "[",
   "'body'",
   "]",
   ";",
   "}",
   "}",
   "# Convert body to a string.",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "body",
   ")",
   "||",
   "is_object",
   "(",
   "$",
   "body",
   ")",
   ")",
   "{",
   "$",
   "body",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "buildUrlQuery",
   "(",
   "(",
   "array",
   ")",
   "$",
   "body",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "body",
   "=",
   "(",
   "string",
   ")",
   "$",
   "body",
   ";",
   "}",
   "# Make sure we always have a `user-agent`.",
   "foreach",
   "(",
   "$",
   "headers",
   "as",
   "$",
   "_key",
   "=>",
   "$",
   "_header",
   ")",
   "{",
   "if",
   "(",
   "mb_stripos",
   "(",
   "$",
   "_header",
   ",",
   "'user-agent:'",
   ")",
   "===",
   "0",
   ")",
   "{",
   "$",
   "_has_user_agent",
   "=",
   "true",
   ";",
   "break",
   ";",
   "// NOTE: This stops on the first `user-agent` header, even if it's empty.",
   "// If it's empty, or any thereafter are empty, we assume that is the desired behavior.",
   "// i.e., To force an empty `user-agent` header for whatever reason.",
   "}",
   "}",
   "// unset($_key, $_header); // Housekeeping.",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "_has_user_agent",
   ")",
   ")",
   "{",
   "$",
   "headers",
   "[",
   "]",
   "=",
   "'user-agent: '",
   ".",
   "__METHOD__",
   ";",
   "}",
   "# Setup header collection sub-routine.",
   "$",
   "curl_headers",
   "=",
   "''",
   ";",
   "// Initialize.",
   "$",
   "collect_output_headers",
   "=",
   "function",
   "(",
   "$",
   "curl",
   ",",
   "$",
   "headers",
   ")",
   "use",
   "(",
   "&",
   "$",
   "curl_headers",
   ")",
   "{",
   "$",
   "curl_headers",
   ".=",
   "$",
   "headers",
   ";",
   "// Write.",
   "return",
   "strlen",
   "(",
   "$",
   "headers",
   ")",
   ";",
   "// Bytes written.",
   "}",
   ";",
   "# Determine if we can follow location headers.",
   "$",
   "follow_location",
   "=",
   "$",
   "max_redirects",
   ">",
   "0",
   "&&",
   "$",
   "this",
   "->",
   "can_follow_location",
   ";",
   "$",
   "max_redirects",
   "=",
   "!",
   "$",
   "follow_location",
   "?",
   "0",
   ":",
   "$",
   "max_redirects",
   ";",
   "# Configure cURL options.",
   "$",
   "curl_opts",
   "=",
   "[",
   "CURLOPT_URL",
   "=>",
   "$",
   "url",
   ",",
   "CURLOPT_CONNECTTIMEOUT",
   "=>",
   "$",
   "max_con_secs",
   ",",
   "CURLOPT_TIMEOUT",
   "=>",
   "$",
   "max_stream_secs",
   ",",
   "CURLOPT_ENCODING",
   "=>",
   "''",
   ",",
   "CURLOPT_HTTPHEADER",
   "=>",
   "$",
   "headers",
   ",",
   "CURLOPT_FAILONERROR",
   "=>",
   "$",
   "fail_on_error",
   ",",
   "CURLOPT_FOLLOWLOCATION",
   "=>",
   "$",
   "follow_location",
   ",",
   "CURLOPT_MAXREDIRS",
   "=>",
   "$",
   "max_redirects",
   ",",
   "CURLOPT_HEADER",
   "=>",
   "false",
   ",",
   "CURLOPT_HEADERFUNCTION",
   "=>",
   "$",
   "collect_output_headers",
   ",",
   "CURLOPT_RETURNTRANSFER",
   "=>",
   "true",
   ",",
   "CURLOPT_NOBODY",
   "=>",
   "$",
   "method",
   "===",
   "'HEAD'",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "body",
   "&&",
   "$",
   "method",
   "!==",
   "'HEAD'",
   ")",
   "{",
   "if",
   "(",
   "$",
   "method",
   ")",
   "{",
   "$",
   "curl_opts",
   "+=",
   "[",
   "CURLOPT_CUSTOMREQUEST",
   "=>",
   "$",
   "method",
   ",",
   "CURLOPT_POSTFIELDS",
   "=>",
   "$",
   "body",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "curl_opts",
   "+=",
   "[",
   "CURLOPT_POST",
   "=>",
   "true",
   ",",
   "CURLOPT_POSTFIELDS",
   "=>",
   "$",
   "body",
   "]",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "method",
   ")",
   "{",
   "// No body data.",
   "$",
   "curl_opts",
   "+=",
   "[",
   "CURLOPT_CUSTOMREQUEST",
   "=>",
   "$",
   "method",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "cookie_file",
   ")",
   "{",
   "// Store cookies in this case.",
   "$",
   "curl_opts",
   "+=",
   "[",
   "CURLOPT_COOKIEJAR",
   "=>",
   "$",
   "cookie_file",
   ",",
   "CURLOPT_COOKIEFILE",
   "=>",
   "$",
   "cookie_file",
   "]",
   ";",
   "}",
   "if",
   "(",
   "$",
   "max_stream_size",
   ")",
   "{",
   "// Monitor bytes.",
   "$",
   "curl_opts",
   "+=",
   "[",
   "CURLOPT_NOPROGRESS",
   "=>",
   "false",
   ",",
   "CURLOPT_PROGRESSFUNCTION",
   "=>",
   "#",
   "function",
   "(",
   "$",
   "r",
   ",",
   "int",
   "$",
   "s",
   ",",
   "int",
   "$",
   "d",
   ")",
   "use",
   "(",
   "$",
   "max_stream_size",
   ")",
   "{",
   "return",
   "$",
   "d",
   ">",
   "$",
   "max_stream_size",
   "?",
   "1",
   ":",
   "0",
   ";",
   "// 1 = abort!",
   "}",
   ",",
   "]",
   ";",
   "// See: <http://jas.xyz/2kw2FQe>",
   "}",
   "# Initialize cURL and perform request now.",
   "if",
   "(",
   "!",
   "(",
   "$",
   "curl",
   "=",
   "curl_init",
   "(",
   ")",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "vars",
   "(",
   ")",
   ",",
   "'cURL init failure.'",
   ")",
   ";",
   "}",
   "// Highly unexpected, given there are no arguments here.",
   "curl_setopt_array",
   "(",
   "$",
   "curl",
   ",",
   "$",
   "curl_opts",
   ")",
   ";",
   "$",
   "curl_body",
   "=",
   "(",
   "string",
   ")",
   "curl_exec",
   "(",
   "$",
   "curl",
   ")",
   ";",
   "# Collect cURL info.",
   "$",
   "curl_info",
   "=",
   "curl_getinfo",
   "(",
   "$",
   "curl",
   ")",
   ";",
   "$",
   "curl_info",
   "=",
   "is_array",
   "(",
   "$",
   "curl_info",
   ")",
   "?",
   "$",
   "curl_info",
   ":",
   "[",
   "]",
   ";",
   "$",
   "curl_code",
   "=",
   "(",
   "int",
   ")",
   "(",
   "$",
   "curl_info",
   "[",
   "'http_code'",
   "]",
   "??",
   "0",
   ")",
   ";",
   "$",
   "curl_errno",
   "=",
   "(",
   "int",
   ")",
   "curl_errno",
   "(",
   "$",
   "curl",
   ")",
   ";",
   "$",
   "curl_error",
   "=",
   "(",
   "string",
   ")",
   "curl_error",
   "(",
   "$",
   "curl",
   ")",
   ";",
   "# Parse the headers that we collected, if any.",
   "$",
   "curl_headers",
   "=",
   "explode",
   "(",
   "\"\\r\\n\\r\\n\"",
   ",",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbTrim",
   "(",
   "$",
   "curl_headers",
   ")",
   ")",
   ";",
   "$",
   "curl_headers",
   "=",
   "$",
   "curl_headers",
   "[",
   "count",
   "(",
   "$",
   "curl_headers",
   ")",
   "-",
   "1",
   "]",
   ";",
   "// \u2191 Last set of headers; in case of location redirects.",
   "$",
   "_curl_headers",
   "=",
   "$",
   "curl_headers",
   ";",
   "$",
   "curl_headers",
   "=",
   "[",
   "]",
   ";",
   "// Initialize.",
   "foreach",
   "(",
   "preg_split",
   "(",
   "'/['",
   ".",
   "\"\\r\\n\"",
   ".",
   "']+/u'",
   ",",
   "$",
   "_curl_headers",
   ",",
   "-",
   "1",
   ",",
   "PREG_SPLIT_NO_EMPTY",
   ")",
   "as",
   "$",
   "_line",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "_line",
   "[",
   "0",
   "]",
   ")",
   "&&",
   "mb_strpos",
   "(",
   "$",
   "_line",
   ",",
   "':'",
   ",",
   "1",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "list",
   "(",
   "$",
   "_header",
   ",",
   "$",
   "_value",
   ")",
   "=",
   "explode",
   "(",
   "':'",
   ",",
   "$",
   "_line",
   ",",
   "2",
   ")",
   ";",
   "$",
   "curl_headers",
   "[",
   "mb_strtolower",
   "(",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbTrim",
   "(",
   "$",
   "_header",
   ")",
   ")",
   "]",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "mbTrim",
   "(",
   "$",
   "_value",
   ")",
   ";",
   "}",
   "}",
   "// unset($_curl_headers, $_line, $_header, $_value); // Housekeeping.",
   "# Check if failing on error. If so, empty the response body.",
   "if",
   "(",
   "$",
   "fail_on_error",
   "&&",
   "(",
   "$",
   "curl_code",
   "===",
   "0",
   "||",
   "$",
   "curl_code",
   ">=",
   "400",
   "||",
   "$",
   "curl_errno",
   ")",
   ")",
   "{",
   "$",
   "curl_body",
   "=",
   "''",
   ";",
   "// Empty body on error.",
   "}",
   "# Close cURL resource handle.",
   "curl_close",
   "(",
   "$",
   "curl",
   ")",
   ";",
   "# Return final response.",
   "$",
   "response",
   "=",
   "[",
   "'code'",
   "=>",
   "$",
   "curl_code",
   ",",
   "'headers'",
   "=>",
   "$",
   "curl_headers",
   ",",
   "'body'",
   "=>",
   "$",
   "curl_body",
   ",",
   "'info'",
   "=>",
   "$",
   "curl_info",
   ",",
   "'errno'",
   "=>",
   "$",
   "curl_errno",
   ",",
   "'error'",
   "=>",
   "$",
   "curl_error",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9debug[",
   "'",
   "\u00a9log'])",
   " ",
   "{",
   "",
   "$",
   "this",
   "->",
   "c",
   "::",
   "review",
   "(",
   "[",
   "'url'",
   "=>",
   "$",
   "url",
   ",",
   "'args'",
   "=>",
   "$",
   "args",
   ",",
   "'response'",
   "=>",
   "$",
   "response",
   ",",
   "]",
   ",",
   "'Remote URL connection details.'",
   ",",
   "__METHOD__",
   ".",
   "'#http'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "return",
   "===",
   "'object'",
   ")",
   "{",
   "return",
   "(",
   "object",
   ")",
   "$",
   "response",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "return",
   "===",
   "'array'",
   ")",
   "{",
   "return",
   "$",
   "response",
   ";",
   "}",
   "else",
   "{",
   "// Body only.",
   "return",
   "$",
   "response",
   "[",
   "'body'",
   "]",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-361",
  "nl_tokens": [
   "Test",
   "if",
   "two",
   "segments",
   "are",
   "parallels"
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "areParallels",
   "(",
   "Line",
   "$",
   "line1",
   ",",
   "Line",
   "$",
   "line2",
   ")",
   "{",
   "if",
   "(",
   "(",
   "$",
   "line1",
   "->",
   "isHorizontal",
   "(",
   ")",
   "&&",
   "$",
   "line2",
   "->",
   "isHorizontal",
   "(",
   ")",
   ")",
   "||",
   "(",
   "$",
   "line1",
   "->",
   "isVertical",
   "(",
   ")",
   "&&",
   "$",
   "line2",
   "->",
   "isVertical",
   "(",
   ")",
   ")",
   ")",
   "{",
   "return",
   "true",
   ";",
   "}",
   "$",
   "line1",
   "->",
   "rearrange",
   "(",
   ")",
   ";",
   "$",
   "line2",
   "->",
   "rearrange",
   "(",
   ")",
   ";",
   "$",
   "abs",
   "=",
   "array",
   "(",
   "$",
   "line1",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ",",
   "$",
   "line1",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ",",
   "$",
   "line2",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ",",
   "$",
   "line2",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getAbscissa",
   "(",
   ")",
   ")",
   ";",
   "$",
   "ords",
   "=",
   "array",
   "(",
   "$",
   "line1",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ",",
   "$",
   "line1",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ",",
   "$",
   "line2",
   "->",
   "getPointA",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ",",
   "$",
   "line2",
   "->",
   "getPointB",
   "(",
   ")",
   "->",
   "getOrdinate",
   "(",
   ")",
   ")",
   ";",
   "$",
   "e",
   "=",
   "new",
   "Point",
   "(",
   "rand",
   "(",
   "0",
   ",",
   "10",
   ")",
   "+",
   "(",
   "<mask>",
   "(",
   "$",
   "abs",
   ")",
   "+",
   "abs",
   "(",
   "min",
   "(",
   "$",
   "abs",
   ")",
   ")",
   ")",
   ",",
   "rand",
   "(",
   "0",
   ",",
   "10",
   ")",
   "+",
   "(",
   "max",
   "(",
   "$",
   "ords",
   ")",
   "+",
   "abs",
   "(",
   "min",
   "(",
   "$",
   "ords",
   ")",
   ")",
   ")",
   ")",
   ";",
   "$",
   "segAE",
   "=",
   "new",
   "Segment",
   "(",
   "$",
   "line1",
   "->",
   "getPointA",
   "(",
   ")",
   ",",
   "$",
   "e",
   ")",
   ";",
   "$",
   "segBE",
   "=",
   "new",
   "Segment",
   "(",
   "$",
   "line1",
   "->",
   "getPointB",
   "(",
   ")",
   ",",
   "$",
   "e",
   ")",
   ";",
   "$",
   "intersectCE",
   "=",
   "self",
   "::",
   "getLinesIntersection",
   "(",
   "$",
   "segAE",
   ",",
   "$",
   "line2",
   ")",
   ";",
   "$",
   "segCE",
   "=",
   "new",
   "Segment",
   "(",
   "$",
   "intersectCE",
   ",",
   "$",
   "e",
   ")",
   ";",
   "$",
   "intersectDE",
   "=",
   "self",
   "::",
   "getLinesIntersection",
   "(",
   "$",
   "segBE",
   ",",
   "$",
   "line2",
   ")",
   ";",
   "$",
   "segDE",
   "=",
   "new",
   "Segment",
   "(",
   "$",
   "intersectDE",
   ",",
   "$",
   "e",
   ")",
   ";",
   "/*\necho <<<TYPEOTHER\n        var demo1 = brd.create('point', [{$line1->getPointA()->x},{$line1->getPointA()->y}], {\n            name: 'a'\n        });\n        var demo2 = brd.create('point', [{$line1->getPointB()->x},{$line1->getPointB()->y}], {\n            name: 'b'\n        });\n        var segment1 = brd.create('line', [demo1,demo2], {straightFirst:false,straightLast:false});\n\n        var demo3 = brd.create('point', [{$intersectCE->x},{$intersectCE->y}], {\n            name: 'c'\n        });\n        var demo4 = brd.create('point', [{$intersectDE->x},{$intersectDE->y}], {\n            name: 'd'\n        });\n        var segment2 = brd.create('line', [demo3,demo4], {straightFirst:false,straightLast:false});\n\n        var demo5 = brd.create('point', [{$e->x},{$e->y}], {\n            name: 'e'\n        });\n        var segment3 = brd.create('line', [demo1,demo5], {straightFirst:false,straightLast:false,color:'#404040'});\n        var segment4 = brd.create('line', [demo2,demo5], {straightFirst:false,straightLast:false,color:'#404040'});\n        var segment5 = brd.create('line', [demo3,demo5], {straightFirst:false,straightLast:false,color:'#404040'});\n        var segment6 = brd.create('line', [demo4,demo5], {straightFirst:false,straightLast:false,color:'#404040'});\nTYPEOTHER;\n*/",
   "return",
   "(",
   "bool",
   ")",
   "(",
   "(",
   "$",
   "segAE",
   "->",
   "getLength",
   "(",
   ")",
   "/",
   "$",
   "segCE",
   "->",
   "getLength",
   "(",
   ")",
   ")",
   "==",
   "(",
   "$",
   "segBE",
   "->",
   "getLength",
   "(",
   ")",
   "/",
   "$",
   "segDE",
   "->",
   "getLength",
   "(",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-362",
  "nl_tokens": [
   "Run",
   "this",
   "CLI",
   "script",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "run",
   "(",
   "array",
   "$",
   "args",
   ")",
   "{",
   "$",
   "prog",
   "=",
   "array_shift",
   "(",
   "$",
   "args",
   ")",
   ";",
   "try",
   "{",
   "list",
   "(",
   "$",
   "options",
   ",",
   "$",
   "params",
   ")",
   "=",
   "$",
   "this",
   "->",
   "parse",
   "(",
   "$",
   "args",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "e",
   ")",
   "{",
   "fprintf",
   "(",
   "STDERR",
   ",",
   "'%s: %s'",
   ".",
   "PHP_EOL",
   ",",
   "$",
   "prog",
   ",",
   "$",
   "e",
   "->",
   "getMessage",
   "(",
   ")",
   ")",
   ";",
   "return",
   "2",
   ";",
   "}",
   "// Show help.",
   "if",
   "(",
   "$",
   "options",
   "[",
   "'h'",
   "]",
   ")",
   "{",
   "$",
   "this",
   "->",
   "printUsage",
   "(",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "Output",
   "(",
   "STDOUT",
   ")",
   ",",
   "$",
   "prog",
   ")",
   ";",
   "return",
   "0",
   ";",
   "}",
   "// Show version.",
   "if",
   "(",
   "$",
   "options",
   "[",
   "'V'",
   "]",
   ")",
   "{",
   "$",
   "version",
   "=",
   "self",
   "::",
   "getVersion",
   "(",
   ")",
   ";",
   "$",
   "license",
   "=",
   "self",
   "::",
   "getCopyrightAndLicense",
   "(",
   ")",
   ";",
   "echo",
   "'XRL version '",
   ".",
   "$",
   "version",
   ".",
   "PHP_EOL",
   ";",
   "echo",
   "PHP_EOL",
   ".",
   "$",
   "license",
   ".",
   "PHP_EOL",
   ";",
   "echo",
   "'Visit https://github.com/fpoirotte/XRL for more!'",
   ".",
   "PHP_EOL",
   ";",
   "return",
   "0",
   ";",
   "}",
   "// Do we have enough arguments to do something?",
   "if",
   "(",
   "$",
   "params",
   "[",
   "'serverURL'",
   "]",
   "===",
   "null",
   "||",
   "$",
   "params",
   "[",
   "'procedure'",
   "]",
   "===",
   "null",
   ")",
   "{",
   "$",
   "this",
   "->",
   "printUsage",
   "(",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "Output",
   "(",
   "STDERR",
   ")",
   ",",
   "$",
   "prog",
   ")",
   ";",
   "return",
   "2",
   ";",
   "}",
   "// Then let's do it!",
   "$",
   "encoder",
   "=",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "NativeEncoder",
   "(",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "Encoder",
   "(",
   "$",
   "options",
   "[",
   "'t'",
   "]",
   ",",
   "true",
   ")",
   ")",
   ";",
   "$",
   "decoder",
   "=",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "NativeDecoder",
   "(",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "Decoder",
   "(",
   "$",
   "options",
   "[",
   "'t'",
   "]",
   ",",
   "$",
   "options",
   "[",
   "'x'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "request",
   "=",
   "new",
   "\\",
   "fpoirotte",
   "\\",
   "XRL",
   "\\",
   "Request",
   "(",
   "$",
   "params",
   "[",
   "'procedure'",
   "]",
   ",",
   "$",
   "params",
   "[",
   "'additional'",
   "]",
   ")",
   ";",
   "// Change verbosity as necessary.",
   "if",
   "(",
   "class_exists",
   "(",
   "'\\\\Plop\\\\Plop'",
   ")",
   ")",
   "{",
   "$",
   "logging",
   "=",
   "\\",
   "Plop",
   "\\",
   "Plop",
   "::",
   "getInstance",
   "(",
   ")",
   ";",
   "$",
   "logging",
   "->",
   "getLogger",
   "(",
   ")",
   "->",
   "setLevel",
   "(",
   "40",
   "-",
   "<mask>",
   "(",
   "4",
   ",",
   "$",
   "options",
   "[",
   "'v'",
   "]",
   ")",
   "*",
   "10",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "logging",
   "=",
   "null",
   ";",
   "}",
   "// Prepare the request.",
   "$",
   "xml",
   "=",
   "$",
   "encoder",
   "->",
   "encodeRequest",
   "(",
   "$",
   "request",
   ")",
   ";",
   "$",
   "logging",
   "and",
   "$",
   "logging",
   "->",
   "debug",
   "(",
   "\"Request:\\n%(request)s\"",
   ",",
   "array",
   "(",
   "'request'",
   "=>",
   "$",
   "xml",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "options",
   "[",
   "'n'",
   "]",
   ")",
   "{",
   "echo",
   "'Not sending the actual query due to dry run mode.'",
   ".",
   "PHP_EOL",
   ";",
   "return",
   "0",
   ";",
   "}",
   "$",
   "headers",
   "=",
   "array",
   "(",
   "'Content-Type: text/xml'",
   ",",
   "'User-Agent: XRL/'",
   ".",
   "static",
   "::",
   "getVersion",
   "(",
   ")",
   ",",
   ")",
   ";",
   "// Prepare the context.",
   "$",
   "ctxOptions",
   "=",
   "array",
   "(",
   "'http'",
   "=>",
   "array",
   "(",
   "'method'",
   "=>",
   "'POST'",
   ",",
   "'content'",
   "=>",
   "$",
   "xml",
   ",",
   "'header'",
   "=>",
   "$",
   "headers",
   ",",
   ")",
   ",",
   ")",
   ";",
   "$",
   "context",
   "=",
   "stream_context_create",
   "(",
   "$",
   "ctxOptions",
   ")",
   ";",
   "libxml_set_streams_context",
   "(",
   "$",
   "context",
   ")",
   ";",
   "// Send the request and process the response.",
   "try",
   "{",
   "$",
   "result",
   "=",
   "$",
   "decoder",
   "->",
   "decodeResponse",
   "(",
   "$",
   "params",
   "[",
   "'serverURL'",
   "]",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "\\",
   "Exception",
   "$",
   "result",
   ")",
   "{",
   "// Nothing to do.",
   "}",
   "echo",
   "'Result:'",
   ".",
   "PHP_EOL",
   ".",
   "print_r",
   "(",
   "$",
   "result",
   ",",
   "true",
   ")",
   ".",
   "PHP_EOL",
   ";",
   "return",
   "0",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-363",
  "nl_tokens": [
   "Gets",
   "all",
   "lines"
  ],
  "pl_tokens": [
   "public",
   "function",
   "rows",
   "(",
   "array",
   "$",
   "options",
   "=",
   "[",
   "]",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_y'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_y'",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "(",
   "$",
   "keys",
   "=",
   "array_keys",
   "(",
   "$",
   "this",
   "->",
   "chars",
   ")",
   ")",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "}",
   "}",
   "$",
   "<mask>",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_y'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'min_y'",
   "]",
   ":",
   "min",
   "(",
   "$",
   "keys",
   ")",
   ";",
   "$",
   "max",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_y'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'max_y'",
   "]",
   ":",
   "max",
   "(",
   "$",
   "keys",
   ")",
   ";",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ")",
   "||",
   "!",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ")",
   ")",
   "{",
   "$",
   "flattened",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "chars",
   "as",
   "$",
   "key",
   "=>",
   "$",
   "char",
   ")",
   "{",
   "$",
   "flattened",
   "=",
   "array_merge",
   "(",
   "$",
   "flattened",
   ",",
   "array_keys",
   "(",
   "$",
   "char",
   ")",
   ")",
   ";",
   "}",
   "}",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'min_x'",
   "]",
   ":",
   "min",
   "(",
   "$",
   "flattened",
   ")",
   ";",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   "=",
   "isset",
   "(",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ")",
   "?",
   "$",
   "options",
   "[",
   "'max_x'",
   "]",
   ":",
   "max",
   "(",
   "$",
   "flattened",
   ")",
   ";",
   "return",
   "array_map",
   "(",
   "function",
   "(",
   "$",
   "i",
   ")",
   "use",
   "(",
   "$",
   "options",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "row",
   "(",
   "$",
   "i",
   ",",
   "$",
   "options",
   ")",
   ";",
   "}",
   ",",
   "range",
   "(",
   "$",
   "min",
   ",",
   "$",
   "max",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-364",
  "nl_tokens": [
   "Returns",
   "next",
   "chunk",
   "of",
   "request",
   "body"
  ],
  "pl_tokens": [
   "public",
   "function",
   "read",
   "(",
   "$",
   "length",
   ")",
   "{",
   "$",
   "ret",
   "=",
   "''",
   ";",
   "$",
   "boundary",
   "=",
   "$",
   "this",
   "->",
   "getBoundary",
   "(",
   ")",
   ";",
   "$",
   "paramCount",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "_params",
   ")",
   ";",
   "$",
   "uploadCount",
   "=",
   "count",
   "(",
   "$",
   "this",
   "->",
   "_uploads",
   ")",
   ";",
   "while",
   "(",
   "$",
   "length",
   ">",
   "0",
   "&&",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "<=",
   "$",
   "paramCount",
   "+",
   "$",
   "uploadCount",
   ")",
   "{",
   "$",
   "oldLength",
   "=",
   "$",
   "length",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "<",
   "$",
   "paramCount",
   ")",
   "{",
   "$",
   "param",
   "=",
   "sprintf",
   "(",
   "$",
   "this",
   "->",
   "_headerParam",
   ",",
   "$",
   "boundary",
   ",",
   "$",
   "this",
   "->",
   "_params",
   "[",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "]",
   "[",
   "0",
   "]",
   ")",
   ".",
   "$",
   "this",
   "->",
   "_params",
   "[",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "]",
   "[",
   "1",
   "]",
   ".",
   "\"\\r\\n\"",
   ";",
   "$",
   "ret",
   ".=",
   "substr",
   "(",
   "$",
   "param",
   ",",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "length",
   "-=",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "param",
   ")",
   "-",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "<",
   "$",
   "paramCount",
   "+",
   "$",
   "uploadCount",
   ")",
   "{",
   "$",
   "pos",
   "=",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "-",
   "$",
   "paramCount",
   ";",
   "$",
   "header",
   "=",
   "sprintf",
   "(",
   "$",
   "this",
   "->",
   "_headerUpload",
   ",",
   "$",
   "boundary",
   ",",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'name'",
   "]",
   ",",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'filename'",
   "]",
   ",",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'type'",
   "]",
   ")",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   "<",
   "strlen",
   "(",
   "$",
   "header",
   ")",
   ")",
   "{",
   "$",
   "ret",
   ".=",
   "substr",
   "(",
   "$",
   "header",
   ",",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "length",
   "-=",
   "min",
   "(",
   "strlen",
   "(",
   "$",
   "header",
   ")",
   "-",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "}",
   "$",
   "filePos",
   "=",
   "max",
   "(",
   "0",
   ",",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   "-",
   "strlen",
   "(",
   "$",
   "header",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "filePos",
   "<",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'size'",
   "]",
   ")",
   "{",
   "while",
   "(",
   "$",
   "length",
   ">",
   "0",
   "&&",
   "!",
   "feof",
   "(",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'fp'",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "false",
   "===",
   "(",
   "$",
   "chunk",
   "=",
   "fread",
   "(",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'fp'",
   "]",
   ",",
   "$",
   "length",
   ")",
   ")",
   ")",
   "{",
   "throw",
   "new",
   "HTTP_Request2_LogicException",
   "(",
   "'Failed reading file upload'",
   ",",
   "HTTP_Request2_Exception",
   "::",
   "READ_ERROR",
   ")",
   ";",
   "}",
   "$",
   "ret",
   ".=",
   "$",
   "chunk",
   ";",
   "$",
   "length",
   "-=",
   "strlen",
   "(",
   "$",
   "chunk",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "$",
   "length",
   ">",
   "0",
   ")",
   "{",
   "$",
   "start",
   "=",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   "+",
   "(",
   "$",
   "oldLength",
   "-",
   "$",
   "length",
   ")",
   "-",
   "strlen",
   "(",
   "$",
   "header",
   ")",
   "-",
   "$",
   "this",
   "->",
   "_uploads",
   "[",
   "$",
   "pos",
   "]",
   "[",
   "'size'",
   "]",
   ";",
   "$",
   "ret",
   ".=",
   "substr",
   "(",
   "\"\\r\\n\"",
   ",",
   "$",
   "start",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "length",
   "-=",
   "min",
   "(",
   "2",
   "-",
   "$",
   "start",
   ",",
   "$",
   "length",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "closing",
   "=",
   "'--'",
   ".",
   "$",
   "boundary",
   ".",
   "\"--\\r\\n\"",
   ";",
   "$",
   "ret",
   ".=",
   "substr",
   "(",
   "$",
   "closing",
   ",",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "$",
   "length",
   "-=",
   "min",
   "(",
   "strlen",
   "(",
   "$",
   "closing",
   ")",
   "-",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   ",",
   "$",
   "length",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "length",
   ">",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "_pos",
   "=",
   "array",
   "(",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "0",
   "]",
   "+",
   "1",
   ",",
   "0",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "_pos",
   "[",
   "1",
   "]",
   "+=",
   "$",
   "oldLength",
   ";",
   "}",
   "}",
   "return",
   "$",
   "ret",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-365",
  "nl_tokens": [
   "Verify",
   "if",
   "the",
   "current",
   "token",
   "is",
   "one",
   "of",
   "the",
   "targetted",
   "functions",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "check_for_matches",
   "(",
   "$",
   "stackPtr",
   ")",
   "{",
   "$",
   "token_content",
   "=",
   "strtolower",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "stackPtr",
   "]",
   "[",
   "'content'",
   "]",
   ")",
   ";",
   "$",
   "skip_to",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "groups",
   "as",
   "$",
   "groupName",
   "=>",
   "$",
   "group",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "excluded_groups",
   "[",
   "$",
   "groupName",
   "]",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "group",
   "[",
   "'whitelist'",
   "]",
   "[",
   "$",
   "token_content",
   "]",
   ")",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "preg_match",
   "(",
   "$",
   "group",
   "[",
   "'regex'",
   "]",
   ",",
   "$",
   "token_content",
   ")",
   "===",
   "1",
   ")",
   "{",
   "$",
   "skip_to",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "process_matched_token",
   "(",
   "$",
   "stackPtr",
   ",",
   "$",
   "groupName",
   ",",
   "$",
   "token_content",
   ")",
   ";",
   "}",
   "}",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "skip_to",
   ")",
   "||",
   "<mask>",
   "(",
   "$",
   "skip_to",
   ")",
   "===",
   "0",
   ")",
   "{",
   "return",
   ";",
   "}",
   "return",
   "min",
   "(",
   "$",
   "skip_to",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-366",
  "nl_tokens": [
   "Are",
   "we",
   "serving",
   "the",
   "full",
   "file",
   "or",
   "just",
   "part",
   "of",
   "it?"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "checkFullFile",
   "(",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "is_null",
   "(",
   "$",
   "this",
   "->",
   "filesize",
   ")",
   ")",
   "{",
   "throw",
   "\\",
   "AWonderPHP",
   "\\",
   "FileWrapper",
   "\\",
   "NullPropertyException",
   "::",
   "propertyIsNull",
   "(",
   "'filesize'",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "end",
   "=",
   "$",
   "this",
   "->",
   "filesize",
   "-",
   "1",
   ";",
   "$",
   "this",
   "->",
   "total",
   "=",
   "$",
   "this",
   "->",
   "filesize",
   ";",
   "if",
   "(",
   "$",
   "this",
   "->",
   "istext",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "filesize",
   ">",
   "$",
   "this",
   "->",
   "chunksize",
   ")",
   "{",
   "$",
   "this",
   "->",
   "ranges",
   "=",
   "'bytes'",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "_SERVER",
   "[",
   "'HTTP_RANGE'",
   "]",
   ")",
   ")",
   "{",
   "list",
   "(",
   "$",
   "size_unit",
   ",",
   "$",
   "range_orig",
   ")",
   "=",
   "explode",
   "(",
   "'='",
   ",",
   "$",
   "_SERVER",
   "[",
   "'HTTP_RANGE'",
   "]",
   ",",
   "2",
   ")",
   ";",
   "if",
   "(",
   "$",
   "size_unit",
   "==",
   "'bytes'",
   ")",
   "{",
   "$",
   "this",
   "->",
   "fullfile",
   "=",
   "false",
   ";",
   "//below causes noise in log, so do w/ if then instead. Not using extra_ranges anyway",
   "//list($range, $extra_ranges) = explode(',', $range_orig, 2);",
   "$",
   "arr",
   "=",
   "explode",
   "(",
   "','",
   ",",
   "$",
   "range_orig",
   ",",
   "2",
   ")",
   ";",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "arr",
   "[",
   "1",
   "]",
   ")",
   ")",
   "{",
   "$",
   "extra_ranges",
   "=",
   "$",
   "arr",
   "[",
   "1",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "extra_ranges",
   "=",
   "null",
   ";",
   "}",
   "$",
   "range",
   "=",
   "$",
   "arr",
   "[",
   "0",
   "]",
   ";",
   "list",
   "(",
   "$",
   "start",
   ",",
   "$",
   "end",
   ")",
   "=",
   "explode",
   "(",
   "'-'",
   ",",
   "$",
   "range",
   ",",
   "2",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "badrange",
   "=",
   "true",
   ";",
   "}",
   "$",
   "end",
   "=",
   "(",
   "empty",
   "(",
   "$",
   "end",
   ")",
   ")",
   "?",
   "(",
   "$",
   "this",
   "->",
   "filesize",
   "-",
   "1",
   ")",
   ":",
   "<mask>",
   "(",
   "abs",
   "(",
   "intval",
   "(",
   "$",
   "end",
   ")",
   ")",
   ",",
   "(",
   "$",
   "this",
   "->",
   "filesize",
   "-",
   "1",
   ")",
   ")",
   ";",
   "$",
   "start",
   "=",
   "(",
   "empty",
   "(",
   "$",
   "start",
   ")",
   "||",
   "$",
   "end",
   "<",
   "abs",
   "(",
   "intval",
   "(",
   "$",
   "start",
   ")",
   ")",
   ")",
   "?",
   "0",
   ":",
   "max",
   "(",
   "abs",
   "(",
   "intval",
   "(",
   "$",
   "start",
   ")",
   ")",
   ",",
   "0",
   ")",
   ";",
   "if",
   "(",
   "$",
   "start",
   ">",
   "0",
   "||",
   "$",
   "end",
   "<",
   "(",
   "$",
   "this",
   "->",
   "filesize",
   "-",
   "1",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "start",
   "=",
   "$",
   "start",
   ";",
   "$",
   "this",
   "->",
   "end",
   "=",
   "$",
   "end",
   ";",
   "$",
   "this",
   "->",
   "total",
   "=",
   "$",
   "this",
   "->",
   "end",
   "-",
   "$",
   "this",
   "->",
   "start",
   "+",
   "1",
   ";",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-367",
  "nl_tokens": [
   "Get",
   "least",
   "busy",
   "connection",
   "with",
   "idle",
   "state",
   "or",
   "at",
   "least",
   "with",
   "minimum",
   "queued",
   "queries",
   "count"
  ],
  "pl_tokens": [
   "private",
   "function",
   "getLeastBusyConnectionOld",
   "(",
   ")",
   ":",
   "pgConnection",
   "{",
   "if",
   "(",
   "count",
   "(",
   "$",
   "this",
   "->",
   "connections",
   ")",
   "===",
   "0",
   ")",
   "{",
   "// try to spin up another connection to return",
   "$",
   "conn",
   "=",
   "$",
   "this",
   "->",
   "createNewConnection",
   "(",
   ")",
   ";",
   "if",
   "(",
   "$",
   "conn",
   "===",
   "null",
   ")",
   "{",
   "throw",
   "new",
   "Exception",
   "(",
   "'There are no connections. Cannot find least busy one and could not create a new one.'",
   ")",
   ";",
   "}",
   "return",
   "$",
   "conn",
   ";",
   "}",
   "$",
   "<mask>",
   "=",
   "reset",
   "(",
   "$",
   "this",
   "->",
   "connections",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "connections",
   "as",
   "$",
   "connection",
   ")",
   "{",
   "// if this connection is idle - just return it",
   "if",
   "(",
   "$",
   "connection",
   "->",
   "getBacklogLength",
   "(",
   ")",
   "===",
   "0",
   "&&",
   "$",
   "connection",
   "->",
   "getState",
   "(",
   ")",
   "===",
   "pgConnection",
   "::",
   "STATE_READY",
   ")",
   "{",
   "return",
   "$",
   "connection",
   ";",
   "}",
   "if",
   "(",
   "$",
   "min",
   "->",
   "getBacklogLength",
   "(",
   ")",
   ">",
   "$",
   "connection",
   "->",
   "getBacklogLength",
   "(",
   ")",
   ")",
   "{",
   "$",
   "min",
   "=",
   "$",
   "connection",
   ";",
   "}",
   "}",
   "if",
   "(",
   "count",
   "(",
   "$",
   "this",
   "->",
   "connections",
   ")",
   "<",
   "$",
   "this",
   "->",
   "maxConnections",
   ")",
   "{",
   "return",
   "$",
   "this",
   "->",
   "createNewConnection",
   "(",
   ")",
   ";",
   "}",
   "return",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-368",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "insert",
   "(",
   "PagerInterface",
   "$",
   "pager",
   ",",
   "array",
   "$",
   "options",
   "=",
   "array",
   "(",
   ")",
   ")",
   "{",
   "$",
   "pager",
   "->",
   "setMaxPerPage",
   "(",
   "empty",
   "(",
   "$",
   "options",
   "[",
   "'max_per_page'",
   "]",
   ")",
   "?",
   "100",
   ":",
   "$",
   "options",
   "[",
   "'max_per_page'",
   "]",
   ")",
   ";",
   "$",
   "options",
   "=",
   "array_replace",
   "(",
   "[",
   "'max_per_page'",
   "=>",
   "$",
   "pager",
   "->",
   "getMaxPerPage",
   "(",
   ")",
   ",",
   "'first_page'",
   "=>",
   "$",
   "pager",
   "->",
   "getCurrentPage",
   "(",
   ")",
   ",",
   "'last_page'",
   "=>",
   "$",
   "pager",
   "->",
   "getNbPages",
   "(",
   ")",
   ",",
   "]",
   ",",
   "$",
   "options",
   ")",
   ";",
   "$",
   "pager",
   "->",
   "setCurrentPage",
   "(",
   "$",
   "options",
   "[",
   "'first_page'",
   "]",
   ")",
   ";",
   "$",
   "objectPersister",
   "=",
   "$",
   "this",
   "->",
   "registry",
   "->",
   "getPersister",
   "(",
   "$",
   "options",
   "[",
   "'indexName'",
   "]",
   ",",
   "$",
   "options",
   "[",
   "'typeName'",
   "]",
   ")",
   ";",
   "try",
   "{",
   "$",
   "event",
   "=",
   "new",
   "PrePersistEvent",
   "(",
   "$",
   "pager",
   ",",
   "$",
   "objectPersister",
   ",",
   "$",
   "options",
   ")",
   ";",
   "$",
   "this",
   "->",
   "dispatcher",
   "->",
   "dispatch",
   "(",
   "Events",
   "::",
   "PRE_PERSIST",
   ",",
   "$",
   "event",
   ")",
   ";",
   "$",
   "pager",
   "=",
   "$",
   "event",
   "->",
   "getPager",
   "(",
   ")",
   ";",
   "$",
   "options",
   "=",
   "$",
   "event",
   "->",
   "getOptions",
   "(",
   ")",
   ";",
   "$",
   "lastPage",
   "=",
   "<mask>",
   "(",
   "$",
   "options",
   "[",
   "'last_page'",
   "]",
   ",",
   "$",
   "pager",
   "->",
   "getNbPages",
   "(",
   ")",
   ")",
   ";",
   "$",
   "page",
   "=",
   "$",
   "pager",
   "->",
   "getCurrentPage",
   "(",
   ")",
   ";",
   "do",
   "{",
   "$",
   "pager",
   "->",
   "setCurrentPage",
   "(",
   "$",
   "page",
   ")",
   ";",
   "$",
   "this",
   "->",
   "insertPage",
   "(",
   "$",
   "page",
   ",",
   "$",
   "pager",
   ",",
   "$",
   "objectPersister",
   ",",
   "$",
   "options",
   ")",
   ";",
   "$",
   "page",
   "++",
   ";",
   "}",
   "while",
   "(",
   "$",
   "page",
   "<=",
   "$",
   "lastPage",
   ")",
   ";",
   "}",
   "finally",
   "{",
   "$",
   "event",
   "=",
   "new",
   "PostPersistEvent",
   "(",
   "$",
   "pager",
   ",",
   "$",
   "objectPersister",
   ",",
   "$",
   "options",
   ")",
   ";",
   "$",
   "this",
   "->",
   "dispatcher",
   "->",
   "dispatch",
   "(",
   "Events",
   "::",
   "POST_PERSIST",
   ",",
   "$",
   "event",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-369",
  "nl_tokens": [
   "@param",
   "int",
   "$interval",
   "In",
   "minutes"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getTimeOptions",
   "(",
   "$",
   "interval",
   ")",
   "{",
   "$",
   "<mask>",
   "=",
   "Carbon",
   "::",
   "parse",
   "(",
   "$",
   "this",
   "->",
   "getMin",
   "(",
   ")",
   ")",
   ";",
   "$",
   "max",
   "=",
   "Carbon",
   "::",
   "parse",
   "(",
   "$",
   "this",
   "->",
   "getMax",
   "(",
   ")",
   ")",
   ";",
   "$",
   "options",
   "=",
   "[",
   "]",
   ";",
   "// Round up to the closest interval",
   "while",
   "(",
   "$",
   "min",
   "->",
   "minute",
   "%",
   "$",
   "interval",
   "!=",
   "0",
   ")",
   "{",
   "$",
   "min",
   "->",
   "addMinute",
   "(",
   ")",
   ";",
   "}",
   "// Add options foreach interval",
   "while",
   "(",
   "$",
   "min",
   "->",
   "lte",
   "(",
   "$",
   "max",
   ")",
   ")",
   "{",
   "$",
   "options",
   "[",
   "]",
   "=",
   "$",
   "min",
   "->",
   "copy",
   "(",
   ")",
   ";",
   "$",
   "min",
   "->",
   "addMinutes",
   "(",
   "$",
   "interval",
   ")",
   ";",
   "}",
   "return",
   "$",
   "options",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-370",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "validate",
   "(",
   "$",
   "value",
   ",",
   "Constraint",
   "$",
   "constraint",
   ")",
   "{",
   "if",
   "(",
   "null",
   "===",
   "$",
   "value",
   ")",
   "{",
   "return",
   ";",
   "}",
   "if",
   "(",
   "!",
   "(",
   "$",
   "value",
   "instanceof",
   "\\",
   "DateTime",
   ")",
   ")",
   "{",
   "if",
   "(",
   "method_exists",
   "(",
   "$",
   "this",
   "->",
   "context",
   ",",
   "'buildViolation'",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "context",
   "->",
   "buildViolation",
   "(",
   "$",
   "constraint",
   "->",
   "invalidMessage",
   ",",
   "array",
   "(",
   "'{{ value }}'",
   "=>",
   "$",
   "value",
   ",",
   ")",
   ")",
   "->",
   "addViolation",
   "(",
   ")",
   ";",
   "return",
   ";",
   "}",
   "$",
   "this",
   "->",
   "context",
   "->",
   "addViolationAt",
   "(",
   "'expireAt'",
   ",",
   "$",
   "constraint",
   "->",
   "invalidMessage",
   ",",
   "array",
   "(",
   "'{{ value }}'",
   "=>",
   "$",
   "value",
   ",",
   ")",
   ")",
   ";",
   "}",
   "/**\n         * The Credit Card is not expired until last day of the month\n         */",
   "$",
   "value",
   "->",
   "modify",
   "(",
   "'last day of this month'",
   ")",
   ";",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "constraint",
   "->",
   "<mask>",
   "&&",
   "$",
   "value",
   "<",
   "$",
   "constraint",
   "->",
   "min",
   ")",
   "{",
   "if",
   "(",
   "method_exists",
   "(",
   "$",
   "this",
   "->",
   "context",
   ",",
   "'buildViolation'",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "context",
   "->",
   "buildViolation",
   "(",
   "$",
   "constraint",
   "->",
   "minMessage",
   ")",
   "->",
   "atPath",
   "(",
   "'expireAt'",
   ")",
   "->",
   "addViolation",
   "(",
   ")",
   ";",
   "return",
   ";",
   "}",
   "$",
   "this",
   "->",
   "context",
   "->",
   "addViolationAt",
   "(",
   "'expireAt'",
   ",",
   "$",
   "constraint",
   "->",
   "minMessage",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-371",
  "nl_tokens": [
   "Equal",
   "to",
   "or",
   "Less",
   "than"
  ],
  "pl_tokens": [
   "public",
   "function",
   "less_than_equal_to",
   "(",
   "string",
   "$",
   "str",
   "=",
   "null",
   ",",
   "string",
   "$",
   "<mask>",
   ")",
   ":",
   "bool",
   "{",
   "return",
   "is_numeric",
   "(",
   "$",
   "str",
   ")",
   "?",
   "(",
   "$",
   "str",
   "<=",
   "$",
   "max",
   ")",
   ":",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-372",
  "nl_tokens": [
   "Display",
   "errors",
   "in",
   "json",
   "format",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "displayJson",
   "(",
   "array",
   "$",
   "filesInfo",
   ")",
   ":",
   "int",
   "{",
   "$",
   "errors",
   "=",
   "0",
   ";",
   "\\",
   "array_walk",
   "(",
   "$",
   "filesInfo",
   ",",
   "static",
   "function",
   "(",
   "&",
   "$",
   "v",
   ")",
   "use",
   "(",
   "&",
   "$",
   "errors",
   ")",
   ":",
   "void",
   "{",
   "$",
   "v",
   "[",
   "'file'",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "v",
   "[",
   "'file'",
   "]",
   ";",
   "if",
   "(",
   "!",
   "$",
   "v",
   "[",
   "'valid'",
   "]",
   ")",
   "{",
   "$",
   "errors",
   "++",
   ";",
   "}",
   "}",
   ")",
   ";",
   "$",
   "this",
   "->",
   "getOutput",
   "(",
   ")",
   "->",
   "writeln",
   "(",
   "\\",
   "json_encode",
   "(",
   "$",
   "filesInfo",
   ",",
   "\\",
   "JSON_PRETTY_PRINT",
   "|",
   "\\",
   "JSON_UNESCAPED_SLASHES",
   ")",
   ")",
   ";",
   "return",
   "\\",
   "<mask>",
   "(",
   "$",
   "errors",
   ",",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-373",
  "nl_tokens": [
   "Abbreviated",
   "byte",
   "notation",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "bytesAbbr",
   "(",
   "float",
   "$",
   "bytes",
   ",",
   "int",
   "$",
   "precision",
   "=",
   "2",
   ")",
   ":",
   "string",
   "{",
   "$",
   "bytes",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "(",
   "int",
   ")",
   "$",
   "bytes",
   ")",
   ";",
   "$",
   "precision",
   "=",
   "max",
   "(",
   "0",
   ",",
   "$",
   "precision",
   ")",
   ";",
   "$",
   "units",
   "=",
   "[",
   "'bytes'",
   ",",
   "'kbs'",
   ",",
   "'MB'",
   ",",
   "'GB'",
   ",",
   "'TB'",
   "]",
   ";",
   "$",
   "power",
   "=",
   "floor",
   "(",
   "(",
   "$",
   "bytes",
   "?",
   "log",
   "(",
   "$",
   "bytes",
   ")",
   ":",
   "0",
   ")",
   "/",
   "log",
   "(",
   "1024",
   ")",
   ")",
   ";",
   "$",
   "abbr_bytes",
   "=",
   "round",
   "(",
   "$",
   "bytes",
   "/",
   "pow",
   "(",
   "1024",
   ",",
   "$",
   "power",
   ")",
   ",",
   "$",
   "precision",
   ")",
   ";",
   "$",
   "abbr",
   "=",
   "$",
   "units",
   "[",
   "min",
   "(",
   "$",
   "power",
   ",",
   "count",
   "(",
   "$",
   "units",
   ")",
   "-",
   "1",
   ")",
   "]",
   ";",
   "if",
   "(",
   "$",
   "abbr_bytes",
   "===",
   "(",
   "float",
   ")",
   "1",
   "&&",
   "$",
   "abbr",
   "===",
   "'bytes'",
   ")",
   "{",
   "$",
   "abbr",
   "=",
   "'byte'",
   ";",
   "// Quick fix.",
   "}",
   "elseif",
   "(",
   "$",
   "abbr_bytes",
   "===",
   "(",
   "float",
   ")",
   "1",
   "&&",
   "$",
   "abbr",
   "===",
   "'kbs'",
   ")",
   "{",
   "$",
   "abbr",
   "=",
   "'kb'",
   ";",
   "// Quick fix.",
   "}",
   "return",
   "$",
   "abbr_bytes",
   ".",
   "' '",
   ".",
   "$",
   "abbr",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-374",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getChangedTimeAcrossTranslations",
   "(",
   ")",
   "{",
   "$",
   "changed",
   "=",
   "$",
   "this",
   "->",
   "getUntranslated",
   "(",
   ")",
   "->",
   "getChangedTime",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "getTranslationLanguages",
   "(",
   "FALSE",
   ")",
   "as",
   "$",
   "language",
   ")",
   "{",
   "$",
   "translation_changed",
   "=",
   "$",
   "this",
   "->",
   "getTranslation",
   "(",
   "$",
   "language",
   "->",
   "getId",
   "(",
   ")",
   ")",
   "->",
   "getChangedTime",
   "(",
   ")",
   ";",
   "$",
   "changed",
   "=",
   "<mask>",
   "(",
   "$",
   "translation_changed",
   ",",
   "$",
   "changed",
   ")",
   ";",
   "}",
   "return",
   "$",
   "changed",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-375",
  "nl_tokens": [
   "Max",
   "execution",
   "time",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "int",
   "$",
   "max",
   "=",
   "null",
   ")",
   ":",
   "int",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "max",
   ")",
   "&&",
   "$",
   "max",
   ">=",
   "0",
   ")",
   "{",
   "@",
   "set_time_limit",
   "(",
   "$",
   "max",
   ")",
   ";",
   "}",
   "return",
   "(",
   "int",
   ")",
   "ini_get",
   "(",
   "'max_execution_time'",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-376",
  "nl_tokens": [
   "GET",
   "JSON",
   "response",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getJson",
   "(",
   "string",
   "$",
   "url",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "\\",
   "StdClass",
   "{",
   "$",
   "default_args",
   "=",
   "[",
   "'cache'",
   "=>",
   "true",
   ",",
   "'cache_max_age'",
   "=>",
   "strtotime",
   "(",
   "'-15 minutes'",
   ")",
   ",",
   "'api_access_token'",
   "=>",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9zenhub[",
   "'",
   "\u00a9api_access_token'],",
   "",
   "",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Merge defaults.",
   "$",
   "time",
   "=",
   "time",
   "(",
   ")",
   ";",
   "// Current time.",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   "=",
   "(",
   "bool",
   ")",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   ";",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "$",
   "time",
   ",",
   "(",
   "int",
   ")",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'api_access_token'",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'api_access_token'",
   "]",
   ";",
   "$",
   "url_sha1",
   "=",
   "sha1",
   "(",
   "$",
   "url",
   ")",
   ";",
   "// A SHA-1 hash of the URL.",
   "$",
   "cache_dir_permissions",
   "=",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9fs_permissions[",
   "'",
   "\u00a9transient_dirs'];",
   "",
   "",
   "$",
   "cache_dir",
   "=",
   "$",
   "this",
   "->",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "sha1ModShardId",
   "(",
   "$",
   "url_sha1",
   ",",
   "true",
   ")",
   ";",
   "$",
   "cache_file",
   "=",
   "$",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "url_sha1",
   ";",
   "// Hash location.",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   "&&",
   "is_file",
   "(",
   "$",
   "cache_file",
   ")",
   "&&",
   "filemtime",
   "(",
   "$",
   "cache_file",
   ")",
   ">=",
   "$",
   "args",
   "[",
   "'cache_max_age'",
   "]",
   ")",
   "{",
   "return",
   "$",
   "response_object",
   "=",
   "json_decode",
   "(",
   "file_get_contents",
   "(",
   "$",
   "cache_file",
   ")",
   ")",
   ";",
   "}",
   "$",
   "response",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "remoteRequest",
   "(",
   "'GET::'",
   ".",
   "$",
   "url",
   ",",
   "[",
   "'headers'",
   "=>",
   "[",
   "'accept: application/json'",
   ",",
   "'x-authentication-token: '",
   ".",
   "$",
   "args",
   "[",
   "'api_access_token'",
   "]",
   ",",
   "]",
   ",",
   "'return_array'",
   "=>",
   "true",
   ",",
   "]",
   ")",
   ";",
   "// Expecting the API to return JSON.",
   "$",
   "response_object",
   "=",
   "(",
   "object",
   ")",
   "[",
   "'success'",
   "=>",
   "$",
   "response",
   "[",
   "'code'",
   "]",
   "&&",
   "$",
   "response",
   "[",
   "'code'",
   "]",
   "<",
   "400",
   ",",
   "'data'",
   "=>",
   "json_decode",
   "(",
   "$",
   "response",
   "[",
   "'body'",
   "]",
   ")",
   ",",
   "'response'",
   "=>",
   "$",
   "response",
   ",",
   "]",
   ";",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'cache'",
   "]",
   ")",
   "{",
   "if",
   "(",
   "!",
   "is_dir",
   "(",
   "$",
   "cache_dir",
   ")",
   ")",
   "{",
   "mkdir",
   "(",
   "$",
   "cache_dir",
   ",",
   "$",
   "cache_dir_permissions",
   ",",
   "true",
   ")",
   ";",
   "}",
   "file_put_contents",
   "(",
   "$",
   "cache_file",
   ",",
   "json_encode",
   "(",
   "$",
   "response_object",
   ")",
   ")",
   ";",
   "}",
   "return",
   "$",
   "response_object",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-377",
  "nl_tokens": [
   "Compress",
   "PNG",
   "image",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "compressPng",
   "(",
   "string",
   "$",
   "file",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "c",
   "::",
   "canCallFunc",
   "(",
   "'exec'",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "default_args",
   "=",
   "[",
   "'min_quality'",
   "=>",
   "0",
   ",",
   "'max_quality'",
   "=>",
   "0",
   ",",
   "'output_file'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Defaults.",
   "if",
   "(",
   "!",
   "$",
   "file",
   "||",
   "!",
   "is_file",
   "(",
   "$",
   "file",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   "?",
   ":",
   "60",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "min",
   "(",
   "100",
   ",",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'max_quality'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'max_quality'",
   "]",
   "?",
   ":",
   "90",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'max_quality'",
   "]",
   "=",
   "max",
   "(",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   ",",
   "min",
   "(",
   "100",
   ",",
   "$",
   "args",
   "[",
   "'max_quality'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ";",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "=",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "?",
   ":",
   "$",
   "file",
   ";",
   "$",
   "output_file_existed_prior",
   "=",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "$",
   "esc_file",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "file",
   ")",
   ";",
   "$",
   "esc_output_file",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "$",
   "esc_quality",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "args",
   "[",
   "'min_quality'",
   "]",
   ".",
   "'-'",
   ".",
   "$",
   "args",
   "[",
   "'max_quality'",
   "]",
   ")",
   ";",
   "exec",
   "(",
   "'pngquant --skip-if-larger --quality='",
   ".",
   "$",
   "esc_quality",
   ".",
   "' --force --output='",
   ".",
   "$",
   "esc_output_file",
   ".",
   "' '",
   ".",
   "$",
   "esc_file",
   ",",
   "$",
   "_",
   ",",
   "$",
   "status",
   ")",
   ";",
   "if",
   "(",
   "$",
   "status",
   "===",
   "0",
   ")",
   "{",
   "return",
   "true",
   ";",
   "// Success.",
   "//",
   "}",
   "elseif",
   "(",
   "in_array",
   "(",
   "$",
   "status",
   ",",
   "[",
   "98",
   ",",
   "99",
   "]",
   ",",
   "true",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "!==",
   "$",
   "file",
   ")",
   "{",
   "return",
   "copy",
   "(",
   "$",
   "file",
   ",",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "else",
   "{",
   "return",
   "true",
   ";",
   "}",
   "// See `$ man pngquant` for further details.",
   "// `98` = --skip-if-larger, `99` = --quality min-max.",
   "}",
   "else",
   "{",
   "if",
   "(",
   "!",
   "$",
   "output_file_existed_prior",
   "&&",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ")",
   "{",
   "unlink",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-378",
  "nl_tokens": [
   "Sets",
   "an",
   "unencrypted",
   "cookie",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "setUe",
   "(",
   "string",
   "$",
   "name",
   ",",
   "string",
   "$",
   "value",
   ",",
   "int",
   "$",
   "expires_after",
   "=",
   "null",
   ",",
   "string",
   "$",
   "path",
   "=",
   "null",
   ",",
   "string",
   "$",
   "domain",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "secure",
   "=",
   "null",
   ",",
   "bool",
   "$",
   "http_only",
   "=",
   "null",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "name",
   ")",
   "{",
   "// Must have a cookie name!",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Missing cookie name.'",
   ")",
   ";",
   "}",
   "$",
   "expires_after",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "expires_after",
   "??",
   "31556926",
   ")",
   ";",
   "$",
   "expires",
   "=",
   "$",
   "expires_after",
   "?",
   "time",
   "(",
   ")",
   "+",
   "$",
   "expires_after",
   ":",
   "0",
   ";",
   "$",
   "path",
   "=",
   "$",
   "path",
   "??",
   "'/'",
   ";",
   "// Entire site.",
   "$",
   "domain",
   "=",
   "$",
   "domain",
   "??",
   "$",
   "this",
   "->",
   "c",
   "::",
   "currentHost",
   "(",
   "false",
   ")",
   ";",
   "$",
   "domain",
   "=",
   "$",
   "domain",
   "===",
   "'root'",
   "?",
   "'.'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "currentRootHost",
   "(",
   "false",
   ")",
   ":",
   "$",
   "domain",
   ";",
   "$",
   "secure",
   "=",
   "$",
   "secure",
   "??",
   "$",
   "this",
   "->",
   "c",
   "::",
   "isSsl",
   "(",
   ")",
   ";",
   "$",
   "http_only",
   "=",
   "$",
   "http_only",
   "??",
   "true",
   ";",
   "if",
   "(",
   "headers_sent",
   "(",
   ")",
   ")",
   "{",
   "throw",
   "$",
   "this",
   "->",
   "c",
   "::",
   "issue",
   "(",
   "'Headers already sent.'",
   ")",
   ";",
   "}",
   "setcookie",
   "(",
   "$",
   "name",
   ",",
   "$",
   "value",
   ",",
   "$",
   "expires",
   ",",
   "$",
   "path",
   ",",
   "$",
   "domain",
   ",",
   "$",
   "secure",
   ",",
   "$",
   "http_only",
   ")",
   ";",
   "if",
   "(",
   "mb_stripos",
   "(",
   "$",
   "name",
   ",",
   "'_test_'",
   ")",
   "===",
   "false",
   ")",
   "{",
   "$",
   "_COOKIE",
   "[",
   "$",
   "name",
   "]",
   "=",
   "$",
   "value",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-379",
  "nl_tokens": [
   "Compress",
   "SVG",
   "image",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "compressSvg",
   "(",
   "string",
   "$",
   "file",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "bool",
   "{",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "c",
   "::",
   "canCallFunc",
   "(",
   "'exec'",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "}",
   "$",
   "default_args",
   "=",
   "[",
   "'precision'",
   "=>",
   "0",
   ",",
   "'output_file'",
   "=>",
   "''",
   ",",
   "]",
   ";",
   "$",
   "args",
   "+=",
   "$",
   "default_args",
   ";",
   "// Defaults.",
   "if",
   "(",
   "!",
   "$",
   "file",
   "||",
   "!",
   "is_file",
   "(",
   "$",
   "file",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// Not possible.",
   "}",
   "$",
   "args",
   "[",
   "'precision'",
   "]",
   "=",
   "(",
   "int",
   ")",
   "(",
   "$",
   "args",
   "[",
   "'precision'",
   "]",
   "?",
   ":",
   "4",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'precision'",
   "]",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "min",
   "(",
   "8",
   ",",
   "$",
   "args",
   "[",
   "'precision'",
   "]",
   ")",
   ")",
   ";",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "=",
   "(",
   "string",
   ")",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ";",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "=",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   "?",
   ":",
   "$",
   "file",
   ";",
   "$",
   "output_file_existed_prior",
   "=",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "$",
   "esc_file",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "file",
   ")",
   ";",
   "$",
   "esc_precision",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "args",
   "[",
   "'precision'",
   "]",
   ")",
   ";",
   "$",
   "esc_output_file",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "escShellArg",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "exec",
   "(",
   "'svgo --quiet --precision='",
   ".",
   "$",
   "esc_precision",
   ".",
   "' --output='",
   ".",
   "$",
   "esc_output_file",
   ".",
   "' '",
   ".",
   "$",
   "esc_file",
   ",",
   "$",
   "_",
   ",",
   "$",
   "status",
   ")",
   ";",
   "if",
   "(",
   "$",
   "status",
   "===",
   "0",
   ")",
   "{",
   "return",
   "true",
   ";",
   "// Success.",
   "}",
   "else",
   "{",
   "if",
   "(",
   "!",
   "$",
   "output_file_existed_prior",
   "&&",
   "is_file",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ")",
   "{",
   "unlink",
   "(",
   "$",
   "args",
   "[",
   "'output_file'",
   "]",
   ")",
   ";",
   "}",
   "return",
   "false",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-380",
  "nl_tokens": [
   "Get",
   "depth",
   "of",
   "node"
  ],
  "pl_tokens": [
   "public",
   "function",
   "getDepthOfNode",
   "(",
   "Node",
   "$",
   "node",
   ")",
   "{",
   "$",
   "edges",
   "=",
   "$",
   "node",
   "->",
   "getEdges",
   "(",
   ")",
   ";",
   "if",
   "(",
   "0",
   "===",
   "sizeof",
   "(",
   "$",
   "edges",
   ")",
   ")",
   "{",
   "return",
   "0",
   ";",
   "}",
   "// our tree is not binary : interface can have more than one parent",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "edges",
   "as",
   "$",
   "edge",
   ")",
   "{",
   "if",
   "(",
   "$",
   "edge",
   "->",
   "getFrom",
   "(",
   ")",
   "==",
   "$",
   "node",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "$",
   "n",
   "=",
   "1",
   "+",
   "$",
   "this",
   "->",
   "getDepthOfNode",
   "(",
   "$",
   "edge",
   "->",
   "getFrom",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "$",
   "n",
   ">",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "$",
   "n",
   ";",
   "}",
   "}",
   "return",
   "$",
   "max",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-381",
  "nl_tokens": [
   "Retrieve",
   "the",
   "minimum",
   "value",
   "of",
   "a",
   "given",
   "column",
   ".."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "$",
   "column",
   ")",
   "{",
   "$",
   "qb",
   "=",
   "$",
   "this",
   "->",
   "createQueryBuilder",
   "(",
   ")",
   ";",
   "$",
   "qb",
   "->",
   "select",
   "(",
   "sprintf",
   "(",
   "'MIN(%s) AS min_%s'",
   ",",
   "$",
   "qb",
   "->",
   "alias",
   "(",
   "$",
   "column",
   ")",
   ",",
   "$",
   "column",
   ")",
   ")",
   ";",
   "return",
   "$",
   "qb",
   "->",
   "fetchSingleScalar",
   "(",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-382",
  "nl_tokens": [
   "\u7528\u4e8e\u975e\u81ea\u52a8\u63d0\u4ea4\u72b6\u6001\u4e0b\u9762\u7684\u67e5\u8be2\u63d0\u4ea4",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "commit",
   "(",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "0",
   "===",
   "$",
   "this",
   "->",
   "transactionLevel",
   ")",
   "{",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'There was no active transaction.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isRollbackOnly",
   ")",
   "{",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'Commit failed for rollback only.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "1",
   "===",
   "$",
   "this",
   "->",
   "transactionLevel",
   ")",
   "{",
   "$",
   "this",
   "->",
   "pdo",
   "(",
   "true",
   ")",
   "->",
   "commit",
   "(",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "transactionLevel",
   ">",
   "1",
   "&&",
   "$",
   "this",
   "->",
   "hasSavepoints",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "releaseSavepoint",
   "(",
   "$",
   "this",
   "->",
   "getSavepointName",
   "(",
   ")",
   ")",
   ";",
   "}",
   "$",
   "this",
   "->",
   "transactionLevel",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "this",
   "->",
   "transactionLevel",
   "-",
   "1",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-383",
  "nl_tokens": [
   "Less",
   "than"
  ],
  "pl_tokens": [
   "public",
   "function",
   "less_than",
   "(",
   "string",
   "$",
   "str",
   "=",
   "null",
   ",",
   "string",
   "$",
   "<mask>",
   ")",
   ":",
   "bool",
   "{",
   "return",
   "is_numeric",
   "(",
   "$",
   "str",
   ")",
   "?",
   "(",
   "$",
   "str",
   "<",
   "$",
   "max",
   ")",
   ":",
   "false",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-384",
  "nl_tokens": [
   "Add",
   "the",
   "limit",
   "header",
   "information",
   "to",
   "the",
   "response",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "addHeader",
   "(",
   "$",
   "signature",
   ",",
   "$",
   "tooManyAttempts",
   "=",
   "false",
   ")",
   "{",
   "/** @var \\Phalcon\\Http\\Response $response */",
   "$",
   "response",
   "=",
   "$",
   "this",
   "->",
   "getDI",
   "(",
   ")",
   "->",
   "getShared",
   "(",
   "Services",
   "::",
   "RESPONSE",
   ")",
   ";",
   "$",
   "limiter",
   "=",
   "$",
   "this",
   "->",
   "getLimiter",
   "(",
   ")",
   ";",
   "$",
   "response",
   "->",
   "setHeader",
   "(",
   "'X-RateLimit-Limit'",
   ",",
   "$",
   "this",
   "->",
   "<mask>",
   ")",
   ";",
   "if",
   "(",
   "$",
   "tooManyAttempts",
   ")",
   "{",
   "$",
   "msg",
   "=",
   "StatusCode",
   "::",
   "message",
   "(",
   "StatusCode",
   "::",
   "TOO_MANY_REQUESTS",
   ")",
   ";",
   "$",
   "response",
   "->",
   "setContent",
   "(",
   "$",
   "msg",
   ")",
   "->",
   "setStatusCode",
   "(",
   "StatusCode",
   "::",
   "TOO_MANY_REQUESTS",
   ",",
   "$",
   "msg",
   ")",
   "->",
   "setHeader",
   "(",
   "'X-RateLimit-Remaining'",
   ",",
   "0",
   ")",
   "->",
   "setHeader",
   "(",
   "'Retry-After'",
   ",",
   "$",
   "limiter",
   "->",
   "availableIn",
   "(",
   "$",
   "signature",
   ",",
   "$",
   "this",
   "->",
   "decay",
   ")",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "response",
   "->",
   "setHeader",
   "(",
   "'X-RateLimit-Remaining'",
   ",",
   "$",
   "limiter",
   "->",
   "retriesLeft",
   "(",
   "$",
   "signature",
   ",",
   "$",
   "this",
   "->",
   "max",
   ",",
   "$",
   "this",
   "->",
   "decay",
   ")",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-385",
  "nl_tokens": [
   "Method",
   "to",
   "deal",
   "with",
   "the",
   "case",
   "where",
   "Addition",
   "and",
   "removal",
   ".",
   "takes",
   "place",
   "simuntaneously",
   ".",
   "Example",
   ":",
   "2",
   "lines",
   "in",
   "ancestor",
   "3",
   "lines",
   "in",
   "local",
   ".",
   "and",
   "1",
   "line",
   "in",
   "remote",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "linesAddedRemovedAndModified",
   "(",
   "array",
   "$",
   "ancestor",
   ",",
   "array",
   "$",
   "local",
   ",",
   "array",
   "$",
   "remote",
   ",",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_local",
   ",",
   "$",
   "count_remote",
   ")",
   "{",
   "$",
   "merged",
   "=",
   "[",
   "]",
   ";",
   "$",
   "count_array",
   "=",
   "[",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_local",
   ",",
   "$",
   "count_remote",
   "]",
   ";",
   "sort",
   "(",
   "$",
   "count_array",
   ")",
   ";",
   "$",
   "mincount",
   "=",
   "<mask>",
   "(",
   "$",
   "count_local",
   ",",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_remote",
   ")",
   ";",
   "$",
   "maxcount",
   "=",
   "max",
   "(",
   "$",
   "count_local",
   ",",
   "$",
   "count_ancestor",
   ",",
   "$",
   "count_remote",
   ")",
   ";",
   "// First for loop compares all 3 nodes and returns updated node.",
   "for",
   "(",
   "$",
   "key",
   "=",
   "0",
   ";",
   "$",
   "key",
   "<",
   "$",
   "mincount",
   ";",
   "$",
   "key",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   "||",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A conflict has occured\"",
   ")",
   ";",
   "}",
   "}",
   "// Second for loop compares 2 nodes and if they are identical",
   "// add the changes to new array otherwise throw conflict exception.",
   "for",
   "(",
   "$",
   "key",
   "=",
   "$",
   "mincount",
   ";",
   "$",
   "key",
   "<",
   "$",
   "count_array",
   "[",
   "1",
   "]",
   ";",
   "$",
   "key",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "count_ancestor",
   "==",
   "$",
   "mincount",
   "&&",
   "(",
   "$",
   "count_remote",
   "==",
   "$",
   "maxcount",
   "||",
   "$",
   "count_local",
   "==",
   "$",
   "maxcount",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A conflict has occured\"",
   ")",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "count_local",
   "==",
   "$",
   "mincount",
   "&&",
   "(",
   "$",
   "count_ancestor",
   "==",
   "$",
   "maxcount",
   "||",
   "$",
   "count_remote",
   "==",
   "$",
   "maxcount",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ")",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A conflict has occured\"",
   ")",
   ";",
   "}",
   "}",
   "elseif",
   "(",
   "$",
   "count_remote",
   "==",
   "$",
   "mincount",
   "&&",
   "(",
   "$",
   "count_ancestor",
   "==",
   "$",
   "maxcount",
   "||",
   "$",
   "count_local",
   "==",
   "$",
   "maxcount",
   ")",
   ")",
   "{",
   "if",
   "(",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   "==",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ")",
   ")",
   "{",
   "unset",
   "(",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "throw",
   "new",
   "ConflictException",
   "(",
   "\"A conflict has occured\"",
   ")",
   ";",
   "}",
   "}",
   "}",
   "// Third for loops just adds the newly added lines to new array.",
   "for",
   "(",
   "$",
   "key",
   "=",
   "$",
   "count_array",
   "[",
   "1",
   "]",
   ";",
   "$",
   "key",
   "<",
   "$",
   "maxcount",
   ";",
   "$",
   "key",
   "++",
   ")",
   "{",
   "if",
   "(",
   "$",
   "count_remote",
   "==",
   "$",
   "maxcount",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "remote",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "count_ancestor",
   "==",
   "$",
   "maxcount",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "ancestor",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "count_local",
   "==",
   "$",
   "maxcount",
   ")",
   "{",
   "$",
   "merged",
   "[",
   "$",
   "key",
   "]",
   "=",
   "$",
   "local",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "}",
   "return",
   "$",
   "merged",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-386",
  "nl_tokens": [
   "{",
   "@inheritdoc",
   "}"
  ],
  "pl_tokens": [
   "public",
   "function",
   "process",
   "(",
   ")",
   "{",
   "// prepares renderer",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "setRenderer",
   "(",
   "new",
   "Twig",
   "(",
   "$",
   "this",
   "->",
   "getAllLayoutsPaths",
   "(",
   ")",
   ",",
   "$",
   "this",
   "->",
   "config",
   ")",
   ")",
   ";",
   "// add globals variables",
   "$",
   "this",
   "->",
   "addGlobals",
   "(",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'RENDER'",
   ",",
   "'Rendering pages'",
   "]",
   ")",
   ";",
   "// collect published pages",
   "/* @var $page Page */",
   "$",
   "filteredPages",
   "=",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "filter",
   "(",
   "function",
   "(",
   "Page",
   "$",
   "page",
   ")",
   "{",
   "return",
   "!",
   "empty",
   "(",
   "$",
   "page",
   "->",
   "getVariable",
   "(",
   "'published'",
   ")",
   ")",
   ";",
   "}",
   ")",
   ";",
   "$",
   "<mask>",
   "=",
   "count",
   "(",
   "$",
   "filteredPages",
   ")",
   ";",
   "// render each page",
   "$",
   "count",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "filteredPages",
   "as",
   "$",
   "page",
   ")",
   "{",
   "$",
   "count",
   "++",
   ";",
   "$",
   "rendered",
   "=",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getRenderer",
   "(",
   ")",
   "->",
   "render",
   "(",
   "$",
   "layout",
   "=",
   "(",
   "new",
   "Layout",
   "(",
   ")",
   ")",
   "->",
   "finder",
   "(",
   "$",
   "page",
   ",",
   "$",
   "this",
   "->",
   "config",
   ")",
   ",",
   "[",
   "'page'",
   "=>",
   "$",
   "page",
   "]",
   ")",
   ";",
   "$",
   "page",
   "->",
   "setVariable",
   "(",
   "'rendered'",
   ",",
   "$",
   "rendered",
   ")",
   ";",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getPages",
   "(",
   ")",
   "->",
   "replace",
   "(",
   "$",
   "page",
   "->",
   "getId",
   "(",
   ")",
   ",",
   "$",
   "page",
   ")",
   ";",
   "$",
   "message",
   "=",
   "sprintf",
   "(",
   "'%s (%s)'",
   ",",
   "(",
   "$",
   "page",
   "->",
   "getPathname",
   "(",
   ")",
   "?",
   ":",
   "'index'",
   ")",
   ",",
   "$",
   "layout",
   ")",
   ";",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "phpoole",
   "->",
   "getMessageCb",
   "(",
   ")",
   ",",
   "[",
   "'RENDER_PROGRESS'",
   ",",
   "$",
   "message",
   ",",
   "$",
   "count",
   ",",
   "$",
   "max",
   "]",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-387",
  "nl_tokens": [
   "Get",
   "information",
   "about",
   "the",
   "status",
   "of",
   "a",
   "connection",
   "to",
   "QuickBooks"
  ],
  "pl_tokens": [
   "public",
   "function",
   "status",
   "(",
   "$",
   "user",
   "=",
   "null",
   ",",
   "$",
   "levels",
   "=",
   "array",
   "(",
   ")",
   ")",
   "{",
   "$",
   "Driver",
   "=",
   "$",
   "this",
   "->",
   "_driver",
   ";",
   "if",
   "(",
   "!",
   "$",
   "user",
   ")",
   "{",
   "$",
   "user",
   "=",
   "$",
   "Driver",
   "->",
   "authDefault",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "count",
   "(",
   "$",
   "levels",
   ")",
   ")",
   "{",
   "$",
   "levels",
   "=",
   "array",
   "(",
   "60",
   "*",
   "60",
   "*",
   "12",
   "=>",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_NOTICE",
   ",",
   "'Notice: A connection has not been made in %d days, %d hours and %d minutes.'",
   ")",
   ",",
   "60",
   "*",
   "60",
   "*",
   "24",
   "=>",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_CAUTION",
   ",",
   "'Caution: A connection has not been made in %d days, %d hours and %d minutes.'",
   ")",
   ",",
   "60",
   "*",
   "60",
   "*",
   "36",
   "=>",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_WARNING",
   ",",
   "'Warning! A connection has not been made in %d days, %d hours and %d minutes.'",
   ")",
   ",",
   "60",
   "*",
   "60",
   "*",
   "48",
   "=>",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_DANGER",
   ",",
   "'DANGER! A connection has not been made in %d days, %d hours and %d minutes! Contact support to get this issue resolved!'",
   ")",
   ",",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "levels",
   "[",
   "0",
   "]",
   ")",
   ")",
   "{",
   "$",
   "levels",
   "[",
   "0",
   "]",
   "=",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_OK",
   ",",
   "'Status is OK. Last connection made %d days, %d hours, and %d minutes ago.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "levels",
   "[",
   "-",
   "1",
   "]",
   ")",
   ")",
   "{",
   "$",
   "levels",
   "[",
   "-",
   "1",
   "]",
   "=",
   "array",
   "(",
   "QuickBooks_Status_Report",
   "::",
   "STATUS_UNKNOWN",
   ",",
   "'Status is unknown.'",
   ")",
   ";",
   "}",
   "//print_r($levels);",
   "// Find the status from the ticket table",
   "$",
   "last",
   "=",
   "$",
   "Driver",
   "->",
   "authLast",
   "(",
   "$",
   "user",
   ")",
   ";",
   "if",
   "(",
   "is_array",
   "(",
   "$",
   "last",
   ")",
   ")",
   "{",
   "krsort",
   "(",
   "$",
   "levels",
   ")",
   ";",
   "$",
   "ago",
   "=",
   "time",
   "(",
   ")",
   "-",
   "strtotime",
   "(",
   "$",
   "last",
   "[",
   "1",
   "]",
   ")",
   ";",
   "$",
   "days",
   "=",
   "floor",
   "(",
   "$",
   "ago",
   "/",
   "(",
   "60",
   "*",
   "60",
   "*",
   "24",
   ")",
   ")",
   ";",
   "$",
   "hours",
   "=",
   "floor",
   "(",
   "(",
   "$",
   "ago",
   "-",
   "(",
   "$",
   "days",
   "*",
   "60",
   "*",
   "60",
   "*",
   "24",
   ")",
   ")",
   "/",
   "60.0",
   "/",
   "60.0",
   ")",
   ";",
   "$",
   "minutes",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "floor",
   "(",
   "(",
   "$",
   "ago",
   "-",
   "(",
   "$",
   "days",
   "*",
   "60",
   "*",
   "60",
   "*",
   "24",
   ")",
   "-",
   "(",
   "$",
   "hours",
   "*",
   "60",
   "*",
   "60",
   ")",
   ")",
   "/",
   "60.0",
   ")",
   ")",
   ";",
   "$",
   "retr",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "levels",
   "as",
   "$",
   "level",
   "=>",
   "$",
   "tuple",
   ")",
   "{",
   "if",
   "(",
   "$",
   "level",
   "<=",
   "0",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "$",
   "ago",
   ">",
   "$",
   "level",
   ")",
   "{",
   "$",
   "retr",
   "=",
   "$",
   "tuple",
   ";",
   "break",
   ";",
   "}",
   "}",
   "if",
   "(",
   "!",
   "$",
   "retr",
   ")",
   "{",
   "$",
   "retr",
   "=",
   "$",
   "levels",
   "[",
   "0",
   "]",
   ";",
   "}",
   "$",
   "retr",
   "[",
   "1",
   "]",
   "=",
   "sprintf",
   "(",
   "$",
   "retr",
   "[",
   "1",
   "]",
   ",",
   "$",
   "days",
   ",",
   "$",
   "hours",
   ",",
   "$",
   "minutes",
   ")",
   ";",
   "$",
   "retr",
   "[",
   "]",
   "=",
   "$",
   "last",
   "[",
   "0",
   "]",
   ";",
   "$",
   "retr",
   "[",
   "]",
   "=",
   "$",
   "last",
   "[",
   "1",
   "]",
   ";",
   "return",
   "$",
   "retr",
   ";",
   "}",
   "return",
   "$",
   "levels",
   "[",
   "-",
   "1",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-388",
  "nl_tokens": [
   "Calculates",
   "the",
   "units",
   "of",
   "time",
   "required",
   "for",
   "an",
   "average",
   "person",
   "to",
   "read",
   "the",
   "given",
   "passage",
   "of",
   "text",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "readTime",
   "(",
   "$",
   "s",
   ",",
   "$",
   "rate",
   "=",
   "200",
   ",",
   "$",
   "minimum",
   "=",
   "1",
   ")",
   "{",
   "$",
   "words",
   "=",
   "$",
   "this",
   "->",
   "wordcount",
   "(",
   "$",
   "s",
   ")",
   ";",
   "return",
   "<mask>",
   "(",
   "intval",
   "(",
   "$",
   "minimum",
   ")",
   ",",
   "floor",
   "(",
   "$",
   "words",
   "/",
   "intval",
   "(",
   "$",
   "rate",
   ")",
   ")",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-389",
  "nl_tokens": [
   "Pads",
   "our",
   "string",
   "out",
   "so",
   "that",
   "all",
   "titles",
   "are",
   "the",
   "same",
   "length",
   "to",
   "nicely",
   "line",
   "up",
   "descriptions",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "padTitle",
   "(",
   "string",
   "$",
   "item",
   ",",
   "int",
   "$",
   "<mask>",
   ",",
   "int",
   "$",
   "extra",
   "=",
   "2",
   ",",
   "int",
   "$",
   "indent",
   "=",
   "0",
   ")",
   ":",
   "string",
   "{",
   "$",
   "max",
   "+=",
   "$",
   "extra",
   "+",
   "$",
   "indent",
   ";",
   "$",
   "item",
   "=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "indent",
   ")",
   ".",
   "$",
   "item",
   ";",
   "$",
   "item",
   "=",
   "str_pad",
   "(",
   "$",
   "item",
   ",",
   "$",
   "max",
   ")",
   ";",
   "return",
   "$",
   "item",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-390",
  "nl_tokens": [
   "\u4e8b\u52a1\u56de\u6eda",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "rollBack",
   "(",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "0",
   "===",
   "$",
   "this",
   "->",
   "transactionLevel",
   ")",
   "{",
   "throw",
   "new",
   "InvalidArgumentException",
   "(",
   "'There was no active transaction.'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "1",
   "===",
   "$",
   "this",
   "->",
   "transactionLevel",
   ")",
   "{",
   "$",
   "this",
   "->",
   "transactionLevel",
   "=",
   "0",
   ";",
   "$",
   "this",
   "->",
   "pdo",
   "(",
   "true",
   ")",
   "->",
   "rollBack",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "isRollbackOnly",
   "=",
   "false",
   ";",
   "}",
   "elseif",
   "(",
   "$",
   "this",
   "->",
   "transactionLevel",
   ">",
   "1",
   "&&",
   "$",
   "this",
   "->",
   "hasSavepoints",
   "(",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "rollbackSavepoint",
   "(",
   "$",
   "this",
   "->",
   "getSavepointName",
   "(",
   ")",
   ")",
   ";",
   "$",
   "this",
   "->",
   "transactionLevel",
   "--",
   ";",
   "}",
   "else",
   "{",
   "$",
   "this",
   "->",
   "isRollbackOnly",
   "=",
   "true",
   ";",
   "$",
   "this",
   "->",
   "transactionLevel",
   "=",
   "<mask>",
   "(",
   "0",
   ",",
   "$",
   "this",
   "->",
   "transactionLevel",
   "-",
   "1",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-391",
  "nl_tokens": [
   "Link",
   "history",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "linkHistory",
   "(",
   "int",
   "$",
   "page",
   "=",
   "1",
   ",",
   "int",
   "$",
   "per_page",
   "=",
   "50",
   ",",
   "array",
   "$",
   "args",
   "=",
   "[",
   "]",
   ")",
   ":",
   "array",
   "{",
   "# Parse incoming arguments.",
   "$",
   "page",
   "=",
   "<mask>",
   "(",
   "1",
   ",",
   "$",
   "page",
   ")",
   ";",
   "$",
   "per_page",
   "=",
   "max",
   "(",
   "1",
   ",",
   "$",
   "per_page",
   ")",
   ";",
   "$",
   "offset",
   "=",
   "(",
   "$",
   "page",
   "-",
   "1",
   ")",
   "*",
   "$",
   "per_page",
   ";",
   "$",
   "default_args",
   "=",
   "[",
   "'access_token'",
   "=>",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9bitly[",
   "'",
   "\u00a9api_key'],",
   "",
   "",
   "'offset'",
   "=>",
   "$",
   "offset",
   ",",
   "'limit'",
   "=>",
   "$",
   "per_page",
   ",",
   "'private'",
   "=>",
   "'off'",
   ",",
   "]",
   ";",
   "$",
   "args",
   "=",
   "array_merge",
   "(",
   "$",
   "default_args",
   ",",
   "$",
   "args",
   ")",
   ";",
   "# Already cached this in memory?",
   "if",
   "(",
   "!",
   "is_null",
   "(",
   "$",
   "history",
   "=",
   "&",
   "$",
   "this",
   "->",
   "cacheKey",
   "(",
   "__FUNCTION__",
   ",",
   "$",
   "args",
   ")",
   ")",
   ")",
   "{",
   "return",
   "$",
   "history",
   ";",
   "// Cached this already.",
   "}",
   "# Prepare endpoint/request args.",
   "$",
   "endpoint_args",
   "=",
   "array_merge",
   "(",
   "$",
   "args",
   ",",
   "[",
   "// Nothing more at this time.",
   "]",
   ")",
   ";",
   "$",
   "request_args",
   "=",
   "[",
   "'max_con_secs'",
   "=>",
   "5",
   ",",
   "'max_stream_secs'",
   "=>",
   "5",
   ",",
   "'return'",
   "=>",
   "'array'",
   ",",
   "]",
   ";",
   "$",
   "endpoint",
   "=",
   "'https://api-ssl.bitly.com/v3/user/link_history'",
   ";",
   "$",
   "endpoint",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "addUrlQueryArgs",
   "(",
   "$",
   "endpoint_args",
   ",",
   "$",
   "endpoint",
   ")",
   ";",
   "# Determine sharded cache directory and file.",
   "$",
   "endpoint_sha1",
   "=",
   "sha1",
   "(",
   "$",
   "endpoint",
   ")",
   ";",
   "$",
   "cache_dir",
   "=",
   "$",
   "this",
   "->",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "this",
   "->",
   "c",
   "::",
   "sha1ModShardId",
   "(",
   "$",
   "endpoint_sha1",
   ",",
   "true",
   ")",
   ";",
   "$",
   "cache_dir_permissions",
   "=",
   "$",
   "this",
   "->",
   "App",
   "->",
   "Config",
   "->",
   "\u00a9fs_permissions[",
   "'",
   "\u00a9transient_dirs'];",
   "",
   "",
   "$",
   "cache_file",
   "=",
   "$",
   "cache_dir",
   ".",
   "'/'",
   ".",
   "$",
   "endpoint_sha1",
   ";",
   "# Use cached response if at all possible.",
   "if",
   "(",
   "is_file",
   "(",
   "$",
   "cache_file",
   ")",
   ")",
   "{",
   "// File exists?",
   "return",
   "$",
   "history",
   "=",
   "(",
   "array",
   ")",
   "unserialize",
   "(",
   "file_get_contents",
   "(",
   "$",
   "cache_file",
   ")",
   ")",
   ";",
   "}",
   "# Query for remote response via API endpoint URL.",
   "$",
   "response",
   "=",
   "$",
   "this",
   "->",
   "c",
   "::",
   "remoteRequest",
   "(",
   "'GET::'",
   ".",
   "$",
   "endpoint",
   ",",
   "$",
   "request_args",
   ")",
   ";",
   "# Validate response; no cache on any error.",
   "if",
   "(",
   "$",
   "response",
   "[",
   "'code'",
   "]",
   "!==",
   "200",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "// Do not cache.",
   "}",
   "if",
   "(",
   "!",
   "is_object",
   "(",
   "$",
   "json",
   "=",
   "json_decode",
   "(",
   "$",
   "response",
   "[",
   "'body'",
   "]",
   ")",
   ")",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "// Do not cache.",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "json",
   "->",
   "status_txt",
   ")",
   "||",
   "$",
   "json",
   "->",
   "status_txt",
   "!==",
   "'OK'",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "// Do not cache.",
   "}",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "json",
   "->",
   "data",
   "->",
   "link_history",
   ")",
   "||",
   "!",
   "is_array",
   "(",
   "$",
   "json",
   "->",
   "data",
   "->",
   "link_history",
   ")",
   ")",
   "{",
   "return",
   "[",
   "]",
   ";",
   "// Do not cache.",
   "}",
   "# Cache and return response.",
   "if",
   "(",
   "!",
   "is_dir",
   "(",
   "$",
   "cache_dir",
   ")",
   ")",
   "{",
   "mkdir",
   "(",
   "$",
   "cache_dir",
   ",",
   "$",
   "cache_dir_permissions",
   ",",
   "true",
   ")",
   ";",
   "}",
   "$",
   "history",
   "=",
   "$",
   "json",
   "->",
   "data",
   "->",
   "link_history",
   ";",
   "file_put_contents",
   "(",
   "$",
   "cache_file",
   ",",
   "serialize",
   "(",
   "$",
   "history",
   ")",
   ")",
   ";",
   "return",
   "$",
   "history",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-392",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "protected",
   "function",
   "execute",
   "(",
   "InputInterface",
   "$",
   "input",
   ",",
   "OutputInterface",
   "$",
   "output",
   ")",
   "{",
   "$",
   "pageflows",
   "=",
   "$",
   "this",
   "->",
   "getContainer",
   "(",
   ")",
   "->",
   "get",
   "(",
   "'phpmentors_pageflower.pageflow_repository'",
   ")",
   "->",
   "findAll",
   "(",
   ")",
   ";",
   "$",
   "output",
   "->",
   "writeln",
   "(",
   "$",
   "this",
   "->",
   "getHelper",
   "(",
   "'formatter'",
   ")",
   "->",
   "formatSection",
   "(",
   "'pageflower'",
   ",",
   "'Pageflows'",
   ")",
   ")",
   ";",
   "$",
   "pageflowIdMaxLength",
   "=",
   "strlen",
   "(",
   "'pageflowId'",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "pageflows",
   "as",
   "$",
   "pageflowId",
   "=>",
   "$",
   "pageflow",
   ")",
   "{",
   "$",
   "pageflowIdMaxLength",
   "=",
   "<mask>",
   "(",
   "$",
   "pageflowIdMaxLength",
   ",",
   "strlen",
   "(",
   "$",
   "pageflowId",
   ")",
   ")",
   ";",
   "}",
   "$",
   "format",
   "=",
   "'%-'",
   ".",
   "$",
   "pageflowIdMaxLength",
   ".",
   "'s'",
   ";",
   "$",
   "formatHeader",
   "=",
   "'%-'",
   ".",
   "(",
   "$",
   "pageflowIdMaxLength",
   "+",
   "19",
   ")",
   ".",
   "'s'",
   ";",
   "$",
   "output",
   "->",
   "writeln",
   "(",
   "sprintf",
   "(",
   "$",
   "formatHeader",
   ",",
   "'<comment>Pageflow Id</comment>'",
   ")",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "pageflows",
   "as",
   "$",
   "pageflowId",
   "=>",
   "$",
   "pageflow",
   ")",
   "{",
   "$",
   "output",
   "->",
   "writeln",
   "(",
   "sprintf",
   "(",
   "$",
   "format",
   ",",
   "$",
   "pageflowId",
   ")",
   ",",
   "OutputInterface",
   "::",
   "OUTPUT_RAW",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-393",
  "nl_tokens": [
   "{"
  ],
  "pl_tokens": [
   "public",
   "function",
   "addPostCount",
   "(",
   "$",
   "count",
   "=",
   "1",
   ")",
   "{",
   "$",
   "this",
   "->",
   "postCount",
   "+=",
   "$",
   "count",
   ";",
   "$",
   "this",
   "->",
   "postCount",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "postCount",
   ",",
   "0",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-394",
  "nl_tokens": [
   "Mask",
   "certain",
   "sensitive",
   "data",
   "from",
   "occuring",
   "in",
   "output",
   "/",
   "logs"
  ],
  "pl_tokens": [
   "static",
   "public",
   "function",
   "mask",
   "(",
   "$",
   "message",
   ")",
   "{",
   "$",
   "masks",
   "=",
   "array",
   "(",
   "'<SessionTicket>'",
   ",",
   "'<ConnectionTicket>'",
   ",",
   "'<CreditCardNumber>'",
   ",",
   "'<CardSecurityCode>'",
   ",",
   "'<AppID>'",
   ",",
   "'<strPassword>'",
   ",",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "masks",
   "as",
   "$",
   "key",
   ")",
   "{",
   "if",
   "(",
   "$",
   "key",
   "{",
   "0",
   "}",
   "==",
   "'<'",
   ")",
   "{",
   "// It's an XML tag",
   "$",
   "contents",
   "=",
   "QuickBooks_Utilities",
   "::",
   "_extractTagContents",
   "(",
   "trim",
   "(",
   "$",
   "key",
   ",",
   "'<> '",
   ")",
   ",",
   "$",
   "message",
   ")",
   ";",
   "$",
   "masked",
   "=",
   "str_repeat",
   "(",
   "'x'",
   ",",
   "<mask>",
   "(",
   "strlen",
   "(",
   "$",
   "contents",
   ")",
   ",",
   "12",
   ")",
   ")",
   ".",
   "substr",
   "(",
   "$",
   "contents",
   ",",
   "12",
   ")",
   ";",
   "$",
   "message",
   "=",
   "str_replace",
   "(",
   "$",
   "key",
   ".",
   "$",
   "contents",
   ".",
   "'</'",
   ".",
   "trim",
   "(",
   "$",
   "key",
   ",",
   "'<> '",
   ")",
   ".",
   "'>'",
   ",",
   "$",
   "key",
   ".",
   "$",
   "masked",
   ".",
   "'</'",
   ".",
   "trim",
   "(",
   "$",
   "key",
   ",",
   "'<> '",
   ")",
   ".",
   "'>'",
   ",",
   "$",
   "message",
   ")",
   ";",
   "}",
   "}",
   "return",
   "$",
   "message",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-395",
  "nl_tokens": [
   "Set",
   "a",
   "route",
   "as",
   "an",
   "array",
   "from",
   "a",
   "route",
   "object",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "setRoute",
   "(",
   "Route",
   "$",
   "route",
   ",",
   "array",
   "&",
   "$",
   "routes",
   ",",
   "array",
   "&",
   "$",
   "lengths",
   ")",
   ":",
   "void",
   "{",
   "$",
   "requestMethod",
   "=",
   "implode",
   "(",
   "' | '",
   ",",
   "$",
   "route",
   "->",
   "getRequestMethods",
   "(",
   ")",
   ")",
   ";",
   "$",
   "dispatch",
   "=",
   "'Closure'",
   ";",
   "if",
   "(",
   "null",
   "!==",
   "$",
   "route",
   "->",
   "getFunction",
   "(",
   ")",
   ")",
   "{",
   "$",
   "dispatch",
   "=",
   "$",
   "route",
   "->",
   "getFunction",
   "(",
   ")",
   ";",
   "}",
   "elseif",
   "(",
   "null",
   "!==",
   "$",
   "route",
   "->",
   "getClass",
   "(",
   ")",
   ")",
   "{",
   "$",
   "dispatch",
   "=",
   "$",
   "route",
   "->",
   "getClass",
   "(",
   ")",
   ".",
   "(",
   "$",
   "route",
   "->",
   "isStatic",
   "(",
   ")",
   "?",
   "'::'",
   ":",
   "'->'",
   ")",
   ".",
   "(",
   "$",
   "route",
   "->",
   "getMethod",
   "(",
   ")",
   "?",
   "$",
   "route",
   "->",
   "getMethod",
   "(",
   ")",
   ".",
   "'()'",
   ":",
   "$",
   "route",
   "->",
   "getProperty",
   "(",
   ")",
   ")",
   ";",
   "}",
   "$",
   "lengths",
   "[",
   "0",
   "]",
   "=",
   "<mask>",
   "(",
   "$",
   "lengths",
   "[",
   "0",
   "]",
   ",",
   "\\",
   "strlen",
   "(",
   "$",
   "requestMethod",
   ")",
   ")",
   ";",
   "$",
   "lengths",
   "[",
   "1",
   "]",
   "=",
   "max",
   "(",
   "$",
   "lengths",
   "[",
   "1",
   "]",
   ",",
   "\\",
   "strlen",
   "(",
   "$",
   "route",
   "->",
   "getPath",
   "(",
   ")",
   ")",
   ")",
   ";",
   "$",
   "lengths",
   "[",
   "2",
   "]",
   "=",
   "max",
   "(",
   "$",
   "lengths",
   "[",
   "2",
   "]",
   ",",
   "\\",
   "strlen",
   "(",
   "$",
   "route",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ")",
   ";",
   "$",
   "lengths",
   "[",
   "3",
   "]",
   "=",
   "max",
   "(",
   "$",
   "lengths",
   "[",
   "3",
   "]",
   ",",
   "\\",
   "strlen",
   "(",
   "$",
   "dispatch",
   ")",
   ")",
   ";",
   "$",
   "routes",
   "[",
   "]",
   "=",
   "[",
   "$",
   "requestMethod",
   ",",
   "$",
   "route",
   "->",
   "getPath",
   "(",
   ")",
   ",",
   "$",
   "route",
   "->",
   "getName",
   "(",
   ")",
   "??",
   "''",
   ",",
   "$",
   "dispatch",
   ",",
   "]",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-396",
  "nl_tokens": [
   "Parse",
   "responses"
  ],
  "pl_tokens": [
   "public",
   "function",
   "parseResponses",
   "(",
   "$",
   "responses",
   ")",
   "{",
   "if",
   "(",
   "$",
   "this",
   "->",
   "isAtomic",
   "(",
   ")",
   ")",
   "{",
   "return",
   "$",
   "responses",
   "[",
   "0",
   "]",
   ";",
   "}",
   "else",
   "{",
   "$",
   "sets",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "valuesWithScores",
   "=",
   "array",
   "(",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "_keys",
   "as",
   "$",
   "key",
   ")",
   "{",
   "$",
   "sets",
   "[",
   "$",
   "key",
   "]",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "response",
   "=",
   "current",
   "(",
   "$",
   "responses",
   ")",
   ";",
   "next",
   "(",
   "$",
   "responses",
   ")",
   ";",
   "$",
   "isValue",
   "=",
   "true",
   ";",
   "foreach",
   "(",
   "$",
   "response",
   "as",
   "$",
   "valueOrScore",
   ")",
   "{",
   "if",
   "(",
   "$",
   "isValue",
   ")",
   "{",
   "$",
   "value",
   "=",
   "$",
   "valueOrScore",
   ";",
   "$",
   "sets",
   "[",
   "$",
   "key",
   "]",
   "[",
   "]",
   "=",
   "$",
   "value",
   ";",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "valuesWithScores",
   "[",
   "$",
   "value",
   "]",
   ")",
   ")",
   "{",
   "$",
   "valuesWithScores",
   "[",
   "$",
   "value",
   "]",
   "=",
   "array",
   "(",
   ")",
   ";",
   "}",
   "}",
   "else",
   "{",
   "$",
   "score",
   "=",
   "$",
   "valueOrScore",
   ";",
   "$",
   "valuesWithScores",
   "[",
   "$",
   "value",
   "]",
   "[",
   "]",
   "=",
   "$",
   "score",
   "*",
   "$",
   "this",
   "->",
   "_weights",
   "[",
   "$",
   "key",
   "]",
   ";",
   "}",
   "$",
   "isValue",
   "=",
   "!",
   "$",
   "isValue",
   ";",
   "}",
   "}",
   "$",
   "aggregation",
   "=",
   "strtolower",
   "(",
   "$",
   "this",
   "->",
   "aggregation",
   ")",
   ";",
   "$",
   "pipeline",
   "=",
   "$",
   "this",
   "->",
   "_rediska",
   "->",
   "pipeline",
   "(",
   ")",
   ";",
   "$",
   "count",
   "=",
   "0",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "_compareSets",
   "(",
   "$",
   "sets",
   ")",
   "as",
   "$",
   "value",
   ")",
   "{",
   "$",
   "scores",
   "=",
   "$",
   "valuesWithScores",
   "[",
   "$",
   "value",
   "]",
   ";",
   "switch",
   "(",
   "$",
   "aggregation",
   ")",
   "{",
   "case",
   "self",
   "::",
   "SUM",
   ":",
   "$",
   "score",
   "=",
   "array_sum",
   "(",
   "$",
   "scores",
   ")",
   ";",
   "break",
   ";",
   "case",
   "self",
   "::",
   "MIN",
   ":",
   "$",
   "score",
   "=",
   "<mask>",
   "(",
   "$",
   "scores",
   ")",
   ";",
   "break",
   ";",
   "case",
   "self",
   "::",
   "MAX",
   ":",
   "$",
   "score",
   "=",
   "max",
   "(",
   "$",
   "scores",
   ")",
   ";",
   "break",
   ";",
   "default",
   ":",
   "throw",
   "new",
   "Rediska_Command_Exception",
   "(",
   "'Unknown aggregation method '",
   ".",
   "$",
   "this",
   "->",
   "aggregation",
   ")",
   ";",
   "}",
   "$",
   "value",
   "=",
   "$",
   "this",
   "->",
   "_rediska",
   "->",
   "getSerializer",
   "(",
   ")",
   "->",
   "unserialize",
   "(",
   "$",
   "value",
   ")",
   ";",
   "$",
   "pipeline",
   "->",
   "addToSortedSet",
   "(",
   "$",
   "this",
   "->",
   "storeKey",
   ",",
   "$",
   "value",
   ",",
   "$",
   "score",
   ")",
   ";",
   "$",
   "count",
   "++",
   ";",
   "}",
   "$",
   "pipeline",
   "->",
   "execute",
   "(",
   ")",
   ";",
   "return",
   "$",
   "count",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-397",
  "nl_tokens": [
   "Takes",
   "a",
   "string",
   "and",
   "writes",
   "it",
   "to",
   "the",
   "command",
   "line",
   "wrapping",
   "to",
   "a",
   "maximum",
   "width",
   ".",
   "If",
   "no",
   "maximum",
   "width",
   "is",
   "specified",
   "will",
   "wrap",
   "to",
   "the",
   "window",
   "s",
   "max",
   "width",
   "."
  ],
  "pl_tokens": [
   "public",
   "static",
   "function",
   "wrap",
   "(",
   "string",
   "$",
   "string",
   "=",
   "null",
   ",",
   "int",
   "$",
   "<mask>",
   "=",
   "0",
   ",",
   "int",
   "$",
   "pad_left",
   "=",
   "0",
   ")",
   ":",
   "string",
   "{",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "string",
   ")",
   ")",
   "{",
   "return",
   "''",
   ";",
   "}",
   "if",
   "(",
   "$",
   "max",
   "===",
   "0",
   ")",
   "{",
   "$",
   "max",
   "=",
   "CLI",
   "::",
   "getWidth",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "CLI",
   "::",
   "getWidth",
   "(",
   ")",
   "<",
   "$",
   "max",
   ")",
   "{",
   "$",
   "max",
   "=",
   "CLI",
   "::",
   "getWidth",
   "(",
   ")",
   ";",
   "}",
   "$",
   "max",
   "=",
   "$",
   "max",
   "-",
   "$",
   "pad_left",
   ";",
   "$",
   "lines",
   "=",
   "wordwrap",
   "(",
   "$",
   "string",
   ",",
   "$",
   "max",
   ")",
   ";",
   "if",
   "(",
   "$",
   "pad_left",
   ">",
   "0",
   ")",
   "{",
   "$",
   "lines",
   "=",
   "explode",
   "(",
   "PHP_EOL",
   ",",
   "$",
   "lines",
   ")",
   ";",
   "$",
   "first",
   "=",
   "true",
   ";",
   "array_walk",
   "(",
   "$",
   "lines",
   ",",
   "function",
   "(",
   "&",
   "$",
   "line",
   ",",
   "$",
   "index",
   ")",
   "use",
   "(",
   "$",
   "pad_left",
   ",",
   "&",
   "$",
   "first",
   ")",
   "{",
   "if",
   "(",
   "!",
   "$",
   "first",
   ")",
   "{",
   "$",
   "line",
   "=",
   "str_repeat",
   "(",
   "' '",
   ",",
   "$",
   "pad_left",
   ")",
   ".",
   "$",
   "line",
   ";",
   "}",
   "else",
   "{",
   "$",
   "first",
   "=",
   "false",
   ";",
   "}",
   "}",
   ")",
   ";",
   "$",
   "lines",
   "=",
   "implode",
   "(",
   "PHP_EOL",
   ",",
   "$",
   "lines",
   ")",
   ";",
   "}",
   "return",
   "$",
   "lines",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-398",
  "nl_tokens": [
   "Check",
   "that",
   "global",
   "variables",
   "imported",
   "into",
   "a",
   "function",
   "scope",
   "using",
   "a",
   "global",
   "statement",
   "are",
   "not",
   "being",
   "overruled",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "process_global_statement",
   "(",
   "$",
   "stackPtr",
   ",",
   "$",
   "in_function_scope",
   ")",
   "{",
   "/*\n\t\t * Collect the variables to watch for.\n\t\t */",
   "$",
   "search",
   "=",
   "array",
   "(",
   ")",
   ";",
   "$",
   "ptr",
   "=",
   "(",
   "$",
   "stackPtr",
   "+",
   "1",
   ")",
   ";",
   "while",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   ")",
   ")",
   "{",
   "$",
   "var",
   "=",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   ";",
   "// Halt the loop at end of statement.",
   "if",
   "(",
   "\\",
   "T_SEMICOLON",
   "===",
   "$",
   "var",
   "[",
   "'code'",
   "]",
   ")",
   "{",
   "break",
   ";",
   "}",
   "if",
   "(",
   "\\",
   "T_VARIABLE",
   "===",
   "$",
   "var",
   "[",
   "'code'",
   "]",
   ")",
   "{",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "wp_globals",
   "[",
   "substr",
   "(",
   "$",
   "var",
   "[",
   "'content'",
   "]",
   ",",
   "1",
   ")",
   "]",
   ")",
   ")",
   "{",
   "$",
   "search",
   "[",
   "]",
   "=",
   "$",
   "var",
   "[",
   "'content'",
   "]",
   ";",
   "}",
   "}",
   "$",
   "ptr",
   "++",
   ";",
   "}",
   "unset",
   "(",
   "$",
   "var",
   ")",
   ";",
   "if",
   "(",
   "empty",
   "(",
   "$",
   "search",
   ")",
   ")",
   "{",
   "return",
   ";",
   "}",
   "/*\n\t\t * Search for assignments to the imported global variables within the relevant scope.\n\t\t */",
   "$",
   "start",
   "=",
   "$",
   "ptr",
   ";",
   "if",
   "(",
   "true",
   "===",
   "$",
   "in_function_scope",
   ")",
   "{",
   "$",
   "function_cond",
   "=",
   "$",
   "this",
   "->",
   "phpcsFile",
   "->",
   "getCondition",
   "(",
   "$",
   "stackPtr",
   ",",
   "\\",
   "T_FUNCTION",
   ")",
   ";",
   "$",
   "closure_cond",
   "=",
   "$",
   "this",
   "->",
   "phpcsFile",
   "->",
   "getCondition",
   "(",
   "$",
   "stackPtr",
   ",",
   "\\",
   "T_CLOSURE",
   ")",
   ";",
   "$",
   "scope_cond",
   "=",
   "<mask>",
   "(",
   "$",
   "function_cond",
   ",",
   "$",
   "closure_cond",
   ")",
   ";",
   "// If false, it will evaluate as zero, so this is fine.",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "scope_cond",
   "]",
   "[",
   "'scope_closer'",
   "]",
   ")",
   "===",
   "false",
   ")",
   "{",
   "// Live coding or parse error.",
   "return",
   ";",
   "}",
   "$",
   "end",
   "=",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "scope_cond",
   "]",
   "[",
   "'scope_closer'",
   "]",
   ";",
   "}",
   "else",
   "{",
   "// Global statement in the global namespace with file is being treated as scoped.",
   "$",
   "end",
   "=",
   "(",
   "$",
   "this",
   "->",
   "phpcsFile",
   "->",
   "numTokens",
   "+",
   "1",
   ")",
   ";",
   "}",
   "for",
   "(",
   "$",
   "ptr",
   "=",
   "$",
   "start",
   ";",
   "$",
   "ptr",
   "<",
   "$",
   "end",
   ";",
   "$",
   "ptr",
   "++",
   ")",
   "{",
   "// Skip over nested functions, classes and the likes.",
   "if",
   "(",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "skip_over",
   "[",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   "[",
   "'code'",
   "]",
   "]",
   ")",
   ")",
   "{",
   "if",
   "(",
   "!",
   "isset",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   "[",
   "'scope_closer'",
   "]",
   ")",
   ")",
   "{",
   "// Live coding or parse error.",
   "break",
   ";",
   "}",
   "$",
   "ptr",
   "=",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   "[",
   "'scope_closer'",
   "]",
   ";",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "\\",
   "T_VARIABLE",
   "!==",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   "[",
   "'code'",
   "]",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "\\",
   "in_array",
   "(",
   "$",
   "this",
   "->",
   "tokens",
   "[",
   "$",
   "ptr",
   "]",
   "[",
   "'content'",
   "]",
   ",",
   "$",
   "search",
   ",",
   "true",
   ")",
   "===",
   "false",
   ")",
   "{",
   "// Not one of the variables we're interested in.",
   "continue",
   ";",
   "}",
   "// Don't throw false positives for static class properties.",
   "if",
   "(",
   "$",
   "this",
   "->",
   "is_class_object_call",
   "(",
   "$",
   "ptr",
   ")",
   "===",
   "true",
   ")",
   "{",
   "continue",
   ";",
   "}",
   "if",
   "(",
   "true",
   "===",
   "$",
   "this",
   "->",
   "is_assignment",
   "(",
   "$",
   "ptr",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "maybe_add_error",
   "(",
   "$",
   "ptr",
   ")",
   ";",
   "continue",
   ";",
   "}",
   "// Check if this is a variable assignment within a `foreach()` declaration.",
   "if",
   "(",
   "$",
   "this",
   "->",
   "is_foreach_as",
   "(",
   "$",
   "ptr",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "this",
   "->",
   "maybe_add_error",
   "(",
   "$",
   "ptr",
   ")",
   ";",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-399",
  "nl_tokens": [
   "Se",
   "definido",
   "permite",
   "informar",
   "uma",
   "composi\u00e7\u00e3o",
   "de",
   "regras",
   "que",
   "especificam",
   "as",
   "contagens",
   "de",
   "valores",
   "que",
   "ser\u00e3o",
   "v\u00e1lidas",
   "para",
   "a",
   "cole\u00e7\u00e3o",
   "de",
   "itens",
   "armazenados",
   "neste",
   "campo",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "collectionSetAcceptedCount",
   "(",
   "?",
   "string",
   "$",
   "rules",
   ")",
   "{",
   "if",
   "(",
   "$",
   "rules",
   "!==",
   "null",
   "&&",
   "$",
   "rules",
   "!==",
   "\"\"",
   ")",
   "{",
   "$",
   "acceptedCount",
   "=",
   "null",
   ";",
   "$",
   "rules",
   "=",
   "explode",
   "(",
   "\"|\"",
   ",",
   "$",
   "rules",
   ")",
   ";",
   "$",
   "exactValues",
   "=",
   "[",
   "]",
   ";",
   "$",
   "multiples",
   "=",
   "[",
   "]",
   ";",
   "$",
   "<mask>",
   "=",
   "0",
   ";",
   "$",
   "max",
   "=",
   "null",
   ";",
   "foreach",
   "(",
   "$",
   "rules",
   "as",
   "$",
   "rule",
   ")",
   "{",
   "$",
   "r",
   "=",
   "trim",
   "(",
   "$",
   "rule",
   ")",
   ";",
   "$",
   "valid",
   "=",
   "false",
   ";",
   "// Se especifica um n\u00famero exato de valores",
   "// que devem ser aceitos...",
   "if",
   "(",
   "is_numeric",
   "(",
   "$",
   "r",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "exactValues",
   "[",
   "]",
   "=",
   "(",
   "int",
   ")",
   "$",
   "r",
   ";",
   "$",
   "valid",
   "=",
   "true",
   ";",
   "}",
   "// Se especifica um n\u00famero m\u00faltiplo a ",
   "// ser levado em considera\u00e7\u00e3o para as quantidades",
   "// de itens que podem ser adicionados na cole\u00e7\u00e3o.",
   "elseif",
   "(",
   "strpos",
   "(",
   "$",
   "r",
   ",",
   "\"*\"",
   ")",
   "===",
   "0",
   ")",
   "{",
   "$",
   "multiples",
   "[",
   "]",
   "=",
   "(",
   "(",
   "int",
   ")",
   "(",
   "str_replace",
   "(",
   "\"*\"",
   ",",
   "\"\"",
   ",",
   "$",
   "r",
   ")",
   ")",
   ")",
   ";",
   "$",
   "valid",
   "=",
   "true",
   ";",
   "}",
   "// Se especifica uma quantidade m\u00ednima e uma m\u00e1xima",
   "// de itens que podem estar presentes na cole\u00e7\u00e3o de",
   "// valores..",
   "elseif",
   "(",
   "strpos",
   "(",
   "$",
   "r",
   ",",
   "\",\"",
   ")",
   "!==",
   "false",
   ")",
   "{",
   "$",
   "mm",
   "=",
   "explode",
   "(",
   "\",\"",
   ",",
   "$",
   "r",
   ")",
   ";",
   "if",
   "(",
   "count",
   "(",
   "$",
   "mm",
   ")",
   "===",
   "2",
   "&&",
   "$",
   "max",
   "===",
   "null",
   "&&",
   "is_numeric",
   "(",
   "$",
   "mm",
   "[",
   "0",
   "]",
   ")",
   "===",
   "true",
   "&&",
   "is_numeric",
   "(",
   "$",
   "mm",
   "[",
   "1",
   "]",
   ")",
   "===",
   "true",
   ")",
   "{",
   "$",
   "min",
   "=",
   "(",
   "int",
   ")",
   "$",
   "mm",
   "[",
   "0",
   "]",
   ";",
   "$",
   "max",
   "=",
   "(",
   "int",
   ")",
   "$",
   "mm",
   "[",
   "1",
   "]",
   ";",
   "if",
   "(",
   "$",
   "min",
   "<=",
   "$",
   "max",
   ")",
   "{",
   "$",
   "valid",
   "=",
   "true",
   ";",
   "}",
   "}",
   "}",
   "if",
   "(",
   "$",
   "valid",
   "===",
   "false",
   ")",
   "{",
   "$",
   "msg",
   "=",
   "\"Invalid \\\"acceptedCount\\\".\"",
   ";",
   "throw",
   "new",
   "\\",
   "InvalidArgumentException",
   "(",
   "$",
   "msg",
   ")",
   ";",
   "}",
   "}",
   "sort",
   "(",
   "$",
   "exactValues",
   ")",
   ";",
   "sort",
   "(",
   "$",
   "multiples",
   ")",
   ";",
   "$",
   "acceptedCount",
   "=",
   "[",
   "\"exactValues\"",
   "=>",
   "$",
   "exactValues",
   ",",
   "\"multiples\"",
   "=>",
   "$",
   "multiples",
   ",",
   "\"min\"",
   "=>",
   "$",
   "min",
   ",",
   "\"max\"",
   "=>",
   "$",
   "max",
   "]",
   ";",
   "$",
   "this",
   "->",
   "acceptedCount",
   "=",
   "$",
   "acceptedCount",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-400",
  "nl_tokens": [
   "Runs",
   "the",
   "task",
   "and",
   "(",
   "if",
   "applicable",
   ")",
   "automatically",
   "retries",
   "when",
   "errors",
   "occur",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "run",
   "(",
   ")",
   "{",
   "while",
   "(",
   "$",
   "this",
   "->",
   "attempt",
   "(",
   ")",
   ")",
   "{",
   "try",
   "{",
   "return",
   "call_user_func_array",
   "(",
   "$",
   "this",
   "->",
   "action",
   ",",
   "$",
   "this",
   "->",
   "arguments",
   ")",
   ";",
   "}",
   "catch",
   "(",
   "Google_Service_Exception",
   "$",
   "exception",
   ")",
   "{",
   "$",
   "allowedRetries",
   "=",
   "$",
   "this",
   "->",
   "allowedRetries",
   "(",
   "$",
   "exception",
   "->",
   "getCode",
   "(",
   ")",
   ",",
   "$",
   "exception",
   "->",
   "getErrors",
   "(",
   ")",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "canAttempt",
   "(",
   ")",
   "||",
   "!",
   "$",
   "allowedRetries",
   ")",
   "{",
   "throw",
   "$",
   "exception",
   ";",
   "}",
   "if",
   "(",
   "$",
   "allowedRetries",
   ">",
   "0",
   ")",
   "{",
   "$",
   "this",
   "->",
   "maxAttempts",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "maxAttempts",
   ",",
   "$",
   "this",
   "->",
   "attempts",
   "+",
   "$",
   "allowedRetries",
   ")",
   ";",
   "}",
   "}",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-401",
  "nl_tokens": [
   "identify",
   "a",
   "line",
   "as",
   "the",
   "beginning",
   "of",
   "a",
   "HTML",
   "block",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "identifyHtml",
   "(",
   "$",
   "line",
   ",",
   "$",
   "lines",
   ",",
   "$",
   "current",
   ")",
   "{",
   "if",
   "(",
   "$",
   "line",
   "[",
   "0",
   "]",
   "!==",
   "'<'",
   "||",
   "isset",
   "(",
   "$",
   "line",
   "[",
   "1",
   "]",
   ")",
   "&&",
   "$",
   "line",
   "[",
   "1",
   "]",
   "==",
   "' '",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// no html tag",
   "}",
   "if",
   "(",
   "strncmp",
   "(",
   "$",
   "line",
   ",",
   "'<!--'",
   ",",
   "4",
   ")",
   "===",
   "0",
   ")",
   "{",
   "return",
   "true",
   ";",
   "// a html comment",
   "}",
   "$",
   "gtPos",
   "=",
   "strpos",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ",",
   "'>'",
   ")",
   ";",
   "$",
   "spacePos",
   "=",
   "strpos",
   "(",
   "$",
   "lines",
   "[",
   "$",
   "current",
   "]",
   ",",
   "' '",
   ")",
   ";",
   "if",
   "(",
   "$",
   "gtPos",
   "===",
   "false",
   "&&",
   "$",
   "spacePos",
   "===",
   "false",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// no html tag",
   "}",
   "elseif",
   "(",
   "$",
   "spacePos",
   "===",
   "false",
   ")",
   "{",
   "$",
   "tag",
   "=",
   "rtrim",
   "(",
   "substr",
   "(",
   "$",
   "line",
   ",",
   "1",
   ",",
   "$",
   "gtPos",
   "-",
   "1",
   ")",
   ",",
   "'/'",
   ")",
   ";",
   "}",
   "else",
   "{",
   "$",
   "tag",
   "=",
   "rtrim",
   "(",
   "substr",
   "(",
   "$",
   "line",
   ",",
   "1",
   ",",
   "<mask>",
   "(",
   "$",
   "gtPos",
   ",",
   "$",
   "spacePos",
   ")",
   "-",
   "1",
   ")",
   ",",
   "'/'",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "ctype_alnum",
   "(",
   "$",
   "tag",
   ")",
   "||",
   "in_array",
   "(",
   "strtolower",
   "(",
   "$",
   "tag",
   ")",
   ",",
   "$",
   "this",
   "->",
   "inlineHtmlElements",
   ")",
   ")",
   "{",
   "return",
   "false",
   ";",
   "// no html tag or inline html tag",
   "}",
   "return",
   "true",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-402",
  "nl_tokens": [
   "Get",
   "the",
   "maximum",
   "instance",
   "between",
   "a",
   "given",
   "instance",
   "(",
   "default",
   "now",
   ")",
   "and",
   "the",
   "current",
   "instance",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "Carbon",
   "$",
   "dt",
   "=",
   "null",
   ")",
   "{",
   "$",
   "dt",
   "=",
   "(",
   "$",
   "dt",
   "===",
   "null",
   ")",
   "?",
   "static",
   "::",
   "now",
   "(",
   "$",
   "this",
   "->",
   "tz",
   ")",
   ":",
   "$",
   "dt",
   ";",
   "return",
   "$",
   "this",
   "->",
   "gt",
   "(",
   "$",
   "dt",
   ")",
   "?",
   "$",
   "this",
   ":",
   "$",
   "dt",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-403",
  "nl_tokens": [
   "show",
   "Help",
   "include",
   "(",
   "usage",
   "arguments",
   "description",
   "options",
   ")"
  ],
  "pl_tokens": [
   "public",
   "function",
   "showHelp",
   "(",
   ")",
   "{",
   "// 4 spaces instead of tab",
   "$",
   "tab",
   "=",
   "'   '",
   ";",
   "CLI",
   "::",
   "write",
   "(",
   "lang",
   "(",
   "'CLI.helpDescription'",
   ")",
   ",",
   "'yellow'",
   ")",
   ";",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "tab",
   ".",
   "$",
   "this",
   "->",
   "description",
   ")",
   ";",
   "CLI",
   "::",
   "newLine",
   "(",
   ")",
   ";",
   "CLI",
   "::",
   "write",
   "(",
   "lang",
   "(",
   "'CLI.helpUsage'",
   ")",
   ",",
   "'yellow'",
   ")",
   ";",
   "$",
   "usage",
   "=",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "usage",
   ")",
   "?",
   "$",
   "this",
   "->",
   "name",
   ".",
   "' [arguments]'",
   ":",
   "$",
   "this",
   "->",
   "usage",
   ";",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "tab",
   ".",
   "$",
   "usage",
   ")",
   ";",
   "CLI",
   "::",
   "newLine",
   "(",
   ")",
   ";",
   "$",
   "pad",
   "=",
   "<mask>",
   "(",
   "$",
   "this",
   "->",
   "getPad",
   "(",
   "$",
   "this",
   "->",
   "options",
   ",",
   "6",
   ")",
   ",",
   "$",
   "this",
   "->",
   "getPad",
   "(",
   "$",
   "this",
   "->",
   "arguments",
   ",",
   "6",
   ")",
   ")",
   ";",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "arguments",
   ")",
   ")",
   "{",
   "CLI",
   "::",
   "write",
   "(",
   "lang",
   "(",
   "'CLI.helpArguments'",
   ")",
   ",",
   "'yellow'",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "arguments",
   "as",
   "$",
   "argument",
   "=>",
   "$",
   "description",
   ")",
   "{",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "tab",
   ".",
   "CLI",
   "::",
   "color",
   "(",
   "str_pad",
   "(",
   "$",
   "argument",
   ",",
   "$",
   "pad",
   ")",
   ",",
   "'green'",
   ")",
   ".",
   "$",
   "description",
   ",",
   "'yellow'",
   ")",
   ";",
   "}",
   "CLI",
   "::",
   "newLine",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "empty",
   "(",
   "$",
   "this",
   "->",
   "options",
   ")",
   ")",
   "{",
   "CLI",
   "::",
   "write",
   "(",
   "lang",
   "(",
   "'CLI.helpOptions'",
   ")",
   ",",
   "'yellow'",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "this",
   "->",
   "options",
   "as",
   "$",
   "option",
   "=>",
   "$",
   "description",
   ")",
   "{",
   "CLI",
   "::",
   "write",
   "(",
   "$",
   "tab",
   ".",
   "CLI",
   "::",
   "color",
   "(",
   "str_pad",
   "(",
   "$",
   "option",
   ",",
   "$",
   "pad",
   ")",
   ",",
   "'green'",
   ")",
   ".",
   "$",
   "description",
   ",",
   "'yellow'",
   ")",
   ";",
   "}",
   "CLI",
   "::",
   "newLine",
   "(",
   ")",
   ";",
   "}",
   "}"
  ]
 },
 {
  "idx": "maxmin-404",
  "nl_tokens": [
   "Get",
   "a",
   "random",
   "integer",
   "within",
   "the",
   "specified",
   "range",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "getRandomInteger",
   "(",
   "$",
   "<mask>",
   "=",
   "0",
   ",",
   "$",
   "max",
   "=",
   "PHP_INT_MAX",
   ")",
   "{",
   "$",
   "min",
   "=",
   "(",
   "int",
   ")",
   "$",
   "min",
   ";",
   "$",
   "max",
   "=",
   "(",
   "int",
   ")",
   "$",
   "max",
   ";",
   "$",
   "range",
   "=",
   "$",
   "max",
   "-",
   "$",
   "min",
   ";",
   "$",
   "bits",
   "=",
   "$",
   "this",
   "->",
   "getBitsInInteger",
   "(",
   "$",
   "range",
   ")",
   ";",
   "$",
   "bytes",
   "=",
   "$",
   "this",
   "->",
   "getBytesInBits",
   "(",
   "$",
   "bits",
   ")",
   ";",
   "$",
   "mask",
   "=",
   "(",
   "int",
   ")",
   "(",
   "(",
   "1",
   "<<",
   "$",
   "bits",
   ")",
   "-",
   "1",
   ")",
   ";",
   "do",
   "{",
   "$",
   "byteString",
   "=",
   "$",
   "this",
   "->",
   "generator",
   "->",
   "generate",
   "(",
   "$",
   "bytes",
   ")",
   ";",
   "$",
   "result",
   "=",
   "hexdec",
   "(",
   "bin2hex",
   "(",
   "$",
   "byteString",
   ")",
   ")",
   "&",
   "$",
   "mask",
   ";",
   "}",
   "while",
   "(",
   "$",
   "result",
   ">",
   "$",
   "range",
   ")",
   ";",
   "return",
   "(",
   "int",
   ")",
   "$",
   "result",
   "+",
   "$",
   "min",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-405",
  "nl_tokens": [
   "Get",
   "the",
   "minimum",
   "instance",
   "between",
   "a",
   "given",
   "instance",
   "(",
   "default",
   "now",
   ")",
   "and",
   "the",
   "current",
   "instance",
   "."
  ],
  "pl_tokens": [
   "public",
   "function",
   "<mask>",
   "(",
   "Carbon",
   "$",
   "dt",
   "=",
   "null",
   ")",
   "{",
   "$",
   "dt",
   "=",
   "(",
   "$",
   "dt",
   "===",
   "null",
   ")",
   "?",
   "static",
   "::",
   "now",
   "(",
   "$",
   "this",
   "->",
   "tz",
   ")",
   ":",
   "$",
   "dt",
   ";",
   "return",
   "$",
   "this",
   "->",
   "lt",
   "(",
   "$",
   "dt",
   ")",
   "?",
   "$",
   "this",
   ":",
   "$",
   "dt",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-406",
  "nl_tokens": [
   "@param",
   "DataObjectInterface",
   "$dataObject"
  ],
  "pl_tokens": [
   "public",
   "function",
   "changeLineType",
   "(",
   "DataObjectInterface",
   "$",
   "dataObject",
   ")",
   "{",
   "$",
   "nextLineNumber",
   "=",
   "$",
   "this",
   "->",
   "lineNumber",
   "+",
   "1",
   ";",
   "if",
   "(",
   "!",
   "$",
   "dataObject",
   "->",
   "hasLine",
   "(",
   "$",
   "nextLineNumber",
   ")",
   ")",
   "{",
   "return",
   "$",
   "this",
   ";",
   "}",
   "$",
   "nextLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "nextLineNumber",
   ")",
   ";",
   "if",
   "(",
   "!",
   "is_a",
   "(",
   "$",
   "nextLineObject",
   ",",
   "static",
   "::",
   "class",
   ")",
   ")",
   "{",
   "$",
   "this",
   "->",
   "setContent",
   "(",
   "$",
   "this",
   "->",
   "clearBlockQuoteMarkup",
   "(",
   "$",
   "this",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ")",
   ";",
   "return",
   "$",
   "this",
   ";",
   "}",
   "$",
   "changeNextLine",
   "=",
   "true",
   ";",
   "$",
   "<mask>",
   "=",
   "$",
   "dataObject",
   "->",
   "count",
   "(",
   ")",
   ";",
   "$",
   "updatedLines",
   "=",
   "[",
   "]",
   ";",
   "for",
   "(",
   "$",
   "i",
   "=",
   "$",
   "this",
   "->",
   "lineNumber",
   ";",
   "$",
   "i",
   "<",
   "$",
   "max",
   ";",
   "$",
   "i",
   "++",
   ")",
   "{",
   "$",
   "currentLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   ")",
   ";",
   "$",
   "updatedLines",
   "[",
   "]",
   "=",
   "$",
   "this",
   "->",
   "clearBlockQuoteMarkup",
   "(",
   "$",
   "currentLineObject",
   "->",
   "getContent",
   "(",
   ")",
   ")",
   ";",
   "$",
   "nextLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   "+",
   "1",
   ")",
   ";",
   "$",
   "nextSecondLineObject",
   "=",
   "$",
   "dataObject",
   "->",
   "getLine",
   "(",
   "$",
   "i",
   "+",
   "2",
   ")",
   ";",
   "if",
   "(",
   "!",
   "$",
   "this",
   "->",
   "lineIsObjectOf",
   "(",
   "$",
   "nextLineObject",
   ",",
   "static",
   "::",
   "class",
   ")",
   "&&",
   "!",
   "$",
   "this",
   "->",
   "lineIsObjectOf",
   "(",
   "$",
   "nextSecondLineObject",
   ",",
   "static",
   "::",
   "class",
   ")",
   ")",
   "{",
   "$",
   "changeNextLine",
   "=",
   "false",
   ";",
   "}",
   "$",
   "changedContent",
   "=",
   "$",
   "this",
   "->",
   "factory",
   "->",
   "create",
   "(",
   "BlockTypes",
   "::",
   "BLOCK_SKIP",
   ")",
   ";",
   "$",
   "dataObject",
   "->",
   "updateLine",
   "(",
   "$",
   "i",
   ",",
   "$",
   "changedContent",
   ")",
   ";",
   "if",
   "(",
   "$",
   "changeNextLine",
   "===",
   "false",
   ")",
   "{",
   "break",
   ";",
   "}",
   "}",
   "$",
   "this",
   "->",
   "parseSubBlock",
   "(",
   "$",
   "dataObject",
   ",",
   "$",
   "updatedLines",
   ")",
   ";",
   "}"
  ]
 },
 {
  "idx": "maxmin-407",
  "nl_tokens": [
   "The",
   "arguments",
   "section",
   "."
  ],
  "pl_tokens": [
   "protected",
   "function",
   "argumentsSection",
   "(",
   "Argument",
   "...",
   "$",
   "arguments",
   ")",
   ":",
   "void",
   "{",
   "if",
   "(",
   "!",
   "$",
   "arguments",
   ")",
   "{",
   "$",
   "arguments",
   "=",
   "$",
   "this",
   "->",
   "getArguments",
   "(",
   ")",
   ";",
   "}",
   "if",
   "(",
   "!",
   "$",
   "arguments",
   ")",
   "{",
   "return",
   ";",
   "}",
   "$",
   "longestLength",
   "=",
   "0",
   ";",
   "$",
   "this",
   "->",
   "sectionDivider",
   "(",
   ")",
   ";",
   "$",
   "this",
   "->",
   "sectionTitleMessage",
   "(",
   "'Arguments'",
   ")",
   ";",
   "foreach",
   "(",
   "$",
   "arguments",
   "as",
   "$",
   "argument",
   ")",
   "{",
   "$",
   "longestLength",
   "=",
   "<mask>",
   "(",
   "\\",
   "strlen",
   "(",
   "$",
   "argument",
   "->",
   "getName",
   "(",
   ")",
   ")",
   ",",
   "$",
   "longestLength",
   ")",
   ";",
   "}",
   "foreach",
   "(",
   "$",
   "arguments",
   "as",
   "$",
   "argument",
   ")",
   "{",
   "$",
   "this",
   "->",
   "sectionMessage",
   "(",
   "static",
   "::",
   "TAB",
   ".",
   "$",
   "argument",
   "->",
   "getName",
   "(",
   ")",
   ",",
   "$",
   "argument",
   "->",
   "getDescription",
   "(",
   ")",
   ",",
   "$",
   "longestLength",
   ")",
   ";",
   "}",
   "}"
  ]
 }
]