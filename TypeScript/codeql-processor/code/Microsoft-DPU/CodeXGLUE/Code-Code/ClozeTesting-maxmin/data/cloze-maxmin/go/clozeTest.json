[
 {
  "idx": "maxmin-1",
  "nl_tokens": [
   "SetMaxStructPoolSize",
   "sets",
   "the",
   "struct",
   "pools",
   "max",
   "size",
   ".",
   "this",
   "may",
   "be",
   "usefull",
   "for",
   "fine",
   "grained",
   "performance",
   "tuning",
   "towards",
   "your",
   "application",
   "however",
   "the",
   "default",
   "should",
   "be",
   "fine",
   "for",
   "nearly",
   "all",
   "cases",
   ".",
   "only",
   "increase",
   "if",
   "you",
   "have",
   "a",
   "deeply",
   "nested",
   "struct",
   "structure",
   ".",
   "NOTE",
   ":",
   "this",
   "method",
   "is",
   "not",
   "thread",
   "-",
   "safe",
   "NOTE",
   ":",
   "this",
   "is",
   "only",
   "here",
   "to",
   "keep",
   "compatibility",
   "with",
   "v5",
   "in",
   "v6",
   "the",
   "method",
   "will",
   "be",
   "removed"
  ],
  "pl_tokens": [
   "func",
   "(",
   "v",
   "*",
   "Validate",
   ")",
   "SetMaxStructPoolSize",
   "(",
   "<mask>",
   "int",
   ")",
   "{",
   "structPool",
   "=",
   "&",
   "sync",
   ".",
   "Pool",
   "{",
   "New",
   ":",
   "newStructErrors",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-2",
  "nl_tokens": [
   "NewSimpleBackoff",
   "creates",
   "a",
   "Backoff",
   "which",
   "ranges",
   "from",
   "min",
   "to",
   "max",
   "increasing",
   "by",
   "multiple",
   "each",
   "time",
   ".",
   "(",
   "t",
   "=",
   "start",
   "*",
   "multiple",
   "*",
   "n",
   "for",
   "the",
   "nth",
   "iteration",
   ")",
   "It",
   "also",
   "adds",
   "(",
   "and",
   "yes",
   "the",
   "jitter",
   "is",
   "always",
   "added",
   "never",
   "subtracted",
   ")",
   "a",
   "random",
   "amount",
   "of",
   "jitter",
   "up",
   "to",
   "jitterMultiple",
   "percent",
   "(",
   "that",
   "is",
   "jitterMultiple",
   "=",
   "0",
   ".",
   "0",
   "is",
   "no",
   "jitter",
   "0",
   ".",
   "15",
   "is",
   "15%",
   "added",
   "jitter",
   ")",
   ".",
   "The",
   "total",
   "time",
   "may",
   "exceed",
   "max",
   "when",
   "accounting",
   "for",
   "jitter",
   "such",
   "that",
   "the",
   "absolute",
   "max",
   "is",
   "max",
   "+",
   "max",
   "*",
   "jiterMultiple"
  ],
  "pl_tokens": [
   "func",
   "NewExponentialBackoff",
   "(",
   "<mask>",
   ",",
   "max",
   "time",
   ".",
   "Duration",
   ",",
   "jitterMultiple",
   ",",
   "multiple",
   "float64",
   ")",
   "*",
   "ExponentialBackoff",
   "{",
   "return",
   "&",
   "ExponentialBackoff",
   "{",
   "start",
   ":",
   "min",
   ",",
   "current",
   ":",
   "min",
   ",",
   "max",
   ":",
   "max",
   ",",
   "jitterMultiple",
   ":",
   "jitterMultiple",
   ",",
   "multiple",
   ":",
   "multiple",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-3",
  "nl_tokens": [
   "ScaleNewWithRange",
   "is",
   "a",
   "wrapper",
   "around",
   "gtk_scale_new_with_range",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "ScaleNewWithRange",
   "(",
   "orientation",
   "Orientation",
   ",",
   "<mask>",
   ",",
   "max",
   ",",
   "step",
   "float64",
   ")",
   "(",
   "*",
   "Scale",
   ",",
   "error",
   ")",
   "{",
   "c",
   ":=",
   "C",
   ".",
   "gtk_scale_new_with_range",
   "(",
   "C",
   ".",
   "GtkOrientation",
   "(",
   "orientation",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "min",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "max",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "step",
   ")",
   ")",
   "\n\n",
   "if",
   "c",
   "==",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nilPtrErr",
   "\n",
   "}",
   "\n",
   "return",
   "wrapScale",
   "(",
   "glib",
   ".",
   "Take",
   "(",
   "unsafe",
   ".",
   "Pointer",
   "(",
   "c",
   ")",
   ")",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-4",
  "nl_tokens": [
   "Read",
   "wraps",
   "csv",
   ".",
   "Reader",
   ".",
   "Read",
   "creating",
   "a",
   "map",
   "of",
   "column",
   "name",
   "to",
   "field",
   "value",
   ".",
   "If",
   "the",
   "line",
   "has",
   "fewer",
   "columns",
   "than",
   "Reader",
   ".",
   "Columns",
   "the",
   "map",
   "will",
   "not",
   "contain",
   "keys",
   "for",
   "these",
   "columns",
   ";",
   "thus",
   "we",
   "can",
   "distinguish",
   "between",
   "missing",
   "columns",
   "and",
   "columns",
   "with",
   "empty",
   "values",
   ".",
   "If",
   "the",
   "line",
   "has",
   "more",
   "columns",
   "than",
   "Reader",
   ".",
   "Columns",
   "Reader",
   ".",
   "Read",
   "()",
   "ignores",
   "them",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "Reader",
   ")",
   "Read",
   "(",
   ")",
   "(",
   "record",
   "map",
   "[",
   "string",
   "]",
   "string",
   ",",
   "err",
   "error",
   ")",
   "{",
   "var",
   "rawRecord",
   "[",
   "]",
   "string",
   "\n",
   "rawRecord",
   ",",
   "err",
   "=",
   "r",
   ".",
   "Reader",
   ".",
   "Read",
   "(",
   ")",
   "\n",
   "length",
   ":=",
   "<mask>",
   "(",
   "len",
   "(",
   "rawRecord",
   ")",
   ",",
   "len",
   "(",
   "r",
   ".",
   "Columns",
   ")",
   ")",
   "\n",
   "record",
   "=",
   "make",
   "(",
   "map",
   "[",
   "string",
   "]",
   "string",
   ")",
   "\n",
   "for",
   "index",
   ":=",
   "0",
   ";",
   "index",
   "<",
   "length",
   ";",
   "index",
   "++",
   "{",
   "column",
   ":=",
   "r",
   ".",
   "Columns",
   "[",
   "index",
   "]",
   "\n",
   "if",
   "_",
   ",",
   "exists",
   ":=",
   "record",
   "[",
   "column",
   "]",
   ";",
   "exists",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "column",
   ")",
   "\n",
   "}",
   "\n",
   "record",
   "[",
   "column",
   "]",
   "=",
   "rawRecord",
   "[",
   "index",
   "]",
   "\n",
   "}",
   "\n",
   "return",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-5",
  "nl_tokens": [
   "Step",
   "increases",
   "ProgressBar",
   "value",
   "by",
   "1",
   "if",
   "the",
   "value",
   "is",
   "less",
   "than",
   "ProgressBar",
   "high",
   "limit"
  ],
  "pl_tokens": [
   "func",
   "(",
   "b",
   "*",
   "ProgressBar",
   ")",
   "Step",
   "(",
   ")",
   "int",
   "{",
   "b",
   ".",
   "mtx",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "b",
   ".",
   "mtx",
   ".",
   "Unlock",
   "(",
   ")",
   "\n",
   "b",
   ".",
   "value",
   "++",
   "\n\n",
   "if",
   "b",
   ".",
   "value",
   ">",
   "b",
   ".",
   "<mask>",
   "{",
   "b",
   ".",
   "value",
   "=",
   "b",
   ".",
   "max",
   "\n",
   "}",
   "\n\n",
   "return",
   "b",
   ".",
   "value",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-6",
  "nl_tokens": [
   "Read",
   "presents",
   "one",
   "or",
   "more",
   "IDAT",
   "chunks",
   "as",
   "one",
   "continuous",
   "stream",
   "(",
   "minus",
   "the",
   "intermediate",
   "chunk",
   "headers",
   "and",
   "footers",
   ")",
   ".",
   "If",
   "the",
   "PNG",
   "data",
   "looked",
   "like",
   ":",
   "...",
   "len0",
   "IDAT",
   "xxx",
   "crc0",
   "len1",
   "IDAT",
   "yy",
   "crc1",
   "len2",
   "IEND",
   "crc2",
   "then",
   "this",
   "reader",
   "presents",
   "xxxyy",
   ".",
   "For",
   "well",
   "-",
   "formed",
   "PNG",
   "data",
   "the",
   "decoder",
   "state",
   "immediately",
   "before",
   "the",
   "first",
   "Read",
   "call",
   "is",
   "that",
   "d",
   ".",
   "r",
   "is",
   "positioned",
   "between",
   "the",
   "first",
   "IDAT",
   "and",
   "xxx",
   "and",
   "the",
   "decoder",
   "state",
   "immediately",
   "after",
   "the",
   "last",
   "Read",
   "call",
   "is",
   "that",
   "d",
   ".",
   "r",
   "is",
   "positioned",
   "between",
   "yy",
   "and",
   "crc1",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "d",
   "*",
   "decoder",
   ")",
   "Read",
   "(",
   "p",
   "[",
   "]",
   "byte",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "if",
   "len",
   "(",
   "p",
   ")",
   "==",
   "0",
   "{",
   "return",
   "0",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "for",
   "d",
   ".",
   "idatLength",
   "==",
   "0",
   "{",
   "// We have exhausted an IDAT chunk. Verify the checksum of that chunk.",
   "if",
   "err",
   ":=",
   "d",
   ".",
   "verifyChecksum",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "// Read the length and chunk type of the next chunk, and check that",
   "// it is an IDAT chunk.",
   "if",
   "_",
   ",",
   "err",
   ":=",
   "io",
   ".",
   "ReadFull",
   "(",
   "d",
   ".",
   "r",
   ",",
   "d",
   ".",
   "tmp",
   "[",
   ":",
   "8",
   "]",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "d",
   ".",
   "idatLength",
   "=",
   "binary",
   ".",
   "BigEndian",
   ".",
   "Uint32",
   "(",
   "d",
   ".",
   "tmp",
   "[",
   ":",
   "4",
   "]",
   ")",
   "\n",
   "if",
   "string",
   "(",
   "d",
   ".",
   "tmp",
   "[",
   "4",
   ":",
   "8",
   "]",
   ")",
   "!=",
   "\"",
   "\"",
   "{",
   "return",
   "0",
   ",",
   "FormatError",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "d",
   ".",
   "crc",
   ".",
   "Reset",
   "(",
   ")",
   "\n",
   "d",
   ".",
   "crc",
   ".",
   "Write",
   "(",
   "d",
   ".",
   "tmp",
   "[",
   "4",
   ":",
   "8",
   "]",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "int",
   "(",
   "d",
   ".",
   "idatLength",
   ")",
   "<",
   "0",
   "{",
   "return",
   "0",
   ",",
   "UnsupportedError",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "n",
   ",",
   "err",
   ":=",
   "d",
   ".",
   "r",
   ".",
   "Read",
   "(",
   "p",
   "[",
   ":",
   "<mask>",
   "(",
   "len",
   "(",
   "p",
   ")",
   ",",
   "int",
   "(",
   "d",
   ".",
   "idatLength",
   ")",
   ")",
   "]",
   ")",
   "\n",
   "d",
   ".",
   "crc",
   ".",
   "Write",
   "(",
   "p",
   "[",
   ":",
   "n",
   "]",
   ")",
   "\n",
   "d",
   ".",
   "idatLength",
   "-=",
   "uint32",
   "(",
   "n",
   ")",
   "\n",
   "return",
   "n",
   ",",
   "err",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-7",
  "nl_tokens": [
   "The",
   "assumption",
   "that",
   "bucket",
   "counts",
   "increase",
   "monotonically",
   "with",
   "increasing",
   "upperBound",
   "may",
   "be",
   "violated",
   "during",
   ":",
   "*",
   "Recording",
   "rule",
   "evaluation",
   "of",
   "histogram_quantile",
   "especially",
   "when",
   "rate",
   "()",
   "has",
   "been",
   "applied",
   "to",
   "the",
   "underlying",
   "bucket",
   "timeseries",
   ".",
   "*",
   "Evaluation",
   "of",
   "histogram_quantile",
   "computed",
   "over",
   "federated",
   "bucket",
   "timeseries",
   "especially",
   "when",
   "rate",
   "()",
   "has",
   "been",
   "applied",
   ".",
   "This",
   "is",
   "because",
   "scraped",
   "data",
   "is",
   "not",
   "made",
   "available",
   "to",
   "rule",
   "evaluation",
   "or",
   "federation",
   "atomically",
   "so",
   "some",
   "buckets",
   "are",
   "computed",
   "with",
   "data",
   "from",
   "the",
   "most",
   "recent",
   "scrapes",
   "but",
   "the",
   "other",
   "buckets",
   "are",
   "missing",
   "data",
   "from",
   "the",
   "most",
   "recent",
   "scrape",
   ".",
   "Monotonicity",
   "is",
   "usually",
   "guaranteed",
   "because",
   "if",
   "a",
   "bucket",
   "with",
   "upper",
   "bound",
   "u1",
   "has",
   "count",
   "c1",
   "then",
   "any",
   "bucket",
   "with",
   "a",
   "higher",
   "upper",
   "bound",
   "u",
   ">",
   "u1",
   "must",
   "have",
   "counted",
   "all",
   "c1",
   "observations",
   "and",
   "perhaps",
   "more",
   "so",
   "that",
   "c",
   ">",
   "=",
   "c1",
   ".",
   "Randomly",
   "interspersed",
   "partial",
   "sampling",
   "breaks",
   "that",
   "guarantee",
   "and",
   "rate",
   "()",
   "exacerbates",
   "it",
   ".",
   "Specifically",
   "suppose",
   "bucket",
   "le",
   "=",
   "1000",
   "has",
   "a",
   "count",
   "of",
   "10",
   "from",
   "4",
   "samples",
   "but",
   "the",
   "bucket",
   "with",
   "le",
   "=",
   "2000",
   "has",
   "a",
   "count",
   "of",
   "7",
   "from",
   "3",
   "samples",
   ".",
   "The",
   "monotonicity",
   "is",
   "broken",
   ".",
   "It",
   "is",
   "exacerbated",
   "by",
   "rate",
   "()",
   "because",
   "under",
   "normal",
   "operation",
   "cumulative",
   "counting",
   "of",
   "buckets",
   "will",
   "cause",
   "the",
   "bucket",
   "counts",
   "to",
   "diverge",
   "such",
   "that",
   "small",
   "differences",
   "from",
   "missing",
   "samples",
   "are",
   "not",
   "a",
   "problem",
   ".",
   "rate",
   "()",
   "removes",
   "this",
   "divergence",
   ".",
   ")",
   "bucketQuantile",
   "depends",
   "on",
   "that",
   "monotonicity",
   "to",
   "do",
   "a",
   "binary",
   "search",
   "for",
   "the",
   "bucket",
   "with",
   "the",
   "\u03c6",
   "-",
   "quantile",
   "count",
   "so",
   "breaking",
   "the",
   "monotonicity",
   "guarantee",
   "causes",
   "bucketQuantile",
   "()",
   "to",
   "return",
   "undefined",
   "(",
   "nonsense",
   ")",
   "results",
   ".",
   "As",
   "a",
   "somewhat",
   "hacky",
   "solution",
   "until",
   "ingestion",
   "is",
   "atomic",
   "per",
   "scrape",
   "we",
   "calculate",
   "the",
   "envelope",
   "of",
   "the",
   "histogram",
   "buckets",
   "essentially",
   "removing",
   "any",
   "decreases",
   "in",
   "the",
   "count",
   "between",
   "successive",
   "buckets",
   "."
  ],
  "pl_tokens": [
   "func",
   "ensureMonotonic",
   "(",
   "buckets",
   "buckets",
   ")",
   "{",
   "<mask>",
   ":=",
   "buckets",
   "[",
   "0",
   "]",
   ".",
   "count",
   "\n",
   "for",
   "i",
   ":=",
   "range",
   "buckets",
   "[",
   "1",
   ":",
   "]",
   "{",
   "switch",
   "{",
   "case",
   "buckets",
   "[",
   "i",
   "]",
   ".",
   "count",
   ">",
   "max",
   ":",
   "max",
   "=",
   "buckets",
   "[",
   "i",
   "]",
   ".",
   "count",
   "\n",
   "case",
   "buckets",
   "[",
   "i",
   "]",
   ".",
   "count",
   "<",
   "max",
   ":",
   "buckets",
   "[",
   "i",
   "]",
   ".",
   "count",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-8",
  "nl_tokens": [
   "CanPageDown",
   "returns",
   "whether",
   "a",
   "list",
   "can",
   "still",
   "PageDown",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "List",
   ")",
   "CanPageDown",
   "(",
   ")",
   "bool",
   "{",
   "<mask>",
   ":=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "\n",
   "return",
   "l",
   ".",
   "start",
   "+",
   "l",
   ".",
   "size",
   "<",
   "max",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-9",
  "nl_tokens": [
   "KNearest",
   "returns",
   "the",
   "k",
   "nearest",
   "points",
   "near",
   "point",
   "within",
   "maxDistance",
   "that",
   "match",
   "the",
   "accept",
   "criteria",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "points",
   "*",
   "PointsIndex",
   ")",
   "KNearest",
   "(",
   "point",
   "Point",
   ",",
   "k",
   "int",
   ",",
   "maxDistance",
   "Meters",
   ",",
   "accept",
   "func",
   "(",
   "p",
   "Point",
   ")",
   "bool",
   ")",
   "[",
   "]",
   "Point",
   "{",
   "nearbyPoints",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "Point",
   ",",
   "0",
   ")",
   "\n",
   "pointEntry",
   ":=",
   "points",
   ".",
   "index",
   ".",
   "GetEntryAt",
   "(",
   "point",
   ")",
   ".",
   "(",
   "set",
   ")",
   "\n",
   "nearbyPoints",
   "=",
   "append",
   "(",
   "nearbyPoints",
   ",",
   "getPoints",
   "(",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "{",
   "pointEntry",
   "}",
   ",",
   "accept",
   ")",
   "...",
   ")",
   "\n\n",
   "totalCount",
   ":=",
   "0",
   "\n",
   "idx",
   ":=",
   "cellOf",
   "(",
   "point",
   ",",
   "points",
   ".",
   "index",
   ".",
   "resolution",
   ")",
   "\n",
   "// Explicitely assign a greater max distance so that we definitely return enough points",
   "// and make sure it searches at least one square away.",
   "coarseMaxDistance",
   ":=",
   "math",
   ".",
   "Max",
   "(",
   "float64",
   "(",
   "maxDistance",
   ")",
   "*",
   "2.0",
   ",",
   "float64",
   "(",
   "points",
   ".",
   "index",
   ".",
   "resolution",
   ")",
   "*",
   "2.0",
   "+",
   "0.01",
   ")",
   "\n\n",
   "for",
   "d",
   ":=",
   "1",
   ";",
   "float64",
   "(",
   "d",
   ")",
   "*",
   "float64",
   "(",
   "points",
   ".",
   "index",
   ".",
   "resolution",
   ")",
   "<=",
   "coarseMaxDistance",
   ";",
   "d",
   "++",
   "{",
   "oldCount",
   ":=",
   "len",
   "(",
   "nearbyPoints",
   ")",
   "\n\n",
   "nearbyPoints",
   "=",
   "getPointsAppend",
   "(",
   "nearbyPoints",
   ",",
   "points",
   ".",
   "index",
   ".",
   "get",
   "(",
   "idx",
   ".",
   "x",
   "-",
   "d",
   ",",
   "idx",
   ".",
   "x",
   "+",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "+",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "+",
   "d",
   ")",
   ",",
   "accept",
   ")",
   "\n",
   "nearbyPoints",
   "=",
   "getPointsAppend",
   "(",
   "nearbyPoints",
   ",",
   "points",
   ".",
   "index",
   ".",
   "get",
   "(",
   "idx",
   ".",
   "x",
   "-",
   "d",
   ",",
   "idx",
   ".",
   "x",
   "+",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "-",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "-",
   "d",
   ")",
   ",",
   "accept",
   ")",
   "\n",
   "nearbyPoints",
   "=",
   "getPointsAppend",
   "(",
   "nearbyPoints",
   ",",
   "points",
   ".",
   "index",
   ".",
   "get",
   "(",
   "idx",
   ".",
   "x",
   "-",
   "d",
   ",",
   "idx",
   ".",
   "x",
   "-",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "-",
   "d",
   "+",
   "1",
   ",",
   "idx",
   ".",
   "y",
   "+",
   "d",
   "-",
   "1",
   ")",
   ",",
   "accept",
   ")",
   "\n",
   "nearbyPoints",
   "=",
   "getPointsAppend",
   "(",
   "nearbyPoints",
   ",",
   "points",
   ".",
   "index",
   ".",
   "get",
   "(",
   "idx",
   ".",
   "x",
   "+",
   "d",
   ",",
   "idx",
   ".",
   "x",
   "+",
   "d",
   ",",
   "idx",
   ".",
   "y",
   "-",
   "d",
   "+",
   "1",
   ",",
   "idx",
   ".",
   "y",
   "+",
   "d",
   "-",
   "1",
   ")",
   ",",
   "accept",
   ")",
   "\n\n",
   "totalCount",
   "+=",
   "len",
   "(",
   "nearbyPoints",
   ")",
   "-",
   "oldCount",
   "\n\n",
   "if",
   "totalCount",
   ">",
   "k",
   "{",
   "break",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "sortedPoints",
   ":=",
   "&",
   "sortedPoints",
   "{",
   "nearbyPoints",
   ",",
   "point",
   "}",
   "\n",
   "sort",
   ".",
   "Sort",
   "(",
   "sortedPoints",
   ")",
   "\n\n",
   "k",
   "=",
   "<mask>",
   "(",
   "k",
   ",",
   "len",
   "(",
   "sortedPoints",
   ".",
   "points",
   ")",
   ")",
   "\n\n",
   "// filter points which longer than maxDistance away from point.",
   "for",
   "i",
   ",",
   "nearbyPoint",
   ":=",
   "range",
   "sortedPoints",
   ".",
   "points",
   "{",
   "if",
   "Distance",
   "(",
   "point",
   ",",
   "nearbyPoint",
   ")",
   ">",
   "maxDistance",
   "||",
   "i",
   "==",
   "k",
   "{",
   "k",
   "=",
   "i",
   "\n",
   "break",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "sortedPoints",
   ".",
   "points",
   "[",
   "0",
   ":",
   "k",
   "]",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-10",
  "nl_tokens": [
   "GetClientOfferingsFilterParams",
   "returns",
   "offerings",
   "filter",
   "parameters",
   "for",
   "client",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "h",
   "*",
   "Handler",
   ")",
   "GetClientOfferingsFilterParams",
   "(",
   "tkn",
   "string",
   ")",
   "(",
   "*",
   "GetClientOfferingsFilterParamsResult",
   ",",
   "error",
   ")",
   "{",
   "logger",
   ":=",
   "h",
   ".",
   "logger",
   ".",
   "Add",
   "(",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ")",
   "\n\n",
   "if",
   "!",
   "h",
   ".",
   "token",
   ".",
   "Check",
   "(",
   "tkn",
   ")",
   "{",
   "logger",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "return",
   "nil",
   ",",
   "ErrAccessDenied",
   "\n",
   "}",
   "\n\n",
   "countries",
   ",",
   "err",
   ":=",
   "h",
   ".",
   "offeringCountries",
   "(",
   "logger",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ",",
   "max",
   ",",
   "err",
   ":=",
   "h",
   ".",
   "offeringsMinMaxPrice",
   "(",
   "logger",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "return",
   "&",
   "GetClientOfferingsFilterParamsResult",
   "{",
   "countries",
   ",",
   "min",
   ",",
   "max",
   "}",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-11",
  "nl_tokens": [
   "Any",
   "returns",
   "the",
   "position",
   "of",
   "the",
   "end",
   "of",
   "the",
   "current",
   "element",
   "that",
   "begins",
   "at",
   "pos",
   ";",
   "handles",
   "any",
   "valid",
   "json",
   "element"
  ],
  "pl_tokens": [
   "func",
   "Any",
   "(",
   "in",
   "[",
   "]",
   "byte",
   ",",
   "pos",
   "int",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "pos",
   ",",
   "err",
   ":=",
   "skipSpace",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "switch",
   "in",
   "[",
   "pos",
   "]",
   "{",
   "case",
   "'\"'",
   ":",
   "return",
   "String",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "case",
   "'{'",
   ":",
   "return",
   "Object",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "case",
   "'.'",
   ",",
   "'-'",
   ",",
   "'1'",
   ",",
   "'2'",
   ",",
   "'3'",
   ",",
   "'4'",
   ",",
   "'5'",
   ",",
   "'6'",
   ",",
   "'7'",
   ",",
   "'8'",
   ",",
   "'9'",
   ",",
   "'0'",
   ":",
   "return",
   "Number",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "case",
   "'['",
   ":",
   "return",
   "Array",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "case",
   "'t'",
   ",",
   "'f'",
   ":",
   "return",
   "Boolean",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "case",
   "'n'",
   ":",
   "return",
   "Null",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "default",
   ":",
   "<mask>",
   ":=",
   "len",
   "(",
   "in",
   ")",
   "-",
   "pos",
   "\n",
   "if",
   "max",
   ">",
   "20",
   "{",
   "max",
   "=",
   "20",
   "\n",
   "}",
   "\n\n",
   "return",
   "0",
   ",",
   "opErr",
   "{",
   "pos",
   ":",
   "pos",
   ",",
   "msg",
   ":",
   "\"",
   "\"",
   ",",
   "content",
   ":",
   "string",
   "(",
   "in",
   "[",
   "pos",
   ":",
   "pos",
   "+",
   "max",
   "]",
   ")",
   ",",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-12",
  "nl_tokens": [
   "lexEscape",
   "scans",
   "a",
   "string",
   "escape",
   "sequence",
   ".",
   "The",
   "initial",
   "escaping",
   "character",
   "(",
   "\\",
   ")",
   "has",
   "already",
   "been",
   "seen",
   ".",
   "NOTE",
   ":",
   "This",
   "function",
   "as",
   "well",
   "as",
   "the",
   "helper",
   "function",
   "digitVal",
   "()",
   "and",
   "associated",
   "tests",
   "have",
   "been",
   "adapted",
   "from",
   "the",
   "corresponding",
   "functions",
   "in",
   "the",
   "go",
   "/",
   "scanner",
   "package",
   "of",
   "the",
   "Go",
   "standard",
   "library",
   "to",
   "work",
   "for",
   "Prometheus",
   "-",
   "style",
   "strings",
   ".",
   "None",
   "of",
   "the",
   "actual",
   "escaping",
   "/",
   "quoting",
   "logic",
   "was",
   "changed",
   "in",
   "this",
   "function",
   "-",
   "it",
   "was",
   "only",
   "modified",
   "to",
   "integrate",
   "with",
   "our",
   "lexer",
   "."
  ],
  "pl_tokens": [
   "func",
   "lexEscape",
   "(",
   "l",
   "*",
   "lexer",
   ")",
   "{",
   "var",
   "n",
   "int",
   "\n",
   "var",
   "base",
   ",",
   "<mask>",
   "uint32",
   "\n\n",
   "ch",
   ":=",
   "l",
   ".",
   "next",
   "(",
   ")",
   "\n",
   "switch",
   "ch",
   "{",
   "case",
   "'a'",
   ",",
   "'b'",
   ",",
   "'f'",
   ",",
   "'n'",
   ",",
   "'r'",
   ",",
   "'t'",
   ",",
   "'v'",
   ",",
   "'\\\\'",
   ",",
   "l",
   ".",
   "stringOpen",
   ":",
   "return",
   "\n",
   "case",
   "'0'",
   ",",
   "'1'",
   ",",
   "'2'",
   ",",
   "'3'",
   ",",
   "'4'",
   ",",
   "'5'",
   ",",
   "'6'",
   ",",
   "'7'",
   ":",
   "n",
   ",",
   "base",
   ",",
   "max",
   "=",
   "3",
   ",",
   "8",
   ",",
   "255",
   "\n",
   "case",
   "'x'",
   ":",
   "ch",
   "=",
   "l",
   ".",
   "next",
   "(",
   ")",
   "\n",
   "n",
   ",",
   "base",
   ",",
   "max",
   "=",
   "2",
   ",",
   "16",
   ",",
   "255",
   "\n",
   "case",
   "'u'",
   ":",
   "ch",
   "=",
   "l",
   ".",
   "next",
   "(",
   ")",
   "\n",
   "n",
   ",",
   "base",
   ",",
   "max",
   "=",
   "4",
   ",",
   "16",
   ",",
   "unicode",
   ".",
   "MaxRune",
   "\n",
   "case",
   "'U'",
   ":",
   "ch",
   "=",
   "l",
   ".",
   "next",
   "(",
   ")",
   "\n",
   "n",
   ",",
   "base",
   ",",
   "max",
   "=",
   "8",
   ",",
   "16",
   ",",
   "unicode",
   ".",
   "MaxRune",
   "\n",
   "case",
   "eof",
   ":",
   "l",
   ".",
   "errorf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "default",
   ":",
   "l",
   ".",
   "errorf",
   "(",
   "\"",
   "\"",
   ",",
   "ch",
   ")",
   "\n",
   "}",
   "\n\n",
   "var",
   "x",
   "uint32",
   "\n",
   "for",
   "n",
   ">",
   "0",
   "{",
   "d",
   ":=",
   "uint32",
   "(",
   "digitVal",
   "(",
   "ch",
   ")",
   ")",
   "\n",
   "if",
   "d",
   ">=",
   "base",
   "{",
   "if",
   "ch",
   "==",
   "eof",
   "{",
   "l",
   ".",
   "errorf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "l",
   ".",
   "errorf",
   "(",
   "\"",
   "\"",
   ",",
   "ch",
   ")",
   "\n",
   "}",
   "\n",
   "x",
   "=",
   "x",
   "*",
   "base",
   "+",
   "d",
   "\n",
   "ch",
   "=",
   "l",
   ".",
   "next",
   "(",
   ")",
   "\n",
   "n",
   "--",
   "\n",
   "}",
   "\n\n",
   "if",
   "x",
   ">",
   "max",
   "||",
   "0xD800",
   "<=",
   "x",
   "&&",
   "x",
   "<",
   "0xE000",
   "{",
   "l",
   ".",
   "errorf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-13",
  "nl_tokens": [
   "Read",
   "is",
   "io",
   ".",
   "Reader",
   "s",
   "Read",
   ".",
   "Read",
   "fills",
   "the",
   "data",
   "with",
   "sine",
   "wave",
   "samples",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "s",
   "*",
   "stream",
   ")",
   "Read",
   "(",
   "buf",
   "[",
   "]",
   "byte",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "if",
   "len",
   "(",
   "s",
   ".",
   "remaining",
   ")",
   ">",
   "0",
   "{",
   "n",
   ":=",
   "copy",
   "(",
   "buf",
   ",",
   "s",
   ".",
   "remaining",
   ")",
   "\n",
   "s",
   ".",
   "remaining",
   "=",
   "s",
   ".",
   "remaining",
   "[",
   "n",
   ":",
   "]",
   "\n",
   "return",
   "n",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "var",
   "origBuf",
   "[",
   "]",
   "byte",
   "\n",
   "if",
   "len",
   "(",
   "buf",
   ")",
   "%",
   "4",
   ">",
   "0",
   "{",
   "origBuf",
   "=",
   "buf",
   "\n",
   "buf",
   "=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "len",
   "(",
   "origBuf",
   ")",
   "+",
   "4",
   "-",
   "len",
   "(",
   "origBuf",
   ")",
   "%",
   "4",
   ")",
   "\n",
   "}",
   "\n\n",
   "const",
   "length",
   "=",
   "int64",
   "(",
   "sampleRate",
   "/",
   "frequency",
   ")",
   "\n",
   "p",
   ":=",
   "s",
   ".",
   "position",
   "/",
   "4",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "len",
   "(",
   "buf",
   ")",
   "/",
   "4",
   ";",
   "i",
   "++",
   "{",
   "const",
   "<mask>",
   "=",
   "32767",
   "\n",
   "b",
   ":=",
   "int16",
   "(",
   "math",
   ".",
   "Sin",
   "(",
   "2",
   "*",
   "math",
   ".",
   "Pi",
   "*",
   "float64",
   "(",
   "p",
   ")",
   "/",
   "float64",
   "(",
   "length",
   ")",
   ")",
   "*",
   "max",
   ")",
   "\n",
   "buf",
   "[",
   "4",
   "*",
   "i",
   "]",
   "=",
   "byte",
   "(",
   "b",
   ")",
   "\n",
   "buf",
   "[",
   "4",
   "*",
   "i",
   "+",
   "1",
   "]",
   "=",
   "byte",
   "(",
   "b",
   ">>",
   "8",
   ")",
   "\n",
   "buf",
   "[",
   "4",
   "*",
   "i",
   "+",
   "2",
   "]",
   "=",
   "byte",
   "(",
   "b",
   ")",
   "\n",
   "buf",
   "[",
   "4",
   "*",
   "i",
   "+",
   "3",
   "]",
   "=",
   "byte",
   "(",
   "b",
   ">>",
   "8",
   ")",
   "\n",
   "p",
   "++",
   "\n",
   "}",
   "\n\n",
   "s",
   ".",
   "position",
   "+=",
   "int64",
   "(",
   "len",
   "(",
   "buf",
   ")",
   ")",
   "\n",
   "s",
   ".",
   "position",
   "%=",
   "length",
   "*",
   "4",
   "\n\n",
   "if",
   "origBuf",
   "!=",
   "nil",
   "{",
   "n",
   ":=",
   "copy",
   "(",
   "origBuf",
   ",",
   "buf",
   ")",
   "\n",
   "s",
   ".",
   "remaining",
   "=",
   "buf",
   "[",
   "n",
   ":",
   "]",
   "\n",
   "return",
   "n",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "return",
   "len",
   "(",
   "buf",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-14",
  "nl_tokens": [
   "getCWStatsSet",
   "gets",
   "the",
   "stats",
   "set",
   "for",
   "either",
   "CPU",
   "or",
   "Memory",
   "based",
   "on",
   "the",
   "function",
   "pointer",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "queue",
   "*",
   "Queue",
   ")",
   "getCWStatsSet",
   "(",
   "f",
   "getUsageFunc",
   ")",
   "(",
   "*",
   "ecstcs",
   ".",
   "CWStatsSet",
   ",",
   "error",
   ")",
   "{",
   "queue",
   ".",
   "lock",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "queue",
   ".",
   "lock",
   ".",
   "Unlock",
   "(",
   ")",
   "\n\n",
   "queueLength",
   ":=",
   "len",
   "(",
   "queue",
   ".",
   "buffer",
   ")",
   "\n",
   "if",
   "queueLength",
   "<",
   "2",
   "{",
   "// Need at least 2 data points to calculate this.",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "var",
   "<mask>",
   ",",
   "max",
   ",",
   "sum",
   "float64",
   "\n",
   "var",
   "sampleCount",
   "int64",
   "\n",
   "min",
   "=",
   "math",
   ".",
   "MaxFloat64",
   "\n",
   "max",
   "=",
   "-",
   "math",
   ".",
   "MaxFloat64",
   "\n",
   "sum",
   "=",
   "0",
   "\n",
   "sampleCount",
   "=",
   "0",
   "\n\n",
   "for",
   "_",
   ",",
   "stat",
   ":=",
   "range",
   "queue",
   ".",
   "buffer",
   "{",
   "perc",
   ":=",
   "f",
   "(",
   "&",
   "stat",
   ")",
   "\n",
   "if",
   "math",
   ".",
   "IsNaN",
   "(",
   "perc",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n\n",
   "min",
   "=",
   "math",
   ".",
   "Min",
   "(",
   "min",
   ",",
   "perc",
   ")",
   "\n",
   "max",
   "=",
   "math",
   ".",
   "Max",
   "(",
   "max",
   ",",
   "perc",
   ")",
   "\n",
   "sampleCount",
   "++",
   "\n",
   "sum",
   "+=",
   "perc",
   "\n",
   "}",
   "\n\n",
   "return",
   "&",
   "ecstcs",
   ".",
   "CWStatsSet",
   "{",
   "Max",
   ":",
   "&",
   "max",
   ",",
   "Min",
   ":",
   "&",
   "min",
   ",",
   "SampleCount",
   ":",
   "&",
   "sampleCount",
   ",",
   "Sum",
   ":",
   "&",
   "sum",
   ",",
   "}",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-15",
  "nl_tokens": [
   "RateLimit",
   "is",
   "a",
   "Gin",
   "middleware",
   "for",
   "rate",
   "limitting",
   "incoming",
   "requests",
   "based",
   "on",
   "the",
   "client",
   "s",
   "IP",
   "address",
   ".",
   "The",
   "resulting",
   "middleware",
   "will",
   "use",
   "the",
   "client",
   "to",
   "talk",
   "to",
   "the",
   "Redis",
   "server",
   ".",
   "The",
   "hasher",
   "is",
   "used",
   "to",
   "keep",
   "track",
   "of",
   "counters",
   "and",
   "to",
   "provide",
   "an",
   "estimate",
   "of",
   "when",
   "the",
   "client",
   "should",
   "be",
   "able",
   "to",
   "do",
   "requests",
   "again",
   ".",
   "The",
   "limit",
   "per",
   "period",
   "is",
   "defined",
   "by",
   "the",
   "max",
   ".",
   "Response",
   "format",
   "Once",
   "a",
   "client",
   "reaches",
   "the",
   "imposed",
   "limit",
   "they",
   "will",
   "receive",
   "a",
   "JSON",
   "response",
   "similar",
   "to",
   "the",
   "following",
   ":",
   "{",
   "messages",
   ":",
   "[",
   "Rate",
   "limit",
   "exceeded",
   ".",
   "Try",
   "again",
   "in",
   "1",
   "minute",
   "from",
   "now",
   "]",
   "status",
   ":",
   "error",
   "}"
  ],
  "pl_tokens": [
   "func",
   "RateLimit",
   "(",
   "client",
   "*",
   "redis",
   ".",
   "Client",
   ",",
   "hasher",
   "speedbump",
   ".",
   "RateHasher",
   ",",
   "<mask>",
   "int64",
   ")",
   "gin",
   ".",
   "HandlerFunc",
   "{",
   "limiter",
   ":=",
   "speedbump",
   ".",
   "NewLimiter",
   "(",
   "client",
   ",",
   "hasher",
   ",",
   "max",
   ")",
   "\n\n",
   "return",
   "func",
   "(",
   "c",
   "*",
   "gin",
   ".",
   "Context",
   ")",
   "{",
   "// Attempt to perform the request",
   "ip",
   ",",
   "_",
   ",",
   "_",
   ":=",
   "net",
   ".",
   "SplitHostPort",
   "(",
   "c",
   ".",
   "Request",
   ".",
   "RemoteAddr",
   ")",
   "\n",
   "ok",
   ",",
   "err",
   ":=",
   "limiter",
   ".",
   "Attempt",
   "(",
   "ip",
   ")",
   "\n\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "panic",
   "(",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "!",
   "ok",
   "{",
   "nextTime",
   ":=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   ".",
   "Add",
   "(",
   "hasher",
   ".",
   "Duration",
   "(",
   ")",
   ")",
   "\n\n",
   "c",
   ".",
   "JSON",
   "(",
   "429",
   ",",
   "gin",
   ".",
   "H",
   "{",
   "\"",
   "\"",
   ":",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ":",
   "[",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   "+",
   "humanize",
   ".",
   "Time",
   "(",
   "nextTime",
   ")",
   "}",
   ",",
   "}",
   ")",
   "\n",
   "c",
   ".",
   "Abort",
   "(",
   ")",
   "\n",
   "}",
   "\n\n",
   "c",
   ".",
   "Next",
   "(",
   ")",
   "\n\n",
   "// After the request",
   "// log.Print(ip + \" was limited because it exceeded the max rate\")",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-16",
  "nl_tokens": [
   "returns",
   "true",
   "if",
   "the",
   "next",
   "n",
   "values",
   "in",
   "in",
   "can",
   "be",
   "packed",
   "using",
   "bits",
   "bits",
   "per",
   "value",
   "."
  ],
  "pl_tokens": [
   "func",
   "canPack",
   "(",
   "src",
   "[",
   "]",
   "uint32",
   ",",
   "bits",
   ",",
   "n",
   "int",
   ")",
   "bool",
   "{",
   "if",
   "len",
   "(",
   "src",
   ")",
   "<",
   "n",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "end",
   ":=",
   "len",
   "(",
   "src",
   ")",
   "\n",
   "if",
   "n",
   "<",
   "end",
   "{",
   "end",
   "=",
   "n",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ":=",
   "uint32",
   "(",
   "(",
   "2",
   "<<",
   "uint32",
   "(",
   "bits",
   "-",
   "1",
   ")",
   ")",
   "-",
   "1",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "end",
   ";",
   "i",
   "++",
   "{",
   "if",
   "src",
   "[",
   "i",
   "]",
   ">",
   "max",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-17",
  "nl_tokens": [
   "tick",
   "updates",
   "the",
   "minimum",
   "quiescence",
   "timer",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "q",
   "*",
   "quiescence",
   ")",
   "tick",
   "(",
   ")",
   "{",
   "now",
   ":=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   "\n\n",
   "// If this is the first tick, set up the timer and calculate the max",
   "// deadline.",
   "if",
   "q",
   ".",
   "timer",
   "==",
   "nil",
   "{",
   "q",
   ".",
   "timer",
   "=",
   "time",
   ".",
   "NewTimer",
   "(",
   "q",
   ".",
   "<mask>",
   ")",
   "\n",
   "go",
   "func",
   "(",
   ")",
   "{",
   "select",
   "{",
   "case",
   "<-",
   "q",
   ".",
   "timer",
   ".",
   "C",
   ":",
   "q",
   ".",
   "ch",
   "<-",
   "q",
   ".",
   "template",
   "\n",
   "}",
   "\n",
   "}",
   "(",
   ")",
   "\n\n",
   "q",
   ".",
   "deadline",
   "=",
   "now",
   ".",
   "Add",
   "(",
   "q",
   ".",
   "max",
   ")",
   "\n",
   "return",
   "\n",
   "}",
   "\n\n",
   "// Snooze the timer for the min time, or snooze less if we are coming",
   "// up against the max time. If the timer has already fired and the reset",
   "// doesn't work that's ok because we guarantee that the channel gets our",
   "// template which means that we are obsolete and a fresh quiescence will",
   "// be set up.",
   "if",
   "now",
   ".",
   "Add",
   "(",
   "q",
   ".",
   "min",
   ")",
   ".",
   "Before",
   "(",
   "q",
   ".",
   "deadline",
   ")",
   "{",
   "q",
   ".",
   "timer",
   ".",
   "Reset",
   "(",
   "q",
   ".",
   "min",
   ")",
   "\n",
   "}",
   "else",
   "if",
   "dur",
   ":=",
   "q",
   ".",
   "deadline",
   ".",
   "Sub",
   "(",
   "now",
   ")",
   ";",
   "dur",
   ">",
   "0",
   "{",
   "q",
   ".",
   "timer",
   ".",
   "Reset",
   "(",
   "dur",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-18",
  "nl_tokens": [
   "integer",
   "types"
  ],
  "pl_tokens": [
   "func",
   "convertNvInteger",
   "(",
   "v",
   "interface",
   "{",
   "}",
   ",",
   "<mask>",
   ",",
   "max",
   "int64",
   ")",
   "(",
   "driver",
   ".",
   "Value",
   ",",
   "error",
   ")",
   "{",
   "if",
   "v",
   "==",
   "nil",
   "{",
   "return",
   "v",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "rv",
   ":=",
   "reflect",
   ".",
   "ValueOf",
   "(",
   "v",
   ")",
   "\n",
   "switch",
   "rv",
   ".",
   "Kind",
   "(",
   ")",
   "{",
   "// bool is represented in HDB as tinyint",
   "case",
   "reflect",
   ".",
   "Bool",
   ":",
   "return",
   "rv",
   ".",
   "Bool",
   "(",
   ")",
   ",",
   "nil",
   "\n",
   "case",
   "reflect",
   ".",
   "Int",
   ",",
   "reflect",
   ".",
   "Int8",
   ",",
   "reflect",
   ".",
   "Int16",
   ",",
   "reflect",
   ".",
   "Int32",
   ",",
   "reflect",
   ".",
   "Int64",
   ":",
   "i64",
   ":=",
   "rv",
   ".",
   "Int",
   "(",
   ")",
   "\n",
   "if",
   "i64",
   ">",
   "max",
   "||",
   "i64",
   "<",
   "min",
   "{",
   "return",
   "nil",
   ",",
   "ErrIntegerOutOfRange",
   "\n",
   "}",
   "\n",
   "return",
   "i64",
   ",",
   "nil",
   "\n",
   "case",
   "reflect",
   ".",
   "Uint",
   ",",
   "reflect",
   ".",
   "Uint8",
   ",",
   "reflect",
   ".",
   "Uint16",
   ",",
   "reflect",
   ".",
   "Uint32",
   ",",
   "reflect",
   ".",
   "Uint64",
   ":",
   "u64",
   ":=",
   "rv",
   ".",
   "Uint",
   "(",
   ")",
   "\n",
   "if",
   "u64",
   ">",
   "uint64",
   "(",
   "max",
   ")",
   "{",
   "return",
   "nil",
   ",",
   "ErrIntegerOutOfRange",
   "\n",
   "}",
   "\n",
   "return",
   "int64",
   "(",
   "u64",
   ")",
   ",",
   "nil",
   "\n",
   "case",
   "reflect",
   ".",
   "Ptr",
   ":",
   "// indirect pointers",
   "if",
   "rv",
   ".",
   "IsNil",
   "(",
   ")",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "return",
   "convertNvInteger",
   "(",
   "rv",
   ".",
   "Elem",
   "(",
   ")",
   ".",
   "Interface",
   "(",
   ")",
   ",",
   "min",
   ",",
   "max",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-19",
  "nl_tokens": [
   "OptFieldTypeInt",
   "adds",
   "an",
   "integer",
   "field",
   "."
  ],
  "pl_tokens": [
   "func",
   "OptFieldTypeInt",
   "(",
   "<mask>",
   "int64",
   ",",
   "max",
   "int64",
   ")",
   "FieldOption",
   "{",
   "return",
   "func",
   "(",
   "options",
   "*",
   "FieldOptions",
   ")",
   "{",
   "options",
   ".",
   "fieldType",
   "=",
   "FieldTypeInt",
   "\n",
   "options",
   ".",
   "min",
   "=",
   "min",
   "\n",
   "options",
   ".",
   "max",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-20",
  "nl_tokens": [
   "rayCasting",
   "returns",
   "a",
   "slice",
   "of",
   "line",
   "originating",
   "from",
   "point",
   "cx",
   "cy",
   "and",
   "intersecting",
   "with",
   "objects"
  ],
  "pl_tokens": [
   "func",
   "rayCasting",
   "(",
   "cx",
   ",",
   "cy",
   "float64",
   ",",
   "objects",
   "[",
   "]",
   "object",
   ")",
   "[",
   "]",
   "line",
   "{",
   "const",
   "rayLength",
   "=",
   "1000",
   "// something large enough to reach all objects",
   "\n\n",
   "var",
   "rays",
   "[",
   "]",
   "line",
   "\n",
   "for",
   "_",
   ",",
   "obj",
   ":=",
   "range",
   "objects",
   "{",
   "// Cast two rays per point",
   "for",
   "_",
   ",",
   "p",
   ":=",
   "range",
   "obj",
   ".",
   "points",
   "(",
   ")",
   "{",
   "l",
   ":=",
   "line",
   "{",
   "cx",
   ",",
   "cy",
   ",",
   "p",
   "[",
   "0",
   "]",
   ",",
   "p",
   "[",
   "1",
   "]",
   "}",
   "\n",
   "angle",
   ":=",
   "l",
   ".",
   "angle",
   "(",
   ")",
   "\n\n",
   "for",
   "_",
   ",",
   "offset",
   ":=",
   "range",
   "[",
   "]",
   "float64",
   "{",
   "-",
   "0.005",
   ",",
   "0.005",
   "}",
   "{",
   "points",
   ":=",
   "[",
   "]",
   "[",
   "2",
   "]",
   "float64",
   "{",
   "}",
   "\n",
   "ray",
   ":=",
   "newRay",
   "(",
   "cx",
   ",",
   "cy",
   ",",
   "rayLength",
   ",",
   "angle",
   "+",
   "offset",
   ")",
   "\n\n",
   "// Unpack all objects",
   "for",
   "_",
   ",",
   "o",
   ":=",
   "range",
   "objects",
   "{",
   "for",
   "_",
   ",",
   "wall",
   ":=",
   "range",
   "o",
   ".",
   "walls",
   "{",
   "if",
   "px",
   ",",
   "py",
   ",",
   "ok",
   ":=",
   "intersection",
   "(",
   "ray",
   ",",
   "wall",
   ")",
   ";",
   "ok",
   "{",
   "points",
   "=",
   "append",
   "(",
   "points",
   ",",
   "[",
   "2",
   "]",
   "float64",
   "{",
   "px",
   ",",
   "py",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Find the point closest to start of ray",
   "<mask>",
   ":=",
   "math",
   ".",
   "Inf",
   "(",
   "1",
   ")",
   "\n",
   "minI",
   ":=",
   "-",
   "1",
   "\n",
   "for",
   "i",
   ",",
   "p",
   ":=",
   "range",
   "points",
   "{",
   "d2",
   ":=",
   "(",
   "cx",
   "-",
   "p",
   "[",
   "0",
   "]",
   ")",
   "*",
   "(",
   "cx",
   "-",
   "p",
   "[",
   "0",
   "]",
   ")",
   "+",
   "(",
   "cy",
   "-",
   "p",
   "[",
   "1",
   "]",
   ")",
   "*",
   "(",
   "cy",
   "-",
   "p",
   "[",
   "1",
   "]",
   ")",
   "\n",
   "if",
   "d2",
   "<",
   "min",
   "{",
   "min",
   "=",
   "d2",
   "\n",
   "minI",
   "=",
   "i",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "rays",
   "=",
   "append",
   "(",
   "rays",
   ",",
   "line",
   "{",
   "cx",
   ",",
   "cy",
   ",",
   "points",
   "[",
   "minI",
   "]",
   "[",
   "0",
   "]",
   ",",
   "points",
   "[",
   "minI",
   "]",
   "[",
   "1",
   "]",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Sort rays based on angle, otherwise light triangles will not come out right",
   "sort",
   ".",
   "Slice",
   "(",
   "rays",
   ",",
   "func",
   "(",
   "i",
   "int",
   ",",
   "j",
   "int",
   ")",
   "bool",
   "{",
   "return",
   "rays",
   "[",
   "i",
   "]",
   ".",
   "angle",
   "(",
   ")",
   "<",
   "rays",
   "[",
   "j",
   "]",
   ".",
   "angle",
   "(",
   ")",
   "\n",
   "}",
   ")",
   "\n",
   "return",
   "rays",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-21",
  "nl_tokens": [
   "float",
   "types"
  ],
  "pl_tokens": [
   "func",
   "convertNvFloat",
   "(",
   "v",
   "interface",
   "{",
   "}",
   ",",
   "<mask>",
   "float64",
   ")",
   "(",
   "driver",
   ".",
   "Value",
   ",",
   "error",
   ")",
   "{",
   "if",
   "v",
   "==",
   "nil",
   "{",
   "return",
   "v",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "rv",
   ":=",
   "reflect",
   ".",
   "ValueOf",
   "(",
   "v",
   ")",
   "\n",
   "switch",
   "rv",
   ".",
   "Kind",
   "(",
   ")",
   "{",
   "case",
   "reflect",
   ".",
   "Float32",
   ",",
   "reflect",
   ".",
   "Float64",
   ":",
   "f64",
   ":=",
   "rv",
   ".",
   "Float",
   "(",
   ")",
   "\n",
   "if",
   "math",
   ".",
   "Abs",
   "(",
   "f64",
   ")",
   ">",
   "max",
   "{",
   "return",
   "nil",
   ",",
   "ErrFloatOutOfRange",
   "\n",
   "}",
   "\n",
   "return",
   "f64",
   ",",
   "nil",
   "\n",
   "case",
   "reflect",
   ".",
   "Ptr",
   ":",
   "// indirect pointers",
   "if",
   "rv",
   ".",
   "IsNil",
   "(",
   ")",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "return",
   "convertNvFloat",
   "(",
   "rv",
   ".",
   "Elem",
   "(",
   ")",
   ".",
   "Interface",
   "(",
   ")",
   ",",
   "max",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-22",
  "nl_tokens": [
   "clamp",
   "clamps",
   "v",
   "to",
   "the",
   "range",
   "[",
   "min",
   "max",
   "]",
   "."
  ],
  "pl_tokens": [
   "func",
   "clamp",
   "(",
   "v",
   ",",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "int",
   "{",
   "if",
   "min",
   ">",
   "max",
   "{",
   "panic",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "v",
   "<",
   "min",
   "{",
   "return",
   "min",
   "\n",
   "}",
   "\n",
   "if",
   "max",
   "<",
   "v",
   "{",
   "return",
   "max",
   "\n",
   "}",
   "\n",
   "return",
   "v",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-23",
  "nl_tokens": [
   "/",
   "*",
   "NewProgressBar",
   "creates",
   "a",
   "new",
   "ProgressBar",
   ".",
   "parent",
   "-",
   "is",
   "container",
   "that",
   "keeps",
   "the",
   "control",
   ".",
   "width",
   "and",
   "heigth",
   "-",
   "are",
   "minimal",
   "size",
   "of",
   "the",
   "control",
   ".",
   "scale",
   "-",
   "the",
   "way",
   "of",
   "scaling",
   "the",
   "control",
   "when",
   "the",
   "parent",
   "is",
   "resized",
   ".",
   "Use",
   "DoNotScale",
   "constant",
   "if",
   "the",
   "control",
   "should",
   "keep",
   "its",
   "original",
   "size",
   "."
  ],
  "pl_tokens": [
   "func",
   "CreateProgressBar",
   "(",
   "parent",
   "Control",
   ",",
   "width",
   ",",
   "height",
   "int",
   ",",
   "scale",
   "int",
   ")",
   "*",
   "ProgressBar",
   "{",
   "b",
   ":=",
   "new",
   "(",
   "ProgressBar",
   ")",
   "\n",
   "b",
   ".",
   "BaseControl",
   "=",
   "NewBaseControl",
   "(",
   ")",
   "\n\n",
   "if",
   "height",
   "==",
   "AutoSize",
   "{",
   "height",
   "=",
   "1",
   "\n",
   "}",
   "\n",
   "if",
   "width",
   "==",
   "AutoSize",
   "{",
   "width",
   "=",
   "10",
   "\n",
   "}",
   "\n\n",
   "b",
   ".",
   "SetSize",
   "(",
   "width",
   ",",
   "height",
   ")",
   "\n",
   "b",
   ".",
   "SetConstraints",
   "(",
   "width",
   ",",
   "height",
   ")",
   "\n",
   "b",
   ".",
   "SetTabStop",
   "(",
   "false",
   ")",
   "\n",
   "b",
   ".",
   "SetScale",
   "(",
   "scale",
   ")",
   "\n",
   "b",
   ".",
   "<mask>",
   "=",
   "0",
   "\n",
   "b",
   ".",
   "max",
   "=",
   "10",
   "\n",
   "b",
   ".",
   "direction",
   "=",
   "Horizontal",
   "\n",
   "b",
   ".",
   "parent",
   "=",
   "parent",
   "\n",
   "b",
   ".",
   "align",
   "=",
   "AlignCenter",
   "\n\n",
   "if",
   "parent",
   "!=",
   "nil",
   "{",
   "parent",
   ".",
   "AddChild",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "b",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-24",
  "nl_tokens": [
   "PageDown",
   "moves",
   "the",
   "visible",
   "list",
   "forward",
   "by",
   "x",
   "items",
   ".",
   "Where",
   "x",
   "is",
   "the",
   "size",
   "of",
   "the",
   "visible",
   "items",
   "on",
   "the",
   "list",
   ".",
   "The",
   "selected",
   "item",
   "becomes",
   "the",
   "first",
   "visible",
   "item",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "List",
   ")",
   "PageDown",
   "(",
   ")",
   "{",
   "start",
   ":=",
   "l",
   ".",
   "start",
   "+",
   "l",
   ".",
   "size",
   "\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "-",
   "l",
   ".",
   "size",
   "\n\n",
   "switch",
   "{",
   "case",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "<",
   "l",
   ".",
   "size",
   ":",
   "l",
   ".",
   "start",
   "=",
   "0",
   "\n",
   "case",
   "start",
   ">",
   "max",
   ":",
   "l",
   ".",
   "start",
   "=",
   "max",
   "\n",
   "default",
   ":",
   "l",
   ".",
   "start",
   "=",
   "start",
   "\n",
   "}",
   "\n\n",
   "cursor",
   ":=",
   "l",
   ".",
   "start",
   "\n\n",
   "if",
   "cursor",
   "==",
   "l",
   ".",
   "cursor",
   "{",
   "l",
   ".",
   "cursor",
   "=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "-",
   "1",
   "\n",
   "}",
   "else",
   "if",
   "cursor",
   ">",
   "l",
   ".",
   "cursor",
   "{",
   "l",
   ".",
   "cursor",
   "=",
   "cursor",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-25",
  "nl_tokens": [
   "merge",
   "merges",
   "two",
   "similar",
   "Signature",
   "zapping",
   "out",
   "differences",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "s",
   "*",
   "Signature",
   ")",
   "merge",
   "(",
   "r",
   "*",
   "Signature",
   ")",
   "*",
   "Signature",
   "{",
   "<mask>",
   ":=",
   "s",
   ".",
   "SleepMin",
   "\n",
   "if",
   "r",
   ".",
   "SleepMin",
   "<",
   "min",
   "{",
   "min",
   "=",
   "r",
   ".",
   "SleepMin",
   "\n",
   "}",
   "\n",
   "max",
   ":=",
   "s",
   ".",
   "SleepMax",
   "\n",
   "if",
   "r",
   ".",
   "SleepMax",
   ">",
   "max",
   "{",
   "max",
   "=",
   "r",
   ".",
   "SleepMax",
   "\n",
   "}",
   "\n",
   "return",
   "&",
   "Signature",
   "{",
   "State",
   ":",
   "s",
   ".",
   "State",
   ",",
   "// Drop right side.",
   "CreatedBy",
   ":",
   "s",
   ".",
   "CreatedBy",
   ",",
   "// Drop right side.",
   "SleepMin",
   ":",
   "min",
   ",",
   "SleepMax",
   ":",
   "max",
   ",",
   "Stack",
   ":",
   "*",
   "s",
   ".",
   "Stack",
   ".",
   "merge",
   "(",
   "&",
   "r",
   ".",
   "Stack",
   ")",
   ",",
   "Locked",
   ":",
   "s",
   ".",
   "Locked",
   "||",
   "r",
   ".",
   "Locked",
   ",",
   "// TODO(maruel): This is weirdo.",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-26",
  "nl_tokens": [
   "parseShadow",
   "parses",
   "the",
   "row",
   "of",
   "a",
   "shadowed",
   "password",
   "."
  ],
  "pl_tokens": [
   "func",
   "parseShadow",
   "(",
   "row",
   "string",
   ")",
   "(",
   "*",
   "Shadow",
   ",",
   "error",
   ")",
   "{",
   "fields",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "row",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "fields",
   ")",
   "!=",
   "9",
   "{",
   "return",
   "nil",
   ",",
   "rowError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   "}",
   "\n",
   "}",
   "\n\n",
   "var",
   "inactive",
   ",",
   "expire",
   ",",
   "flag",
   "int",
   "\n\n",
   "changed",
   ",",
   "err",
   ":=",
   "parseChange",
   "(",
   "fields",
   "[",
   "2",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "<mask>",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "3",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "max",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "4",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "warn",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "5",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Optional fields",
   "if",
   "fields",
   "[",
   "6",
   "]",
   "!=",
   "\"",
   "\"",
   "{",
   "if",
   "inactive",
   ",",
   "err",
   "=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "6",
   "]",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "if",
   "fields",
   "[",
   "7",
   "]",
   "!=",
   "\"",
   "\"",
   "{",
   "if",
   "expire",
   ",",
   "err",
   "=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "7",
   "]",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "if",
   "fields",
   "[",
   "8",
   "]",
   "!=",
   "\"",
   "\"",
   "{",
   "if",
   "flag",
   ",",
   "err",
   "=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "fields",
   "[",
   "8",
   "]",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "atoiError",
   "{",
   "_SHADOW_FILE",
   ",",
   "row",
   ",",
   "\"",
   "\"",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "&",
   "Shadow",
   "{",
   "fields",
   "[",
   "0",
   "]",
   ",",
   "fields",
   "[",
   "1",
   "]",
   ",",
   "changed",
   ",",
   "min",
   ",",
   "max",
   ",",
   "warn",
   ",",
   "inactive",
   ",",
   "expire",
   ",",
   "flag",
   ",",
   "}",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-27",
  "nl_tokens": [
   "String",
   "returns",
   "the",
   "position",
   "of",
   "the",
   "string",
   "that",
   "begins",
   "at",
   "the",
   "specified",
   "pos"
  ],
  "pl_tokens": [
   "func",
   "String",
   "(",
   "in",
   "[",
   "]",
   "byte",
   ",",
   "pos",
   "int",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "pos",
   ",",
   "err",
   ":=",
   "skipSpace",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "in",
   ")",
   "\n\n",
   "if",
   "v",
   ":=",
   "in",
   "[",
   "pos",
   "]",
   ";",
   "v",
   "!=",
   "'\"'",
   "{",
   "return",
   "0",
   ",",
   "newError",
   "(",
   "pos",
   ",",
   "v",
   ")",
   "\n",
   "}",
   "\n",
   "pos",
   "++",
   "\n\n",
   "for",
   "{",
   "switch",
   "in",
   "[",
   "pos",
   "]",
   "{",
   "case",
   "'\\\\'",
   ":",
   "if",
   "in",
   "[",
   "pos",
   "+",
   "1",
   "]",
   "==",
   "'\"'",
   "{",
   "pos",
   "++",
   "\n",
   "}",
   "\n",
   "case",
   "'\"'",
   ":",
   "return",
   "pos",
   "+",
   "1",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "pos",
   "++",
   "\n\n",
   "if",
   "pos",
   ">=",
   "max",
   "{",
   "break",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "0",
   ",",
   "errors",
   ".",
   "New",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-28",
  "nl_tokens": [
   "Left",
   "returns",
   "the",
   "number",
   "of",
   "remaining",
   "requests",
   "for",
   "id",
   "during",
   "a",
   "current",
   "period",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "RateLimiter",
   ")",
   "Left",
   "(",
   "id",
   "string",
   ")",
   "(",
   "int64",
   ",",
   "error",
   ")",
   "{",
   "// Retrieve attempted count.",
   "attempted",
   ",",
   "err",
   ":=",
   "r",
   ".",
   "Attempted",
   "(",
   "id",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "// Left is max minus attempted.",
   "left",
   ":=",
   "r",
   ".",
   "<mask>",
   "-",
   "attempted",
   "\n",
   "if",
   "left",
   "<",
   "0",
   "{",
   "return",
   "0",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "return",
   "left",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-29",
  "nl_tokens": [
   "Next",
   "moves",
   "the",
   "visible",
   "list",
   "forward",
   "one",
   "item",
   ".",
   "If",
   "the",
   "selected",
   "item",
   "is",
   "out",
   "of",
   "view",
   "the",
   "new",
   "select",
   "item",
   "becomes",
   "the",
   "first",
   "visible",
   "item",
   ".",
   "If",
   "the",
   "list",
   "is",
   "already",
   "at",
   "the",
   "bottom",
   "nothing",
   "happens",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "List",
   ")",
   "Next",
   "(",
   ")",
   "{",
   "<mask>",
   ":=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "-",
   "1",
   "\n\n",
   "if",
   "l",
   ".",
   "cursor",
   "<",
   "max",
   "{",
   "l",
   ".",
   "cursor",
   "++",
   "\n",
   "}",
   "\n\n",
   "if",
   "l",
   ".",
   "start",
   "+",
   "l",
   ".",
   "size",
   "<=",
   "l",
   ".",
   "cursor",
   "{",
   "l",
   ".",
   "start",
   "=",
   "l",
   ".",
   "cursor",
   "-",
   "l",
   ".",
   "size",
   "+",
   "1",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-30",
  "nl_tokens": [
   "stacks",
   "is",
   "a",
   "wrapper",
   "for",
   "runtime",
   ".",
   "Stack",
   "that",
   "attempts",
   "to",
   "recover",
   "the",
   "data",
   "for",
   "all",
   "goroutines",
   "."
  ],
  "pl_tokens": [
   "func",
   "stacks",
   "(",
   "all",
   "bool",
   ",",
   "<mask>",
   "int",
   ")",
   "[",
   "]",
   "byte",
   "{",
   "// We don't know how big the traces are, so grow a few times if they don't fit. Start large, though.",
   "n",
   ":=",
   "initialMaxStackBufSize",
   "\n",
   "var",
   "trace",
   "[",
   "]",
   "byte",
   "\n",
   "for",
   "n",
   "<=",
   "max",
   "{",
   "trace",
   "=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "n",
   ")",
   "\n",
   "nbytes",
   ":=",
   "runtime",
   ".",
   "Stack",
   "(",
   "trace",
   ",",
   "all",
   ")",
   "\n",
   "if",
   "nbytes",
   "<",
   "len",
   "(",
   "trace",
   ")",
   "{",
   "return",
   "trace",
   "[",
   ":",
   "nbytes",
   "]",
   "\n",
   "}",
   "\n",
   "n",
   "*=",
   "2",
   "\n",
   "}",
   "\n",
   "return",
   "trace",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-31",
  "nl_tokens": [
   "ScaleButtonNew",
   "()",
   "is",
   "a",
   "wrapper",
   "around",
   "gtk_scale_button_new",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "ScaleButtonNew",
   "(",
   "size",
   "IconSize",
   ",",
   "<mask>",
   ",",
   "max",
   ",",
   "step",
   "float64",
   ",",
   "icons",
   "[",
   "]",
   "string",
   ")",
   "(",
   "*",
   "ScaleButton",
   ",",
   "error",
   ")",
   "{",
   "cicons",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "*",
   "C",
   ".",
   "gchar",
   ",",
   "len",
   "(",
   "icons",
   ")",
   ")",
   "\n",
   "for",
   "i",
   ",",
   "icon",
   ":=",
   "range",
   "icons",
   "{",
   "cicons",
   "[",
   "i",
   "]",
   "=",
   "(",
   "*",
   "C",
   ".",
   "gchar",
   ")",
   "(",
   "C",
   ".",
   "CString",
   "(",
   "icon",
   ")",
   ")",
   "\n",
   "defer",
   "C",
   ".",
   "free",
   "(",
   "unsafe",
   ".",
   "Pointer",
   "(",
   "cicons",
   "[",
   "i",
   "]",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "cicons",
   "=",
   "append",
   "(",
   "cicons",
   ",",
   "nil",
   ")",
   "\n\n",
   "c",
   ":=",
   "C",
   ".",
   "gtk_scale_button_new",
   "(",
   "C",
   ".",
   "GtkIconSize",
   "(",
   "size",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "min",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "max",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "step",
   ")",
   ",",
   "&",
   "cicons",
   "[",
   "0",
   "]",
   ")",
   "\n",
   "if",
   "c",
   "==",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nilPtrErr",
   "\n",
   "}",
   "\n",
   "return",
   "wrapScaleButton",
   "(",
   "glib",
   ".",
   "Take",
   "(",
   "unsafe",
   ".",
   "Pointer",
   "(",
   "c",
   ")",
   ")",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-32",
  "nl_tokens": [
   "ParseWaitConfig",
   "parses",
   "a",
   "string",
   "of",
   "the",
   "format",
   "minimum",
   "(",
   ":",
   "maximum",
   ")",
   "into",
   "a",
   "WaitConfig",
   "."
  ],
  "pl_tokens": [
   "func",
   "ParseWaitConfig",
   "(",
   "s",
   "string",
   ")",
   "(",
   "*",
   "WaitConfig",
   ",",
   "error",
   ")",
   "{",
   "s",
   "=",
   "strings",
   ".",
   "TrimSpace",
   "(",
   "s",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "s",
   ")",
   "<",
   "1",
   "{",
   "return",
   "nil",
   ",",
   "ErrWaitStringEmpty",
   "\n",
   "}",
   "\n\n",
   "parts",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "s",
   ",",
   "\"",
   "\"",
   ")",
   "\n\n",
   "var",
   "<mask>",
   ",",
   "max",
   "time",
   ".",
   "Duration",
   "\n",
   "var",
   "err",
   "error",
   "\n\n",
   "switch",
   "len",
   "(",
   "parts",
   ")",
   "{",
   "case",
   "1",
   ":",
   "min",
   ",",
   "err",
   "=",
   "time",
   ".",
   "ParseDuration",
   "(",
   "strings",
   ".",
   "TrimSpace",
   "(",
   "parts",
   "[",
   "0",
   "]",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "max",
   "=",
   "4",
   "*",
   "min",
   "\n",
   "case",
   "2",
   ":",
   "min",
   ",",
   "err",
   "=",
   "time",
   ".",
   "ParseDuration",
   "(",
   "strings",
   ".",
   "TrimSpace",
   "(",
   "parts",
   "[",
   "0",
   "]",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "max",
   ",",
   "err",
   "=",
   "time",
   ".",
   "ParseDuration",
   "(",
   "strings",
   ".",
   "TrimSpace",
   "(",
   "parts",
   "[",
   "1",
   "]",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "default",
   ":",
   "return",
   "nil",
   ",",
   "ErrWaitInvalidFormat",
   "\n",
   "}",
   "\n\n",
   "if",
   "min",
   "<",
   "0",
   "||",
   "max",
   "<",
   "0",
   "{",
   "return",
   "nil",
   ",",
   "ErrWaitNegative",
   "\n",
   "}",
   "\n\n",
   "if",
   "max",
   "<",
   "min",
   "{",
   "return",
   "nil",
   ",",
   "ErrWaitMinLTMax",
   "\n",
   "}",
   "\n\n",
   "var",
   "c",
   "WaitConfig",
   "\n",
   "c",
   ".",
   "Min",
   "=",
   "TimeDuration",
   "(",
   "min",
   ")",
   "\n",
   "c",
   ".",
   "Max",
   "=",
   "TimeDuration",
   "(",
   "max",
   ")",
   "\n\n",
   "return",
   "&",
   "c",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-33",
  "nl_tokens": [
   "arrayLen",
   "returns",
   "the",
   "length",
   "of",
   "the",
   "array",
   "whose",
   "composite",
   "literal",
   "elements",
   "are",
   "elts",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "b",
   "*",
   "builder",
   ")",
   "arrayLen",
   "(",
   "fn",
   "*",
   "Function",
   ",",
   "elts",
   "[",
   "]",
   "ast",
   ".",
   "Expr",
   ")",
   "int64",
   "{",
   "var",
   "<mask>",
   "int64",
   "=",
   "-",
   "1",
   "\n",
   "var",
   "i",
   "int64",
   "=",
   "-",
   "1",
   "\n",
   "for",
   "_",
   ",",
   "e",
   ":=",
   "range",
   "elts",
   "{",
   "if",
   "kv",
   ",",
   "ok",
   ":=",
   "e",
   ".",
   "(",
   "*",
   "ast",
   ".",
   "KeyValueExpr",
   ")",
   ";",
   "ok",
   "{",
   "i",
   "=",
   "b",
   ".",
   "expr",
   "(",
   "fn",
   ",",
   "kv",
   ".",
   "Key",
   ")",
   ".",
   "(",
   "*",
   "Const",
   ")",
   ".",
   "Int64",
   "(",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "i",
   "++",
   "\n",
   "}",
   "\n",
   "if",
   "i",
   ">",
   "max",
   "{",
   "max",
   "=",
   "i",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "max",
   "+",
   "1",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-34",
  "nl_tokens": [
   "Number",
   "returns",
   "the",
   "end",
   "position",
   "of",
   "the",
   "number",
   "that",
   "begins",
   "at",
   "the",
   "specified",
   "pos"
  ],
  "pl_tokens": [
   "func",
   "Number",
   "(",
   "in",
   "[",
   "]",
   "byte",
   ",",
   "pos",
   "int",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "pos",
   ",",
   "err",
   ":=",
   "skipSpace",
   "(",
   "in",
   ",",
   "pos",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "in",
   ")",
   "\n",
   "for",
   "{",
   "v",
   ":=",
   "in",
   "[",
   "pos",
   "]",
   "\n",
   "switch",
   "v",
   "{",
   "case",
   "'-'",
   ",",
   "'+'",
   ",",
   "'.'",
   ",",
   "'e'",
   ",",
   "'E'",
   ",",
   "'1'",
   ",",
   "'2'",
   ",",
   "'3'",
   ",",
   "'4'",
   ",",
   "'5'",
   ",",
   "'6'",
   ",",
   "'7'",
   ",",
   "'8'",
   ",",
   "'9'",
   ",",
   "'0'",
   ":",
   "pos",
   "++",
   "\n",
   "default",
   ":",
   "return",
   "pos",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "if",
   "pos",
   ">=",
   "max",
   "{",
   "return",
   "pos",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "pos",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-35",
  "nl_tokens": [
   "-----------------",
   "own",
   "methods",
   "-------------------------",
   "SetValue",
   "sets",
   "new",
   "progress",
   "value",
   ".",
   "If",
   "value",
   "exceeds",
   "ProgressBar",
   "limits",
   "then",
   "the",
   "limit",
   "value",
   "is",
   "used"
  ],
  "pl_tokens": [
   "func",
   "(",
   "b",
   "*",
   "ProgressBar",
   ")",
   "SetValue",
   "(",
   "pos",
   "int",
   ")",
   "{",
   "b",
   ".",
   "mtx",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "b",
   ".",
   "mtx",
   ".",
   "Unlock",
   "(",
   ")",
   "\n",
   "if",
   "pos",
   "<",
   "b",
   ".",
   "<mask>",
   "{",
   "b",
   ".",
   "value",
   "=",
   "b",
   ".",
   "min",
   "\n",
   "}",
   "else",
   "if",
   "pos",
   ">",
   "b",
   ".",
   "max",
   "{",
   "b",
   ".",
   "value",
   "=",
   "b",
   ".",
   "max",
   "\n",
   "}",
   "else",
   "{",
   "b",
   ".",
   "value",
   "=",
   "pos",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-36",
  "nl_tokens": [
   "Items",
   "returns",
   "a",
   "slice",
   "equal",
   "to",
   "the",
   "size",
   "of",
   "the",
   "list",
   "with",
   "the",
   "current",
   "visible",
   "items",
   "and",
   "the",
   "index",
   "of",
   "the",
   "active",
   "item",
   "in",
   "this",
   "list",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "List",
   ")",
   "Items",
   "(",
   ")",
   "(",
   "[",
   "]",
   "interface",
   "{",
   "}",
   ",",
   "int",
   ")",
   "{",
   "var",
   "result",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "\n",
   "end",
   ":=",
   "l",
   ".",
   "start",
   "+",
   "l",
   ".",
   "size",
   "\n\n",
   "if",
   "end",
   ">",
   "max",
   "{",
   "end",
   "=",
   "max",
   "\n",
   "}",
   "\n\n",
   "active",
   ":=",
   "NotFound",
   "\n\n",
   "for",
   "i",
   ",",
   "j",
   ":=",
   "l",
   ".",
   "start",
   ",",
   "0",
   ";",
   "i",
   "<",
   "end",
   ";",
   "i",
   ",",
   "j",
   "=",
   "i",
   "+",
   "1",
   ",",
   "j",
   "+",
   "1",
   "{",
   "if",
   "l",
   ".",
   "cursor",
   "==",
   "i",
   "{",
   "active",
   "=",
   "j",
   "\n",
   "}",
   "\n\n",
   "result",
   "=",
   "append",
   "(",
   "result",
   ",",
   "*",
   "l",
   ".",
   "scope",
   "[",
   "i",
   "]",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "result",
   ",",
   "active",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-37",
  "nl_tokens": [
   "Find",
   "the",
   "price",
   "in",
   "the",
   "given",
   "package",
   "with",
   "the",
   "specified",
   "size",
   "and",
   "iops"
  ],
  "pl_tokens": [
   "func",
   "FindPerformanceIOPSPrice",
   "(",
   "productPackage",
   "datatypes",
   ".",
   "Product_Package",
   ",",
   "size",
   "int",
   ",",
   "iops",
   "int",
   ")",
   "(",
   "datatypes",
   ".",
   "Product_Item_Price",
   ",",
   "error",
   ")",
   "{",
   "for",
   "_",
   ",",
   "item",
   ":=",
   "range",
   "productPackage",
   ".",
   "Items",
   "{",
   "if",
   "int",
   "(",
   "*",
   "item",
   ".",
   "Capacity",
   ")",
   "!=",
   "int",
   "(",
   "iops",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "price",
   ":=",
   "range",
   "item",
   ".",
   "Prices",
   "{",
   "// Only collect prices from valid location groups.",
   "if",
   "price",
   ".",
   "LocationGroupId",
   "!=",
   "nil",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "!",
   "hasCategory",
   "(",
   "price",
   ".",
   "Categories",
   ",",
   "\"",
   "\"",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "<mask>",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "*",
   "price",
   ".",
   "CapacityRestrictionMinimum",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "datatypes",
   ".",
   "Product_Item_Price",
   "{",
   "}",
   ",",
   "bosherr",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "iops",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "size",
   "<",
   "int",
   "(",
   "min",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "max",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "*",
   "price",
   ".",
   "CapacityRestrictionMaximum",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "datatypes",
   ".",
   "Product_Item_Price",
   "{",
   "}",
   ",",
   "bosherr",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "iops",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "size",
   ">",
   "int",
   "(",
   "max",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "return",
   "price",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "datatypes",
   ".",
   "Product_Item_Price",
   "{",
   "}",
   ",",
   "bosherr",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "iops",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-38",
  "nl_tokens": [
   "Attempt",
   "attempts",
   "to",
   "perform",
   "a",
   "request",
   "for",
   "an",
   "id",
   "and",
   "returns",
   "whether",
   "it",
   "was",
   "successful",
   "or",
   "not",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "RateLimiter",
   ")",
   "Attempt",
   "(",
   "id",
   "string",
   ")",
   "(",
   "bool",
   ",",
   "error",
   ")",
   "{",
   "// Create hash from id",
   "hash",
   ":=",
   "r",
   ".",
   "hasher",
   ".",
   "Hash",
   "(",
   "id",
   ")",
   "\n\n",
   "// Get value for hash in Redis. If redis.Nil is returned, key does not",
   "// exist.",
   "exists",
   ":=",
   "true",
   "\n\n",
   "val",
   ",",
   "err",
   ":=",
   "r",
   ".",
   "redisClient",
   ".",
   "Get",
   "(",
   "hash",
   ")",
   ".",
   "Result",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "if",
   "err",
   "==",
   "redis",
   ".",
   "Nil",
   "{",
   "// Key does not exist. See: http://redis.io/commands/GET",
   "exists",
   "=",
   "false",
   "\n",
   "}",
   "else",
   "{",
   "return",
   "false",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// If key exists and is >= max requests, return false.",
   "if",
   "exists",
   "{",
   "intVal",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "ParseInt",
   "(",
   "val",
   ",",
   "10",
   ",",
   "64",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "intVal",
   ">=",
   "r",
   ".",
   "<mask>",
   "{",
   "return",
   "false",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Otherwise, increment and expire key for hasher.Duration(). Note, we call",
   "// Expire even when key already exists to avoid race condition where key",
   "// expires between prior existence check and this Incr call.",
   "//",
   "// See: http://redis.io/commands/INCR",
   "// See: http://redis.io/commands/INCR#pattern-rate-limiter-1",
   "err",
   "=",
   "r",
   ".",
   "redisClient",
   ".",
   "Watch",
   "(",
   "func",
   "(",
   "rx",
   "*",
   "redis",
   ".",
   "Tx",
   ")",
   "error",
   "{",
   "_",
   ",",
   "err",
   ":=",
   "rx",
   ".",
   "Pipelined",
   "(",
   "func",
   "(",
   "pipe",
   "*",
   "redis",
   ".",
   "Pipeline",
   ")",
   "error",
   "{",
   "if",
   "err",
   ":=",
   "pipe",
   ".",
   "Incr",
   "(",
   "hash",
   ")",
   ".",
   "Err",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n\n",
   "return",
   "pipe",
   ".",
   "Expire",
   "(",
   "hash",
   ",",
   "r",
   ".",
   "hasher",
   ".",
   "Duration",
   "(",
   ")",
   ")",
   ".",
   "Err",
   "(",
   ")",
   "\n",
   "}",
   ")",
   "\n\n",
   "return",
   "err",
   "\n",
   "}",
   ")",
   "\n\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "return",
   "true",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-39",
  "nl_tokens": [
   "===",
   "floor",
   "(",
   "Vector",
   "ValueTypeVector",
   ")",
   "Vector",
   "===",
   "===",
   "max_over_time",
   "(",
   "Matrix",
   "ValueTypeMatrix",
   ")",
   "Vector",
   "==="
  ],
  "pl_tokens": [
   "func",
   "funcMaxOverTime",
   "(",
   "vals",
   "[",
   "]",
   "Value",
   ",",
   "args",
   "Expressions",
   ",",
   "enh",
   "*",
   "EvalNodeHelper",
   ")",
   "Vector",
   "{",
   "return",
   "aggrOverTime",
   "(",
   "vals",
   ",",
   "enh",
   ",",
   "func",
   "(",
   "values",
   "[",
   "]",
   "Point",
   ")",
   "float64",
   "{",
   "<mask>",
   ":=",
   "values",
   "[",
   "0",
   "]",
   ".",
   "V",
   "\n",
   "for",
   "_",
   ",",
   "v",
   ":=",
   "range",
   "values",
   "{",
   "if",
   "v",
   ".",
   "V",
   ">",
   "max",
   "||",
   "math",
   ".",
   "IsNaN",
   "(",
   "max",
   ")",
   "{",
   "max",
   "=",
   "v",
   ".",
   "V",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "max",
   "\n",
   "}",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-40",
  "nl_tokens": [
   "expandVmwareDistributedVirtualSwitchTrunkVlanSpec",
   "reads",
   "certain",
   "ResourceData",
   "keys",
   "and",
   "returns",
   "a",
   "VmwareDistributedVirtualSwitchTrunkVlanSpec",
   "."
  ],
  "pl_tokens": [
   "func",
   "expandVmwareDistributedVirtualSwitchTrunkVlanSpec",
   "(",
   "d",
   "*",
   "schema",
   ".",
   "ResourceData",
   ")",
   "*",
   "types",
   ".",
   "VmwareDistributedVirtualSwitchTrunkVlanSpec",
   "{",
   "var",
   "ranges",
   "[",
   "]",
   "types",
   ".",
   "NumericRange",
   "\n",
   "data",
   ":=",
   "d",
   ".",
   "Get",
   "(",
   "\"",
   "\"",
   ")",
   ".",
   "(",
   "*",
   "schema",
   ".",
   "Set",
   ")",
   ".",
   "List",
   "(",
   ")",
   "\n",
   "for",
   "_",
   ",",
   "v",
   ":=",
   "range",
   "data",
   "{",
   "log",
   ".",
   "Printf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ")",
   "\n",
   "r",
   ":=",
   "v",
   ".",
   "(",
   "map",
   "[",
   "string",
   "]",
   "interface",
   "{",
   "}",
   ")",
   "\n",
   "<mask>",
   ":=",
   "r",
   "[",
   "\"",
   "\"",
   "]",
   ".",
   "(",
   "int",
   ")",
   "\n",
   "max",
   ":=",
   "r",
   "[",
   "\"",
   "\"",
   "]",
   ".",
   "(",
   "int",
   ")",
   "\n",
   "rng",
   ":=",
   "types",
   ".",
   "NumericRange",
   "{",
   "Start",
   ":",
   "int32",
   "(",
   "min",
   ")",
   ",",
   "End",
   ":",
   "int32",
   "(",
   "max",
   ")",
   ",",
   "}",
   "\n",
   "ranges",
   "=",
   "append",
   "(",
   "ranges",
   ",",
   "rng",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "len",
   "(",
   "ranges",
   ")",
   "<",
   "1",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n\n",
   "obj",
   ":=",
   "&",
   "types",
   ".",
   "VmwareDistributedVirtualSwitchTrunkVlanSpec",
   "{",
   "VlanId",
   ":",
   "ranges",
   ",",
   "}",
   "\n",
   "return",
   "obj",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-41",
  "nl_tokens": [
   "SetCursor",
   "sets",
   "the",
   "position",
   "of",
   "the",
   "cursor",
   "in",
   "the",
   "list",
   ".",
   "Values",
   "out",
   "of",
   "bounds",
   "will",
   "be",
   "clamped",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "List",
   ")",
   "SetCursor",
   "(",
   "i",
   "int",
   ")",
   "{",
   "<mask>",
   ":=",
   "len",
   "(",
   "l",
   ".",
   "scope",
   ")",
   "-",
   "1",
   "\n",
   "if",
   "i",
   ">=",
   "max",
   "{",
   "i",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "if",
   "i",
   "<",
   "0",
   "{",
   "i",
   "=",
   "0",
   "\n",
   "}",
   "\n",
   "l",
   ".",
   "cursor",
   "=",
   "i",
   "\n\n",
   "if",
   "l",
   ".",
   "start",
   ">",
   "l",
   ".",
   "cursor",
   "{",
   "l",
   ".",
   "start",
   "=",
   "l",
   ".",
   "cursor",
   "\n",
   "}",
   "else",
   "if",
   "l",
   ".",
   "start",
   "+",
   "l",
   ".",
   "size",
   "<=",
   "l",
   ".",
   "cursor",
   "{",
   "l",
   ".",
   "start",
   "=",
   "l",
   ".",
   "cursor",
   "-",
   "l",
   ".",
   "size",
   "+",
   "1",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-42",
  "nl_tokens": [
   "newQuiescence",
   "creates",
   "a",
   "new",
   "quiescence",
   "timer",
   "for",
   "the",
   "given",
   "template",
   "."
  ],
  "pl_tokens": [
   "func",
   "newQuiescence",
   "(",
   "ch",
   "chan",
   "*",
   "template",
   ".",
   "Template",
   ",",
   "<mask>",
   ",",
   "max",
   "time",
   ".",
   "Duration",
   ",",
   "t",
   "*",
   "template",
   ".",
   "Template",
   ")",
   "*",
   "quiescence",
   "{",
   "return",
   "&",
   "quiescence",
   "{",
   "template",
   ":",
   "t",
   ",",
   "min",
   ":",
   "min",
   ",",
   "max",
   ":",
   "max",
   ",",
   "ch",
   ":",
   "ch",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-43",
  "nl_tokens": [
   "SetLimits",
   "set",
   "new",
   "ProgressBar",
   "limits",
   ".",
   "The",
   "current",
   "value",
   "is",
   "adjusted",
   "if",
   "it",
   "exceeds",
   "new",
   "limits"
  ],
  "pl_tokens": [
   "func",
   "(",
   "b",
   "*",
   "ProgressBar",
   ")",
   "SetLimits",
   "(",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "{",
   "b",
   ".",
   "min",
   "=",
   "min",
   "\n",
   "b",
   ".",
   "max",
   "=",
   "max",
   "\n\n",
   "if",
   "b",
   ".",
   "value",
   "<",
   "b",
   ".",
   "min",
   "{",
   "b",
   ".",
   "value",
   "=",
   "min",
   "\n",
   "}",
   "\n",
   "if",
   "b",
   ".",
   "value",
   ">",
   "b",
   ".",
   "max",
   "{",
   "b",
   ".",
   "value",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-44",
  "nl_tokens": [
   "AddInRange",
   "increments",
   "a",
   "value",
   "by",
   "the",
   "passed",
   "quantity",
   "while",
   "ensuring",
   "the",
   "values",
   "always",
   "remain",
   "within",
   "the",
   "supplied",
   "min",
   "/",
   "max",
   "range",
   "."
  ],
  "pl_tokens": [
   "func",
   "addInRange",
   "(",
   "n",
   "int16",
   ",",
   "increment",
   "int16",
   ",",
   "<mask>",
   "int16",
   ",",
   "max",
   "int16",
   ")",
   "int16",
   "{",
   "return",
   "ensureInRange",
   "(",
   "n",
   "+",
   "increment",
   ",",
   "min",
   ",",
   "max",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-45",
  "nl_tokens": [
   "Check",
   "the",
   "virtual",
   "server",
   "instance",
   "is",
   "ready",
   "for",
   "use"
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "ClientManager",
   ")",
   "WaitInstanceUntilReady",
   "(",
   "id",
   "int",
   ",",
   "until",
   "time",
   ".",
   "Time",
   ")",
   "error",
   "{",
   "for",
   "{",
   "virtualGuest",
   ",",
   "found",
   ",",
   "err",
   ":=",
   "c",
   ".",
   "GetInstance",
   "(",
   "id",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n",
   "if",
   "!",
   "found",
   "{",
   "return",
   "bosherr",
   ".",
   "WrapErrorf",
   "(",
   "err",
   ",",
   "\"",
   "\"",
   ",",
   "id",
   ")",
   "\n",
   "}",
   "\n\n",
   "lastReload",
   ":=",
   "virtualGuest",
   ".",
   "LastOperatingSystemReload",
   "\n",
   "activeTxn",
   ":=",
   "virtualGuest",
   ".",
   "ActiveTransaction",
   "\n",
   "provisionDate",
   ":=",
   "virtualGuest",
   ".",
   "ProvisionDate",
   "\n\n",
   "// if lastReload != nil && lastReload.ModifyDate != nil {",
   "// \tfmt.Println(\"lastReload: \", (*lastReload.ModifyDate).Format(time.RFC3339))",
   "// }",
   "// if activeTxn != nil && activeTxn.TransactionStatus != nil && activeTxn.TransactionStatus.Name != nil {",
   "// \tfmt.Println(\"activeTxn: \", *activeTxn.TransactionStatus.Name)",
   "// }",
   "// if provisionDate != nil {",
   "// \tfmt.Println(\"provisionDate: \", (*provisionDate).Format(time.RFC3339))",
   "// }",
   "reloading",
   ":=",
   "activeTxn",
   "!=",
   "nil",
   "&&",
   "lastReload",
   "!=",
   "nil",
   "&&",
   "*",
   "activeTxn",
   ".",
   "Id",
   "==",
   "*",
   "lastReload",
   ".",
   "Id",
   "\n",
   "if",
   "provisionDate",
   "!=",
   "nil",
   "&&",
   "!",
   "reloading",
   "{",
   "// fmt.Println(\"power state:\", *virtualGuest.PowerState.KeyName)",
   "if",
   "*",
   "virtualGuest",
   ".",
   "PowerState",
   ".",
   "KeyName",
   "==",
   "\"",
   "\"",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "now",
   ":=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   "\n",
   "if",
   "now",
   ".",
   "After",
   "(",
   "until",
   ")",
   "{",
   "return",
   "bosherr",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "*",
   "virtualGuest",
   ".",
   "Id",
   ")",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ":=",
   "math",
   ".",
   "Min",
   "(",
   "float64",
   "(",
   "10.0",
   ")",
   ",",
   "float64",
   "(",
   "until",
   ".",
   "Sub",
   "(",
   "now",
   ")",
   ")",
   ")",
   "\n",
   "time",
   ".",
   "Sleep",
   "(",
   "time",
   ".",
   "Duration",
   "(",
   "min",
   ")",
   "*",
   "time",
   ".",
   "Second",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-46",
  "nl_tokens": [
   "Repaint",
   "draws",
   "the",
   "control",
   "on",
   "its",
   "View",
   "surface",
   ".",
   "Horizontal",
   "ProgressBar",
   "supports",
   "custom",
   "title",
   "over",
   "the",
   "bar",
   ".",
   "One",
   "can",
   "set",
   "title",
   "using",
   "method",
   "SetTitle",
   ".",
   "There",
   "are",
   "a",
   "few",
   "predefined",
   "variables",
   "that",
   "can",
   "be",
   "used",
   "inside",
   "title",
   "to",
   "show",
   "value",
   "or",
   "total",
   "progress",
   ".",
   "Variable",
   "must",
   "be",
   "enclosed",
   "with",
   "double",
   "curly",
   "brackets",
   ".",
   "Available",
   "variables",
   ":",
   "percent",
   "-",
   "the",
   "current",
   "percentage",
   "rounded",
   "to",
   "closest",
   "integer",
   "value",
   "-",
   "raw",
   "ProgressBar",
   "value",
   "min",
   "-",
   "lower",
   "ProgressBar",
   "limit",
   "max",
   "-",
   "upper",
   "ProgressBar",
   "limit",
   "Examples",
   ":",
   "pb",
   ".",
   "SetTitle",
   "(",
   "{{",
   "value",
   "}}",
   "of",
   "{{",
   "max",
   "}}",
   ")",
   "pb",
   ".",
   "SetTitle",
   "(",
   "{{",
   "percent",
   "}}",
   "%",
   ")"
  ],
  "pl_tokens": [
   "func",
   "(",
   "b",
   "*",
   "ProgressBar",
   ")",
   "Draw",
   "(",
   ")",
   "{",
   "if",
   "b",
   ".",
   "hidden",
   "{",
   "return",
   "\n",
   "}",
   "\n\n",
   "b",
   ".",
   "mtx",
   ".",
   "RLock",
   "(",
   ")",
   "\n",
   "defer",
   "b",
   ".",
   "mtx",
   ".",
   "RUnlock",
   "(",
   ")",
   "\n",
   "if",
   "b",
   ".",
   "<mask>",
   "<=",
   "b",
   ".",
   "min",
   "{",
   "return",
   "\n",
   "}",
   "\n\n",
   "PushAttributes",
   "(",
   ")",
   "\n",
   "defer",
   "PopAttributes",
   "(",
   ")",
   "\n\n",
   "fgOff",
   ",",
   "fgOn",
   ":=",
   "RealColor",
   "(",
   "b",
   ".",
   "fg",
   ",",
   "b",
   ".",
   "Style",
   "(",
   ")",
   ",",
   "ColorProgressText",
   ")",
   ",",
   "RealColor",
   "(",
   "b",
   ".",
   "fgActive",
   ",",
   "b",
   ".",
   "Style",
   "(",
   ")",
   ",",
   "ColorProgressActiveText",
   ")",
   "\n",
   "bgOff",
   ",",
   "bgOn",
   ":=",
   "RealColor",
   "(",
   "b",
   ".",
   "bg",
   ",",
   "b",
   ".",
   "Style",
   "(",
   ")",
   ",",
   "ColorProgressBack",
   ")",
   ",",
   "RealColor",
   "(",
   "b",
   ".",
   "bgActive",
   ",",
   "b",
   ".",
   "Style",
   "(",
   ")",
   ",",
   "ColorProgressActiveBack",
   ")",
   "\n\n",
   "parts",
   ":=",
   "[",
   "]",
   "rune",
   "(",
   "SysObject",
   "(",
   "ObjProgressBar",
   ")",
   ")",
   "\n",
   "cFilled",
   ",",
   "cEmpty",
   ":=",
   "parts",
   "[",
   "0",
   "]",
   ",",
   "parts",
   "[",
   "1",
   "]",
   "\n\n",
   "prc",
   ":=",
   "0",
   "\n",
   "if",
   "b",
   ".",
   "value",
   ">=",
   "b",
   ".",
   "max",
   "{",
   "prc",
   "=",
   "100",
   "\n",
   "}",
   "else",
   "if",
   "b",
   ".",
   "value",
   "<",
   "b",
   ".",
   "max",
   "&&",
   "b",
   ".",
   "value",
   ">",
   "b",
   ".",
   "min",
   "{",
   "prc",
   "=",
   "(",
   "100",
   "*",
   "(",
   "b",
   ".",
   "value",
   "-",
   "b",
   ".",
   "min",
   ")",
   ")",
   "/",
   "(",
   "b",
   ".",
   "max",
   "-",
   "b",
   ".",
   "min",
   ")",
   "\n",
   "}",
   "\n\n",
   "var",
   "title",
   "string",
   "\n",
   "if",
   "b",
   ".",
   "direction",
   "==",
   "Horizontal",
   "&&",
   "b",
   ".",
   "Title",
   "(",
   ")",
   "!=",
   "\"",
   "\"",
   "{",
   "title",
   "=",
   "b",
   ".",
   "Title",
   "(",
   ")",
   "\n",
   "title",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "title",
   ",",
   "\"",
   "\"",
   ",",
   "strconv",
   ".",
   "Itoa",
   "(",
   "prc",
   ")",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "title",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "title",
   ",",
   "\"",
   "\"",
   ",",
   "strconv",
   ".",
   "Itoa",
   "(",
   "b",
   ".",
   "value",
   ")",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "title",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "title",
   ",",
   "\"",
   "\"",
   ",",
   "strconv",
   ".",
   "Itoa",
   "(",
   "b",
   ".",
   "min",
   ")",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "title",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "title",
   ",",
   "\"",
   "\"",
   ",",
   "strconv",
   ".",
   "Itoa",
   "(",
   "b",
   ".",
   "max",
   ")",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "}",
   "\n\n",
   "x",
   ",",
   "y",
   ":=",
   "b",
   ".",
   "Pos",
   "(",
   ")",
   "\n",
   "w",
   ",",
   "h",
   ":=",
   "b",
   ".",
   "Size",
   "(",
   ")",
   "\n\n",
   "if",
   "b",
   ".",
   "direction",
   "==",
   "Horizontal",
   "{",
   "filled",
   ":=",
   "prc",
   "*",
   "w",
   "/",
   "100",
   "\n",
   "sFilled",
   ":=",
   "strings",
   ".",
   "Repeat",
   "(",
   "string",
   "(",
   "cFilled",
   ")",
   ",",
   "filled",
   ")",
   "\n",
   "sEmpty",
   ":=",
   "strings",
   ".",
   "Repeat",
   "(",
   "string",
   "(",
   "cEmpty",
   ")",
   ",",
   "w",
   "-",
   "filled",
   ")",
   "\n\n",
   "for",
   "yy",
   ":=",
   "y",
   ";",
   "yy",
   "<",
   "y",
   "+",
   "h",
   ";",
   "yy",
   "++",
   "{",
   "SetTextColor",
   "(",
   "fgOn",
   ")",
   "\n",
   "SetBackColor",
   "(",
   "bgOn",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   ",",
   "yy",
   ",",
   "sFilled",
   ")",
   "\n",
   "SetTextColor",
   "(",
   "fgOff",
   ")",
   "\n",
   "SetBackColor",
   "(",
   "bgOff",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   "+",
   "filled",
   ",",
   "yy",
   ",",
   "sEmpty",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "title",
   "!=",
   "\"",
   "\"",
   "{",
   "shift",
   ",",
   "str",
   ":=",
   "AlignText",
   "(",
   "title",
   ",",
   "w",
   ",",
   "b",
   ".",
   "align",
   ")",
   "\n",
   "titleClr",
   ":=",
   "RealColor",
   "(",
   "b",
   ".",
   "titleFg",
   ",",
   "b",
   ".",
   "Style",
   "(",
   ")",
   ",",
   "ColorProgressTitleText",
   ")",
   "\n",
   "var",
   "sOn",
   ",",
   "sOff",
   "string",
   "\n",
   "if",
   "filled",
   "==",
   "0",
   "||",
   "shift",
   ">=",
   "filled",
   "{",
   "sOff",
   "=",
   "str",
   "\n",
   "}",
   "else",
   "if",
   "w",
   "==",
   "filled",
   "||",
   "shift",
   "+",
   "xs",
   ".",
   "Len",
   "(",
   "str",
   ")",
   "<",
   "filled",
   "{",
   "sOn",
   "=",
   "str",
   "\n",
   "}",
   "else",
   "{",
   "r",
   ":=",
   "filled",
   "-",
   "shift",
   "\n",
   "sOn",
   "=",
   "xs",
   ".",
   "Slice",
   "(",
   "str",
   ",",
   "0",
   ",",
   "r",
   ")",
   "\n",
   "sOff",
   "=",
   "xs",
   ".",
   "Slice",
   "(",
   "str",
   ",",
   "r",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "}",
   "\n",
   "SetTextColor",
   "(",
   "titleClr",
   ")",
   "\n",
   "if",
   "sOn",
   "!=",
   "\"",
   "\"",
   "{",
   "SetBackColor",
   "(",
   "bgOn",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   "+",
   "shift",
   ",",
   "y",
   ",",
   "sOn",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "sOff",
   "!=",
   "\"",
   "\"",
   "{",
   "SetBackColor",
   "(",
   "bgOff",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   "+",
   "shift",
   "+",
   "xs",
   ".",
   "Len",
   "(",
   "sOn",
   ")",
   ",",
   "y",
   ",",
   "sOff",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "else",
   "{",
   "filled",
   ":=",
   "prc",
   "*",
   "h",
   "/",
   "100",
   "\n",
   "sFilled",
   ":=",
   "strings",
   ".",
   "Repeat",
   "(",
   "string",
   "(",
   "cFilled",
   ")",
   ",",
   "w",
   ")",
   "\n",
   "sEmpty",
   ":=",
   "strings",
   ".",
   "Repeat",
   "(",
   "string",
   "(",
   "cEmpty",
   ")",
   ",",
   "w",
   ")",
   "\n",
   "for",
   "yy",
   ":=",
   "y",
   ";",
   "yy",
   "<",
   "y",
   "+",
   "h",
   "-",
   "filled",
   ";",
   "yy",
   "++",
   "{",
   "SetTextColor",
   "(",
   "fgOff",
   ")",
   "\n",
   "SetBackColor",
   "(",
   "bgOff",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   ",",
   "yy",
   ",",
   "sEmpty",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "yy",
   ":=",
   "y",
   "+",
   "h",
   "-",
   "filled",
   ";",
   "yy",
   "<",
   "y",
   "+",
   "h",
   ";",
   "yy",
   "++",
   "{",
   "SetTextColor",
   "(",
   "fgOff",
   ")",
   "\n",
   "SetBackColor",
   "(",
   "bgOff",
   ")",
   "\n",
   "DrawRawText",
   "(",
   "x",
   ",",
   "yy",
   ",",
   "sFilled",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-47",
  "nl_tokens": [
   "computedCropArea",
   "retrieve",
   "the",
   "theorical",
   "crop",
   "area",
   ".",
   "It",
   "is",
   "defined",
   "by",
   "Height",
   "Width",
   "Mode",
   "and"
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "Config",
   ")",
   "computedCropArea",
   "(",
   "bounds",
   "image",
   ".",
   "Rectangle",
   ",",
   "size",
   "image",
   ".",
   "Point",
   ")",
   "(",
   "r",
   "image",
   ".",
   "Rectangle",
   ")",
   "{",
   "<mask>",
   ":=",
   "bounds",
   ".",
   "Min",
   "\n",
   "switch",
   "c",
   ".",
   "Mode",
   "{",
   "case",
   "Centered",
   ":",
   "rMin",
   ":=",
   "c",
   ".",
   "centeredMin",
   "(",
   "bounds",
   ")",
   "\n",
   "r",
   "=",
   "image",
   ".",
   "Rect",
   "(",
   "rMin",
   ".",
   "X",
   "-",
   "size",
   ".",
   "X",
   "/",
   "2",
   ",",
   "rMin",
   ".",
   "Y",
   "-",
   "size",
   ".",
   "Y",
   "/",
   "2",
   ",",
   "rMin",
   ".",
   "X",
   "-",
   "size",
   ".",
   "X",
   "/",
   "2",
   "+",
   "size",
   ".",
   "X",
   ",",
   "rMin",
   ".",
   "Y",
   "-",
   "size",
   ".",
   "Y",
   "/",
   "2",
   "+",
   "size",
   ".",
   "Y",
   ")",
   "\n",
   "default",
   ":",
   "// TopLeft",
   "rMin",
   ":=",
   "image",
   ".",
   "Point",
   "{",
   "min",
   ".",
   "X",
   "+",
   "c",
   ".",
   "Anchor",
   ".",
   "X",
   ",",
   "min",
   ".",
   "Y",
   "+",
   "c",
   ".",
   "Anchor",
   ".",
   "Y",
   "}",
   "\n",
   "r",
   "=",
   "image",
   ".",
   "Rect",
   "(",
   "rMin",
   ".",
   "X",
   ",",
   "rMin",
   ".",
   "Y",
   ",",
   "rMin",
   ".",
   "X",
   "+",
   "size",
   ".",
   "X",
   ",",
   "rMin",
   ".",
   "Y",
   "+",
   "size",
   ".",
   "Y",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-48",
  "nl_tokens": [
   "SetRange",
   "()",
   "is",
   "a",
   "wrapper",
   "around",
   "gtk_range_set_range",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "v",
   "*",
   "Range",
   ")",
   "SetRange",
   "(",
   "<mask>",
   ",",
   "max",
   "float64",
   ")",
   "{",
   "C",
   ".",
   "gtk_range_set_range",
   "(",
   "v",
   ".",
   "native",
   "(",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "min",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "max",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-49",
  "nl_tokens": [
   "ResolveCreate",
   "is",
   "invoked",
   "when",
   "dns",
   "name",
   "is",
   "not",
   "owned",
   "by",
   "any",
   "resource",
   "ResolveCreate",
   "takes",
   "minimal",
   "(",
   "string",
   "comparison",
   "of",
   "Target",
   ")",
   "endpoint",
   "to",
   "acquire",
   "the",
   "DNS",
   "record"
  ],
  "pl_tokens": [
   "func",
   "(",
   "s",
   "PerResource",
   ")",
   "ResolveCreate",
   "(",
   "candidates",
   "[",
   "]",
   "*",
   "endpoint",
   ".",
   "Endpoint",
   ")",
   "*",
   "endpoint",
   ".",
   "Endpoint",
   "{",
   "var",
   "<mask>",
   "*",
   "endpoint",
   ".",
   "Endpoint",
   "\n",
   "for",
   "_",
   ",",
   "ep",
   ":=",
   "range",
   "candidates",
   "{",
   "if",
   "min",
   "==",
   "nil",
   "||",
   "s",
   ".",
   "less",
   "(",
   "ep",
   ",",
   "min",
   ")",
   "{",
   "min",
   "=",
   "ep",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "min",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-50",
  "nl_tokens": [
   "readAtLeast",
   "is",
   "an",
   "optimized",
   "version",
   "of",
   "io",
   ".",
   "ReadAtLeast",
   "which",
   "omits",
   "some",
   "checks",
   "that",
   "don",
   "t",
   "need",
   "to",
   "be",
   "performed",
   "when",
   "called",
   "from",
   "Read",
   "()",
   "in",
   "this",
   "package",
   "."
  ],
  "pl_tokens": [
   "func",
   "readAtLeast",
   "(",
   "r",
   "io",
   ".",
   "Reader",
   ",",
   "buf",
   "[",
   "]",
   "byte",
   ",",
   "<mask>",
   "int",
   ")",
   "error",
   "{",
   "var",
   "n",
   "int",
   "\n",
   "var",
   "err",
   "error",
   "\n",
   "// Most common case, we get all the bytes in one read",
   "if",
   "n",
   ",",
   "err",
   "=",
   "r",
   ".",
   "Read",
   "(",
   "buf",
   ")",
   ";",
   "n",
   "==",
   "min",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n",
   "// Fall back to looping",
   "var",
   "nn",
   "int",
   "\n",
   "for",
   "n",
   "<",
   "min",
   "{",
   "nn",
   ",",
   "err",
   "=",
   "r",
   ".",
   "Read",
   "(",
   "buf",
   "[",
   "n",
   ":",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "if",
   "err",
   "==",
   "io",
   ".",
   "EOF",
   "&&",
   "n",
   ">",
   "0",
   "{",
   "err",
   "=",
   "io",
   ".",
   "ErrUnexpectedEOF",
   "\n",
   "}",
   "\n",
   "return",
   "err",
   "\n",
   "}",
   "\n",
   "n",
   "+=",
   "nn",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-51",
  "nl_tokens": [
   "SpinButtonNewWithRange",
   "()",
   "is",
   "a",
   "wrapper",
   "around",
   "gtk_spin_button_new_with_range",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "SpinButtonNewWithRange",
   "(",
   "<mask>",
   ",",
   "max",
   ",",
   "step",
   "float64",
   ")",
   "(",
   "*",
   "SpinButton",
   ",",
   "error",
   ")",
   "{",
   "c",
   ":=",
   "C",
   ".",
   "gtk_spin_button_new_with_range",
   "(",
   "C",
   ".",
   "gdouble",
   "(",
   "min",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "max",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "step",
   ")",
   ")",
   "\n",
   "if",
   "c",
   "==",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nilPtrErr",
   "\n",
   "}",
   "\n",
   "return",
   "wrapSpinButton",
   "(",
   "glib",
   ".",
   "Take",
   "(",
   "unsafe",
   ".",
   "Pointer",
   "(",
   "c",
   ")",
   ")",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-52",
  "nl_tokens": [
   "===",
   "min_over_time",
   "(",
   "Matrix",
   "ValueTypeMatrix",
   ")",
   "Vector",
   "==="
  ],
  "pl_tokens": [
   "func",
   "funcMinOverTime",
   "(",
   "vals",
   "[",
   "]",
   "Value",
   ",",
   "args",
   "Expressions",
   ",",
   "enh",
   "*",
   "EvalNodeHelper",
   ")",
   "Vector",
   "{",
   "return",
   "aggrOverTime",
   "(",
   "vals",
   ",",
   "enh",
   ",",
   "func",
   "(",
   "values",
   "[",
   "]",
   "Point",
   ")",
   "float64",
   "{",
   "<mask>",
   ":=",
   "values",
   "[",
   "0",
   "]",
   ".",
   "V",
   "\n",
   "for",
   "_",
   ",",
   "v",
   ":=",
   "range",
   "values",
   "{",
   "if",
   "v",
   ".",
   "V",
   "<",
   "min",
   "||",
   "math",
   ".",
   "IsNaN",
   "(",
   "min",
   ")",
   "{",
   "min",
   "=",
   "v",
   ".",
   "V",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "min",
   "\n",
   "}",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-53",
  "nl_tokens": [
   "extractTimeRange",
   "returns",
   "minimum",
   "and",
   "maximum",
   "timestamp",
   "in",
   "milliseconds",
   "as",
   "provided",
   "by",
   "the",
   "time",
   "range",
   ".",
   "It",
   "defaults",
   "either",
   "boundary",
   "to",
   "the",
   "minimum",
   "and",
   "maximum",
   "possible",
   "value",
   "."
  ],
  "pl_tokens": [
   "func",
   "extractTimeRange",
   "(",
   "<mask>",
   ",",
   "max",
   "*",
   "time",
   ".",
   "Time",
   ")",
   "(",
   "mint",
   ",",
   "maxt",
   "time",
   ".",
   "Time",
   ",",
   "err",
   "error",
   ")",
   "{",
   "if",
   "min",
   "==",
   "nil",
   "{",
   "mint",
   "=",
   "minTime",
   "\n",
   "}",
   "else",
   "{",
   "mint",
   "=",
   "*",
   "min",
   "\n",
   "}",
   "\n",
   "if",
   "max",
   "==",
   "nil",
   "{",
   "maxt",
   "=",
   "maxTime",
   "\n",
   "}",
   "else",
   "{",
   "maxt",
   "=",
   "*",
   "max",
   "\n",
   "}",
   "\n",
   "if",
   "mint",
   ".",
   "After",
   "(",
   "maxt",
   ")",
   "{",
   "return",
   "mint",
   ",",
   "maxt",
   ",",
   "errors",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "mint",
   ",",
   "maxt",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-54",
  "nl_tokens": [
   "NewLimiter",
   "creates",
   "a",
   "new",
   "instance",
   "of",
   "a",
   "rate",
   "limiter",
   "."
  ],
  "pl_tokens": [
   "func",
   "NewLimiter",
   "(",
   "client",
   "*",
   "redis",
   ".",
   "Client",
   ",",
   "hasher",
   "RateHasher",
   ",",
   "<mask>",
   "int64",
   ",",
   ")",
   "*",
   "RateLimiter",
   "{",
   "return",
   "&",
   "RateLimiter",
   "{",
   "redisClient",
   ":",
   "client",
   ",",
   "hasher",
   ":",
   "hasher",
   ",",
   "max",
   ":",
   "max",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-55",
  "nl_tokens": [
   "===",
   "clamp_max",
   "(",
   "Vector",
   "ValueTypeVector",
   "max",
   "Scalar",
   ")",
   "Vector",
   "==="
  ],
  "pl_tokens": [
   "func",
   "funcClampMax",
   "(",
   "vals",
   "[",
   "]",
   "Value",
   ",",
   "args",
   "Expressions",
   ",",
   "enh",
   "*",
   "EvalNodeHelper",
   ")",
   "Vector",
   "{",
   "vec",
   ":=",
   "vals",
   "[",
   "0",
   "]",
   ".",
   "(",
   "Vector",
   ")",
   "\n",
   "<mask>",
   ":=",
   "vals",
   "[",
   "1",
   "]",
   ".",
   "(",
   "Vector",
   ")",
   "[",
   "0",
   "]",
   ".",
   "Point",
   ".",
   "V",
   "\n",
   "for",
   "_",
   ",",
   "el",
   ":=",
   "range",
   "vec",
   "{",
   "enh",
   ".",
   "out",
   "=",
   "append",
   "(",
   "enh",
   ".",
   "out",
   ",",
   "Sample",
   "{",
   "Metric",
   ":",
   "enh",
   ".",
   "dropMetricName",
   "(",
   "el",
   ".",
   "Metric",
   ")",
   ",",
   "Point",
   ":",
   "Point",
   "{",
   "V",
   ":",
   "math",
   ".",
   "Min",
   "(",
   "max",
   ",",
   "el",
   ".",
   "V",
   ")",
   "}",
   ",",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "enh",
   ".",
   "out",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-56",
  "nl_tokens": [
   "ValidateLevelFilter",
   "verifies",
   "that",
   "the",
   "log",
   "levels",
   "within",
   "the",
   "filter",
   "are",
   "valid",
   "."
  ],
  "pl_tokens": [
   "func",
   "ValidateLevelFilter",
   "(",
   "<mask>",
   "logutils",
   ".",
   "LogLevel",
   ",",
   "filter",
   "*",
   "logutils",
   ".",
   "LevelFilter",
   ")",
   "bool",
   "{",
   "for",
   "_",
   ",",
   "level",
   ":=",
   "range",
   "filter",
   ".",
   "Levels",
   "{",
   "if",
   "level",
   "==",
   "min",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "false",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-57",
  "nl_tokens": [
   "generates",
   "round",
   "robin",
   "indexes",
   "for",
   "a",
   "slice",
   "of",
   "length",
   "max",
   "starting",
   "from",
   "index",
   "start"
  ],
  "pl_tokens": [
   "func",
   "roundIndex",
   "(",
   "start",
   ",",
   "<mask>",
   "int",
   ")",
   "[",
   "]",
   "int",
   "{",
   "if",
   "start",
   "<",
   "0",
   "{",
   "start",
   "=",
   "0",
   "\n",
   "}",
   "\n",
   "result",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "int",
   ",",
   "max",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "max",
   ";",
   "i",
   "++",
   "{",
   "if",
   "start",
   "+",
   "i",
   "<",
   "max",
   "{",
   "result",
   "[",
   "i",
   "]",
   "=",
   "start",
   "+",
   "i",
   "\n",
   "}",
   "else",
   "{",
   "result",
   "[",
   "i",
   "]",
   "=",
   "int",
   "(",
   "math",
   ".",
   "Abs",
   "(",
   "float64",
   "(",
   "max",
   "-",
   "(",
   "start",
   "+",
   "i",
   ")",
   ")",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "result",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-58",
  "nl_tokens": [
   "===",
   "clamp_min",
   "(",
   "Vector",
   "ValueTypeVector",
   "min",
   "Scalar",
   ")",
   "Vector",
   "==="
  ],
  "pl_tokens": [
   "func",
   "funcClampMin",
   "(",
   "vals",
   "[",
   "]",
   "Value",
   ",",
   "args",
   "Expressions",
   ",",
   "enh",
   "*",
   "EvalNodeHelper",
   ")",
   "Vector",
   "{",
   "vec",
   ":=",
   "vals",
   "[",
   "0",
   "]",
   ".",
   "(",
   "Vector",
   ")",
   "\n",
   "<mask>",
   ":=",
   "vals",
   "[",
   "1",
   "]",
   ".",
   "(",
   "Vector",
   ")",
   "[",
   "0",
   "]",
   ".",
   "Point",
   ".",
   "V",
   "\n",
   "for",
   "_",
   ",",
   "el",
   ":=",
   "range",
   "vec",
   "{",
   "enh",
   ".",
   "out",
   "=",
   "append",
   "(",
   "enh",
   ".",
   "out",
   ",",
   "Sample",
   "{",
   "Metric",
   ":",
   "enh",
   ".",
   "dropMetricName",
   "(",
   "el",
   ".",
   "Metric",
   ")",
   ",",
   "Point",
   ":",
   "Point",
   "{",
   "V",
   ":",
   "math",
   ".",
   "Max",
   "(",
   "min",
   ",",
   "el",
   ".",
   "V",
   ")",
   "}",
   ",",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "enh",
   ".",
   "out",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-59",
  "nl_tokens": [
   "SetRange",
   "is",
   "a",
   "wrapper",
   "around",
   "gtk_spin_button_set_range",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "v",
   "*",
   "SpinButton",
   ")",
   "SetRange",
   "(",
   "<mask>",
   ",",
   "max",
   "float64",
   ")",
   "{",
   "C",
   ".",
   "gtk_spin_button_set_range",
   "(",
   "v",
   ".",
   "native",
   "(",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "min",
   ")",
   ",",
   "C",
   ".",
   "gdouble",
   "(",
   "max",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-60",
  "nl_tokens": [
   "ensureInRange",
   "adjusts",
   "the",
   "passed",
   "value",
   "if",
   "necessary",
   "to",
   "ensure",
   "it",
   "is",
   "within",
   "the",
   "passed",
   "min",
   "/",
   "max",
   "range",
   "."
  ],
  "pl_tokens": [
   "func",
   "ensureInRange",
   "(",
   "n",
   "int16",
   ",",
   "<mask>",
   "int16",
   ",",
   "max",
   "int16",
   ")",
   "int16",
   "{",
   "if",
   "n",
   "<",
   "min",
   "{",
   "return",
   "min",
   "\n",
   "}",
   "else",
   "if",
   "n",
   ">",
   "max",
   "{",
   "return",
   "max",
   "\n",
   "}",
   "else",
   "{",
   "return",
   "n",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-61",
  "nl_tokens": [
   "NewLargeObject",
   "provides",
   "a",
   "io",
   ".",
   "writer",
   "to",
   "upload",
   "data",
   "as",
   "a",
   "segmented",
   "upload",
   "It",
   "will",
   "upload",
   "all",
   "the",
   "segments",
   "into",
   "a",
   "second",
   "container",
   "named",
   "<container",
   ">",
   ".",
   "These",
   "segments",
   "will",
   "have",
   "names",
   "like",
   "large_file",
   "/",
   "1290206778",
   ".",
   "25",
   "/",
   "00000000",
   "large_file",
   "/",
   "1290206778",
   ".",
   "25",
   "/",
   "00000001",
   "etc",
   ".",
   "The",
   "main",
   "benefit",
   "for",
   "using",
   "a",
   "separate",
   "container",
   "is",
   "that",
   "the",
   "main",
   "container",
   "listings",
   "will",
   "not",
   "be",
   "polluted",
   "with",
   "all",
   "the",
   "segment",
   "names",
   ".",
   "The",
   "reason",
   "for",
   "using",
   "the",
   "segment",
   "name",
   "format",
   "of",
   "<name",
   ">",
   "/",
   "<timestamp",
   ">",
   "/",
   "<segment",
   ">",
   "is",
   "so",
   "that",
   "an",
   "upload",
   "of",
   "a",
   "new",
   "file",
   "with",
   "the",
   "same",
   "name",
   "won\u2019t",
   "overwrite",
   "the",
   "contents",
   "of",
   "the",
   "first",
   "until",
   "the",
   "last",
   "moment",
   "when",
   "the",
   "manifest",
   "file",
   "is",
   "updated",
   ".",
   "swift",
   "will",
   "manage",
   "these",
   "segment",
   "files",
   "for",
   "you",
   "deleting",
   "old",
   "segments",
   "on",
   "deletes",
   "and",
   "overwrites",
   "etc",
   ".",
   "You",
   "can",
   "override",
   "this",
   "behavior",
   "with",
   "the",
   "--",
   "leave",
   "-",
   "segments",
   "option",
   "if",
   "desired",
   ";",
   "this",
   "is",
   "useful",
   "if",
   "you",
   "want",
   "to",
   "have",
   "multiple",
   "versions",
   "of",
   "the",
   "same",
   "large",
   "object",
   "available",
   "."
  ],
  "pl_tokens": [
   "func",
   "NewLargeObject",
   "(",
   "c",
   "*",
   "swift",
   ".",
   "Connection",
   ",",
   "path",
   "string",
   ",",
   "concurrency",
   "int",
   ",",
   "partSize",
   "int64",
   ",",
   "expireAfter",
   "int64",
   ",",
   "logger",
   "cpiLogger",
   ".",
   "Logger",
   ")",
   "(",
   "*",
   "largeObject",
   ",",
   "error",
   ")",
   "{",
   "pathParts",
   ":=",
   "strings",
   ".",
   "SplitN",
   "(",
   "path",
   ",",
   "\"",
   "\"",
   ",",
   "2",
   ")",
   "\n",
   "objectName",
   ":=",
   "\"",
   "\"",
   "\n",
   "if",
   "len",
   "(",
   "pathParts",
   ")",
   ">",
   "1",
   "{",
   "objectName",
   "=",
   "pathParts",
   "[",
   "1",
   "]",
   "\n",
   "}",
   "\n",
   "// #nosec G401",
   "lo",
   ":=",
   "largeObject",
   "{",
   "c",
   ":",
   "c",
   ",",
   "container",
   ":",
   "pathParts",
   "[",
   "0",
   "]",
   ",",
   "objectName",
   ":",
   "objectName",
   ",",
   "timestamp",
   ":",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "time",
   ".",
   "Now",
   "(",
   ")",
   ".",
   "UnixNano",
   "(",
   ")",
   ")",
   ",",
   "expire",
   ":",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "expireAfter",
   ")",
   ",",
   "bufsz",
   ":",
   "max64",
   "(",
   "minPartSize",
   ",",
   "partSize",
   ")",
   ",",
   "ch",
   ":",
   "make",
   "(",
   "chan",
   "*",
   "part",
   ")",
   ",",
   "md5OfParts",
   ":",
   "md5",
   ".",
   "New",
   "(",
   ")",
   ",",
   "md5",
   ":",
   "md5",
   ".",
   "New",
   "(",
   ")",
   ",",
   "bp",
   ":",
   "newBufferPool",
   "(",
   "minPartSize",
   ")",
   ",",
   "logger",
   ":",
   "logger",
   ",",
   "}",
   "\n\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "<mask>",
   "(",
   "concurrency",
   ",",
   "1",
   ")",
   ";",
   "i",
   "++",
   "{",
   "go",
   "lo",
   ".",
   "worker",
   "(",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Create segment container if it doesn't already exist",
   "err",
   ":=",
   "c",
   ".",
   "ContainerCreate",
   "(",
   "lo",
   ".",
   "container",
   ",",
   "nil",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "return",
   "&",
   "lo",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-62",
  "nl_tokens": [
   "/",
   "*",
   "Set",
   "the",
   "maximum",
   "number",
   "of",
   "trace",
   "segments",
   "allowed",
   "in",
   "a",
   "transaction",
   "trace",
   ".",
   "By",
   "default",
   "the",
   "maximum",
   "is",
   "set",
   "to",
   "2000",
   "which",
   "means",
   "the",
   "first",
   "2000",
   "segments",
   "in",
   "a",
   "transaction",
   "will",
   "create",
   "trace",
   "segments",
   "if",
   "the",
   "transaction",
   "exceeds",
   "the",
   "trace",
   "threshold",
   "(",
   "4",
   "x",
   "apdex_t",
   ")",
   "."
  ],
  "pl_tokens": [
   "func",
   "TransactionSetMaxTraceSegments",
   "(",
   "id",
   "int64",
   ",",
   "<mask>",
   "int",
   ")",
   "(",
   "int",
   ",",
   "error",
   ")",
   "{",
   "return",
   "errNo",
   "(",
   "C",
   ".",
   "newrelic_transaction_set_max_trace_segments",
   "(",
   "C",
   ".",
   "long",
   "(",
   "id",
   ")",
   ",",
   "C",
   ".",
   "int",
   "(",
   "max",
   ")",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-63",
  "nl_tokens": [
   "Encode",
   "writes",
   "v",
   "to",
   "the",
   "stream",
   "encoding",
   "it",
   "based",
   "on",
   "the",
   "emitter",
   "configured",
   "on",
   "e",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "e",
   "*",
   "StreamEncoder",
   ")",
   "Encode",
   "(",
   "v",
   "interface",
   "{",
   "}",
   ")",
   "error",
   "{",
   "if",
   "err",
   ":=",
   "e",
   ".",
   "Open",
   "(",
   "-",
   "1",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "e",
   ".",
   "<mask>",
   ">=",
   "0",
   "&&",
   "e",
   ".",
   "cnt",
   ">=",
   "e",
   ".",
   "max",
   "{",
   "return",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "e",
   ".",
   "max",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "!",
   "e",
   ".",
   "oneshot",
   "&&",
   "e",
   ".",
   "cnt",
   "!=",
   "0",
   "{",
   "e",
   ".",
   "err",
   "=",
   "e",
   ".",
   "Emitter",
   ".",
   "EmitArrayNext",
   "(",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "e",
   ".",
   "err",
   "==",
   "nil",
   "{",
   "e",
   ".",
   "err",
   "=",
   "(",
   "Encoder",
   "{",
   "Emitter",
   ":",
   "e",
   ".",
   "Emitter",
   ",",
   "SortMapKeys",
   ":",
   "e",
   ".",
   "SortMapKeys",
   ",",
   "}",
   ")",
   ".",
   "Encode",
   "(",
   "v",
   ")",
   "\n\n",
   "if",
   "e",
   ".",
   "cnt",
   "++",
   ";",
   "e",
   ".",
   "max",
   ">=",
   "0",
   "&&",
   "e",
   ".",
   "cnt",
   ">=",
   "e",
   ".",
   "max",
   "{",
   "e",
   ".",
   "Close",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "e",
   ".",
   "err",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-64",
  "nl_tokens": [
   "DistanceForStrings",
   "returns",
   "the",
   "edit",
   "distance",
   "between",
   "source",
   "and",
   "target",
   ".",
   "It",
   "has",
   "a",
   "runtime",
   "proportional",
   "to",
   "len",
   "(",
   "source",
   ")",
   "*",
   "len",
   "(",
   "target",
   ")",
   "and",
   "memory",
   "use",
   "proportional",
   "to",
   "len",
   "(",
   "target",
   ")",
   "."
  ],
  "pl_tokens": [
   "func",
   "DistanceForStrings",
   "(",
   "source",
   "[",
   "]",
   "rune",
   ",",
   "target",
   "[",
   "]",
   "rune",
   ",",
   "op",
   "Options",
   ")",
   "int",
   "{",
   "// Note: This algorithm is a specialization of MatrixForStrings.",
   "// MatrixForStrings returns the full edit matrix. However, we only need a",
   "// single value (see DistanceForMatrix) and the main loop of the algorithm",
   "// only uses the current and previous row. As such we create a 2D matrix,",
   "// but with height 2 (enough to store current and previous row).",
   "height",
   ":=",
   "len",
   "(",
   "source",
   ")",
   "+",
   "1",
   "\n",
   "width",
   ":=",
   "len",
   "(",
   "target",
   ")",
   "+",
   "1",
   "\n",
   "matrix",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "[",
   "]",
   "int",
   ",",
   "2",
   ")",
   "\n\n",
   "// Initialize trivial distances (from/to empty string). That is, fill",
   "// the left column and the top row with row/column indices.",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "2",
   ";",
   "i",
   "++",
   "{",
   "matrix",
   "[",
   "i",
   "]",
   "=",
   "make",
   "(",
   "[",
   "]",
   "int",
   ",",
   "width",
   ")",
   "\n",
   "matrix",
   "[",
   "i",
   "]",
   "[",
   "0",
   "]",
   "=",
   "i",
   "\n",
   "}",
   "\n",
   "for",
   "j",
   ":=",
   "1",
   ";",
   "j",
   "<",
   "width",
   ";",
   "j",
   "++",
   "{",
   "matrix",
   "[",
   "0",
   "]",
   "[",
   "j",
   "]",
   "=",
   "j",
   "\n",
   "}",
   "\n\n",
   "// Fill in the remaining cells: for each prefix pair, choose the",
   "// (edit history, operation) pair with the lowest cost.",
   "for",
   "i",
   ":=",
   "1",
   ";",
   "i",
   "<",
   "height",
   ";",
   "i",
   "++",
   "{",
   "cur",
   ":=",
   "matrix",
   "[",
   "i",
   "%",
   "2",
   "]",
   "\n",
   "prev",
   ":=",
   "matrix",
   "[",
   "(",
   "i",
   "-",
   "1",
   ")",
   "%",
   "2",
   "]",
   "\n",
   "cur",
   "[",
   "0",
   "]",
   "=",
   "i",
   "\n",
   "for",
   "j",
   ":=",
   "1",
   ";",
   "j",
   "<",
   "width",
   ";",
   "j",
   "++",
   "{",
   "delCost",
   ":=",
   "prev",
   "[",
   "j",
   "]",
   "+",
   "op",
   ".",
   "DelCost",
   "\n",
   "matchSubCost",
   ":=",
   "prev",
   "[",
   "j",
   "-",
   "1",
   "]",
   "\n",
   "if",
   "!",
   "op",
   ".",
   "Matches",
   "(",
   "source",
   "[",
   "i",
   "-",
   "1",
   "]",
   ",",
   "target",
   "[",
   "j",
   "-",
   "1",
   "]",
   ")",
   "{",
   "matchSubCost",
   "+=",
   "op",
   ".",
   "SubCost",
   "\n",
   "}",
   "\n",
   "insCost",
   ":=",
   "cur",
   "[",
   "j",
   "-",
   "1",
   "]",
   "+",
   "op",
   ".",
   "InsCost",
   "\n",
   "cur",
   "[",
   "j",
   "]",
   "=",
   "<mask>",
   "(",
   "delCost",
   ",",
   "min",
   "(",
   "matchSubCost",
   ",",
   "insCost",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "matrix",
   "[",
   "(",
   "height",
   "-",
   "1",
   ")",
   "%",
   "2",
   "]",
   "[",
   "width",
   "-",
   "1",
   "]",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-65",
  "nl_tokens": [
   "Spawn",
   "the",
   "rsync",
   "process"
  ],
  "pl_tokens": [
   "func",
   "rsyncSendSetup",
   "(",
   "path",
   "string",
   ",",
   "rsyncArgs",
   "string",
   ")",
   "(",
   "*",
   "exec",
   ".",
   "Cmd",
   ",",
   "net",
   ".",
   "Conn",
   ",",
   "io",
   ".",
   "ReadCloser",
   ",",
   "error",
   ")",
   "{",
   "auds",
   ":=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "uuid",
   ".",
   "NewRandom",
   "(",
   ")",
   ".",
   "String",
   "(",
   ")",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "auds",
   ")",
   ">",
   "shared",
   ".",
   "ABSTRACT_UNIX_SOCK_LEN",
   "-",
   "1",
   "{",
   "auds",
   "=",
   "auds",
   "[",
   ":",
   "shared",
   ".",
   "ABSTRACT_UNIX_SOCK_LEN",
   "-",
   "1",
   "]",
   "\n",
   "}",
   "\n\n",
   "l",
   ",",
   "err",
   ":=",
   "net",
   ".",
   "Listen",
   "(",
   "\"",
   "\"",
   ",",
   "auds",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   ",",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "execPath",
   ",",
   "err",
   ":=",
   "os",
   ".",
   "Readlink",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   ",",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "!",
   "shared",
   ".",
   "PathExists",
   "(",
   "execPath",
   ")",
   "{",
   "execPath",
   "=",
   "os",
   ".",
   "Args",
   "[",
   "0",
   "]",
   "\n",
   "}",
   "\n\n",
   "rsyncCmd",
   ":=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\\\"",
   "\\\"",
   "\"",
   ",",
   "execPath",
   ",",
   "auds",
   ")",
   "\n\n",
   "args",
   ":=",
   "[",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "}",
   "\n\n",
   "// Ignore deletions (requires 3.1 or higher)",
   "rsyncCheckVersion",
   ":=",
   "func",
   "(",
   "<mask>",
   "string",
   ")",
   "bool",
   "{",
   "out",
   ",",
   "err",
   ":=",
   "shared",
   ".",
   "RunCommand",
   "(",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "fields",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "out",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "curVer",
   ",",
   "err",
   ":=",
   "version",
   ".",
   "Parse",
   "(",
   "fields",
   "[",
   "3",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "minVer",
   ",",
   "err",
   ":=",
   "version",
   ".",
   "Parse",
   "(",
   "min",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "return",
   "curVer",
   ".",
   "Compare",
   "(",
   "minVer",
   ")",
   ">=",
   "0",
   "\n",
   "}",
   "\n\n",
   "if",
   "rsyncCheckVersion",
   "(",
   "\"",
   "\"",
   ")",
   "{",
   "args",
   "=",
   "append",
   "(",
   "args",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "rsyncArgs",
   "!=",
   "\"",
   "\"",
   "{",
   "args",
   "=",
   "append",
   "(",
   "args",
   ",",
   "strings",
   ".",
   "Split",
   "(",
   "rsyncArgs",
   ",",
   "\"",
   "\"",
   ")",
   "...",
   ")",
   "\n",
   "}",
   "\n\n",
   "args",
   "=",
   "append",
   "(",
   "args",
   ",",
   "[",
   "]",
   "string",
   "{",
   "path",
   ",",
   "\"",
   "\"",
   "}",
   "...",
   ")",
   "\n",
   "args",
   "=",
   "append",
   "(",
   "args",
   ",",
   "[",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   ",",
   "rsyncCmd",
   "}",
   "...",
   ")",
   "\n\n",
   "cmd",
   ":=",
   "exec",
   ".",
   "Command",
   "(",
   "\"",
   "\"",
   ",",
   "args",
   "...",
   ")",
   "\n",
   "cmd",
   ".",
   "Stdout",
   "=",
   "os",
   ".",
   "Stderr",
   "\n\n",
   "stderr",
   ",",
   "err",
   ":=",
   "cmd",
   ".",
   "StderrPipe",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   ",",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "err",
   ":=",
   "cmd",
   ".",
   "Start",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   ",",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "conn",
   ",",
   "err",
   ":=",
   "l",
   ".",
   "Accept",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "cmd",
   ".",
   "Process",
   ".",
   "Kill",
   "(",
   ")",
   "\n",
   "cmd",
   ".",
   "Wait",
   "(",
   ")",
   "\n",
   "return",
   "nil",
   ",",
   "nil",
   ",",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "l",
   ".",
   "Close",
   "(",
   ")",
   "\n\n",
   "return",
   "cmd",
   ",",
   "conn",
   ",",
   "stderr",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-66",
  "nl_tokens": [
   "match",
   "recursively",
   "traverses",
   "the",
   "provided",
   "type",
   "and",
   "outputs",
   "a",
   "matcher",
   "string",
   "for",
   "it",
   "that",
   "is",
   "compatible",
   "with",
   "the",
   "Pact",
   "dsl",
   "."
  ],
  "pl_tokens": [
   "func",
   "match",
   "(",
   "srcType",
   "reflect",
   ".",
   "Type",
   ",",
   "params",
   "params",
   ")",
   "Matcher",
   "{",
   "switch",
   "kind",
   ":=",
   "srcType",
   ".",
   "Kind",
   "(",
   ")",
   ";",
   "kind",
   "{",
   "case",
   "reflect",
   ".",
   "Ptr",
   ":",
   "return",
   "match",
   "(",
   "srcType",
   ".",
   "Elem",
   "(",
   ")",
   ",",
   "params",
   ")",
   "\n",
   "case",
   "reflect",
   ".",
   "Slice",
   ",",
   "reflect",
   ".",
   "Array",
   ":",
   "return",
   "EachLike",
   "(",
   "match",
   "(",
   "srcType",
   ".",
   "Elem",
   "(",
   ")",
   ",",
   "getDefaults",
   "(",
   ")",
   ")",
   ",",
   "params",
   ".",
   "slice",
   ".",
   "<mask>",
   ")",
   "\n",
   "case",
   "reflect",
   ".",
   "Struct",
   ":",
   "result",
   ":=",
   "StructMatcher",
   "{",
   "}",
   "\n\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "srcType",
   ".",
   "NumField",
   "(",
   ")",
   ";",
   "i",
   "++",
   "{",
   "field",
   ":=",
   "srcType",
   ".",
   "Field",
   "(",
   "i",
   ")",
   "\n",
   "result",
   "[",
   "field",
   ".",
   "Tag",
   ".",
   "Get",
   "(",
   "\"",
   "\"",
   ")",
   "]",
   "=",
   "match",
   "(",
   "field",
   ".",
   "Type",
   ",",
   "pluckParams",
   "(",
   "field",
   ".",
   "Type",
   ",",
   "field",
   ".",
   "Tag",
   ".",
   "Get",
   "(",
   "\"",
   "\"",
   ")",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "result",
   "\n",
   "case",
   "reflect",
   ".",
   "String",
   ":",
   "if",
   "params",
   ".",
   "str",
   ".",
   "regEx",
   "!=",
   "\"",
   "\"",
   "{",
   "return",
   "Term",
   "(",
   "params",
   ".",
   "str",
   ".",
   "example",
   ",",
   "params",
   ".",
   "str",
   ".",
   "regEx",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "params",
   ".",
   "str",
   ".",
   "example",
   "!=",
   "\"",
   "\"",
   "{",
   "return",
   "Like",
   "(",
   "params",
   ".",
   "str",
   ".",
   "example",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "Like",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "case",
   "reflect",
   ".",
   "Bool",
   ":",
   "return",
   "Like",
   "(",
   "true",
   ")",
   "\n",
   "case",
   "reflect",
   ".",
   "Int",
   ",",
   "reflect",
   ".",
   "Int8",
   ",",
   "reflect",
   ".",
   "Int16",
   ",",
   "reflect",
   ".",
   "Int32",
   ",",
   "reflect",
   ".",
   "Int64",
   ",",
   "reflect",
   ".",
   "Uint",
   ",",
   "reflect",
   ".",
   "Uint8",
   ",",
   "reflect",
   ".",
   "Uint16",
   ",",
   "reflect",
   ".",
   "Uint32",
   ",",
   "reflect",
   ".",
   "Uint64",
   ":",
   "return",
   "Like",
   "(",
   "1",
   ")",
   "\n",
   "case",
   "reflect",
   ".",
   "Float32",
   ",",
   "reflect",
   ".",
   "Float64",
   ":",
   "return",
   "Like",
   "(",
   "1.1",
   ")",
   "\n",
   "default",
   ":",
   "panic",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "srcType",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-67",
  "nl_tokens": [
   "NormalizeMax",
   "sets",
   "the",
   "max",
   "value",
   "to",
   "1",
   "and",
   "normalize",
   "the",
   "rest",
   "of",
   "the",
   "data",
   "."
  ],
  "pl_tokens": [
   "func",
   "NormalizeMax",
   "(",
   "buf",
   "*",
   "audio",
   ".",
   "FloatBuffer",
   ")",
   "{",
   "if",
   "buf",
   "==",
   "nil",
   "{",
   "return",
   "\n",
   "}",
   "\n",
   "<mask>",
   ":=",
   "0.0",
   "\n\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "len",
   "(",
   "buf",
   ".",
   "Data",
   ")",
   ";",
   "i",
   "++",
   "{",
   "if",
   "math",
   ".",
   "Abs",
   "(",
   "buf",
   ".",
   "Data",
   "[",
   "i",
   "]",
   ")",
   ">",
   "max",
   "{",
   "max",
   "=",
   "math",
   ".",
   "Abs",
   "(",
   "buf",
   ".",
   "Data",
   "[",
   "i",
   "]",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "if",
   "max",
   "!=",
   "0.0",
   "{",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "len",
   "(",
   "buf",
   ".",
   "Data",
   ")",
   ";",
   "i",
   "++",
   "{",
   "buf",
   ".",
   "Data",
   "[",
   "i",
   "]",
   "/=",
   "max",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-68",
  "nl_tokens": [
   "ParseRange",
   "returns",
   "a",
   "new",
   "range",
   "object",
   "and",
   "nil",
   "if",
   "the",
   "given",
   "range",
   "definition",
   "was",
   "valid",
   "or",
   "nil",
   "and",
   "an",
   "error",
   "if",
   "it",
   "was",
   "invalid",
   "."
  ],
  "pl_tokens": [
   "func",
   "ParseRange",
   "(",
   "rangeStr",
   "string",
   ")",
   "(",
   "*",
   "Range",
   ",",
   "error",
   ")",
   "{",
   "// Set defaults",
   "t",
   ":=",
   "&",
   "Range",
   "{",
   "Start",
   ":",
   "0",
   ",",
   "End",
   ":",
   "math",
   ".",
   "Inf",
   "(",
   "1",
   ")",
   ",",
   "AlertOnInside",
   ":",
   "false",
   ",",
   "}",
   "\n",
   "// Remove leading and trailing whitespace",
   "rangeStr",
   "=",
   "strings",
   ".",
   "Trim",
   "(",
   "rangeStr",
   ",",
   "\"",
   "\\n",
   "\\r",
   "\"",
   ")",
   "\n\n",
   "// Check for inverted semantics",
   "if",
   "rangeStr",
   "[",
   "0",
   "]",
   "==",
   "'@'",
   "{",
   "t",
   ".",
   "AlertOnInside",
   "=",
   "true",
   "\n",
   "rangeStr",
   "=",
   "rangeStr",
   "[",
   "1",
   ":",
   "]",
   "\n",
   "}",
   "\n\n",
   "// Parse lower limit",
   "endPos",
   ":=",
   "strings",
   ".",
   "Index",
   "(",
   "rangeStr",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "endPos",
   ">",
   "-",
   "1",
   "{",
   "if",
   "rangeStr",
   "[",
   "0",
   "]",
   "==",
   "'~'",
   "{",
   "t",
   ".",
   "Start",
   "=",
   "math",
   ".",
   "Inf",
   "(",
   "-",
   "1",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "<mask>",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "ParseFloat",
   "(",
   "rangeStr",
   "[",
   "0",
   ":",
   "endPos",
   "]",
   ",",
   "64",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "t",
   ".",
   "Start",
   "=",
   "min",
   "\n",
   "}",
   "\n",
   "rangeStr",
   "=",
   "rangeStr",
   "[",
   "endPos",
   "+",
   "1",
   ":",
   "]",
   "\n",
   "}",
   "\n\n",
   "// Parse upper limit",
   "if",
   "len",
   "(",
   "rangeStr",
   ")",
   ">",
   "0",
   "{",
   "max",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "ParseFloat",
   "(",
   "rangeStr",
   ",",
   "64",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "t",
   ".",
   "End",
   "=",
   "max",
   "\n",
   "}",
   "\n\n",
   "if",
   "t",
   ".",
   "End",
   "<",
   "t",
   ".",
   "Start",
   "{",
   "return",
   "nil",
   ",",
   "errors",
   ".",
   "New",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "// OK",
   "return",
   "t",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-69",
  "nl_tokens": [
   "hasNextEnts",
   "returns",
   "if",
   "there",
   "is",
   "any",
   "available",
   "entries",
   "for",
   "execution",
   ".",
   "This",
   "is",
   "a",
   "fast",
   "check",
   "without",
   "heavy",
   "raftLog",
   ".",
   "slice",
   "()",
   "in",
   "raftLog",
   ".",
   "nextEnts",
   "()",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "raftLog",
   ")",
   "hasNextEnts",
   "(",
   ")",
   "bool",
   "{",
   "off",
   ":=",
   "<mask>",
   "(",
   "l",
   ".",
   "applied",
   "+",
   "1",
   ",",
   "l",
   ".",
   "firstIndex",
   "(",
   ")",
   ")",
   "\n",
   "return",
   "l",
   ".",
   "committed",
   "+",
   "1",
   ">",
   "off",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-70",
  "nl_tokens": [
   "Core",
   "takes",
   "the",
   "name",
   "of",
   "a",
   "core",
   "file",
   "and",
   "returns",
   "a",
   "Process",
   "that",
   "represents",
   "the",
   "state",
   "of",
   "the",
   "inferior",
   "that",
   "generated",
   "the",
   "core",
   "file",
   "."
  ],
  "pl_tokens": [
   "func",
   "Core",
   "(",
   "coreFile",
   ",",
   "base",
   ",",
   "exePath",
   "string",
   ")",
   "(",
   "*",
   "Process",
   ",",
   "error",
   ")",
   "{",
   "core",
   ",",
   "err",
   ":=",
   "os",
   ".",
   "Open",
   "(",
   "coreFile",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "p",
   ":=",
   "&",
   "Process",
   "{",
   "base",
   ":",
   "base",
   ",",
   "files",
   ":",
   "make",
   "(",
   "map",
   "[",
   "string",
   "]",
   "*",
   "file",
   ")",
   "}",
   "\n",
   "if",
   "exePath",
   "!=",
   "\"",
   "\"",
   "{",
   "bin",
   ",",
   "err",
   ":=",
   "os",
   ".",
   "Open",
   "(",
   "exePath",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "p",
   ".",
   "exe",
   "=",
   "bin",
   "\n",
   "}",
   "\n\n",
   "if",
   "err",
   ":=",
   "p",
   ".",
   "readExec",
   "(",
   "p",
   ".",
   "exe",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "err",
   ":=",
   "p",
   ".",
   "readCore",
   "(",
   "core",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "err",
   ":=",
   "p",
   ".",
   "readDebugInfo",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n\n",
   "// Sort then merge mappings, just to clean up a bit.",
   "mappings",
   ":=",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "\n",
   "sort",
   ".",
   "Slice",
   "(",
   "mappings",
   ",",
   "func",
   "(",
   "i",
   ",",
   "j",
   "int",
   ")",
   "bool",
   "{",
   "return",
   "mappings",
   "[",
   "i",
   "]",
   ".",
   "<mask>",
   "<",
   "mappings",
   "[",
   "j",
   "]",
   ".",
   "min",
   "\n",
   "}",
   ")",
   "\n",
   "ms",
   ":=",
   "mappings",
   "[",
   "1",
   ":",
   "]",
   "\n",
   "mappings",
   "=",
   "mappings",
   "[",
   ":",
   "1",
   "]",
   "\n",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "ms",
   "{",
   "k",
   ":=",
   "mappings",
   "[",
   "len",
   "(",
   "mappings",
   ")",
   "-",
   "1",
   "]",
   "\n",
   "if",
   "m",
   ".",
   "min",
   "==",
   "k",
   ".",
   "max",
   "&&",
   "m",
   ".",
   "perm",
   "==",
   "k",
   ".",
   "perm",
   "&&",
   "m",
   ".",
   "f",
   "==",
   "k",
   ".",
   "f",
   "&&",
   "m",
   ".",
   "off",
   "==",
   "k",
   ".",
   "off",
   "+",
   "k",
   ".",
   "Size",
   "(",
   ")",
   "{",
   "k",
   ".",
   "max",
   "=",
   "m",
   ".",
   "max",
   "\n",
   "// TODO: also check origF?",
   "}",
   "else",
   "{",
   "mappings",
   "=",
   "append",
   "(",
   "mappings",
   ",",
   "m",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "=",
   "mappings",
   "\n\n",
   "// Memory map all the mappings.",
   "hostPageSize",
   ":=",
   "int64",
   "(",
   "syscall",
   ".",
   "Getpagesize",
   "(",
   ")",
   ")",
   "\n",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "{",
   "size",
   ":=",
   "m",
   ".",
   "max",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "min",
   ")",
   "\n",
   "if",
   "m",
   ".",
   "f",
   "==",
   "nil",
   "{",
   "// We don't have any source for this data.",
   "// Could be a mapped file that we couldn't find.",
   "// Could be a mapping madvised as MADV_DONTDUMP.",
   "// Pretend this is read-as-zero.",
   "// The other option is to just throw away",
   "// the mapping (and thus make Read*s of this",
   "// mapping fail).",
   "p",
   ".",
   "warnings",
   "=",
   "append",
   "(",
   "p",
   ".",
   "warnings",
   ",",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "m",
   ".",
   "min",
   ",",
   "m",
   ".",
   "max",
   ")",
   ")",
   "\n",
   "// TODO: this allocation could be large.",
   "// Use mmap to avoid real backing store for all those zeros, or",
   "// perhaps split the mapping up into chunks and share the zero contents among them.",
   "m",
   ".",
   "contents",
   "=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "size",
   ")",
   "\n",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "m",
   ".",
   "perm",
   "&",
   "Write",
   "!=",
   "0",
   "&&",
   "m",
   ".",
   "f",
   "!=",
   "core",
   "{",
   "p",
   ".",
   "warnings",
   "=",
   "append",
   "(",
   "p",
   ".",
   "warnings",
   ",",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "m",
   ".",
   "min",
   ",",
   "m",
   ".",
   "max",
   ",",
   "m",
   ".",
   "f",
   ".",
   "Name",
   "(",
   ")",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "// Data in core file might not be aligned enough for the host.",
   "// Expand memory range so we can map full pages.",
   "minOff",
   ":=",
   "m",
   ".",
   "off",
   "\n",
   "maxOff",
   ":=",
   "m",
   ".",
   "off",
   "+",
   "size",
   "\n",
   "minOff",
   "-=",
   "minOff",
   "%",
   "hostPageSize",
   "\n",
   "if",
   "maxOff",
   "%",
   "hostPageSize",
   "!=",
   "0",
   "{",
   "maxOff",
   "+=",
   "hostPageSize",
   "-",
   "maxOff",
   "%",
   "hostPageSize",
   "\n",
   "}",
   "\n\n",
   "// Read data from file.",
   "data",
   ",",
   "err",
   ":=",
   "mapFile",
   "(",
   "int",
   "(",
   "m",
   ".",
   "f",
   ".",
   "Fd",
   "(",
   ")",
   ")",
   ",",
   "minOff",
   ",",
   "int",
   "(",
   "maxOff",
   "-",
   "minOff",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "m",
   ".",
   "f",
   ".",
   "Name",
   "(",
   ")",
   ",",
   "minOff",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Trim any data we mapped but don't need.",
   "data",
   "=",
   "data",
   "[",
   "m",
   ".",
   "off",
   "-",
   "minOff",
   ":",
   "]",
   "\n",
   "data",
   "=",
   "data",
   "[",
   ":",
   "size",
   "]",
   "\n\n",
   "m",
   ".",
   "contents",
   "=",
   "data",
   "\n",
   "}",
   "\n\n",
   "// Build page table for mapping lookup.",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "{",
   "err",
   ":=",
   "p",
   ".",
   "addMapping",
   "(",
   "m",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "p",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-71",
  "nl_tokens": [
   "Generate",
   "random",
   "number",
   "in",
   "[",
   "0",
   "n",
   ")"
  ],
  "pl_tokens": [
   "func",
   "GenerateRandomInt64",
   "(",
   "<mask>",
   ",",
   "max",
   "int64",
   ")",
   "int64",
   "{",
   "upper",
   ":=",
   "max",
   "-",
   "min",
   "\n\n",
   "nBig",
   ",",
   "err",
   ":=",
   "rand",
   ".",
   "Int",
   "(",
   "rand",
   ".",
   "Reader",
   ",",
   "big",
   ".",
   "NewInt",
   "(",
   "upper",
   ")",
   ")",
   "\n\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "panic",
   "(",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "nBig",
   ".",
   "Int64",
   "(",
   ")",
   "+",
   "min",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-72",
  "nl_tokens": [
   "compactLogs",
   "takes",
   "the",
   "last",
   "inclusive",
   "index",
   "of",
   "a",
   "snapshot",
   "and",
   "trims",
   "the",
   "logs",
   "that",
   "are",
   "no",
   "longer",
   "needed",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "Raft",
   ")",
   "compactLogs",
   "(",
   "snapIdx",
   "uint64",
   ")",
   "error",
   "{",
   "defer",
   "metrics",
   ".",
   "MeasureSince",
   "(",
   "[",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   "}",
   ",",
   "time",
   ".",
   "Now",
   "(",
   ")",
   ")",
   "\n",
   "// Determine log ranges to compact",
   "minLog",
   ",",
   "err",
   ":=",
   "r",
   ".",
   "logs",
   ".",
   "FirstIndex",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Check if we have enough logs to truncate",
   "lastLogIdx",
   ",",
   "_",
   ":=",
   "r",
   ".",
   "getLastLog",
   "(",
   ")",
   "\n",
   "if",
   "lastLogIdx",
   "<=",
   "r",
   ".",
   "conf",
   ".",
   "TrailingLogs",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n\n",
   "// Truncate up to the end of the snapshot, or `TrailingLogs`",
   "// back from the head, which ever is further back. This ensures",
   "// at least `TrailingLogs` entries, but does not allow logs",
   "// after the snapshot to be removed.",
   "maxLog",
   ":=",
   "<mask>",
   "(",
   "snapIdx",
   ",",
   "lastLogIdx",
   "-",
   "r",
   ".",
   "conf",
   ".",
   "TrailingLogs",
   ")",
   "\n\n",
   "// Log this",
   "r",
   ".",
   "logger",
   ".",
   "Info",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "minLog",
   ",",
   "maxLog",
   ")",
   ")",
   "\n\n",
   "// Compact the logs",
   "if",
   "err",
   ":=",
   "r",
   ".",
   "logs",
   ".",
   "DeleteRange",
   "(",
   "minLog",
   ",",
   "maxLog",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-73",
  "nl_tokens": [
   "Generate",
   "random",
   "number",
   "in",
   "[",
   "0",
   "n",
   ")"
  ],
  "pl_tokens": [
   "func",
   "GenerateRandomInt",
   "(",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "int",
   "{",
   "return",
   "int",
   "(",
   "GenerateRandomInt64",
   "(",
   "int64",
   "(",
   "min",
   ")",
   ",",
   "int64",
   "(",
   "max",
   ")",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-74",
  "nl_tokens": [
   "CreateRandom",
   "returns",
   "a",
   "random",
   "byte",
   "string",
   "of",
   "given",
   "length",
   "from",
   "given",
   "byte",
   "string"
  ],
  "pl_tokens": [
   "func",
   "CreateRandom",
   "(",
   "bs",
   "[",
   "]",
   "byte",
   ",",
   "length",
   "int",
   ")",
   "[",
   "]",
   "byte",
   "{",
   "filled",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "length",
   ")",
   "\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "bs",
   ")",
   "\n\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "length",
   ";",
   "i",
   "++",
   "{",
   "Shuffle",
   "(",
   "bs",
   ")",
   "\n",
   "filled",
   "[",
   "i",
   "]",
   "=",
   "bs",
   "[",
   "random",
   "(",
   "0",
   ",",
   "max",
   ")",
   "]",
   "\n",
   "}",
   "\n\n",
   "return",
   "filled",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-75",
  "nl_tokens": [
   "Decodes",
   "the",
   "next",
   "value",
   "from",
   "the",
   "stream",
   "into",
   "v",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "d",
   "*",
   "StreamDecoder",
   ")",
   "Decode",
   "(",
   "v",
   "interface",
   "{",
   "}",
   ")",
   "error",
   "{",
   "if",
   "d",
   ".",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "d",
   ".",
   "err",
   "\n",
   "}",
   "\n\n",
   "err",
   ":=",
   "error",
   "(",
   "nil",
   ")",
   "\n",
   "cnt",
   ":=",
   "d",
   ".",
   "cnt",
   "\n",
   "<mask>",
   ":=",
   "d",
   ".",
   "max",
   "\n",
   "dec",
   ":=",
   "Decoder",
   "{",
   "Parser",
   ":",
   "d",
   ".",
   "Parser",
   ",",
   "MapType",
   ":",
   "d",
   ".",
   "MapType",
   ",",
   "}",
   "\n\n",
   "switch",
   "d",
   ".",
   "typ",
   "{",
   "case",
   "Unknown",
   ":",
   "err",
   "=",
   "d",
   ".",
   "init",
   "(",
   ")",
   "\n",
   "max",
   "=",
   "d",
   ".",
   "max",
   "\n",
   "case",
   "Array",
   ":",
   "if",
   "cnt",
   "==",
   "max",
   "{",
   "err",
   "=",
   "dec",
   ".",
   "Parser",
   ".",
   "ParseArrayEnd",
   "(",
   "cnt",
   ")",
   "\n",
   "}",
   "else",
   "if",
   "cnt",
   "!=",
   "0",
   "{",
   "err",
   "=",
   "dec",
   ".",
   "Parser",
   ".",
   "ParseArrayNext",
   "(",
   "cnt",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "if",
   "err",
   "==",
   "nil",
   "{",
   "if",
   "cnt",
   "==",
   "max",
   "{",
   "err",
   "=",
   "End",
   "\n",
   "}",
   "else",
   "{",
   "switch",
   "err",
   "=",
   "dec",
   ".",
   "Decode",
   "(",
   "v",
   ")",
   ";",
   "err",
   "{",
   "case",
   "nil",
   ":",
   "cnt",
   "++",
   "\n",
   "case",
   "End",
   ":",
   "cnt",
   "++",
   "\n",
   "max",
   "=",
   "cnt",
   "\n",
   "default",
   ":",
   "if",
   "max",
   "<",
   "0",
   "&&",
   "dec",
   ".",
   "Parser",
   ".",
   "ParseArrayEnd",
   "(",
   "cnt",
   ")",
   "==",
   "nil",
   "{",
   "err",
   "=",
   "End",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "d",
   ".",
   "err",
   "=",
   "err",
   "\n",
   "d",
   ".",
   "cnt",
   "=",
   "cnt",
   "\n",
   "d",
   ".",
   "max",
   "=",
   "max",
   "\n",
   "return",
   "err",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-76",
  "nl_tokens": [
   "Len",
   "returns",
   "the",
   "number",
   "of",
   "values",
   "remaining",
   "to",
   "be",
   "read",
   "from",
   "the",
   "stream",
   "which",
   "may",
   "be",
   "-",
   "1",
   "if",
   "the",
   "underlying",
   "format",
   "doesn",
   "t",
   "provide",
   "this",
   "information",
   ".",
   "If",
   "an",
   "error",
   "occurred",
   "while",
   "decoding",
   "the",
   "stream",
   "the",
   "method",
   "returns",
   "zero",
   "because",
   "no",
   "more",
   "values",
   "can",
   "be",
   "read",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "d",
   "*",
   "StreamDecoder",
   ")",
   "Len",
   "(",
   ")",
   "int",
   "{",
   "if",
   "d",
   ".",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   "\n",
   "}",
   "\n\n",
   "if",
   "d",
   ".",
   "typ",
   "==",
   "Unknown",
   "{",
   "if",
   "d",
   ".",
   "init",
   "(",
   ")",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "d",
   ".",
   "<mask>",
   "-",
   "d",
   ".",
   "cnt",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-77",
  "nl_tokens": [
   "slice",
   "returns",
   "a",
   "slice",
   "of",
   "log",
   "entries",
   "from",
   "lo",
   "through",
   "hi",
   "-",
   "1",
   "inclusive",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "raftLog",
   ")",
   "slice",
   "(",
   "lo",
   ",",
   "hi",
   ",",
   "maxSize",
   "uint64",
   ")",
   "(",
   "[",
   "]",
   "pb",
   ".",
   "Entry",
   ",",
   "error",
   ")",
   "{",
   "err",
   ":=",
   "l",
   ".",
   "mustCheckOutOfBounds",
   "(",
   "lo",
   ",",
   "hi",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "if",
   "lo",
   "==",
   "hi",
   "{",
   "return",
   "nil",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "var",
   "ents",
   "[",
   "]",
   "pb",
   ".",
   "Entry",
   "\n",
   "if",
   "lo",
   "<",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   "{",
   "storedEnts",
   ",",
   "err",
   ":=",
   "l",
   ".",
   "storage",
   ".",
   "Entries",
   "(",
   "lo",
   ",",
   "<mask>",
   "(",
   "hi",
   ",",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   ")",
   ",",
   "maxSize",
   ")",
   "\n",
   "if",
   "err",
   "==",
   "ErrCompacted",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "else",
   "if",
   "err",
   "==",
   "ErrUnavailable",
   "{",
   "l",
   ".",
   "logger",
   ".",
   "Panicf",
   "(",
   "\"",
   "\"",
   ",",
   "lo",
   ",",
   "min",
   "(",
   "hi",
   ",",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   ")",
   ")",
   "\n",
   "}",
   "else",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "panic",
   "(",
   "err",
   ")",
   "// TODO(bdarnell)",
   "\n",
   "}",
   "\n\n",
   "// check if ents has reached the size limitation",
   "if",
   "uint64",
   "(",
   "len",
   "(",
   "storedEnts",
   ")",
   ")",
   "<",
   "min",
   "(",
   "hi",
   ",",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   ")",
   "-",
   "lo",
   "{",
   "return",
   "storedEnts",
   ",",
   "nil",
   "\n",
   "}",
   "\n\n",
   "ents",
   "=",
   "storedEnts",
   "\n",
   "}",
   "\n",
   "if",
   "hi",
   ">",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   "{",
   "unstable",
   ":=",
   "l",
   ".",
   "unstable",
   ".",
   "slice",
   "(",
   "max",
   "(",
   "lo",
   ",",
   "l",
   ".",
   "unstable",
   ".",
   "offset",
   ")",
   ",",
   "hi",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "ents",
   ")",
   ">",
   "0",
   "{",
   "combined",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "pb",
   ".",
   "Entry",
   ",",
   "len",
   "(",
   "ents",
   ")",
   "+",
   "len",
   "(",
   "unstable",
   ")",
   ")",
   "\n",
   "n",
   ":=",
   "copy",
   "(",
   "combined",
   ",",
   "ents",
   ")",
   "\n",
   "copy",
   "(",
   "combined",
   "[",
   "n",
   ":",
   "]",
   ",",
   "unstable",
   ")",
   "\n",
   "ents",
   "=",
   "combined",
   "\n",
   "}",
   "else",
   "{",
   "ents",
   "=",
   "unstable",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "limitSize",
   "(",
   "ents",
   ",",
   "maxSize",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-78",
  "nl_tokens": [
   "Generate",
   "-",
   "used",
   "to",
   "generate",
   "a",
   "struct",
   "for",
   "a",
   "given",
   "job"
  ],
  "pl_tokens": [
   "func",
   "Generate",
   "(",
   "packagename",
   "string",
   ",",
   "fileBytes",
   "[",
   "]",
   "byte",
   ",",
   "outputDir",
   "string",
   ")",
   "{",
   "b",
   ":=",
   "preprocessJobManifest",
   "(",
   "fileBytes",
   ")",
   "\n",
   "objects",
   ":=",
   "make",
   "(",
   "map",
   "[",
   "string",
   "]",
   "map",
   "[",
   "string",
   "]",
   "ObjectField",
   ")",
   "\n",
   "var",
   "properties",
   "[",
   "]",
   "string",
   "\n",
   "for",
   "_",
   ",",
   "v",
   ":=",
   "range",
   "b",
   ".",
   "recs",
   "{",
   "properties",
   "=",
   "append",
   "(",
   "properties",
   ",",
   "v",
   ".",
   "Orig",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "b",
   ".",
   "<mask>",
   ";",
   "i",
   "++",
   "{",
   "for",
   "_",
   ",",
   "v",
   ":=",
   "range",
   "b",
   ".",
   "recs",
   "{",
   "if",
   "v",
   ".",
   "Length",
   "-",
   "1",
   ">=",
   "i",
   "{",
   "var",
   "structname",
   "=",
   "v",
   ".",
   "StructName",
   "(",
   "i",
   ",",
   "packagename",
   ",",
   "properties",
   ")",
   "\n",
   "var",
   "typeName",
   "=",
   "v",
   ".",
   "TypeName",
   "(",
   "i",
   ",",
   "properties",
   ")",
   "\n",
   "elementName",
   ":=",
   "v",
   ".",
   "Slice",
   "[",
   "i",
   "]",
   "\n",
   "attributeName",
   ":=",
   "FormatName",
   "(",
   "elementName",
   ")",
   "\n\n",
   "if",
   "_",
   ",",
   "ok",
   ":=",
   "objects",
   "[",
   "structname",
   "]",
   ";",
   "!",
   "ok",
   "{",
   "objects",
   "[",
   "structname",
   "]",
   "=",
   "make",
   "(",
   "map",
   "[",
   "string",
   "]",
   "ObjectField",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "previousElement",
   ",",
   "ok",
   ":=",
   "objects",
   "[",
   "structname",
   "]",
   "[",
   "attributeName",
   "]",
   ";",
   "!",
   "ok",
   "{",
   "lo",
   ".",
   "G",
   ".",
   "Debug",
   "(",
   "\"",
   "\"",
   ",",
   "attributeName",
   ",",
   "\"",
   "\"",
   ",",
   "structname",
   ",",
   "\"",
   "\"",
   ",",
   "typeName",
   ")",
   "\n",
   "objects",
   "[",
   "structname",
   "]",
   "[",
   "attributeName",
   "]",
   "=",
   "ObjectField",
   "{",
   "ElementName",
   ":",
   "attributeName",
   ",",
   "ElementType",
   ":",
   "typeName",
   ",",
   "ElementAnnotation",
   ":",
   "createElementAnnotation",
   "(",
   "elementName",
   ")",
   ",",
   "Meta",
   ":",
   "v",
   ".",
   "Yaml",
   ",",
   "}",
   "\n",
   "}",
   "else",
   "{",
   "if",
   "previousElement",
   ".",
   "ElementAnnotation",
   "!=",
   "createElementAnnotation",
   "(",
   "elementName",
   ")",
   "{",
   "lo",
   ".",
   "G",
   ".",
   "Warning",
   "(",
   "\"",
   "\"",
   ",",
   "structname",
   ",",
   "\"",
   "\"",
   ",",
   "attributeName",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "previousElement",
   ".",
   "ElementAnnotation",
   "=",
   "\"",
   "\\\"",
   "\\\"",
   "\"",
   "\n",
   "objects",
   "[",
   "structname",
   "]",
   "[",
   "attributeName",
   "]",
   "=",
   "previousElement",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "structs",
   ":=",
   "generateStructs",
   "(",
   "objects",
   ",",
   "packagename",
   ")",
   "\n",
   "writeStructsToDisk",
   "(",
   "structs",
   ",",
   "outputDir",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-79",
  "nl_tokens": [
   "printHistogram",
   "prints",
   "the",
   "histogram",
   "data",
   "in",
   "a",
   "human",
   "-",
   "readable",
   "format",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "histogram",
   "histogramData",
   ")",
   "printHistogram",
   "(",
   ")",
   "{",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "histogram",
   ".",
   "totalCount",
   ")",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "histogram",
   ".",
   "<mask>",
   ")",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "histogram",
   ".",
   "max",
   ")",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "float64",
   "(",
   "histogram",
   ".",
   "sum",
   ")",
   "/",
   "float64",
   "(",
   "histogram",
   ".",
   "totalCount",
   ")",
   ")",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ")",
   "\n\n",
   "numBins",
   ":=",
   "len",
   "(",
   "histogram",
   ".",
   "bins",
   ")",
   "\n",
   "for",
   "index",
   ",",
   "count",
   ":=",
   "range",
   "histogram",
   ".",
   "countPerBin",
   "{",
   "if",
   "count",
   "==",
   "0",
   "{",
   "continue",
   "\n",
   "}",
   "\n\n",
   "// The last bin represents the bin that contains the range from",
   "// the last bin up to infinity so it's processed differently than the",
   "// other bins.",
   "if",
   "index",
   "==",
   "len",
   "(",
   "histogram",
   ".",
   "countPerBin",
   ")",
   "-",
   "1",
   "{",
   "lowerBound",
   ":=",
   "int",
   "(",
   "histogram",
   ".",
   "bins",
   "[",
   "numBins",
   "-",
   "1",
   "]",
   ")",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "lowerBound",
   ",",
   "\"",
   "\"",
   ",",
   "count",
   ")",
   "\n",
   "continue",
   "\n",
   "}",
   "\n\n",
   "upperBound",
   ":=",
   "int",
   "(",
   "histogram",
   ".",
   "bins",
   "[",
   "index",
   "]",
   ")",
   "\n",
   "lowerBound",
   ":=",
   "0",
   "\n",
   "if",
   "index",
   ">",
   "0",
   "{",
   "lowerBound",
   "=",
   "int",
   "(",
   "histogram",
   ".",
   "bins",
   "[",
   "index",
   "-",
   "1",
   "]",
   ")",
   "\n",
   "}",
   "\n\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "lowerBound",
   ",",
   "upperBound",
   ",",
   "count",
   ")",
   "\n",
   "}",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-80",
  "nl_tokens": [
   "parseDosTime",
   "converts",
   "a",
   "32bit",
   "DOS",
   "time",
   "value",
   "to",
   "time",
   ".",
   "Time"
  ],
  "pl_tokens": [
   "func",
   "parseDosTime",
   "(",
   "t",
   "uint32",
   ")",
   "time",
   ".",
   "Time",
   "{",
   "n",
   ":=",
   "int",
   "(",
   "t",
   ")",
   "\n",
   "sec",
   ":=",
   "n",
   "&",
   "0x1f",
   "<<",
   "1",
   "\n",
   "<mask>",
   ":=",
   "n",
   ">>",
   "5",
   "&",
   "0x3f",
   "\n",
   "hr",
   ":=",
   "n",
   ">>",
   "11",
   "&",
   "0x1f",
   "\n",
   "day",
   ":=",
   "n",
   ">>",
   "16",
   "&",
   "0x1f",
   "\n",
   "mon",
   ":=",
   "time",
   ".",
   "Month",
   "(",
   "n",
   ">>",
   "21",
   "&",
   "0x0f",
   ")",
   "\n",
   "yr",
   ":=",
   "n",
   ">>",
   "25",
   "&",
   "0x7f",
   "+",
   "1980",
   "\n",
   "return",
   "time",
   ".",
   "Date",
   "(",
   "yr",
   ",",
   "mon",
   ",",
   "day",
   ",",
   "hr",
   ",",
   "min",
   ",",
   "sec",
   ",",
   "0",
   ",",
   "time",
   ".",
   "Local",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-81",
  "nl_tokens": [
   "String",
   "returns",
   "the",
   "string",
   "representation",
   "of",
   "a",
   "PerfDatum",
   "suitable",
   "for",
   "check",
   "output",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "PerfDatum",
   ")",
   "String",
   "(",
   ")",
   "string",
   "{",
   "val",
   ":=",
   "fmtPerfFloat",
   "(",
   "p",
   ".",
   "value",
   ")",
   "\n",
   "value",
   ":=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "p",
   ".",
   "label",
   ",",
   "val",
   ",",
   "p",
   ".",
   "unit",
   ")",
   "\n",
   "value",
   "+=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "fmtThreshold",
   "(",
   "p",
   ".",
   "warn",
   ")",
   ",",
   "fmtThreshold",
   "(",
   "p",
   ".",
   "crit",
   ")",
   ")",
   "\n",
   "value",
   "+=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "fmtThreshold",
   "(",
   "p",
   ".",
   "<mask>",
   ")",
   ",",
   "fmtThreshold",
   "(",
   "p",
   ".",
   "max",
   ")",
   ")",
   "\n",
   "return",
   "value",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-82",
  "nl_tokens": [
   "AskInt",
   "asks",
   "the",
   "user",
   "to",
   "enter",
   "an",
   "integer",
   "between",
   "a",
   "min",
   "and",
   "max",
   "value"
  ],
  "pl_tokens": [
   "func",
   "AskInt",
   "(",
   "question",
   "string",
   ",",
   "<mask>",
   "int64",
   ",",
   "max",
   "int64",
   ",",
   "defaultAnswer",
   "string",
   ")",
   "int64",
   "{",
   "for",
   "{",
   "answer",
   ":=",
   "askQuestion",
   "(",
   "question",
   ",",
   "defaultAnswer",
   ")",
   "\n\n",
   "result",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "ParseInt",
   "(",
   "answer",
   ",",
   "10",
   ",",
   "64",
   ")",
   "\n\n",
   "if",
   "err",
   "==",
   "nil",
   "&&",
   "(",
   "min",
   "==",
   "-",
   "1",
   "||",
   "result",
   ">=",
   "min",
   ")",
   "&&",
   "(",
   "max",
   "==",
   "-",
   "1",
   "||",
   "result",
   "<=",
   "max",
   ")",
   "{",
   "return",
   "result",
   "\n",
   "}",
   "\n\n",
   "invalidInput",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-83",
  "nl_tokens": [
   "fetchLoop",
   "is",
   "run",
   "in",
   "a",
   "goroutine"
  ],
  "pl_tokens": [
   "func",
   "(",
   "mp",
   "*",
   "master",
   ")",
   "fetchLoop",
   "(",
   ")",
   "{",
   "<mask>",
   ":=",
   "mp",
   ".",
   "Config",
   ".",
   "MinFetchInterval",
   "\n",
   "time",
   ".",
   "Sleep",
   "(",
   "min",
   ")",
   "\n",
   "for",
   "{",
   "t0",
   ":=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   "\n",
   "mp",
   ".",
   "fetch",
   "(",
   ")",
   "\n",
   "//duration fetch of fetch",
   "diff",
   ":=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   ".",
   "Sub",
   "(",
   "t0",
   ")",
   "\n",
   "if",
   "diff",
   "<",
   "min",
   "{",
   "delay",
   ":=",
   "min",
   "-",
   "diff",
   "\n",
   "//ensures at least MinFetchInterval delay.",
   "//should be throttled by the fetcher!",
   "time",
   ".",
   "Sleep",
   "(",
   "delay",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-84",
  "nl_tokens": [
   "TODO",
   "needs",
   "test",
   "since",
   "it",
   "is",
   "not",
   "quiet",
   "right"
  ],
  "pl_tokens": [
   "func",
   "getPrec",
   "(",
   "num",
   "float64",
   ",",
   "better",
   "bool",
   ")",
   "int",
   "{",
   "<mask>",
   ":=",
   "3",
   "\n",
   "eps",
   ":=",
   "0.0005",
   "\n",
   "if",
   "better",
   "{",
   "max",
   "=",
   "6",
   "\n",
   "eps",
   "=",
   "0.0000005",
   "\n",
   "}",
   "\n",
   "prec",
   ":=",
   "0",
   "\n",
   "for",
   "math",
   ".",
   "Mod",
   "(",
   "num",
   ",",
   "1",
   ")",
   ">",
   "eps",
   "{",
   "num",
   "*=",
   "10",
   "\n",
   "eps",
   "*=",
   "10",
   "\n",
   "prec",
   "++",
   "\n",
   "}",
   "\n\n",
   "if",
   "max",
   "<",
   "prec",
   "{",
   "return",
   "max",
   "\n",
   "}",
   "\n",
   "return",
   "prec",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-85",
  "nl_tokens": [
   "Quantize",
   "quantizes",
   "the",
   "audio",
   "signal",
   "to",
   "match",
   "the",
   "target",
   "bitDepth"
  ],
  "pl_tokens": [
   "func",
   "Quantize",
   "(",
   "buf",
   "*",
   "audio",
   ".",
   "FloatBuffer",
   ",",
   "bitDepth",
   "int",
   ")",
   "{",
   "if",
   "buf",
   "==",
   "nil",
   "{",
   "return",
   "\n",
   "}",
   "\n",
   "<mask>",
   ":=",
   "math",
   ".",
   "Pow",
   "(",
   "2",
   ",",
   "float64",
   "(",
   "bitDepth",
   ")",
   ")",
   "-",
   "1",
   "\n\n",
   "bufLen",
   ":=",
   "len",
   "(",
   "buf",
   ".",
   "Data",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "bufLen",
   ";",
   "i",
   "++",
   "{",
   "buf",
   ".",
   "Data",
   "[",
   "i",
   "]",
   "=",
   "round",
   "(",
   "(",
   "buf",
   ".",
   "Data",
   "[",
   "i",
   "]",
   "+",
   "1",
   ")",
   "*",
   "max",
   ")",
   "/",
   "max",
   "-",
   "1.0",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-86",
  "nl_tokens": [
   "CleanUrl",
   "check",
   "the",
   "characteres",
   "in",
   "url",
   "and",
   "parser",
   "it",
   "with",
   "url",
   ".",
   "Parse",
   ".",
   "If",
   "url",
   "is",
   "ok",
   "return",
   "one",
   "string",
   "with",
   "it",
   "or",
   "if",
   "the",
   "scheme",
   "is",
   "missing",
   "return",
   "the",
   "url",
   "and",
   "an",
   "error",
   "."
  ],
  "pl_tokens": [
   "func",
   "CleanUrl",
   "(",
   "rawurl",
   "string",
   ",",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "(",
   "string",
   ",",
   "error",
   ")",
   "{",
   "err",
   ":=",
   "CheckUrl",
   "(",
   "rawurl",
   ",",
   "min",
   ",",
   "max",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\"",
   "\"",
   ",",
   "e",
   ".",
   "Forward",
   "(",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "u",
   ",",
   "err",
   ":=",
   "url",
   ".",
   "Parse",
   "(",
   "rawurl",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\"",
   "\"",
   ",",
   "e",
   ".",
   "Push",
   "(",
   "e",
   ".",
   "New",
   "(",
   "ErrInvUrl",
   ")",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "u",
   ".",
   "Scheme",
   "==",
   "\"",
   "\"",
   "{",
   "return",
   "u",
   ".",
   "String",
   "(",
   ")",
   ",",
   "e",
   ".",
   "New",
   "(",
   "ErrNoScheme",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "u",
   ".",
   "String",
   "(",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-87",
  "nl_tokens": [
   "unaryClientInterceptor",
   "returns",
   "a",
   "new",
   "retrying",
   "unary",
   "client",
   "interceptor",
   ".",
   "The",
   "default",
   "configuration",
   "of",
   "the",
   "interceptor",
   "is",
   "to",
   "not",
   "retry",
   "*",
   "at",
   "all",
   "*",
   ".",
   "This",
   "behaviour",
   "can",
   "be",
   "changed",
   "through",
   "options",
   "(",
   "e",
   ".",
   "g",
   ".",
   "WithMax",
   ")",
   "on",
   "creation",
   "of",
   "the",
   "interceptor",
   "or",
   "on",
   "call",
   "(",
   "through",
   "grpc",
   ".",
   "CallOptions",
   ")",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "Client",
   ")",
   "unaryClientInterceptor",
   "(",
   "logger",
   "*",
   "zap",
   ".",
   "Logger",
   ",",
   "optFuncs",
   "...",
   "retryOption",
   ")",
   "grpc",
   ".",
   "UnaryClientInterceptor",
   "{",
   "intOpts",
   ":=",
   "reuseOrNewWithCallOptions",
   "(",
   "defaultOptions",
   ",",
   "optFuncs",
   ")",
   "\n",
   "return",
   "func",
   "(",
   "ctx",
   "context",
   ".",
   "Context",
   ",",
   "method",
   "string",
   ",",
   "req",
   ",",
   "reply",
   "interface",
   "{",
   "}",
   ",",
   "cc",
   "*",
   "grpc",
   ".",
   "ClientConn",
   ",",
   "invoker",
   "grpc",
   ".",
   "UnaryInvoker",
   ",",
   "opts",
   "...",
   "grpc",
   ".",
   "CallOption",
   ")",
   "error",
   "{",
   "grpcOpts",
   ",",
   "retryOpts",
   ":=",
   "filterCallOptions",
   "(",
   "opts",
   ")",
   "\n",
   "callOpts",
   ":=",
   "reuseOrNewWithCallOptions",
   "(",
   "intOpts",
   ",",
   "retryOpts",
   ")",
   "\n",
   "// short circuit for simplicity, and avoiding allocations.",
   "if",
   "callOpts",
   ".",
   "<mask>",
   "==",
   "0",
   "{",
   "return",
   "invoker",
   "(",
   "ctx",
   ",",
   "method",
   ",",
   "req",
   ",",
   "reply",
   ",",
   "cc",
   ",",
   "grpcOpts",
   "...",
   ")",
   "\n",
   "}",
   "\n",
   "var",
   "lastErr",
   "error",
   "\n",
   "for",
   "attempt",
   ":=",
   "uint",
   "(",
   "0",
   ")",
   ";",
   "attempt",
   "<",
   "callOpts",
   ".",
   "max",
   ";",
   "attempt",
   "++",
   "{",
   "if",
   "err",
   ":=",
   "waitRetryBackoff",
   "(",
   "ctx",
   ",",
   "attempt",
   ",",
   "callOpts",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n",
   "logger",
   ".",
   "Debug",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "String",
   "(",
   "\"",
   "\"",
   ",",
   "cc",
   ".",
   "Target",
   "(",
   ")",
   ")",
   ",",
   "zap",
   ".",
   "Uint",
   "(",
   "\"",
   "\"",
   ",",
   "attempt",
   ")",
   ",",
   ")",
   "\n",
   "lastErr",
   "=",
   "invoker",
   "(",
   "ctx",
   ",",
   "method",
   ",",
   "req",
   ",",
   "reply",
   ",",
   "cc",
   ",",
   "grpcOpts",
   "...",
   ")",
   "\n",
   "if",
   "lastErr",
   "==",
   "nil",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n",
   "logger",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "String",
   "(",
   "\"",
   "\"",
   ",",
   "cc",
   ".",
   "Target",
   "(",
   ")",
   ")",
   ",",
   "zap",
   ".",
   "Uint",
   "(",
   "\"",
   "\"",
   ",",
   "attempt",
   ")",
   ",",
   "zap",
   ".",
   "Error",
   "(",
   "lastErr",
   ")",
   ",",
   ")",
   "\n",
   "if",
   "isContextError",
   "(",
   "lastErr",
   ")",
   "{",
   "if",
   "ctx",
   ".",
   "Err",
   "(",
   ")",
   "!=",
   "nil",
   "{",
   "// its the context deadline or cancellation.",
   "return",
   "lastErr",
   "\n",
   "}",
   "\n",
   "// its the callCtx deadline or cancellation, in which case try again.",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "callOpts",
   ".",
   "retryAuth",
   "&&",
   "rpctypes",
   ".",
   "Error",
   "(",
   "lastErr",
   ")",
   "==",
   "rpctypes",
   ".",
   "ErrInvalidAuthToken",
   "{",
   "gterr",
   ":=",
   "c",
   ".",
   "getToken",
   "(",
   "ctx",
   ")",
   "\n",
   "if",
   "gterr",
   "!=",
   "nil",
   "{",
   "logger",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "String",
   "(",
   "\"",
   "\"",
   ",",
   "cc",
   ".",
   "Target",
   "(",
   ")",
   ")",
   ",",
   "zap",
   ".",
   "Error",
   "(",
   "gterr",
   ")",
   ",",
   ")",
   "\n",
   "return",
   "lastErr",
   "// return the original error for simplicity",
   "\n",
   "}",
   "\n",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "!",
   "isSafeRetry",
   "(",
   "c",
   ".",
   "lg",
   ",",
   "lastErr",
   ",",
   "callOpts",
   ")",
   "{",
   "return",
   "lastErr",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "lastErr",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-88",
  "nl_tokens": [
   "RunBoundedArgs",
   "wraps",
   "a",
   "function",
   "in",
   "a",
   "function",
   "that",
   "checks",
   "its",
   "argument",
   "count",
   "is",
   "within",
   "a",
   "range",
   "."
  ],
  "pl_tokens": [
   "func",
   "RunBoundedArgs",
   "(",
   "<mask>",
   "int",
   ",",
   "max",
   "int",
   ",",
   "run",
   "func",
   "(",
   "[",
   "]",
   "string",
   ")",
   "error",
   ")",
   "func",
   "(",
   "*",
   "cobra",
   ".",
   "Command",
   ",",
   "[",
   "]",
   "string",
   ")",
   "{",
   "return",
   "func",
   "(",
   "cmd",
   "*",
   "cobra",
   ".",
   "Command",
   ",",
   "args",
   "[",
   "]",
   "string",
   ")",
   "{",
   "if",
   "len",
   "(",
   "args",
   ")",
   "<",
   "min",
   "||",
   "len",
   "(",
   "args",
   ")",
   ">",
   "max",
   "{",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\\n",
   "\"",
   ",",
   "min",
   ",",
   "max",
   ",",
   "len",
   "(",
   "args",
   ")",
   ")",
   "\n",
   "cmd",
   ".",
   "Usage",
   "(",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "if",
   "err",
   ":=",
   "run",
   "(",
   "args",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "ErrorAndExit",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-89",
  "nl_tokens": [
   "canExecuteConcurrently",
   "checks",
   "whether",
   "the",
   "provided",
   "ProwJob",
   "can",
   "be",
   "executed",
   "concurrently",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "Controller",
   ")",
   "canExecuteConcurrently",
   "(",
   "pj",
   "*",
   "prowapi",
   ".",
   "ProwJob",
   ")",
   "bool",
   "{",
   "c",
   ".",
   "lock",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "c",
   ".",
   "lock",
   ".",
   "Unlock",
   "(",
   ")",
   "\n\n",
   "if",
   "<mask>",
   ":=",
   "c",
   ".",
   "config",
   "(",
   ")",
   ".",
   "MaxConcurrency",
   ";",
   "max",
   ">",
   "0",
   "{",
   "var",
   "running",
   "int",
   "\n",
   "for",
   "_",
   ",",
   "num",
   ":=",
   "range",
   "c",
   ".",
   "pendingJobs",
   "{",
   "running",
   "+=",
   "num",
   "\n",
   "}",
   "\n",
   "if",
   "running",
   ">=",
   "max",
   "{",
   "c",
   ".",
   "log",
   ".",
   "WithFields",
   "(",
   "pjutil",
   ".",
   "ProwJobFields",
   "(",
   "pj",
   ")",
   ")",
   ".",
   "Debugf",
   "(",
   "\"",
   "\"",
   ",",
   "running",
   ")",
   "\n",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "if",
   "pj",
   ".",
   "Spec",
   ".",
   "MaxConcurrency",
   "==",
   "0",
   "{",
   "c",
   ".",
   "pendingJobs",
   "[",
   "pj",
   ".",
   "Spec",
   ".",
   "Job",
   "]",
   "++",
   "\n",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "numPending",
   ":=",
   "c",
   ".",
   "pendingJobs",
   "[",
   "pj",
   ".",
   "Spec",
   ".",
   "Job",
   "]",
   "\n",
   "if",
   "numPending",
   ">=",
   "pj",
   ".",
   "Spec",
   ".",
   "MaxConcurrency",
   "{",
   "c",
   ".",
   "log",
   ".",
   "WithFields",
   "(",
   "pjutil",
   ".",
   "ProwJobFields",
   "(",
   "pj",
   ")",
   ")",
   ".",
   "Debugf",
   "(",
   "\"",
   "\"",
   ",",
   "pj",
   ".",
   "Spec",
   ".",
   "Job",
   ",",
   "numPending",
   ")",
   "\n",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "c",
   ".",
   "pendingJobs",
   "[",
   "pj",
   ".",
   "Spec",
   ".",
   "Job",
   "]",
   "++",
   "\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-90",
  "nl_tokens": [
   "CheckInt64Bounds",
   "verifies",
   "that",
   "v",
   "is",
   "within",
   "min",
   "and",
   "max",
   "t",
   "represents",
   "the",
   "original",
   "type",
   "of",
   "v",
   "."
  ],
  "pl_tokens": [
   "func",
   "CheckInt64Bounds",
   "(",
   "v",
   "int64",
   ",",
   "<mask>",
   "int64",
   ",",
   "max",
   "uint64",
   ",",
   "t",
   "reflect",
   ".",
   "Type",
   ")",
   "(",
   "err",
   "error",
   ")",
   "{",
   "if",
   "v",
   "<",
   "min",
   "{",
   "err",
   "=",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ",",
   "min",
   ",",
   "t",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "v",
   ">",
   "0",
   "&&",
   "uint64",
   "(",
   "v",
   ")",
   ">",
   "max",
   "{",
   "err",
   "=",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ",",
   "max",
   ",",
   "t",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-91",
  "nl_tokens": [
   "projects",
   "returns",
   "the",
   "list",
   "of",
   "accessible",
   "gcp",
   "projects"
  ],
  "pl_tokens": [
   "func",
   "projects",
   "(",
   "<mask>",
   "int",
   ")",
   "(",
   "[",
   "]",
   "string",
   ",",
   "error",
   ")",
   "{",
   "out",
   ",",
   "err",
   ":=",
   "output",
   "(",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "max",
   ")",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "return",
   "strings",
   ".",
   "Split",
   "(",
   "out",
   ",",
   "\"",
   "\\n",
   "\"",
   ")",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-92",
  "nl_tokens": [
   "backoff",
   "computes",
   "a",
   "random",
   "exponential",
   "backoff",
   "value",
   "for",
   "a",
   "given",
   "number",
   "of",
   "attempts",
   "and",
   "boundaries",
   "of",
   "min",
   "and",
   "max",
   "backoff",
   "durations",
   "."
  ],
  "pl_tokens": [
   "func",
   "backoff",
   "(",
   "rand",
   "*",
   "rand",
   ".",
   "Rand",
   ",",
   "attempt",
   "int",
   ",",
   "<mask>",
   ",",
   "max",
   "time",
   ".",
   "Duration",
   ")",
   "time",
   ".",
   "Duration",
   "{",
   "if",
   "attempt",
   "<=",
   "0",
   "{",
   "panic",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "min",
   ">",
   "max",
   "{",
   "panic",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Hardcoded backoff coefficient, maybe we'll make it configuration in the",
   "// future?",
   "const",
   "coeff",
   "=",
   "2.0",
   "\n",
   "return",
   "jitteredBackoff",
   "(",
   "rand",
   ",",
   "attempt",
   ",",
   "min",
   ",",
   "max",
   ",",
   "coeff",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-93",
  "nl_tokens": [
   "assumes",
   "a",
   "to",
   "be",
   "sorted",
   "in",
   "descending",
   "order",
   "returns",
   "a",
   "subslice",
   "of",
   "a",
   "along",
   "with",
   "its",
   "indices",
   "(",
   "inclusive",
   ")"
  ],
  "pl_tokens": [
   "func",
   "cropResults",
   "(",
   "a",
   "[",
   "]",
   "int64",
   ",",
   "<mask>",
   "int64",
   ")",
   "(",
   "[",
   "]",
   "int64",
   ",",
   "int",
   ",",
   "int",
   ")",
   "{",
   "res",
   ":=",
   "[",
   "]",
   "int64",
   "{",
   "}",
   "\n",
   "firstIndex",
   ":=",
   "-",
   "1",
   "\n",
   "lastIndex",
   ":=",
   "0",
   "\n",
   "for",
   "i",
   ",",
   "v",
   ":=",
   "range",
   "a",
   "{",
   "if",
   "v",
   "<=",
   "max",
   "{",
   "res",
   "=",
   "append",
   "(",
   "res",
   ",",
   "v",
   ")",
   "\n",
   "if",
   "firstIndex",
   "==",
   "-",
   "1",
   "{",
   "firstIndex",
   "=",
   "i",
   "\n",
   "}",
   "\n",
   "lastIndex",
   "=",
   "i",
   "\n",
   "if",
   "len",
   "(",
   "res",
   ")",
   ">=",
   "resultsPerPage",
   "{",
   "break",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "res",
   ",",
   "firstIndex",
   ",",
   "lastIndex",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-94",
  "nl_tokens": [
   "sendHeartbeat",
   "sends",
   "a",
   "heartbeat",
   "RPC",
   "to",
   "the",
   "given",
   "peer",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "raft",
   ")",
   "sendHeartbeat",
   "(",
   "to",
   "uint64",
   ",",
   "ctx",
   "[",
   "]",
   "byte",
   ")",
   "{",
   "// Attach the commit as min(to.matched, r.committed).",
   "// When the leader sends out heartbeat message,",
   "// the receiver(follower) might not be matched with the leader",
   "// or it might not have all the committed entries.",
   "// The leader MUST NOT forward the follower's commit to",
   "// an unmatched index.",
   "commit",
   ":=",
   "<mask>",
   "(",
   "r",
   ".",
   "getProgress",
   "(",
   "to",
   ")",
   ".",
   "Match",
   ",",
   "r",
   ".",
   "raftLog",
   ".",
   "committed",
   ")",
   "\n",
   "m",
   ":=",
   "pb",
   ".",
   "Message",
   "{",
   "To",
   ":",
   "to",
   ",",
   "Type",
   ":",
   "pb",
   ".",
   "MsgHeartbeat",
   ",",
   "Commit",
   ":",
   "commit",
   ",",
   "Context",
   ":",
   "ctx",
   ",",
   "}",
   "\n\n",
   "r",
   ".",
   "send",
   "(",
   "m",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-95",
  "nl_tokens": [
   "purgeFile",
   "is",
   "the",
   "internal",
   "implementation",
   "for",
   "PurgeFile",
   "which",
   "can",
   "post",
   "purged",
   "files",
   "to",
   "purgec",
   "if",
   "non",
   "-",
   "nil",
   "."
  ],
  "pl_tokens": [
   "func",
   "purgeFile",
   "(",
   "lg",
   "*",
   "zap",
   ".",
   "Logger",
   ",",
   "dirname",
   "string",
   ",",
   "suffix",
   "string",
   ",",
   "<mask>",
   "uint",
   ",",
   "interval",
   "time",
   ".",
   "Duration",
   ",",
   "stop",
   "<-",
   "chan",
   "struct",
   "{",
   "}",
   ",",
   "purgec",
   "chan",
   "<-",
   "string",
   ")",
   "<-",
   "chan",
   "error",
   "{",
   "errC",
   ":=",
   "make",
   "(",
   "chan",
   "error",
   ",",
   "1",
   ")",
   "\n",
   "go",
   "func",
   "(",
   ")",
   "{",
   "for",
   "{",
   "fnames",
   ",",
   "err",
   ":=",
   "ReadDir",
   "(",
   "dirname",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "errC",
   "<-",
   "err",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "newfnames",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "string",
   ",",
   "0",
   ")",
   "\n",
   "for",
   "_",
   ",",
   "fname",
   ":=",
   "range",
   "fnames",
   "{",
   "if",
   "strings",
   ".",
   "HasSuffix",
   "(",
   "fname",
   ",",
   "suffix",
   ")",
   "{",
   "newfnames",
   "=",
   "append",
   "(",
   "newfnames",
   ",",
   "fname",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "sort",
   ".",
   "Strings",
   "(",
   "newfnames",
   ")",
   "\n",
   "fnames",
   "=",
   "newfnames",
   "\n",
   "for",
   "len",
   "(",
   "newfnames",
   ")",
   ">",
   "int",
   "(",
   "max",
   ")",
   "{",
   "f",
   ":=",
   "filepath",
   ".",
   "Join",
   "(",
   "dirname",
   ",",
   "newfnames",
   "[",
   "0",
   "]",
   ")",
   "\n",
   "l",
   ",",
   "err",
   ":=",
   "TryLockFile",
   "(",
   "f",
   ",",
   "os",
   ".",
   "O_WRONLY",
   ",",
   "PrivateFileMode",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "break",
   "\n",
   "}",
   "\n",
   "if",
   "err",
   "=",
   "os",
   ".",
   "Remove",
   "(",
   "f",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "errC",
   "<-",
   "err",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "if",
   "err",
   "=",
   "l",
   ".",
   "Close",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "if",
   "lg",
   "!=",
   "nil",
   "{",
   "lg",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "String",
   "(",
   "\"",
   "\"",
   ",",
   "l",
   ".",
   "Name",
   "(",
   ")",
   ")",
   ",",
   "zap",
   ".",
   "Error",
   "(",
   "err",
   ")",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "plog",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "l",
   ".",
   "Name",
   "(",
   ")",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "errC",
   "<-",
   "err",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "if",
   "lg",
   "!=",
   "nil",
   "{",
   "lg",
   ".",
   "Info",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "String",
   "(",
   "\"",
   "\"",
   ",",
   "f",
   ")",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "plog",
   ".",
   "Infof",
   "(",
   "\"",
   "\"",
   ",",
   "f",
   ")",
   "\n",
   "}",
   "\n",
   "newfnames",
   "=",
   "newfnames",
   "[",
   "1",
   ":",
   "]",
   "\n",
   "}",
   "\n",
   "if",
   "purgec",
   "!=",
   "nil",
   "{",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "len",
   "(",
   "fnames",
   ")",
   "-",
   "len",
   "(",
   "newfnames",
   ")",
   ";",
   "i",
   "++",
   "{",
   "purgec",
   "<-",
   "fnames",
   "[",
   "i",
   "]",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "select",
   "{",
   "case",
   "<-",
   "time",
   ".",
   "After",
   "(",
   "interval",
   ")",
   ":",
   "case",
   "<-",
   "stop",
   ":",
   "return",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "(",
   ")",
   "\n",
   "return",
   "errC",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-96",
  "nl_tokens": [
   "backoff",
   "is",
   "used",
   "to",
   "compute",
   "an",
   "exponential",
   "backoff",
   "duration",
   ".",
   "Base",
   "time",
   "is",
   "scaled",
   "by",
   "the",
   "current",
   "round",
   "up",
   "to",
   "some",
   "maximum",
   "scale",
   "factor",
   "."
  ],
  "pl_tokens": [
   "func",
   "backoff",
   "(",
   "base",
   "time",
   ".",
   "Duration",
   ",",
   "round",
   ",",
   "limit",
   "uint64",
   ")",
   "time",
   ".",
   "Duration",
   "{",
   "power",
   ":=",
   "<mask>",
   "(",
   "round",
   ",",
   "limit",
   ")",
   "\n",
   "for",
   "power",
   ">",
   "2",
   "{",
   "base",
   "*=",
   "2",
   "\n",
   "power",
   "--",
   "\n",
   "}",
   "\n",
   "return",
   "base",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-97",
  "nl_tokens": [
   "splitMappingsAt",
   "ensures",
   "that",
   "a",
   "is",
   "not",
   "in",
   "the",
   "middle",
   "of",
   "any",
   "mapping",
   ".",
   "Splits",
   "mappings",
   "as",
   "necessary",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "splitMappingsAt",
   "(",
   "a",
   "Address",
   ")",
   "{",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "{",
   "if",
   "a",
   "<",
   "m",
   ".",
   "<mask>",
   "||",
   "a",
   ">",
   "m",
   ".",
   "max",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "a",
   "==",
   "m",
   ".",
   "min",
   "||",
   "a",
   "==",
   "m",
   ".",
   "max",
   "{",
   "return",
   "\n",
   "}",
   "\n",
   "// Split this mapping at a.",
   "m2",
   ":=",
   "new",
   "(",
   "Mapping",
   ")",
   "\n",
   "*",
   "m2",
   "=",
   "*",
   "m",
   "\n",
   "m",
   ".",
   "max",
   "=",
   "a",
   "\n",
   "m2",
   ".",
   "min",
   "=",
   "a",
   "\n",
   "if",
   "m2",
   ".",
   "f",
   "!=",
   "nil",
   "{",
   "m2",
   ".",
   "off",
   "+=",
   "m",
   ".",
   "Size",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "m2",
   ".",
   "origF",
   "!=",
   "nil",
   "{",
   "m2",
   ".",
   "origOff",
   "+=",
   "m",
   ".",
   "Size",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   "=",
   "append",
   "(",
   "p",
   ".",
   "memory",
   ".",
   "mappings",
   ",",
   "m2",
   ")",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-98",
  "nl_tokens": [
   "markObjects",
   "finds",
   "all",
   "the",
   "live",
   "objects",
   "in",
   "the",
   "heap",
   "and",
   "marks",
   "them",
   "in",
   "the",
   "p",
   ".",
   "heapInfo",
   "mark",
   "fields",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "markObjects",
   "(",
   ")",
   "{",
   "ptrSize",
   ":=",
   "p",
   ".",
   "proc",
   ".",
   "PtrSize",
   "(",
   ")",
   "\n\n",
   "// number of live objects found so far",
   "n",
   ":=",
   "0",
   "\n",
   "// total size of live objects",
   "var",
   "live",
   "int64",
   "\n\n",
   "var",
   "q",
   "[",
   "]",
   "Object",
   "\n\n",
   "// Function to call when we find a new pointer.",
   "add",
   ":=",
   "func",
   "(",
   "x",
   "core",
   ".",
   "Address",
   ")",
   "{",
   "h",
   ":=",
   "p",
   ".",
   "findHeapInfo",
   "(",
   "x",
   ")",
   "\n",
   "if",
   "h",
   "==",
   "nil",
   "{",
   "// not in heap or not in a valid span",
   "// Invalid spans can happen with intra-stack pointers.",
   "return",
   "\n",
   "}",
   "\n",
   "// Round down to object start.",
   "x",
   "=",
   "h",
   ".",
   "base",
   ".",
   "Add",
   "(",
   "x",
   ".",
   "Sub",
   "(",
   "h",
   ".",
   "base",
   ")",
   "/",
   "h",
   ".",
   "size",
   "*",
   "h",
   ".",
   "size",
   ")",
   "\n",
   "// Object start may map to a different info. Reload heap info.",
   "h",
   "=",
   "p",
   ".",
   "findHeapInfo",
   "(",
   "x",
   ")",
   "\n",
   "// Find mark bit",
   "b",
   ":=",
   "uint64",
   "(",
   "x",
   ")",
   "%",
   "heapInfoSize",
   "/",
   "8",
   "\n",
   "if",
   "h",
   ".",
   "mark",
   "&",
   "(",
   "uint64",
   "(",
   "1",
   ")",
   "<<",
   "b",
   ")",
   "!=",
   "0",
   "{",
   "// already found",
   "return",
   "\n",
   "}",
   "\n",
   "h",
   ".",
   "mark",
   "|=",
   "uint64",
   "(",
   "1",
   ")",
   "<<",
   "b",
   "\n",
   "n",
   "++",
   "\n",
   "live",
   "+=",
   "h",
   ".",
   "size",
   "\n",
   "q",
   "=",
   "append",
   "(",
   "q",
   ",",
   "Object",
   "(",
   "x",
   ")",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Start with scanning all the roots.",
   "// Note that we don't just use the DWARF roots, just in case DWARF isn't complete.",
   "// Instead we use exactly what the runtime uses.",
   "// Goroutine roots",
   "for",
   "_",
   ",",
   "g",
   ":=",
   "range",
   "p",
   ".",
   "goroutines",
   "{",
   "for",
   "_",
   ",",
   "f",
   ":=",
   "range",
   "g",
   ".",
   "frames",
   "{",
   "for",
   "a",
   ":=",
   "range",
   "f",
   ".",
   "Live",
   "{",
   "add",
   "(",
   "p",
   ".",
   "proc",
   ".",
   "ReadPtr",
   "(",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Global roots",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "p",
   ".",
   "modules",
   "{",
   "for",
   "_",
   ",",
   "s",
   ":=",
   "range",
   "[",
   "2",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   "}",
   "{",
   "<mask>",
   ":=",
   "core",
   ".",
   "Address",
   "(",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "s",
   ")",
   ".",
   "Uintptr",
   "(",
   ")",
   ")",
   "\n",
   "max",
   ":=",
   "core",
   ".",
   "Address",
   "(",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   "+",
   "s",
   ")",
   ".",
   "Uintptr",
   "(",
   ")",
   ")",
   "\n",
   "gc",
   ":=",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   "+",
   "s",
   "+",
   "\"",
   "\"",
   ")",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   ")",
   ".",
   "Address",
   "(",
   ")",
   "\n",
   "num",
   ":=",
   "max",
   ".",
   "Sub",
   "(",
   "min",
   ")",
   "/",
   "ptrSize",
   "\n",
   "for",
   "i",
   ":=",
   "int64",
   "(",
   "0",
   ")",
   ";",
   "i",
   "<",
   "num",
   ";",
   "i",
   "++",
   "{",
   "if",
   "p",
   ".",
   "proc",
   ".",
   "ReadUint8",
   "(",
   "gc",
   ".",
   "Add",
   "(",
   "i",
   "/",
   "8",
   ")",
   ")",
   ">>",
   "uint",
   "(",
   "i",
   "%",
   "8",
   ")",
   "&",
   "1",
   "!=",
   "0",
   "{",
   "add",
   "(",
   "p",
   ".",
   "proc",
   ".",
   "ReadPtr",
   "(",
   "min",
   ".",
   "Add",
   "(",
   "i",
   "*",
   "ptrSize",
   ")",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Finalizers",
   "for",
   "_",
   ",",
   "r",
   ":=",
   "range",
   "p",
   ".",
   "globals",
   "{",
   "if",
   "!",
   "strings",
   ".",
   "HasPrefix",
   "(",
   "r",
   ".",
   "Name",
   ",",
   "\"",
   "\"",
   ")",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "f",
   ":=",
   "range",
   "r",
   ".",
   "Type",
   ".",
   "Fields",
   "{",
   "if",
   "f",
   ".",
   "Type",
   ".",
   "Kind",
   "==",
   "KindPtr",
   "{",
   "add",
   "(",
   "p",
   ".",
   "proc",
   ".",
   "ReadPtr",
   "(",
   "r",
   ".",
   "Addr",
   ".",
   "Add",
   "(",
   "f",
   ".",
   "Off",
   ")",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Expand root set to all reachable objects.",
   "for",
   "len",
   "(",
   "q",
   ")",
   ">",
   "0",
   "{",
   "x",
   ":=",
   "q",
   "[",
   "len",
   "(",
   "q",
   ")",
   "-",
   "1",
   "]",
   "\n",
   "q",
   "=",
   "q",
   "[",
   ":",
   "len",
   "(",
   "q",
   ")",
   "-",
   "1",
   "]",
   "\n\n",
   "// Scan object for pointers.",
   "size",
   ":=",
   "p",
   ".",
   "Size",
   "(",
   "x",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "int64",
   "(",
   "0",
   ")",
   ";",
   "i",
   "<",
   "size",
   ";",
   "i",
   "+=",
   "ptrSize",
   "{",
   "a",
   ":=",
   "core",
   ".",
   "Address",
   "(",
   "x",
   ")",
   ".",
   "Add",
   "(",
   "i",
   ")",
   "\n",
   "if",
   "p",
   ".",
   "isPtrFromHeap",
   "(",
   "a",
   ")",
   "{",
   "add",
   "(",
   "p",
   ".",
   "proc",
   ".",
   "ReadPtr",
   "(",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "p",
   ".",
   "nObj",
   "=",
   "n",
   "\n\n",
   "// Initialize firstIdx fields in the heapInfo, for fast object index lookups.",
   "n",
   "=",
   "0",
   "\n",
   "p",
   ".",
   "ForEachObject",
   "(",
   "func",
   "(",
   "x",
   "Object",
   ")",
   "bool",
   "{",
   "h",
   ":=",
   "p",
   ".",
   "findHeapInfo",
   "(",
   "p",
   ".",
   "Addr",
   "(",
   "x",
   ")",
   ")",
   "\n",
   "if",
   "h",
   ".",
   "firstIdx",
   "==",
   "-",
   "1",
   "{",
   "h",
   ".",
   "firstIdx",
   "=",
   "n",
   "\n",
   "}",
   "\n",
   "n",
   "++",
   "\n",
   "return",
   "true",
   "\n",
   "}",
   ")",
   "\n",
   "if",
   "n",
   "!=",
   "p",
   ".",
   "nObj",
   "{",
   "panic",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Update stats to include the live/garbage distinction.",
   "alloc",
   ":=",
   "p",
   ".",
   "Stats",
   "(",
   ")",
   ".",
   "Child",
   "(",
   "\"",
   "\"",
   ")",
   ".",
   "Child",
   "(",
   "\"",
   "\"",
   ")",
   ".",
   "Child",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "alloc",
   ".",
   "Children",
   "=",
   "[",
   "]",
   "*",
   "Stats",
   "{",
   "&",
   "Stats",
   "{",
   "\"",
   "\"",
   ",",
   "live",
   ",",
   "nil",
   "}",
   ",",
   "&",
   "Stats",
   "{",
   "\"",
   "\"",
   ",",
   "alloc",
   ".",
   "Size",
   "-",
   "live",
   ",",
   "nil",
   "}",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-99",
  "nl_tokens": [
   "serve",
   "runs",
   "the",
   "listener",
   "to",
   "accept",
   "and",
   "manage",
   "new",
   "incoming",
   "connections",
   "blocking",
   "until",
   "the",
   "channel",
   "is",
   "closed",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "ch",
   "*",
   "Channel",
   ")",
   "serve",
   "(",
   ")",
   "{",
   "acceptBackoff",
   ":=",
   "0",
   "*",
   "time",
   ".",
   "Millisecond",
   "\n\n",
   "for",
   "{",
   "netConn",
   ",",
   "err",
   ":=",
   "ch",
   ".",
   "mutable",
   ".",
   "l",
   ".",
   "Accept",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "// Backoff from new accepts if this is a temporary error",
   "if",
   "ne",
   ",",
   "ok",
   ":=",
   "err",
   ".",
   "(",
   "net",
   ".",
   "Error",
   ")",
   ";",
   "ok",
   "&&",
   "ne",
   ".",
   "Temporary",
   "(",
   ")",
   "{",
   "if",
   "acceptBackoff",
   "==",
   "0",
   "{",
   "acceptBackoff",
   "=",
   "5",
   "*",
   "time",
   ".",
   "Millisecond",
   "\n",
   "}",
   "else",
   "{",
   "acceptBackoff",
   "*=",
   "2",
   "\n",
   "}",
   "\n",
   "if",
   "<mask>",
   ":=",
   "1",
   "*",
   "time",
   ".",
   "Second",
   ";",
   "acceptBackoff",
   ">",
   "max",
   "{",
   "acceptBackoff",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "ch",
   ".",
   "log",
   ".",
   "WithFields",
   "(",
   "ErrField",
   "(",
   "err",
   ")",
   ",",
   "LogField",
   "{",
   "\"",
   "\"",
   ",",
   "acceptBackoff",
   "}",
   ",",
   ")",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "time",
   ".",
   "Sleep",
   "(",
   "acceptBackoff",
   ")",
   "\n",
   "continue",
   "\n",
   "}",
   "else",
   "{",
   "// Only log an error if this didn't happen due to a Close.",
   "if",
   "ch",
   ".",
   "State",
   "(",
   ")",
   ">=",
   "ChannelStartClose",
   "{",
   "return",
   "\n",
   "}",
   "\n",
   "ch",
   ".",
   "log",
   ".",
   "WithFields",
   "(",
   "ErrField",
   "(",
   "err",
   ")",
   ")",
   ".",
   "Fatal",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "acceptBackoff",
   "=",
   "0",
   "\n\n",
   "// Perform the connection handshake in a background goroutine.",
   "go",
   "func",
   "(",
   ")",
   "{",
   "// Register the connection in the peer once the channel is set up.",
   "events",
   ":=",
   "connectionEvents",
   "{",
   "OnActive",
   ":",
   "ch",
   ".",
   "inboundConnectionActive",
   ",",
   "OnCloseStateChange",
   ":",
   "ch",
   ".",
   "connectionCloseStateChange",
   ",",
   "OnExchangeUpdated",
   ":",
   "ch",
   ".",
   "exchangeUpdated",
   ",",
   "}",
   "\n",
   "if",
   "_",
   ",",
   "err",
   ":=",
   "ch",
   ".",
   "inboundHandshake",
   "(",
   "context",
   ".",
   "Background",
   "(",
   ")",
   ",",
   "netConn",
   ",",
   "events",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "netConn",
   ".",
   "Close",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-100",
  "nl_tokens": [
   "ParseUintHex",
   "parses",
   "a",
   "hexadecimanl",
   "representation",
   "of",
   "a",
   "uint64",
   "from",
   "b",
   ".",
   "The",
   "function",
   "is",
   "equivalent",
   "to",
   "calling",
   "strconv",
   ".",
   "ParseUint",
   "(",
   "string",
   "(",
   "b",
   ")",
   "16",
   "64",
   ")",
   "but",
   "it",
   "prevents",
   "Go",
   "from",
   "making",
   "a",
   "memory",
   "allocation",
   "for",
   "converting",
   "a",
   "byte",
   "slice",
   "to",
   "a",
   "string",
   "(",
   "escape",
   "analysis",
   "fails",
   "due",
   "to",
   "the",
   "error",
   "returned",
   "by",
   "strconv",
   ".",
   "ParseUint",
   ")",
   ".",
   "Because",
   "it",
   "only",
   "works",
   "with",
   "base",
   "16",
   "the",
   "function",
   "is",
   "also",
   "significantly",
   "faster",
   "than",
   "strconv",
   ".",
   "ParseUint",
   "."
  ],
  "pl_tokens": [
   "func",
   "ParseUintHex",
   "(",
   "b",
   "[",
   "]",
   "byte",
   ")",
   "(",
   "uint64",
   ",",
   "error",
   ")",
   "{",
   "const",
   "<mask>",
   "=",
   "Uint64Max",
   "\n",
   "const",
   "lim",
   "=",
   "max",
   "/",
   "0x10",
   "\n",
   "var",
   "val",
   "uint64",
   "\n\n",
   "if",
   "len",
   "(",
   "b",
   ")",
   "==",
   "0",
   "{",
   "return",
   "0",
   ",",
   "errorInvalidUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "for",
   "_",
   ",",
   "d",
   ":=",
   "range",
   "b",
   "{",
   "var",
   "x",
   "uint64",
   "\n\n",
   "switch",
   "{",
   "case",
   "d",
   ">=",
   "'0'",
   "&&",
   "d",
   "<=",
   "'9'",
   ":",
   "x",
   "=",
   "uint64",
   "(",
   "d",
   "-",
   "'0'",
   ")",
   "\n\n",
   "case",
   "d",
   ">=",
   "'A'",
   "&&",
   "d",
   "<=",
   "'F'",
   ":",
   "x",
   "=",
   "uint64",
   "(",
   "d",
   "-",
   "'A'",
   ")",
   "+",
   "0xA",
   "\n\n",
   "case",
   "d",
   ">=",
   "'a'",
   "&&",
   "d",
   "<=",
   "'f'",
   ":",
   "x",
   "=",
   "uint64",
   "(",
   "d",
   "-",
   "'a'",
   ")",
   "+",
   "0xA",
   "\n\n",
   "default",
   ":",
   "return",
   "0",
   ",",
   "errorInvalidUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "val",
   ">",
   "lim",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "val",
   "*=",
   "0x10",
   ";",
   "val",
   ">",
   "(",
   "max",
   "-",
   "x",
   ")",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "val",
   "+=",
   "x",
   "\n",
   "}",
   "\n\n",
   "return",
   "val",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-101",
  "nl_tokens": [
   "/",
   "*",
   "retrieve",
   "or",
   "set",
   "trackbar",
   "position"
  ],
  "pl_tokens": [
   "func",
   "(",
   "win",
   "*",
   "Window",
   ")",
   "GetTrackbarPos",
   "(",
   "name",
   "string",
   ")",
   "(",
   "value",
   ",",
   "<mask>",
   "int",
   ")",
   "{",
   "rv",
   ":=",
   "C",
   ".",
   "cvGetTrackbarPos",
   "(",
   "win",
   ".",
   "trackbarName",
   "[",
   "name",
   "]",
   ",",
   "win",
   ".",
   "name_c",
   ")",
   "\n",
   "return",
   "int",
   "(",
   "rv",
   ")",
   ",",
   "win",
   ".",
   "trackbarMax",
   "[",
   "name",
   "]",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-102",
  "nl_tokens": [
   "Update",
   "the",
   "min",
   "and",
   "max",
   "fields",
   "if",
   "value",
   "is",
   "less",
   "than",
   "or",
   "greater",
   "than",
   "the",
   "current",
   "min",
   "/",
   "max",
   "value",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "histogram",
   "*",
   "histogramData",
   ")",
   "Update",
   "(",
   "value",
   "int64",
   ")",
   "{",
   "if",
   "value",
   ">",
   "histogram",
   ".",
   "<mask>",
   "{",
   "histogram",
   ".",
   "max",
   "=",
   "value",
   "\n",
   "}",
   "\n",
   "if",
   "value",
   "<",
   "histogram",
   ".",
   "min",
   "{",
   "histogram",
   ".",
   "min",
   "=",
   "value",
   "\n",
   "}",
   "\n\n",
   "histogram",
   ".",
   "sum",
   "+=",
   "value",
   "\n",
   "histogram",
   ".",
   "totalCount",
   "++",
   "\n\n",
   "for",
   "index",
   ":=",
   "0",
   ";",
   "index",
   "<=",
   "len",
   "(",
   "histogram",
   ".",
   "bins",
   ")",
   ";",
   "index",
   "++",
   "{",
   "// Allocate value in the last buckets if we reached the end of the Bounds array.",
   "if",
   "index",
   "==",
   "len",
   "(",
   "histogram",
   ".",
   "bins",
   ")",
   "{",
   "histogram",
   ".",
   "countPerBin",
   "[",
   "index",
   "]",
   "++",
   "\n",
   "break",
   "\n",
   "}",
   "\n\n",
   "// Check if the value should be added to the \"index\" bin",
   "if",
   "value",
   "<",
   "int64",
   "(",
   "histogram",
   ".",
   "bins",
   "[",
   "index",
   "]",
   ")",
   "{",
   "histogram",
   ".",
   "countPerBin",
   "[",
   "index",
   "]",
   "++",
   "\n",
   "break",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-103",
  "nl_tokens": [
   "ReadUint32",
   "returns",
   "a",
   "uint32",
   "read",
   "from",
   "address",
   "a",
   "of",
   "the",
   "inferior",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadUint32",
   "(",
   "a",
   "Address",
   ")",
   "uint32",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "{",
   "panic",
   "(",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "b",
   ":=",
   "m",
   ".",
   "contents",
   "[",
   "a",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "<mask>",
   ")",
   ":",
   "]",
   "\n",
   "if",
   "len",
   "(",
   "b",
   ")",
   "<",
   "4",
   "{",
   "var",
   "buf",
   "[",
   "4",
   "]",
   "byte",
   "\n",
   "b",
   "=",
   "buf",
   "[",
   ":",
   "]",
   "\n",
   "p",
   ".",
   "ReadAt",
   "(",
   "b",
   ",",
   "a",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "p",
   ".",
   "littleEndian",
   "{",
   "return",
   "binary",
   ".",
   "LittleEndian",
   ".",
   "Uint32",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "binary",
   ".",
   "BigEndian",
   ".",
   "Uint32",
   "(",
   "b",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-104",
  "nl_tokens": [
   "NewThrottle",
   "creates",
   "a",
   "new",
   "throttle",
   "with",
   "a",
   "max",
   "number",
   "of",
   "workers",
   "."
  ],
  "pl_tokens": [
   "func",
   "NewThrottle",
   "(",
   "<mask>",
   "int",
   ")",
   "*",
   "Throttle",
   "{",
   "return",
   "&",
   "Throttle",
   "{",
   "ch",
   ":",
   "make",
   "(",
   "chan",
   "struct",
   "{",
   "}",
   ",",
   "max",
   ")",
   ",",
   "errCh",
   ":",
   "make",
   "(",
   "chan",
   "error",
   ",",
   "max",
   ")",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-105",
  "nl_tokens": [
   "ReadUint64",
   "returns",
   "a",
   "uint64",
   "read",
   "from",
   "address",
   "a",
   "of",
   "the",
   "inferior",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadUint64",
   "(",
   "a",
   "Address",
   ")",
   "uint64",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "{",
   "panic",
   "(",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "b",
   ":=",
   "m",
   ".",
   "contents",
   "[",
   "a",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "<mask>",
   ")",
   ":",
   "]",
   "\n",
   "if",
   "len",
   "(",
   "b",
   ")",
   "<",
   "8",
   "{",
   "var",
   "buf",
   "[",
   "8",
   "]",
   "byte",
   "\n",
   "b",
   "=",
   "buf",
   "[",
   ":",
   "]",
   "\n",
   "p",
   ".",
   "ReadAt",
   "(",
   "b",
   ",",
   "a",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "p",
   ".",
   "littleEndian",
   "{",
   "return",
   "binary",
   ".",
   "LittleEndian",
   ".",
   "Uint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "binary",
   ".",
   "BigEndian",
   ".",
   "Uint64",
   "(",
   "b",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-106",
  "nl_tokens": [
   "add",
   "records",
   "that",
   "PCs",
   "in",
   "the",
   "range",
   "[",
   "min",
   "max",
   ")",
   "map",
   "to",
   "function",
   "f",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "t",
   "*",
   "funcTab",
   ")",
   "add",
   "(",
   "<mask>",
   ",",
   "max",
   "core",
   ".",
   "Address",
   ",",
   "f",
   "*",
   "Func",
   ")",
   "{",
   "t",
   ".",
   "entries",
   "=",
   "append",
   "(",
   "t",
   ".",
   "entries",
   ",",
   "funcTabEntry",
   "{",
   "min",
   ":",
   "min",
   ",",
   "max",
   ":",
   "max",
   ",",
   "f",
   ":",
   "f",
   "}",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-107",
  "nl_tokens": [
   "insertStr",
   "inserts",
   "s",
   "into",
   "ss",
   "preserving",
   "sorting",
   "(",
   "it",
   "assumes",
   "that",
   "ss",
   "is",
   "sorted",
   ")",
   ".",
   "If",
   "a",
   "copy",
   "is",
   "necessary",
   "(",
   "because",
   "cap",
   "(",
   "ss",
   ")",
   "is",
   "too",
   "small",
   ")",
   "only",
   "does",
   "one",
   "copy",
   "(",
   "unlike",
   "append",
   "(",
   "append",
   "(",
   "ss",
   "[",
   ":",
   "idx",
   "]",
   "newS",
   ")",
   "ss",
   "[",
   "idx",
   ":",
   "]",
   "...",
   ")",
   ")",
   ".",
   "This",
   "is",
   "because",
   "directory",
   "nodes",
   "may",
   "include",
   "a",
   "large",
   "number",
   "of",
   "children",
   ".",
   "This",
   "is",
   "used",
   "to",
   "preserve",
   "the",
   "order",
   "in",
   "DirectoryNode",
   ".",
   "Children",
   "which",
   "must",
   "be",
   "maintained",
   "so",
   "that",
   "equivalent",
   "directories",
   "have",
   "the",
   "same",
   "hash",
   ".",
   "Returns",
   "true",
   "if",
   "newS",
   "was",
   "added",
   "to",
   "ss",
   "and",
   "false",
   "otherwise",
   "(",
   "if",
   "newS",
   "is",
   "already",
   "in",
   "ss",
   ")",
   "."
  ],
  "pl_tokens": [
   "func",
   "insertStr",
   "(",
   "ss",
   "*",
   "[",
   "]",
   "string",
   ",",
   "newS",
   "string",
   ")",
   "bool",
   "{",
   "sz",
   ":=",
   "cap",
   "(",
   "*",
   "ss",
   ")",
   "\n",
   "idx",
   ":=",
   "sort",
   ".",
   "SearchStrings",
   "(",
   "*",
   "ss",
   ",",
   "newS",
   ")",
   "\n",
   "if",
   "idx",
   ">=",
   "len",
   "(",
   "*",
   "ss",
   ")",
   "||",
   "(",
   "*",
   "ss",
   ")",
   "[",
   "idx",
   "]",
   "!=",
   "newS",
   "{",
   "// Need to insert new element",
   "if",
   "sz",
   ">=",
   "(",
   "len",
   "(",
   "*",
   "ss",
   ")",
   "+",
   "1",
   ")",
   "{",
   "*",
   "ss",
   "=",
   "(",
   "*",
   "ss",
   ")",
   "[",
   ":",
   "len",
   "(",
   "*",
   "ss",
   ")",
   "+",
   "1",
   "]",
   "\n",
   "copy",
   "(",
   "(",
   "*",
   "ss",
   ")",
   "[",
   "idx",
   "+",
   "1",
   ":",
   "]",
   ",",
   "(",
   "*",
   "ss",
   ")",
   "[",
   "idx",
   ":",
   "]",
   ")",
   "\n",
   "(",
   "*",
   "ss",
   ")",
   "[",
   "idx",
   "]",
   "=",
   "newS",
   "\n",
   "}",
   "else",
   "{",
   "// Need to grow ss (i.e. make a copy)",
   "// - Using a factor (instead of always adding a constant number of",
   "//   elements) ensures amortized constant time for insertions, and keeping",
   "//   it reasonably low avoids wasting too much space. Current value of",
   "//   1.33 is arbitrary.",
   "// - If sz is small, grow sz by at least a constant amount (must be >=1,",
   "//   currently 10)",
   "cap1",
   ",",
   "cap2",
   ":=",
   "int",
   "(",
   "float64",
   "(",
   "sz",
   ")",
   "*",
   "1.33",
   ")",
   ",",
   "sz",
   "+",
   "10",
   "\n",
   "newSs",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "string",
   ",",
   "len",
   "(",
   "*",
   "ss",
   ")",
   "+",
   "1",
   ",",
   "<mask>",
   "(",
   "cap1",
   ",",
   "cap2",
   ")",
   ")",
   "\n",
   "copy",
   "(",
   "newSs",
   ",",
   "(",
   "*",
   "ss",
   ")",
   "[",
   ":",
   "idx",
   "]",
   ")",
   "\n",
   "copy",
   "(",
   "newSs",
   "[",
   "idx",
   "+",
   "1",
   ":",
   "]",
   ",",
   "(",
   "*",
   "ss",
   ")",
   "[",
   "idx",
   ":",
   "]",
   ")",
   "\n",
   "newSs",
   "[",
   "idx",
   "]",
   "=",
   "newS",
   "\n",
   "*",
   "ss",
   "=",
   "newSs",
   "\n",
   "}",
   "\n",
   "return",
   "true",
   "\n",
   "}",
   "\n",
   "return",
   "false",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-108",
  "nl_tokens": [
   "Return",
   "the",
   "min",
   "/",
   "max",
   "frames",
   "from",
   "an",
   "unsorted",
   "list"
  ],
  "pl_tokens": [
   "func",
   "minMaxFrame",
   "(",
   "frames",
   "[",
   "]",
   "int",
   ")",
   "(",
   "int",
   ",",
   "int",
   ")",
   "{",
   "srcframes",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "int",
   ",",
   "len",
   "(",
   "frames",
   ")",
   ",",
   "len",
   "(",
   "frames",
   ")",
   ")",
   "\n",
   "copy",
   "(",
   "srcframes",
   ",",
   "frames",
   ")",
   "\n",
   "sort",
   ".",
   "Ints",
   "(",
   "srcframes",
   ")",
   "\n",
   "<mask>",
   ",",
   "max",
   ":=",
   "srcframes",
   "[",
   "0",
   "]",
   ",",
   "srcframes",
   "[",
   "len",
   "(",
   "srcframes",
   ")",
   "-",
   "1",
   "]",
   "\n",
   "return",
   "min",
   ",",
   "max",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-109",
  "nl_tokens": [
   "selectProject",
   "returns",
   "the",
   "user",
   "-",
   "selected",
   "project",
   "defaulting",
   "to",
   "the",
   "current",
   "gcloud",
   "one",
   "."
  ],
  "pl_tokens": [
   "func",
   "selectProject",
   "(",
   "choice",
   "string",
   ")",
   "(",
   "string",
   ",",
   "error",
   ")",
   "{",
   "fmt",
   ".",
   "Print",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "who",
   ",",
   "err",
   ":=",
   "currentAccount",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "logrus",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "return",
   "\"",
   "\"",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   "who",
   ")",
   "\n\n",
   "var",
   "projs",
   "[",
   "]",
   "string",
   "\n\n",
   "if",
   "choice",
   "==",
   "\"",
   "\"",
   "{",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\"",
   ",",
   "who",
   ")",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   ")",
   "\n",
   "const",
   "<mask>",
   "=",
   "20",
   "\n",
   "projs",
   ",",
   "err",
   "=",
   "projects",
   "(",
   "max",
   ")",
   "\n",
   "for",
   "_",
   ",",
   "proj",
   ":=",
   "range",
   "projs",
   "{",
   "fmt",
   ".",
   "Println",
   "(",
   "\"",
   "\"",
   ",",
   "proj",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\"",
   "\"",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "projs",
   ")",
   "==",
   "0",
   "{",
   "fmt",
   ".",
   "Println",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "return",
   "\"",
   "\"",
   ",",
   "errors",
   ".",
   "New",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "projs",
   ")",
   "==",
   "max",
   "{",
   "fmt",
   ".",
   "Println",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n\n",
   "def",
   ",",
   "err",
   ":=",
   "currentProject",
   "(",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\"",
   "\"",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\"",
   ",",
   "def",
   ")",
   "\n",
   "fmt",
   ".",
   "Scanln",
   "(",
   "&",
   "choice",
   ")",
   "\n\n",
   "// use default project",
   "if",
   "choice",
   "==",
   "\"",
   "\"",
   "{",
   "return",
   "def",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "// is this a project from the list?",
   "for",
   "_",
   ",",
   "p",
   ":=",
   "range",
   "projs",
   "{",
   "if",
   "p",
   "==",
   "choice",
   "{",
   "return",
   "choice",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "fmt",
   ".",
   "Printf",
   "(",
   "\"",
   "\"",
   ",",
   "who",
   ",",
   "choice",
   ")",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   ")",
   "\n\n",
   "// no, make sure user has access to it",
   "if",
   "err",
   "=",
   "exec",
   ".",
   "Command",
   "(",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "choice",
   ")",
   ".",
   "Run",
   "(",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\"",
   "\"",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "who",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n\n",
   "return",
   "choice",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-110",
  "nl_tokens": [
   "process",
   "is",
   "used",
   "to",
   "process",
   "the",
   "Mark",
   "channel",
   ".",
   "This",
   "is",
   "not",
   "thread",
   "-",
   "safe",
   "so",
   "only",
   "run",
   "one",
   "goroutine",
   "for",
   "process",
   ".",
   "One",
   "is",
   "sufficient",
   "because",
   "all",
   "goroutine",
   "ops",
   "use",
   "purely",
   "memory",
   "and",
   "cpu",
   ".",
   "Each",
   "index",
   "has",
   "to",
   "emit",
   "atleast",
   "one",
   "begin",
   "watermark",
   "in",
   "serial",
   "order",
   "otherwise",
   "waiters",
   "can",
   "get",
   "blocked",
   "idefinitely",
   ".",
   "Example",
   ":",
   "We",
   "had",
   "an",
   "watermark",
   "at",
   "100",
   "and",
   "a",
   "waiter",
   "at",
   "101",
   "if",
   "no",
   "watermark",
   "is",
   "emitted",
   "at",
   "index",
   "101",
   "then",
   "waiter",
   "would",
   "get",
   "stuck",
   "indefinitely",
   "as",
   "it",
   "can",
   "t",
   "decide",
   "whether",
   "the",
   "task",
   "at",
   "101",
   "has",
   "decided",
   "not",
   "to",
   "emit",
   "watermark",
   "or",
   "it",
   "didn",
   "t",
   "get",
   "scheduled",
   "yet",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "w",
   "*",
   "WaterMark",
   ")",
   "process",
   "(",
   "closer",
   "*",
   "Closer",
   ")",
   "{",
   "defer",
   "closer",
   ".",
   "Done",
   "(",
   ")",
   "\n\n",
   "var",
   "indices",
   "uint64Heap",
   "\n",
   "// pending maps raft proposal index to the number of pending mutations for this proposal.",
   "pending",
   ":=",
   "make",
   "(",
   "map",
   "[",
   "uint64",
   "]",
   "int",
   ")",
   "\n",
   "waiters",
   ":=",
   "make",
   "(",
   "map",
   "[",
   "uint64",
   "]",
   "[",
   "]",
   "chan",
   "struct",
   "{",
   "}",
   ")",
   "\n\n",
   "heap",
   ".",
   "Init",
   "(",
   "&",
   "indices",
   ")",
   "\n",
   "var",
   "loop",
   "uint64",
   "\n\n",
   "processOne",
   ":=",
   "func",
   "(",
   "index",
   "uint64",
   ",",
   "done",
   "bool",
   ")",
   "{",
   "// If not already done, then set. Otherwise, don't undo a done entry.",
   "prev",
   ",",
   "present",
   ":=",
   "pending",
   "[",
   "index",
   "]",
   "\n",
   "if",
   "!",
   "present",
   "{",
   "heap",
   ".",
   "Push",
   "(",
   "&",
   "indices",
   ",",
   "index",
   ")",
   "\n",
   "}",
   "\n\n",
   "delta",
   ":=",
   "1",
   "\n",
   "if",
   "done",
   "{",
   "delta",
   "=",
   "-",
   "1",
   "\n",
   "}",
   "\n",
   "pending",
   "[",
   "index",
   "]",
   "=",
   "prev",
   "+",
   "delta",
   "\n\n",
   "loop",
   "++",
   "\n",
   "if",
   "len",
   "(",
   "indices",
   ")",
   ">",
   "0",
   "&&",
   "loop",
   "%",
   "10000",
   "==",
   "0",
   "{",
   "<mask>",
   ":=",
   "indices",
   "[",
   "0",
   "]",
   "\n",
   "w",
   ".",
   "elog",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "w",
   ".",
   "Name",
   ",",
   "index",
   ",",
   "len",
   "(",
   "indices",
   ")",
   ",",
   "w",
   ".",
   "DoneUntil",
   "(",
   ")",
   ",",
   "min",
   ",",
   "pending",
   "[",
   "min",
   "]",
   ")",
   "\n",
   "}",
   "\n\n",
   "// Update mark by going through all indices in order; and checking if they have",
   "// been done. Stop at the first index, which isn't done.",
   "doneUntil",
   ":=",
   "w",
   ".",
   "DoneUntil",
   "(",
   ")",
   "\n",
   "if",
   "doneUntil",
   ">",
   "index",
   "{",
   "AssertTruef",
   "(",
   "false",
   ",",
   "\"",
   "\"",
   ",",
   "w",
   ".",
   "Name",
   ",",
   "doneUntil",
   ",",
   "index",
   ")",
   "\n",
   "}",
   "\n\n",
   "until",
   ":=",
   "doneUntil",
   "\n",
   "loops",
   ":=",
   "0",
   "\n\n",
   "for",
   "len",
   "(",
   "indices",
   ")",
   ">",
   "0",
   "{",
   "min",
   ":=",
   "indices",
   "[",
   "0",
   "]",
   "\n",
   "if",
   "done",
   ":=",
   "pending",
   "[",
   "min",
   "]",
   ";",
   "done",
   ">",
   "0",
   "{",
   "break",
   "// len(indices) will be > 0.",
   "\n",
   "}",
   "\n",
   "// Even if done is called multiple times causing it to become",
   "// negative, we should still pop the index.",
   "heap",
   ".",
   "Pop",
   "(",
   "&",
   "indices",
   ")",
   "\n",
   "delete",
   "(",
   "pending",
   ",",
   "min",
   ")",
   "\n",
   "until",
   "=",
   "min",
   "\n",
   "loops",
   "++",
   "\n",
   "}",
   "\n",
   "for",
   "i",
   ":=",
   "doneUntil",
   "+",
   "1",
   ";",
   "i",
   "<=",
   "until",
   ";",
   "i",
   "++",
   "{",
   "toNotify",
   ":=",
   "waiters",
   "[",
   "i",
   "]",
   "\n",
   "for",
   "_",
   ",",
   "ch",
   ":=",
   "range",
   "toNotify",
   "{",
   "close",
   "(",
   "ch",
   ")",
   "\n",
   "}",
   "\n",
   "delete",
   "(",
   "waiters",
   ",",
   "i",
   ")",
   "// Release the memory back.",
   "\n",
   "}",
   "\n",
   "if",
   "until",
   "!=",
   "doneUntil",
   "{",
   "AssertTrue",
   "(",
   "atomic",
   ".",
   "CompareAndSwapUint64",
   "(",
   "&",
   "w",
   ".",
   "doneUntil",
   ",",
   "doneUntil",
   ",",
   "until",
   ")",
   ")",
   "\n",
   "w",
   ".",
   "elog",
   ".",
   "Printf",
   "(",
   "\"",
   "\\n",
   "\"",
   ",",
   "w",
   ".",
   "Name",
   ",",
   "until",
   ",",
   "loops",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "for",
   "{",
   "select",
   "{",
   "case",
   "<-",
   "closer",
   ".",
   "HasBeenClosed",
   "(",
   ")",
   ":",
   "return",
   "\n",
   "case",
   "mark",
   ":=",
   "<-",
   "w",
   ".",
   "markCh",
   ":",
   "if",
   "mark",
   ".",
   "waiter",
   "!=",
   "nil",
   "{",
   "doneUntil",
   ":=",
   "atomic",
   ".",
   "LoadUint64",
   "(",
   "&",
   "w",
   ".",
   "doneUntil",
   ")",
   "\n",
   "if",
   "doneUntil",
   ">=",
   "mark",
   ".",
   "index",
   "{",
   "close",
   "(",
   "mark",
   ".",
   "waiter",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "ws",
   ",",
   "ok",
   ":=",
   "waiters",
   "[",
   "mark",
   ".",
   "index",
   "]",
   "\n",
   "if",
   "!",
   "ok",
   "{",
   "waiters",
   "[",
   "mark",
   ".",
   "index",
   "]",
   "=",
   "[",
   "]",
   "chan",
   "struct",
   "{",
   "}",
   "{",
   "mark",
   ".",
   "waiter",
   "}",
   "\n",
   "}",
   "else",
   "{",
   "waiters",
   "[",
   "mark",
   ".",
   "index",
   "]",
   "=",
   "append",
   "(",
   "ws",
   ",",
   "mark",
   ".",
   "waiter",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "else",
   "{",
   "if",
   "mark",
   ".",
   "index",
   ">",
   "0",
   "{",
   "processOne",
   "(",
   "mark",
   ".",
   "index",
   ",",
   "mark",
   ".",
   "done",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "index",
   ":=",
   "range",
   "mark",
   ".",
   "indices",
   "{",
   "processOne",
   "(",
   "index",
   ",",
   "mark",
   ".",
   "done",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-111",
  "nl_tokens": [
   "RuntimeLiblxcVersionAtLeast",
   "checks",
   "if",
   "the",
   "system",
   "s",
   "liblxc",
   "matches",
   "the",
   "provided",
   "version",
   "requirement"
  ],
  "pl_tokens": [
   "func",
   "RuntimeLiblxcVersionAtLeast",
   "(",
   "major",
   "int",
   ",",
   "minor",
   "int",
   ",",
   "micro",
   "int",
   ")",
   "bool",
   "{",
   "version",
   ":=",
   "golxc",
   ".",
   "Version",
   "(",
   ")",
   "\n",
   "version",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "version",
   ",",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   ",",
   "1",
   ")",
   "\n",
   "parts",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "version",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "partsLen",
   ":=",
   "len",
   "(",
   "parts",
   ")",
   "\n",
   "if",
   "partsLen",
   "==",
   "0",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "develParts",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "parts",
   "[",
   "partsLen",
   "-",
   "1",
   "]",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "develParts",
   ")",
   "==",
   "2",
   "&&",
   "develParts",
   "[",
   "1",
   "]",
   "==",
   "\"",
   "\"",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "maj",
   ":=",
   "-",
   "1",
   "\n",
   "<mask>",
   ":=",
   "-",
   "1",
   "\n",
   "mic",
   ":=",
   "-",
   "1",
   "\n\n",
   "for",
   "i",
   ",",
   "v",
   ":=",
   "range",
   "parts",
   "{",
   "if",
   "i",
   ">",
   "2",
   "{",
   "break",
   "\n",
   "}",
   "\n\n",
   "num",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "v",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "switch",
   "i",
   "{",
   "case",
   "0",
   ":",
   "maj",
   "=",
   "num",
   "\n",
   "case",
   "1",
   ":",
   "min",
   "=",
   "num",
   "\n",
   "case",
   "2",
   ":",
   "mic",
   "=",
   "num",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "/* Major version is greater. */",
   "if",
   "maj",
   ">",
   "major",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "if",
   "maj",
   "<",
   "major",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "/* Minor number is greater.*/",
   "if",
   "min",
   ">",
   "minor",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "if",
   "min",
   "<",
   "minor",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "/* Patch number is greater. */",
   "if",
   "mic",
   ">",
   "micro",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "if",
   "mic",
   "<",
   "micro",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-112",
  "nl_tokens": [
   "replicateTo",
   "is",
   "a",
   "helper",
   "to",
   "replicate",
   "()",
   "used",
   "to",
   "replicate",
   "the",
   "logs",
   "up",
   "to",
   "a",
   "given",
   "last",
   "index",
   ".",
   "If",
   "the",
   "follower",
   "log",
   "is",
   "behind",
   "we",
   "take",
   "care",
   "to",
   "bring",
   "them",
   "up",
   "to",
   "date",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "Raft",
   ")",
   "replicateTo",
   "(",
   "s",
   "*",
   "followerReplication",
   ",",
   "lastIndex",
   "uint64",
   ")",
   "(",
   "shouldStop",
   "bool",
   ")",
   "{",
   "// Create the base request",
   "var",
   "req",
   "AppendEntriesRequest",
   "\n",
   "var",
   "resp",
   "AppendEntriesResponse",
   "\n",
   "var",
   "start",
   "time",
   ".",
   "Time",
   "\n",
   "START",
   ":",
   "// Prevent an excessive retry rate on errors",
   "if",
   "s",
   ".",
   "failures",
   ">",
   "0",
   "{",
   "select",
   "{",
   "case",
   "<-",
   "time",
   ".",
   "After",
   "(",
   "backoff",
   "(",
   "failureWait",
   ",",
   "s",
   ".",
   "failures",
   ",",
   "maxFailureScale",
   ")",
   ")",
   ":",
   "case",
   "<-",
   "r",
   ".",
   "shutdownCh",
   ":",
   "}",
   "\n",
   "}",
   "\n\n",
   "// Setup the request",
   "if",
   "err",
   ":=",
   "r",
   ".",
   "setupAppendEntries",
   "(",
   "s",
   ",",
   "&",
   "req",
   ",",
   "s",
   ".",
   "nextIndex",
   ",",
   "lastIndex",
   ")",
   ";",
   "err",
   "==",
   "ErrLogNotFound",
   "{",
   "goto",
   "SEND_SNAP",
   "\n",
   "}",
   "else",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "\n",
   "}",
   "\n\n",
   "// Make the RPC call",
   "start",
   "=",
   "time",
   ".",
   "Now",
   "(",
   ")",
   "\n",
   "if",
   "err",
   ":=",
   "r",
   ".",
   "trans",
   ".",
   "AppendEntries",
   "(",
   "s",
   ".",
   "peer",
   ".",
   "ID",
   ",",
   "s",
   ".",
   "peer",
   ".",
   "Address",
   ",",
   "&",
   "req",
   ",",
   "&",
   "resp",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "r",
   ".",
   "logger",
   ".",
   "Error",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "s",
   ".",
   "peer",
   ",",
   "err",
   ")",
   ")",
   "\n",
   "s",
   ".",
   "failures",
   "++",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "appendStats",
   "(",
   "string",
   "(",
   "s",
   ".",
   "peer",
   ".",
   "ID",
   ")",
   ",",
   "start",
   ",",
   "float32",
   "(",
   "len",
   "(",
   "req",
   ".",
   "Entries",
   ")",
   ")",
   ")",
   "\n\n",
   "// Check for a newer term, stop running",
   "if",
   "resp",
   ".",
   "Term",
   ">",
   "req",
   ".",
   "Term",
   "{",
   "r",
   ".",
   "handleStaleTerm",
   "(",
   "s",
   ")",
   "\n",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "// Update the last contact",
   "s",
   ".",
   "setLastContact",
   "(",
   ")",
   "\n\n",
   "// Update s based on success",
   "if",
   "resp",
   ".",
   "Success",
   "{",
   "// Update our replication state",
   "updateLastAppended",
   "(",
   "s",
   ",",
   "&",
   "req",
   ")",
   "\n\n",
   "// Clear any failures, allow pipelining",
   "s",
   ".",
   "failures",
   "=",
   "0",
   "\n",
   "s",
   ".",
   "allowPipeline",
   "=",
   "true",
   "\n",
   "}",
   "else",
   "{",
   "s",
   ".",
   "nextIndex",
   "=",
   "<mask>",
   "(",
   "min",
   "(",
   "s",
   ".",
   "nextIndex",
   "-",
   "1",
   ",",
   "resp",
   ".",
   "LastLog",
   "+",
   "1",
   ")",
   ",",
   "1",
   ")",
   "\n",
   "if",
   "resp",
   ".",
   "NoRetryBackoff",
   "{",
   "s",
   ".",
   "failures",
   "=",
   "0",
   "\n",
   "}",
   "else",
   "{",
   "s",
   ".",
   "failures",
   "++",
   "\n",
   "}",
   "\n",
   "r",
   ".",
   "logger",
   ".",
   "Warn",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "s",
   ".",
   "peer",
   ",",
   "s",
   ".",
   "nextIndex",
   ")",
   ")",
   "\n",
   "}",
   "\n\n",
   "CHECK_MORE",
   ":",
   "// Poll the stop channel here in case we are looping and have been asked",
   "// to stop, or have stepped down as leader. Even for the best effort case",
   "// where we are asked to replicate to a given index and then shutdown,",
   "// it's better to not loop in here to send lots of entries to a straggler",
   "// that's leaving the cluster anyways.",
   "select",
   "{",
   "case",
   "<-",
   "s",
   ".",
   "stopCh",
   ":",
   "return",
   "true",
   "\n",
   "default",
   ":",
   "}",
   "\n\n",
   "// Check if there are more logs to replicate",
   "if",
   "s",
   ".",
   "nextIndex",
   "<=",
   "lastIndex",
   "{",
   "goto",
   "START",
   "\n",
   "}",
   "\n",
   "return",
   "\n\n",
   "// SEND_SNAP is used when we fail to get a log, usually because the follower",
   "// is too far behind, and we must ship a snapshot down instead",
   "SEND_SNAP",
   ":",
   "if",
   "stop",
   ",",
   "err",
   ":=",
   "r",
   ".",
   "sendLatestSnapshot",
   "(",
   "s",
   ")",
   ";",
   "stop",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "else",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "r",
   ".",
   "logger",
   ".",
   "Error",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "s",
   ".",
   "peer",
   ",",
   "err",
   ")",
   ")",
   "\n",
   "return",
   "\n",
   "}",
   "\n\n",
   "// Check if there is more to replicate",
   "goto",
   "CHECK_MORE",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-113",
  "nl_tokens": [
   "NewPerfDatum",
   "returns",
   "a",
   "PerfDatum",
   "object",
   "suitable",
   "to",
   "use",
   "in",
   "a",
   "check",
   "result",
   ".",
   "unit",
   "must",
   "a",
   "valid",
   "Nagios",
   "unit",
   "i",
   ".",
   "e",
   ".",
   "one",
   "of",
   "us",
   "ms",
   "s",
   "%",
   "b",
   "kb",
   "mb",
   "gb",
   "tb",
   "c",
   "or",
   "the",
   "empty",
   "string",
   ".",
   "Zero",
   "to",
   "four",
   "thresholds",
   "may",
   "be",
   "supplied",
   ":",
   "min",
   "max",
   "warn",
   "and",
   "crit",
   ".",
   "Thresholds",
   "may",
   "be",
   "positive",
   "infinity",
   "negative",
   "infinity",
   "or",
   "NaN",
   "in",
   "which",
   "case",
   "they",
   "will",
   "be",
   "omitted",
   "in",
   "check",
   "output",
   "."
  ],
  "pl_tokens": [
   "func",
   "NewPerfDatum",
   "(",
   "label",
   "string",
   ",",
   "unit",
   "string",
   ",",
   "value",
   "float64",
   ",",
   "thresholds",
   "...",
   "float64",
   ")",
   "(",
   "*",
   "PerfDatum",
   ",",
   "error",
   ")",
   "{",
   "datum",
   ":=",
   "new",
   "(",
   "PerfDatum",
   ")",
   "\n",
   "datum",
   ".",
   "label",
   "=",
   "label",
   "\n",
   "datum",
   ".",
   "value",
   "=",
   "value",
   "\n",
   "datum",
   ".",
   "unit",
   "=",
   "unit",
   "\n",
   "if",
   "!",
   "validUnit",
   "(",
   "unit",
   ")",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "unit",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "math",
   ".",
   "IsInf",
   "(",
   "value",
   ",",
   "0",
   ")",
   "||",
   "math",
   ".",
   "IsNaN",
   "(",
   "value",
   ")",
   "{",
   "return",
   "nil",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "value",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "thresholds",
   ")",
   ">=",
   "1",
   "{",
   "datum",
   ".",
   "<mask>",
   "=",
   "&",
   "thresholds",
   "[",
   "0",
   "]",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "thresholds",
   ")",
   ">=",
   "2",
   "{",
   "datum",
   ".",
   "max",
   "=",
   "&",
   "thresholds",
   "[",
   "1",
   "]",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "thresholds",
   ")",
   ">=",
   "3",
   "{",
   "datum",
   ".",
   "warn",
   "=",
   "&",
   "thresholds",
   "[",
   "2",
   "]",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "thresholds",
   ")",
   ">=",
   "4",
   "{",
   "datum",
   ".",
   "crit",
   "=",
   "&",
   "thresholds",
   "[",
   "3",
   "]",
   "\n",
   "}",
   "\n",
   "return",
   "datum",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-114",
  "nl_tokens": [
   "maybeAppend",
   "returns",
   "(",
   "0",
   "false",
   ")",
   "if",
   "the",
   "entries",
   "cannot",
   "be",
   "appended",
   ".",
   "Otherwise",
   "it",
   "returns",
   "(",
   "last",
   "index",
   "of",
   "new",
   "entries",
   "true",
   ")",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "raftLog",
   ")",
   "maybeAppend",
   "(",
   "index",
   ",",
   "logTerm",
   ",",
   "committed",
   "uint64",
   ",",
   "ents",
   "...",
   "pb",
   ".",
   "Entry",
   ")",
   "(",
   "lastnewi",
   "uint64",
   ",",
   "ok",
   "bool",
   ")",
   "{",
   "if",
   "l",
   ".",
   "matchTerm",
   "(",
   "index",
   ",",
   "logTerm",
   ")",
   "{",
   "lastnewi",
   "=",
   "index",
   "+",
   "uint64",
   "(",
   "len",
   "(",
   "ents",
   ")",
   ")",
   "\n",
   "ci",
   ":=",
   "l",
   ".",
   "findConflict",
   "(",
   "ents",
   ")",
   "\n",
   "switch",
   "{",
   "case",
   "ci",
   "==",
   "0",
   ":",
   "case",
   "ci",
   "<=",
   "l",
   ".",
   "committed",
   ":",
   "l",
   ".",
   "logger",
   ".",
   "Panicf",
   "(",
   "\"",
   "\"",
   ",",
   "ci",
   ",",
   "l",
   ".",
   "committed",
   ")",
   "\n",
   "default",
   ":",
   "offset",
   ":=",
   "index",
   "+",
   "1",
   "\n",
   "l",
   ".",
   "append",
   "(",
   "ents",
   "[",
   "ci",
   "-",
   "offset",
   ":",
   "]",
   "...",
   ")",
   "\n",
   "}",
   "\n",
   "l",
   ".",
   "commitTo",
   "(",
   "<mask>",
   "(",
   "committed",
   ",",
   "lastnewi",
   ")",
   ")",
   "\n",
   "return",
   "lastnewi",
   ",",
   "true",
   "\n",
   "}",
   "\n",
   "return",
   "0",
   ",",
   "false",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-115",
  "nl_tokens": [
   "Return",
   "a",
   "slice",
   "of",
   "w",
   ".",
   "RS",
   "allowing",
   "the",
   "start",
   "and",
   "stop",
   "to",
   "be",
   "out",
   "of",
   "bounds",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "w",
   "*",
   "SnowballWord",
   ")",
   "slice",
   "(",
   "start",
   ",",
   "stop",
   "int",
   ")",
   "[",
   "]",
   "rune",
   "{",
   "startMin",
   ":=",
   "0",
   "\n",
   "if",
   "start",
   "<",
   "startMin",
   "{",
   "start",
   "=",
   "startMin",
   "\n",
   "}",
   "\n",
   "<mask>",
   ":=",
   "len",
   "(",
   "w",
   ".",
   "RS",
   ")",
   "-",
   "1",
   "\n",
   "if",
   "start",
   ">",
   "max",
   "{",
   "start",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "if",
   "stop",
   ">",
   "max",
   "{",
   "stop",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "return",
   "w",
   ".",
   "RS",
   "[",
   "start",
   ":",
   "stop",
   "]",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-116",
  "nl_tokens": [
   "All",
   "the",
   "Read",
   "*",
   "functions",
   "below",
   "will",
   "panic",
   "if",
   "something",
   "goes",
   "wrong",
   ".",
   "ReadAt",
   "reads",
   "len",
   "(",
   "b",
   ")",
   "bytes",
   "at",
   "address",
   "a",
   "in",
   "the",
   "inferior",
   "and",
   "stores",
   "them",
   "in",
   "b",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadAt",
   "(",
   "b",
   "[",
   "]",
   "byte",
   ",",
   "a",
   "Address",
   ")",
   "{",
   "for",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "{",
   "panic",
   "(",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "n",
   ":=",
   "copy",
   "(",
   "b",
   ",",
   "m",
   ".",
   "contents",
   "[",
   "a",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "<mask>",
   ")",
   ":",
   "]",
   ")",
   "\n",
   "if",
   "n",
   "==",
   "len",
   "(",
   "b",
   ")",
   "{",
   "return",
   "\n",
   "}",
   "\n",
   "// Modify request to get data from the next mapping.",
   "b",
   "=",
   "b",
   "[",
   "n",
   ":",
   "]",
   "\n",
   "a",
   "=",
   "a",
   ".",
   "Add",
   "(",
   "int64",
   "(",
   "n",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-117",
  "nl_tokens": [
   "sort",
   "must",
   "be",
   "called",
   "after",
   "all",
   "the",
   "adds",
   "but",
   "before",
   "any",
   "find",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "t",
   "*",
   "funcTab",
   ")",
   "sort",
   "(",
   ")",
   "{",
   "sort",
   ".",
   "Slice",
   "(",
   "t",
   ".",
   "entries",
   ",",
   "func",
   "(",
   "i",
   ",",
   "j",
   "int",
   ")",
   "bool",
   "{",
   "return",
   "t",
   ".",
   "entries",
   "[",
   "i",
   "]",
   ".",
   "<mask>",
   "<",
   "t",
   ".",
   "entries",
   "[",
   "j",
   "]",
   ".",
   "min",
   "\n",
   "}",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-118",
  "nl_tokens": [
   "ValidateLength",
   "checks",
   "whether",
   "the",
   "given",
   "data",
   "match",
   "the",
   "given",
   "rules",
   ".",
   "It",
   "checks",
   "if",
   "the",
   "value",
   "has",
   "more",
   "or",
   "equal",
   "min",
   "chars",
   "and",
   "less",
   "or",
   "equal",
   "max",
   "chars",
   ".",
   "If",
   "you",
   "don",
   "t",
   "want",
   "to",
   "check",
   "both",
   "just",
   "pass",
   "a",
   "zero",
   "value",
   ":",
   "ValidateLength",
   "(",
   "value",
   "0",
   "100",
   ")",
   "//",
   "Checks",
   "if",
   "value",
   "has",
   "at",
   "most",
   "100",
   "characters",
   "ValidateLength",
   "(",
   "value",
   "100",
   "0",
   ")",
   "//",
   "Checks",
   "if",
   "value",
   "has",
   "at",
   "least",
   "100",
   "characters",
   "ValidateLength",
   "(",
   "value",
   "20",
   "100",
   ")",
   "//",
   "Checks",
   "if",
   "value",
   "has",
   "at",
   "least",
   "20",
   "characters",
   "and",
   "at",
   "most",
   "100",
   "characters"
  ],
  "pl_tokens": [
   "func",
   "ValidateLength",
   "(",
   "value",
   "string",
   ",",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "bool",
   "{",
   "l",
   ":=",
   "len",
   "(",
   "value",
   ")",
   "\n",
   "if",
   "min",
   ">",
   "0",
   "&&",
   "l",
   "<",
   "min",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "if",
   "max",
   ">",
   "0",
   "&&",
   "l",
   ">",
   "max",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-119",
  "nl_tokens": [
   "NewDottedVersion",
   "returns",
   "a",
   "new",
   "Version",
   "."
  ],
  "pl_tokens": [
   "func",
   "NewDottedVersion",
   "(",
   "versionString",
   "string",
   ")",
   "(",
   "*",
   "DottedVersion",
   ",",
   "error",
   ")",
   "{",
   "formatError",
   ":=",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "versionString",
   ")",
   "\n",
   "split",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "versionString",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "split",
   ")",
   "<",
   "2",
   "{",
   "return",
   "nil",
   ",",
   "formatError",
   "\n",
   "}",
   "\n\n",
   "maj",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "split",
   "[",
   "0",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "formatError",
   "\n",
   "}",
   "\n\n",
   "<mask>",
   ",",
   "err",
   ":=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "split",
   "[",
   "1",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "formatError",
   "\n",
   "}",
   "\n\n",
   "patch",
   ":=",
   "-",
   "1",
   "\n",
   "if",
   "len",
   "(",
   "split",
   ")",
   "==",
   "3",
   "{",
   "patch",
   ",",
   "err",
   "=",
   "strconv",
   ".",
   "Atoi",
   "(",
   "split",
   "[",
   "2",
   "]",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "formatError",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "&",
   "DottedVersion",
   "{",
   "Major",
   ":",
   "maj",
   ",",
   "Minor",
   ":",
   "min",
   ",",
   "Patch",
   ":",
   "patch",
   ",",
   "}",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-120",
  "nl_tokens": [
   "ParseInt",
   "parses",
   "a",
   "decimanl",
   "representation",
   "of",
   "an",
   "int64",
   "from",
   "b",
   ".",
   "The",
   "function",
   "is",
   "equivalent",
   "to",
   "calling",
   "strconv",
   ".",
   "ParseInt",
   "(",
   "string",
   "(",
   "b",
   ")",
   "10",
   "64",
   ")",
   "but",
   "it",
   "prevents",
   "Go",
   "from",
   "making",
   "a",
   "memory",
   "allocation",
   "for",
   "converting",
   "a",
   "byte",
   "slice",
   "to",
   "a",
   "string",
   "(",
   "escape",
   "analysis",
   "fails",
   "due",
   "to",
   "the",
   "error",
   "returned",
   "by",
   "strconv",
   ".",
   "ParseInt",
   ")",
   ".",
   "Because",
   "it",
   "only",
   "works",
   "with",
   "base",
   "10",
   "the",
   "function",
   "is",
   "also",
   "significantly",
   "faster",
   "than",
   "strconv",
   ".",
   "ParseInt",
   "."
  ],
  "pl_tokens": [
   "func",
   "ParseInt",
   "(",
   "b",
   "[",
   "]",
   "byte",
   ")",
   "(",
   "int64",
   ",",
   "error",
   ")",
   "{",
   "var",
   "val",
   "int64",
   "\n\n",
   "if",
   "len",
   "(",
   "b",
   ")",
   "==",
   "0",
   "{",
   "return",
   "0",
   ",",
   "errorInvalidUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "b",
   "[",
   "0",
   "]",
   "==",
   "'-'",
   "{",
   "const",
   "<mask>",
   "=",
   "Int64Min",
   "\n",
   "const",
   "lim",
   "=",
   "max",
   "/",
   "10",
   "\n\n",
   "if",
   "b",
   "=",
   "b",
   "[",
   "1",
   ":",
   "]",
   ";",
   "len",
   "(",
   "b",
   ")",
   "==",
   "0",
   "{",
   "return",
   "0",
   ",",
   "errorInvalidUint64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "for",
   "_",
   ",",
   "d",
   ":=",
   "range",
   "b",
   "{",
   "if",
   "!",
   "(",
   "d",
   ">=",
   "'0'",
   "&&",
   "d",
   "<=",
   "'9'",
   ")",
   "{",
   "return",
   "0",
   ",",
   "errorInvalidInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "val",
   "<",
   "lim",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "val",
   "*=",
   "10",
   "\n",
   "x",
   ":=",
   "int64",
   "(",
   "d",
   "-",
   "'0'",
   ")",
   "\n\n",
   "if",
   "val",
   "<",
   "(",
   "max",
   "+",
   "x",
   ")",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "val",
   "-=",
   "x",
   "\n",
   "}",
   "\n",
   "}",
   "else",
   "{",
   "const",
   "max",
   "=",
   "Int64Max",
   "\n",
   "const",
   "lim",
   "=",
   "max",
   "/",
   "10",
   "\n\n",
   "for",
   "_",
   ",",
   "d",
   ":=",
   "range",
   "b",
   "{",
   "if",
   "!",
   "(",
   "d",
   ">=",
   "'0'",
   "&&",
   "d",
   "<=",
   "'9'",
   ")",
   "{",
   "return",
   "0",
   ",",
   "errorInvalidInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n",
   "x",
   ":=",
   "int64",
   "(",
   "d",
   "-",
   "'0'",
   ")",
   "\n\n",
   "if",
   "val",
   ">",
   "lim",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "val",
   "*=",
   "10",
   ";",
   "val",
   ">",
   "(",
   "max",
   "-",
   "x",
   ")",
   "{",
   "return",
   "0",
   ",",
   "errorOverflowInt64",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n\n",
   "val",
   "+=",
   "x",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "val",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-121",
  "nl_tokens": [
   "Grow",
   "automatically",
   "grows",
   "the",
   "underlying",
   "buffer",
   "so",
   "that",
   "it",
   "can",
   "hold",
   "at",
   "least",
   "min",
   "elements"
  ],
  "pl_tokens": [
   "func",
   "(",
   "s",
   "*",
   "Stack",
   ")",
   "Grow",
   "(",
   "<mask>",
   "int",
   ")",
   "{",
   "// Automatically grow the stack to some long-enough length",
   "if",
   "min",
   "<=",
   "s",
   ".",
   "BufferSize",
   "(",
   ")",
   "{",
   "// we have enough",
   "return",
   "\n",
   "}",
   "\n\n",
   "s",
   ".",
   "Resize",
   "(",
   "calcNewSize",
   "(",
   "min",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-122",
  "nl_tokens": [
   "updateMax",
   "updates",
   "the",
   "maximum",
   "values",
   "for",
   "a",
   "node",
   "and",
   "its",
   "ancestors"
  ],
  "pl_tokens": [
   "func",
   "(",
   "x",
   "*",
   "intervalNode",
   ")",
   "updateMax",
   "(",
   ")",
   "{",
   "for",
   "x",
   "!=",
   "nil",
   "{",
   "oldmax",
   ":=",
   "x",
   ".",
   "<mask>",
   "\n",
   "max",
   ":=",
   "x",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "End",
   "\n",
   "if",
   "x",
   ".",
   "left",
   "!=",
   "nil",
   "&&",
   "x",
   ".",
   "left",
   ".",
   "max",
   ".",
   "Compare",
   "(",
   "max",
   ")",
   ">",
   "0",
   "{",
   "max",
   "=",
   "x",
   ".",
   "left",
   ".",
   "max",
   "\n",
   "}",
   "\n",
   "if",
   "x",
   ".",
   "right",
   "!=",
   "nil",
   "&&",
   "x",
   ".",
   "right",
   ".",
   "max",
   ".",
   "Compare",
   "(",
   "max",
   ")",
   ">",
   "0",
   "{",
   "max",
   "=",
   "x",
   ".",
   "right",
   ".",
   "max",
   "\n",
   "}",
   "\n",
   "if",
   "oldmax",
   ".",
   "Compare",
   "(",
   "max",
   ")",
   "==",
   "0",
   "{",
   "break",
   "\n",
   "}",
   "\n",
   "x",
   ".",
   "max",
   "=",
   "max",
   "\n",
   "x",
   "=",
   "x",
   ".",
   "parent",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-123",
  "nl_tokens": [
   "Wrap",
   "builds",
   "a",
   "byte",
   "slice",
   "from",
   "strs",
   "wrapping",
   "on",
   "word",
   "boundaries",
   "before",
   "max",
   "chars"
  ],
  "pl_tokens": [
   "func",
   "Wrap",
   "(",
   "<mask>",
   "int",
   ",",
   "strs",
   "...",
   "string",
   ")",
   "[",
   "]",
   "byte",
   "{",
   "input",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "0",
   ")",
   "\n",
   "output",
   ":=",
   "make",
   "(",
   "[",
   "]",
   "byte",
   ",",
   "0",
   ")",
   "\n",
   "for",
   "_",
   ",",
   "s",
   ":=",
   "range",
   "strs",
   "{",
   "input",
   "=",
   "append",
   "(",
   "input",
   ",",
   "[",
   "]",
   "byte",
   "(",
   "s",
   ")",
   "...",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "len",
   "(",
   "input",
   ")",
   "<",
   "max",
   "{",
   "// Doesn't need to be wrapped",
   "return",
   "input",
   "\n",
   "}",
   "\n",
   "ls",
   ":=",
   "-",
   "1",
   "// Last seen space index",
   "\n",
   "lw",
   ":=",
   "-",
   "1",
   "// Last written byte index",
   "\n",
   "ll",
   ":=",
   "0",
   "// Length of current line",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "len",
   "(",
   "input",
   ")",
   ";",
   "i",
   "++",
   "{",
   "ll",
   "++",
   "\n",
   "switch",
   "input",
   "[",
   "i",
   "]",
   "{",
   "case",
   "' '",
   ",",
   "'\\t'",
   ":",
   "ls",
   "=",
   "i",
   "\n",
   "}",
   "\n",
   "if",
   "ll",
   ">=",
   "max",
   "{",
   "if",
   "ls",
   ">=",
   "0",
   "{",
   "output",
   "=",
   "append",
   "(",
   "output",
   ",",
   "input",
   "[",
   "lw",
   "+",
   "1",
   ":",
   "ls",
   "]",
   "...",
   ")",
   "\n",
   "output",
   "=",
   "append",
   "(",
   "output",
   ",",
   "'\\r'",
   ",",
   "'\\n'",
   ",",
   "' '",
   ")",
   "\n",
   "lw",
   "=",
   "ls",
   "// Jump over the space we broke on",
   "\n",
   "ll",
   "=",
   "1",
   "// Count leading space above",
   "\n",
   "// Rewind",
   "i",
   "=",
   "lw",
   "+",
   "1",
   "\n",
   "ls",
   "=",
   "-",
   "1",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "append",
   "(",
   "output",
   ",",
   "input",
   "[",
   "lw",
   "+",
   "1",
   ":",
   "]",
   "...",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-124",
  "nl_tokens": [
   "streamClientInterceptor",
   "returns",
   "a",
   "new",
   "retrying",
   "stream",
   "client",
   "interceptor",
   "for",
   "server",
   "side",
   "streaming",
   "calls",
   ".",
   "The",
   "default",
   "configuration",
   "of",
   "the",
   "interceptor",
   "is",
   "to",
   "not",
   "retry",
   "*",
   "at",
   "all",
   "*",
   ".",
   "This",
   "behaviour",
   "can",
   "be",
   "changed",
   "through",
   "options",
   "(",
   "e",
   ".",
   "g",
   ".",
   "WithMax",
   ")",
   "on",
   "creation",
   "of",
   "the",
   "interceptor",
   "or",
   "on",
   "call",
   "(",
   "through",
   "grpc",
   ".",
   "CallOptions",
   ")",
   ".",
   "Retry",
   "logic",
   "is",
   "available",
   "*",
   "only",
   "for",
   "ServerStreams",
   "*",
   "i",
   ".",
   "e",
   ".",
   "1",
   ":",
   "n",
   "streams",
   "as",
   "the",
   "internal",
   "logic",
   "needs",
   "to",
   "buffer",
   "the",
   "messages",
   "sent",
   "by",
   "the",
   "client",
   ".",
   "If",
   "retry",
   "is",
   "enabled",
   "on",
   "any",
   "other",
   "streams",
   "(",
   "ClientStreams",
   "BidiStreams",
   ")",
   "the",
   "retry",
   "interceptor",
   "will",
   "fail",
   "the",
   "call",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "Client",
   ")",
   "streamClientInterceptor",
   "(",
   "logger",
   "*",
   "zap",
   ".",
   "Logger",
   ",",
   "optFuncs",
   "...",
   "retryOption",
   ")",
   "grpc",
   ".",
   "StreamClientInterceptor",
   "{",
   "intOpts",
   ":=",
   "reuseOrNewWithCallOptions",
   "(",
   "defaultOptions",
   ",",
   "optFuncs",
   ")",
   "\n",
   "return",
   "func",
   "(",
   "ctx",
   "context",
   ".",
   "Context",
   ",",
   "desc",
   "*",
   "grpc",
   ".",
   "StreamDesc",
   ",",
   "cc",
   "*",
   "grpc",
   ".",
   "ClientConn",
   ",",
   "method",
   "string",
   ",",
   "streamer",
   "grpc",
   ".",
   "Streamer",
   ",",
   "opts",
   "...",
   "grpc",
   ".",
   "CallOption",
   ")",
   "(",
   "grpc",
   ".",
   "ClientStream",
   ",",
   "error",
   ")",
   "{",
   "grpcOpts",
   ",",
   "retryOpts",
   ":=",
   "filterCallOptions",
   "(",
   "opts",
   ")",
   "\n",
   "callOpts",
   ":=",
   "reuseOrNewWithCallOptions",
   "(",
   "intOpts",
   ",",
   "retryOpts",
   ")",
   "\n",
   "// short circuit for simplicity, and avoiding allocations.",
   "if",
   "callOpts",
   ".",
   "<mask>",
   "==",
   "0",
   "{",
   "return",
   "streamer",
   "(",
   "ctx",
   ",",
   "desc",
   ",",
   "cc",
   ",",
   "method",
   ",",
   "grpcOpts",
   "...",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "desc",
   ".",
   "ClientStreams",
   "{",
   "return",
   "nil",
   ",",
   "grpc",
   ".",
   "Errorf",
   "(",
   "codes",
   ".",
   "Unimplemented",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "newStreamer",
   ",",
   "err",
   ":=",
   "streamer",
   "(",
   "ctx",
   ",",
   "desc",
   ",",
   "cc",
   ",",
   "method",
   ",",
   "grpcOpts",
   "...",
   ")",
   "\n",
   "logger",
   ".",
   "Warn",
   "(",
   "\"",
   "\"",
   ",",
   "zap",
   ".",
   "Error",
   "(",
   "err",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "// TODO(mwitkow): Maybe dial and transport errors should be retriable?",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "retryingStreamer",
   ":=",
   "&",
   "serverStreamingRetryingStream",
   "{",
   "client",
   ":",
   "c",
   ",",
   "ClientStream",
   ":",
   "newStreamer",
   ",",
   "callOpts",
   ":",
   "callOpts",
   ",",
   "ctx",
   ":",
   "ctx",
   ",",
   "streamerCall",
   ":",
   "func",
   "(",
   "ctx",
   "context",
   ".",
   "Context",
   ")",
   "(",
   "grpc",
   ".",
   "ClientStream",
   ",",
   "error",
   ")",
   "{",
   "return",
   "streamer",
   "(",
   "ctx",
   ",",
   "desc",
   ",",
   "cc",
   ",",
   "method",
   ",",
   "grpcOpts",
   "...",
   ")",
   "\n",
   "}",
   ",",
   "}",
   "\n",
   "return",
   "retryingStreamer",
   ",",
   "nil",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-125",
  "nl_tokens": [
   "ReadableN",
   "reports",
   "whether",
   "the",
   "n",
   "bytes",
   "starting",
   "at",
   "address",
   "a",
   "are",
   "readable",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadableN",
   "(",
   "a",
   "Address",
   ",",
   "n",
   "int64",
   ")",
   "bool",
   "{",
   "for",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "||",
   "m",
   ".",
   "perm",
   "&",
   "Read",
   "==",
   "0",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "c",
   ":=",
   "m",
   ".",
   "<mask>",
   ".",
   "Sub",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "n",
   "<=",
   "c",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n",
   "n",
   "-=",
   "c",
   "\n",
   "a",
   "=",
   "a",
   ".",
   "Add",
   "(",
   "c",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-126",
  "nl_tokens": [
   "DeleteRange",
   "implements",
   "the",
   "LogStore",
   "interface",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "i",
   "*",
   "InmemStore",
   ")",
   "DeleteRange",
   "(",
   "<mask>",
   ",",
   "max",
   "uint64",
   ")",
   "error",
   "{",
   "i",
   ".",
   "l",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "i",
   ".",
   "l",
   ".",
   "Unlock",
   "(",
   ")",
   "\n",
   "for",
   "j",
   ":=",
   "min",
   ";",
   "j",
   "<=",
   "max",
   ";",
   "j",
   "++",
   "{",
   "delete",
   "(",
   "i",
   ".",
   "logs",
   ",",
   "j",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "min",
   "<=",
   "i",
   ".",
   "lowIndex",
   "{",
   "i",
   ".",
   "lowIndex",
   "=",
   "max",
   "+",
   "1",
   "\n",
   "}",
   "\n",
   "if",
   "max",
   ">=",
   "i",
   ".",
   "highIndex",
   "{",
   "i",
   ".",
   "highIndex",
   "=",
   "min",
   "-",
   "1",
   "\n",
   "}",
   "\n",
   "if",
   "i",
   ".",
   "lowIndex",
   ">",
   "i",
   ".",
   "highIndex",
   "{",
   "i",
   ".",
   "lowIndex",
   "=",
   "0",
   "\n",
   "i",
   ".",
   "highIndex",
   "=",
   "0",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-127",
  "nl_tokens": [
   "ReadUint8",
   "returns",
   "a",
   "uint8",
   "read",
   "from",
   "address",
   "a",
   "of",
   "the",
   "inferior",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadUint8",
   "(",
   "a",
   "Address",
   ")",
   "uint8",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "{",
   "panic",
   "(",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "m",
   ".",
   "contents",
   "[",
   "a",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "<mask>",
   ")",
   "]",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-128",
  "nl_tokens": [
   "CheckUint64Bounds",
   "verifies",
   "that",
   "v",
   "is",
   "smaller",
   "than",
   "max",
   "t",
   "represents",
   "the",
   "original",
   "type",
   "of",
   "v",
   "."
  ],
  "pl_tokens": [
   "func",
   "CheckUint64Bounds",
   "(",
   "v",
   "uint64",
   ",",
   "<mask>",
   "uint64",
   ",",
   "t",
   "reflect",
   ".",
   "Type",
   ")",
   "(",
   "err",
   "error",
   ")",
   "{",
   "if",
   "v",
   ">",
   "max",
   "{",
   "err",
   "=",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "v",
   ",",
   "max",
   ",",
   "t",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-129",
  "nl_tokens": [
   "ReadUint16",
   "returns",
   "a",
   "uint16",
   "read",
   "from",
   "address",
   "a",
   "of",
   "the",
   "inferior",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "ReadUint16",
   "(",
   "a",
   "Address",
   ")",
   "uint16",
   "{",
   "m",
   ":=",
   "p",
   ".",
   "findMapping",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "m",
   "==",
   "nil",
   "{",
   "panic",
   "(",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ",",
   "a",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "b",
   ":=",
   "m",
   ".",
   "contents",
   "[",
   "a",
   ".",
   "Sub",
   "(",
   "m",
   ".",
   "<mask>",
   ")",
   ":",
   "]",
   "\n",
   "if",
   "len",
   "(",
   "b",
   ")",
   "<",
   "2",
   "{",
   "var",
   "buf",
   "[",
   "2",
   "]",
   "byte",
   "\n",
   "b",
   "=",
   "buf",
   "[",
   ":",
   "]",
   "\n",
   "p",
   ".",
   "ReadAt",
   "(",
   "b",
   ",",
   "a",
   ")",
   "\n",
   "}",
   "\n",
   "if",
   "p",
   ".",
   "littleEndian",
   "{",
   "return",
   "binary",
   ".",
   "LittleEndian",
   ".",
   "Uint16",
   "(",
   "b",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "binary",
   ".",
   "BigEndian",
   ".",
   "Uint16",
   "(",
   "b",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-130",
  "nl_tokens": [
   "IsPtr",
   "reports",
   "whether",
   "the",
   "inferior",
   "at",
   "address",
   "a",
   "contains",
   "a",
   "pointer",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "p",
   "*",
   "Process",
   ")",
   "IsPtr",
   "(",
   "a",
   "core",
   ".",
   "Address",
   ")",
   "bool",
   "{",
   "h",
   ":=",
   "p",
   ".",
   "findHeapInfo",
   "(",
   "a",
   ")",
   "\n",
   "if",
   "h",
   "!=",
   "nil",
   "{",
   "return",
   "h",
   ".",
   "IsPtr",
   "(",
   "a",
   ",",
   "p",
   ".",
   "proc",
   ".",
   "PtrSize",
   "(",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "m",
   ":=",
   "range",
   "p",
   ".",
   "modules",
   "{",
   "for",
   "_",
   ",",
   "s",
   ":=",
   "range",
   "[",
   "2",
   "]",
   "string",
   "{",
   "\"",
   "\"",
   ",",
   "\"",
   "\"",
   "}",
   "{",
   "<mask>",
   ":=",
   "core",
   ".",
   "Address",
   "(",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "s",
   ")",
   ".",
   "Uintptr",
   "(",
   ")",
   ")",
   "\n",
   "max",
   ":=",
   "core",
   ".",
   "Address",
   "(",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   "+",
   "s",
   ")",
   ".",
   "Uintptr",
   "(",
   ")",
   ")",
   "\n",
   "if",
   "a",
   "<",
   "min",
   "||",
   "a",
   ">=",
   "max",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "gc",
   ":=",
   "m",
   ".",
   "r",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   "+",
   "s",
   "+",
   "\"",
   "\"",
   ")",
   ".",
   "Field",
   "(",
   "\"",
   "\"",
   ")",
   ".",
   "Address",
   "(",
   ")",
   "\n",
   "i",
   ":=",
   "a",
   ".",
   "Sub",
   "(",
   "min",
   ")",
   "\n",
   "return",
   "p",
   ".",
   "proc",
   ".",
   "ReadUint8",
   "(",
   "gc",
   ".",
   "Add",
   "(",
   "i",
   "/",
   "8",
   ")",
   ")",
   ">>",
   "uint",
   "(",
   "i",
   "%",
   "8",
   ")",
   "!=",
   "0",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "// Everywhere else can't be a pointer. At least, not a pointer into the Go heap.",
   "// TODO: stacks?",
   "// TODO: finalizers?",
   "return",
   "false",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-131",
  "nl_tokens": [
   "Open",
   "explicitly",
   "tells",
   "the",
   "encoder",
   "to",
   "start",
   "the",
   "stream",
   "setting",
   "the",
   "number",
   "of",
   "values",
   "to",
   "n",
   ".",
   "Depending",
   "on",
   "the",
   "actual",
   "format",
   "that",
   "the",
   "stream",
   "is",
   "encoding",
   "to",
   "n",
   "may",
   "or",
   "may",
   "not",
   "have",
   "to",
   "be",
   "accurate",
   "some",
   "formats",
   "also",
   "support",
   "passing",
   "a",
   "negative",
   "value",
   "to",
   "indicate",
   "that",
   "the",
   "number",
   "of",
   "elements",
   "is",
   "unknown",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "e",
   "*",
   "StreamEncoder",
   ")",
   "Open",
   "(",
   "n",
   "int",
   ")",
   "error",
   "{",
   "if",
   "err",
   ":=",
   "e",
   ".",
   "err",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "err",
   "\n",
   "}",
   "\n\n",
   "if",
   "e",
   ".",
   "closed",
   "{",
   "return",
   "io",
   ".",
   "ErrClosedPipe",
   "\n",
   "}",
   "\n\n",
   "if",
   "!",
   "e",
   ".",
   "opened",
   "{",
   "e",
   ".",
   "<mask>",
   "=",
   "n",
   "\n",
   "e",
   ".",
   "opened",
   "=",
   "true",
   "\n\n",
   "if",
   "!",
   "e",
   ".",
   "oneshot",
   "{",
   "e",
   ".",
   "err",
   "=",
   "e",
   ".",
   "Emitter",
   ".",
   "EmitArrayBegin",
   "(",
   "n",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "e",
   ".",
   "err",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-132",
  "nl_tokens": [
   "Intersects",
   "returns",
   "true",
   "if",
   "there",
   "is",
   "some",
   "tree",
   "node",
   "intersecting",
   "the",
   "given",
   "interval",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "ivt",
   "*",
   "IntervalTree",
   ")",
   "Intersects",
   "(",
   "iv",
   "Interval",
   ")",
   "bool",
   "{",
   "x",
   ":=",
   "ivt",
   ".",
   "root",
   "\n",
   "for",
   "x",
   "!=",
   "nil",
   "&&",
   "iv",
   ".",
   "Compare",
   "(",
   "&",
   "x",
   ".",
   "iv",
   ".",
   "Ivl",
   ")",
   "!=",
   "0",
   "{",
   "if",
   "x",
   ".",
   "left",
   "!=",
   "nil",
   "&&",
   "x",
   ".",
   "left",
   ".",
   "<mask>",
   ".",
   "Compare",
   "(",
   "iv",
   ".",
   "Begin",
   ")",
   ">",
   "0",
   "{",
   "x",
   "=",
   "x",
   ".",
   "left",
   "\n",
   "}",
   "else",
   "{",
   "x",
   "=",
   "x",
   ".",
   "right",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "x",
   "!=",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-133",
  "nl_tokens": [
   "jitteredBackoff",
   "implements",
   "the",
   "FullJitter",
   "algorithm",
   "presented",
   "in",
   "https",
   ":",
   "//",
   "aws",
   ".",
   "amazon",
   ".",
   "com",
   "/",
   "blogs",
   "/",
   "architecture",
   "/",
   "exponential",
   "-",
   "backoff",
   "-",
   "and",
   "-",
   "jitter",
   "/"
  ],
  "pl_tokens": [
   "func",
   "jitteredBackoff",
   "(",
   "rand",
   "*",
   "rand",
   ".",
   "Rand",
   ",",
   "attempt",
   "int",
   ",",
   "<mask>",
   ",",
   "max",
   "time",
   ".",
   "Duration",
   ",",
   "coeff",
   "float64",
   ")",
   "time",
   ".",
   "Duration",
   "{",
   "d",
   ":=",
   "time",
   ".",
   "Duration",
   "(",
   "float64",
   "(",
   "min",
   ")",
   "*",
   "math",
   ".",
   "Pow",
   "(",
   "coeff",
   ",",
   "float64",
   "(",
   "attempt",
   ")",
   ")",
   ")",
   "\n",
   "if",
   "d",
   ">",
   "max",
   "||",
   "d",
   "<=",
   "0",
   "/* overflow */",
   "{",
   "d",
   "=",
   "max",
   "\n",
   "}",
   "\n",
   "return",
   "min",
   "+",
   "time",
   ".",
   "Duration",
   "(",
   "rand",
   ".",
   "Int63n",
   "(",
   "int64",
   "(",
   "d",
   "-",
   "min",
   ")",
   ")",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-134",
  "nl_tokens": [
   "visit",
   "will",
   "call",
   "a",
   "node",
   "visitor",
   "on",
   "each",
   "node",
   "that",
   "overlaps",
   "the",
   "given",
   "interval"
  ],
  "pl_tokens": [
   "func",
   "(",
   "x",
   "*",
   "intervalNode",
   ")",
   "visit",
   "(",
   "iv",
   "*",
   "Interval",
   ",",
   "nv",
   "nodeVisitor",
   ")",
   "bool",
   "{",
   "if",
   "x",
   "==",
   "nil",
   "{",
   "return",
   "true",
   "\n",
   "}",
   "\n",
   "v",
   ":=",
   "iv",
   ".",
   "Compare",
   "(",
   "&",
   "x",
   ".",
   "iv",
   ".",
   "Ivl",
   ")",
   "\n",
   "switch",
   "{",
   "case",
   "v",
   "<",
   "0",
   ":",
   "if",
   "!",
   "x",
   ".",
   "left",
   ".",
   "visit",
   "(",
   "iv",
   ",",
   "nv",
   ")",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "case",
   "v",
   ">",
   "0",
   ":",
   "maxiv",
   ":=",
   "Interval",
   "{",
   "x",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "Begin",
   ",",
   "x",
   ".",
   "<mask>",
   "}",
   "\n",
   "if",
   "maxiv",
   ".",
   "Compare",
   "(",
   "iv",
   ")",
   "==",
   "0",
   "{",
   "if",
   "!",
   "x",
   ".",
   "left",
   ".",
   "visit",
   "(",
   "iv",
   ",",
   "nv",
   ")",
   "||",
   "!",
   "x",
   ".",
   "right",
   ".",
   "visit",
   "(",
   "iv",
   ",",
   "nv",
   ")",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "default",
   ":",
   "if",
   "!",
   "x",
   ".",
   "left",
   ".",
   "visit",
   "(",
   "iv",
   ",",
   "nv",
   ")",
   "||",
   "!",
   "nv",
   "(",
   "x",
   ")",
   "||",
   "!",
   "x",
   ".",
   "right",
   ".",
   "visit",
   "(",
   "iv",
   ",",
   "nv",
   ")",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-135",
  "nl_tokens": [
   "pluckParams",
   "converts",
   "a",
   "pact",
   "tag",
   "into",
   "a",
   "pactParams",
   "struct",
   "Supported",
   "Tag",
   "Formats",
   "Minimum",
   "Slice",
   "Size",
   ":",
   "pact",
   ":",
   "min",
   "=",
   "2",
   "String",
   "RegEx",
   ":",
   "pact",
   ":",
   "example",
   "=",
   "2000",
   "-",
   "01",
   "-",
   "01",
   "regex",
   "=",
   "^",
   "\\\\",
   "d",
   "{",
   "4",
   "}",
   "-",
   "\\\\",
   "d",
   "{",
   "2",
   "}",
   "-",
   "\\\\",
   "d",
   "{",
   "2",
   "}",
   "$"
  ],
  "pl_tokens": [
   "func",
   "pluckParams",
   "(",
   "srcType",
   "reflect",
   ".",
   "Type",
   ",",
   "pactTag",
   "string",
   ")",
   "params",
   "{",
   "params",
   ":=",
   "getDefaults",
   "(",
   ")",
   "\n",
   "if",
   "pactTag",
   "==",
   "\"",
   "\"",
   "{",
   "return",
   "params",
   "\n",
   "}",
   "\n\n",
   "switch",
   "kind",
   ":=",
   "srcType",
   ".",
   "Kind",
   "(",
   ")",
   ";",
   "kind",
   "{",
   "case",
   "reflect",
   ".",
   "Slice",
   ":",
   "if",
   "_",
   ",",
   "err",
   ":=",
   "fmt",
   ".",
   "Sscanf",
   "(",
   "pactTag",
   ",",
   "\"",
   "\"",
   ",",
   "&",
   "params",
   ".",
   "slice",
   ".",
   "<mask>",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "triggerInvalidPactTagPanic",
   "(",
   "pactTag",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "case",
   "reflect",
   ".",
   "String",
   ":",
   "fullRegex",
   ",",
   "_",
   ":=",
   "regexp",
   ".",
   "Compile",
   "(",
   "`regex=(.*)$`",
   ")",
   "\n",
   "exampleRegex",
   ",",
   "_",
   ":=",
   "regexp",
   ".",
   "Compile",
   "(",
   "`^example=(.*)`",
   ")",
   "\n\n",
   "if",
   "fullRegex",
   ".",
   "Match",
   "(",
   "[",
   "]",
   "byte",
   "(",
   "pactTag",
   ")",
   ")",
   "{",
   "components",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "pactTag",
   ",",
   "\"",
   "\"",
   ")",
   "\n\n",
   "if",
   "len",
   "(",
   "components",
   "[",
   "1",
   "]",
   ")",
   "==",
   "0",
   "{",
   "triggerInvalidPactTagPanic",
   "(",
   "pactTag",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ")",
   ")",
   "\n",
   "}",
   "\n\n",
   "if",
   "_",
   ",",
   "err",
   ":=",
   "fmt",
   ".",
   "Sscanf",
   "(",
   "components",
   "[",
   "0",
   "]",
   ",",
   "\"",
   "\"",
   ",",
   "&",
   "params",
   ".",
   "str",
   ".",
   "example",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "triggerInvalidPactTagPanic",
   "(",
   "pactTag",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "params",
   ".",
   "str",
   ".",
   "regEx",
   "=",
   "strings",
   ".",
   "Replace",
   "(",
   "components",
   "[",
   "1",
   "]",
   ",",
   "`\\`",
   ",",
   "`\\\\`",
   ",",
   "-",
   "1",
   ")",
   "\n\n",
   "}",
   "else",
   "if",
   "exampleRegex",
   ".",
   "Match",
   "(",
   "[",
   "]",
   "byte",
   "(",
   "pactTag",
   ")",
   ")",
   "{",
   "components",
   ":=",
   "strings",
   ".",
   "Split",
   "(",
   "pactTag",
   ",",
   "\"",
   "\"",
   ")",
   "\n\n",
   "if",
   "len",
   "(",
   "components",
   ")",
   "!=",
   "2",
   "||",
   "strings",
   ".",
   "TrimSpace",
   "(",
   "components",
   "[",
   "1",
   "]",
   ")",
   "==",
   "\"",
   "\"",
   "{",
   "triggerInvalidPactTagPanic",
   "(",
   "pactTag",
   ",",
   "fmt",
   ".",
   "Errorf",
   "(",
   "\"",
   "\"",
   ")",
   ")",
   "\n",
   "}",
   "\n\n",
   "params",
   ".",
   "str",
   ".",
   "example",
   "=",
   "components",
   "[",
   "1",
   "]",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "params",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-136",
  "nl_tokens": [
   "Sends",
   "an",
   "S3",
   "multipart",
   "upload",
   "initiation",
   "request",
   ".",
   "See",
   "http",
   ":",
   "//",
   "docs",
   ".",
   "amazonwebservices",
   ".",
   "com",
   "/",
   "AmazonS3",
   "/",
   "latest",
   "/",
   "dev",
   "/",
   "mpuoverview",
   ".",
   "html",
   ".",
   "The",
   "initial",
   "request",
   "returns",
   "an",
   "UploadId",
   "that",
   "we",
   "use",
   "to",
   "identify",
   "subsequent",
   "PUT",
   "requests",
   "."
  ],
  "pl_tokens": [
   "func",
   "newPutter",
   "(",
   "url",
   "url",
   ".",
   "URL",
   ",",
   "h",
   "http",
   ".",
   "Header",
   ",",
   "c",
   "*",
   "Config",
   ",",
   "b",
   "*",
   "Bucket",
   ")",
   "(",
   "p",
   "*",
   "putter",
   ",",
   "err",
   "error",
   ")",
   "{",
   "p",
   "=",
   "new",
   "(",
   "putter",
   ")",
   "\n",
   "p",
   ".",
   "url",
   "=",
   "url",
   "\n",
   "p",
   ".",
   "c",
   ",",
   "p",
   ".",
   "b",
   "=",
   "new",
   "(",
   "Config",
   ")",
   ",",
   "new",
   "(",
   "Bucket",
   ")",
   "\n",
   "*",
   "p",
   ".",
   "c",
   ",",
   "*",
   "p",
   ".",
   "b",
   "=",
   "*",
   "c",
   ",",
   "*",
   "b",
   "\n",
   "p",
   ".",
   "c",
   ".",
   "Concurrency",
   "=",
   "<mask>",
   "(",
   "c",
   ".",
   "Concurrency",
   ",",
   "1",
   ")",
   "\n",
   "p",
   ".",
   "c",
   ".",
   "NTry",
   "=",
   "max",
   "(",
   "c",
   ".",
   "NTry",
   ",",
   "1",
   ")",
   "\n",
   "p",
   ".",
   "bufsz",
   "=",
   "max64",
   "(",
   "minPartSize",
   ",",
   "c",
   ".",
   "PartSize",
   ")",
   "\n",
   "resp",
   ",",
   "err",
   ":=",
   "p",
   ".",
   "retryRequest",
   "(",
   "\"",
   "\"",
   ",",
   "url",
   ".",
   "String",
   "(",
   ")",
   "+",
   "\"",
   "\"",
   ",",
   "nil",
   ",",
   "h",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "defer",
   "checkClose",
   "(",
   "resp",
   ".",
   "Body",
   ",",
   "err",
   ")",
   "\n",
   "if",
   "resp",
   ".",
   "StatusCode",
   "!=",
   "200",
   "{",
   "return",
   "nil",
   ",",
   "newRespError",
   "(",
   "resp",
   ")",
   "\n",
   "}",
   "\n",
   "err",
   "=",
   "xml",
   ".",
   "NewDecoder",
   "(",
   "resp",
   ".",
   "Body",
   ")",
   ".",
   "Decode",
   "(",
   "p",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "nil",
   ",",
   "err",
   "\n",
   "}",
   "\n",
   "p",
   ".",
   "ch",
   "=",
   "make",
   "(",
   "chan",
   "*",
   "part",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "p",
   ".",
   "c",
   ".",
   "Concurrency",
   ";",
   "i",
   "++",
   "{",
   "go",
   "p",
   ".",
   "worker",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "p",
   ".",
   "md5OfParts",
   "=",
   "md5",
   ".",
   "New",
   "(",
   ")",
   "\n",
   "p",
   ".",
   "md5",
   "=",
   "md5",
   ".",
   "New",
   "(",
   ")",
   "\n\n",
   "p",
   ".",
   "sp",
   "=",
   "bufferPool",
   "(",
   "p",
   ".",
   "bufsz",
   ")",
   "\n\n",
   "return",
   "p",
   ",",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-137",
  "nl_tokens": [
   "newSizeHistogram",
   "returns",
   "a",
   "new",
   "instance",
   "of",
   "keyValueSizeHistogram",
   "with",
   "properly",
   "initialized",
   "fields",
   "."
  ],
  "pl_tokens": [
   "func",
   "newSizeHistogram",
   "(",
   ")",
   "*",
   "sizeHistogram",
   "{",
   "// TODO(ibrahim): find appropriate bin size.",
   "keyBins",
   ":=",
   "createHistogramBins",
   "(",
   "1",
   ",",
   "16",
   ")",
   "\n",
   "valueBins",
   ":=",
   "createHistogramBins",
   "(",
   "1",
   ",",
   "30",
   ")",
   "\n",
   "return",
   "&",
   "sizeHistogram",
   "{",
   "keySizeHistogram",
   ":",
   "histogramData",
   "{",
   "bins",
   ":",
   "keyBins",
   ",",
   "countPerBin",
   ":",
   "make",
   "(",
   "[",
   "]",
   "int64",
   ",",
   "len",
   "(",
   "keyBins",
   ")",
   "+",
   "1",
   ")",
   ",",
   "<mask>",
   ":",
   "math",
   ".",
   "MinInt64",
   ",",
   "min",
   ":",
   "math",
   ".",
   "MaxInt64",
   ",",
   "sum",
   ":",
   "0",
   ",",
   "}",
   ",",
   "valueSizeHistogram",
   ":",
   "histogramData",
   "{",
   "bins",
   ":",
   "valueBins",
   ",",
   "countPerBin",
   ":",
   "make",
   "(",
   "[",
   "]",
   "int64",
   ",",
   "len",
   "(",
   "valueBins",
   ")",
   "+",
   "1",
   ")",
   ",",
   "max",
   ":",
   "math",
   ".",
   "MinInt64",
   ",",
   "min",
   ":",
   "math",
   ".",
   "MaxInt64",
   ",",
   "sum",
   ":",
   "0",
   ",",
   "}",
   ",",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-138",
  "nl_tokens": [
   "Finds",
   "a",
   "Func",
   "for",
   "the",
   "given",
   "address",
   ".",
   "Sort",
   "must",
   "have",
   "been",
   "called",
   "already",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "t",
   "*",
   "funcTab",
   ")",
   "find",
   "(",
   "pc",
   "core",
   ".",
   "Address",
   ")",
   "*",
   "Func",
   "{",
   "n",
   ":=",
   "sort",
   ".",
   "Search",
   "(",
   "len",
   "(",
   "t",
   ".",
   "entries",
   ")",
   ",",
   "func",
   "(",
   "i",
   "int",
   ")",
   "bool",
   "{",
   "return",
   "t",
   ".",
   "entries",
   "[",
   "i",
   "]",
   ".",
   "<mask>",
   ">",
   "pc",
   "\n",
   "}",
   ")",
   "\n",
   "if",
   "n",
   "==",
   "len",
   "(",
   "t",
   ".",
   "entries",
   ")",
   "||",
   "pc",
   "<",
   "t",
   ".",
   "entries",
   "[",
   "n",
   "]",
   ".",
   "min",
   "||",
   "pc",
   ">=",
   "t",
   ".",
   "entries",
   "[",
   "n",
   "]",
   ".",
   "max",
   "{",
   "return",
   "nil",
   "\n",
   "}",
   "\n",
   "return",
   "t",
   ".",
   "entries",
   "[",
   "n",
   "]",
   ".",
   "f",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-139",
  "nl_tokens": [
   "simple",
   "CLI",
   "interface",
   ".",
   "Sample",
   "usage",
   ":",
   "goner",
   "-",
   "n",
   "=",
   "8",
   "-",
   "min",
   "=",
   "8",
   "-",
   "max",
   "=",
   "10",
   "-",
   "digits",
   "=",
   "3",
   "-",
   "punctuation",
   "=",
   "3",
   "-",
   "uppercase",
   "=",
   "4",
   "Flags",
   ":",
   "-",
   "n",
   ":",
   "number",
   "of",
   "passwords",
   "to",
   "generate",
   "-",
   "min",
   ":",
   "minimum",
   "length",
   "-",
   "max",
   ":",
   "maximum",
   "length",
   "-",
   "digits",
   ":",
   "digits",
   "(",
   "0",
   "-",
   "9",
   ")",
   "characters",
   "-",
   "punctuation",
   ":",
   "punctuation",
   "characters",
   "-",
   "uppercase",
   ":",
   "uppercase",
   "characters"
  ],
  "pl_tokens": [
   "func",
   "main",
   "(",
   ")",
   "{",
   "n",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "8",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "<mask>",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "12",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "max",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "0",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "digits",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "3",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "punctuation",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "1",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "uppercase",
   ":=",
   "flag",
   ".",
   "Int",
   "(",
   "\"",
   "\"",
   ",",
   "1",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "flag",
   ".",
   "Parse",
   "(",
   ")",
   "\n",
   "reqs",
   ":=",
   "garbler",
   ".",
   "PasswordStrengthRequirements",
   "{",
   "MinimumTotalLength",
   ":",
   "*",
   "min",
   ",",
   "MaximumTotalLength",
   ":",
   "*",
   "max",
   ",",
   "Uppercase",
   ":",
   "*",
   "uppercase",
   ",",
   "Digits",
   ":",
   "*",
   "digits",
   ",",
   "Punctuation",
   ":",
   "*",
   "punctuation",
   ",",
   "}",
   "\n",
   "for",
   "i",
   ":=",
   "0",
   ";",
   "i",
   "<",
   "*",
   "n",
   ";",
   "i",
   "++",
   "{",
   "pass",
   ",",
   "err",
   ":=",
   "garbler",
   ".",
   "NewPassword",
   "(",
   "&",
   "reqs",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "fmt",
   ".",
   "Println",
   "(",
   "err",
   ")",
   "\n",
   "return",
   "\n",
   "}",
   "\n",
   "fmt",
   ".",
   "Println",
   "(",
   "pass",
   ")",
   "\n",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-140",
  "nl_tokens": [
   "getLastIndex",
   "returns",
   "the",
   "last",
   "index",
   "in",
   "stable",
   "storage",
   ".",
   "Either",
   "from",
   "the",
   "last",
   "log",
   "or",
   "from",
   "the",
   "last",
   "snapshot",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "raftState",
   ")",
   "getLastIndex",
   "(",
   ")",
   "uint64",
   "{",
   "r",
   ".",
   "lastLock",
   ".",
   "Lock",
   "(",
   ")",
   "\n",
   "defer",
   "r",
   ".",
   "lastLock",
   ".",
   "Unlock",
   "(",
   ")",
   "\n",
   "return",
   "<mask>",
   "(",
   "r",
   ".",
   "lastLogIndex",
   ",",
   "r",
   ".",
   "lastSnapshotIndex",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-141",
  "nl_tokens": [
   "Appends",
   "a",
   "header",
   "in",
   "the",
   "default",
   "format",
   "YYYY",
   "-",
   "MM",
   "-",
   "DD",
   "hh",
   ":",
   "mm",
   ":",
   "ss",
   ".",
   "sss",
   "[",
   "LVL",
   "]",
   "TAG",
   ":",
   ".",
   "If",
   "either",
   "of",
   "the",
   "Lshortfile",
   "or",
   "Llongfile",
   "flags",
   "are",
   "specified",
   "the",
   "file",
   "named",
   "and",
   "line",
   "number",
   "are",
   "included",
   "after",
   "the",
   "tag",
   "and",
   "before",
   "the",
   "final",
   "colon",
   "."
  ],
  "pl_tokens": [
   "func",
   "formatHeader",
   "(",
   "buf",
   "*",
   "[",
   "]",
   "byte",
   ",",
   "t",
   "time",
   ".",
   "Time",
   ",",
   "lvl",
   ",",
   "tag",
   "string",
   ",",
   "file",
   "string",
   ",",
   "line",
   "int",
   ")",
   "{",
   "year",
   ",",
   "month",
   ",",
   "day",
   ":=",
   "t",
   ".",
   "Date",
   "(",
   ")",
   "\n",
   "hour",
   ",",
   "<mask>",
   ",",
   "sec",
   ":=",
   "t",
   ".",
   "Clock",
   "(",
   ")",
   "\n",
   "ms",
   ":=",
   "t",
   ".",
   "Nanosecond",
   "(",
   ")",
   "/",
   "1e6",
   "\n\n",
   "itoa",
   "(",
   "buf",
   ",",
   "year",
   ",",
   "4",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "'-'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "int",
   "(",
   "month",
   ")",
   ",",
   "2",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "'-'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "day",
   ",",
   "2",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "' '",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "hour",
   ",",
   "2",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "':'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "min",
   ",",
   "2",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "':'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "sec",
   ",",
   "2",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "'.'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "ms",
   ",",
   "3",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "\"",
   "\"",
   "...",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "lvl",
   "...",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "\"",
   "\"",
   "...",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "tag",
   "...",
   ")",
   "\n",
   "if",
   "file",
   "!=",
   "\"",
   "\"",
   "{",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "' '",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "file",
   "...",
   ")",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "':'",
   ")",
   "\n",
   "itoa",
   "(",
   "buf",
   ",",
   "line",
   ",",
   "-",
   "1",
   ")",
   "\n",
   "}",
   "\n",
   "*",
   "buf",
   "=",
   "append",
   "(",
   "*",
   "buf",
   ",",
   "\"",
   "\"",
   "...",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-142",
  "nl_tokens": [
   "convertSuiteMeta",
   "converts",
   "a",
   "junit",
   "result",
   "in",
   "gcs",
   "to",
   "a",
   "ResultStore",
   "Suite",
   "."
  ],
  "pl_tokens": [
   "func",
   "convertSuiteMeta",
   "(",
   "suiteMeta",
   "gcs",
   ".",
   "SuitesMeta",
   ")",
   "resultstore",
   ".",
   "Suite",
   "{",
   "out",
   ":=",
   "resultstore",
   ".",
   "Suite",
   "{",
   "Name",
   ":",
   "path",
   ".",
   "Base",
   "(",
   "suiteMeta",
   ".",
   "Path",
   ")",
   ",",
   "Files",
   ":",
   "[",
   "]",
   "resultstore",
   ".",
   "File",
   "{",
   "{",
   "ContentType",
   ":",
   "\"",
   "\"",
   ",",
   "ID",
   ":",
   "resultstore",
   ".",
   "UUID",
   "(",
   ")",
   ",",
   "URL",
   ":",
   "suiteMeta",
   ".",
   "Path",
   ",",
   "// ensure the junit.xml file appears in artifacts list",
   "}",
   ",",
   "}",
   ",",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "suite",
   ":=",
   "range",
   "suiteMeta",
   ".",
   "Suites",
   ".",
   "Suites",
   "{",
   "child",
   ":=",
   "resultstore",
   ".",
   "Suite",
   "{",
   "Name",
   ":",
   "suite",
   ".",
   "Name",
   ",",
   "Duration",
   ":",
   "dur",
   "(",
   "suite",
   ".",
   "Time",
   ")",
   ",",
   "}",
   "\n",
   "switch",
   "{",
   "case",
   "suite",
   ".",
   "Failures",
   ">",
   "0",
   "&&",
   "suite",
   ".",
   "Tests",
   ">=",
   "suite",
   ".",
   "Failures",
   ":",
   "child",
   ".",
   "Failures",
   "=",
   "append",
   "(",
   "child",
   ".",
   "Failures",
   ",",
   "resultstore",
   ".",
   "Failure",
   "{",
   "Message",
   ":",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "suite",
   ".",
   "Failures",
   ",",
   "suite",
   ".",
   "Tests",
   ",",
   "float64",
   "(",
   "suite",
   ".",
   "Tests",
   "-",
   "suite",
   ".",
   "Failures",
   ")",
   "*",
   "100.0",
   "/",
   "float64",
   "(",
   "suite",
   ".",
   "Tests",
   ")",
   ")",
   ",",
   "}",
   ")",
   "\n",
   "case",
   "suite",
   ".",
   "Failures",
   ">",
   "0",
   ":",
   "child",
   ".",
   "Failures",
   "=",
   "append",
   "(",
   "child",
   ".",
   "Failures",
   ",",
   "resultstore",
   ".",
   "Failure",
   "{",
   "Message",
   ":",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "suite",
   ".",
   "Failures",
   ")",
   ",",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "result",
   ":=",
   "range",
   "suite",
   ".",
   "Results",
   "{",
   "name",
   ",",
   "tags",
   ":=",
   "stripTags",
   "(",
   "result",
   ".",
   "Name",
   ")",
   "\n",
   "class",
   ":=",
   "result",
   ".",
   "ClassName",
   "\n",
   "if",
   "class",
   "==",
   "\"",
   "\"",
   "{",
   "class",
   "=",
   "strings",
   ".",
   "Join",
   "(",
   "tags",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "else",
   "{",
   "class",
   "+=",
   "\"",
   "\"",
   "+",
   "strings",
   ".",
   "Join",
   "(",
   "tags",
   ",",
   "\"",
   "\"",
   ")",
   "\n",
   "}",
   "\n",
   "c",
   ":=",
   "resultstore",
   ".",
   "Case",
   "{",
   "Name",
   ":",
   "name",
   ",",
   "Class",
   ":",
   "class",
   ",",
   "Duration",
   ":",
   "dur",
   "(",
   "result",
   ".",
   "Time",
   ")",
   ",",
   "Result",
   ":",
   "resultstore",
   ".",
   "Completed",
   ",",
   "}",
   "\n",
   "const",
   "<mask>",
   "=",
   "5000",
   "// truncate messages to this length",
   "\n",
   "msg",
   ":=",
   "result",
   ".",
   "Message",
   "(",
   "max",
   ")",
   "\n",
   "switch",
   "{",
   "case",
   "result",
   ".",
   "Failure",
   "!=",
   "nil",
   ":",
   "// failing tests have a completed result with an error",
   "if",
   "msg",
   "==",
   "\"",
   "\"",
   "{",
   "msg",
   "=",
   "\"",
   "\"",
   "\n",
   "}",
   "\n",
   "c",
   ".",
   "Failures",
   "=",
   "append",
   "(",
   "c",
   ".",
   "Failures",
   ",",
   "resultstore",
   ".",
   "Failure",
   "{",
   "Message",
   ":",
   "msg",
   ",",
   "}",
   ")",
   "\n",
   "case",
   "result",
   ".",
   "Skipped",
   "!=",
   "nil",
   ":",
   "c",
   ".",
   "Result",
   "=",
   "resultstore",
   ".",
   "Skipped",
   "\n",
   "if",
   "msg",
   "!=",
   "\"",
   "\"",
   "{",
   "// skipped results do not require an error, but may.",
   "c",
   ".",
   "Errors",
   "=",
   "append",
   "(",
   "c",
   ".",
   "Errors",
   ",",
   "resultstore",
   ".",
   "Error",
   "{",
   "Message",
   ":",
   "msg",
   ",",
   "}",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "child",
   ".",
   "Cases",
   "=",
   "append",
   "(",
   "child",
   ".",
   "Cases",
   ",",
   "c",
   ")",
   "\n",
   "if",
   "c",
   ".",
   "Duration",
   ">",
   "child",
   ".",
   "Duration",
   "{",
   "child",
   ".",
   "Duration",
   "=",
   "c",
   ".",
   "Duration",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "if",
   "child",
   ".",
   "Duration",
   ">",
   "out",
   ".",
   "Duration",
   "{",
   "// Assume suites run in parallel, so choose max",
   "out",
   ".",
   "Duration",
   "=",
   "child",
   ".",
   "Duration",
   "\n",
   "}",
   "\n",
   "out",
   ".",
   "Suites",
   "=",
   "append",
   "(",
   "out",
   ".",
   "Suites",
   ",",
   "child",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "out",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-143",
  "nl_tokens": [
   "withMax",
   "sets",
   "the",
   "maximum",
   "number",
   "of",
   "retries",
   "on",
   "this",
   "call",
   "or",
   "this",
   "interceptor",
   "."
  ],
  "pl_tokens": [
   "func",
   "withMax",
   "(",
   "maxRetries",
   "uint",
   ")",
   "retryOption",
   "{",
   "return",
   "retryOption",
   "{",
   "applyFunc",
   ":",
   "func",
   "(",
   "o",
   "*",
   "options",
   ")",
   "{",
   "o",
   ".",
   "<mask>",
   "=",
   "maxRetries",
   "\n",
   "}",
   "}",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-144",
  "nl_tokens": [
   "Check",
   "the",
   "user",
   "password",
   ".",
   "Graphics",
   "character",
   "are",
   "allowed",
   ".",
   "See",
   "unicode",
   ".",
   "IsGraphic",
   "."
  ],
  "pl_tokens": [
   "func",
   "CheckPassword",
   "(",
   "pass",
   "string",
   ",",
   "<mask>",
   ",",
   "max",
   "int",
   ")",
   "error",
   "{",
   "if",
   "len",
   "(",
   "pass",
   ")",
   "<",
   "min",
   "||",
   "len",
   "(",
   "pass",
   ")",
   ">",
   "max",
   "{",
   "return",
   "e",
   ".",
   "New",
   "(",
   "ErrInvalidPassLength",
   ")",
   "\n",
   "}",
   "\n",
   "for",
   "_",
   ",",
   "r",
   ":=",
   "range",
   "pass",
   "{",
   "if",
   "!",
   "unicode",
   ".",
   "IsGraphic",
   "(",
   "r",
   ")",
   "{",
   "return",
   "e",
   ".",
   "New",
   "(",
   "ErrInvalidPassChar",
   ")",
   "\n",
   "}",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-145",
  "nl_tokens": [
   "ContainerNextSnapshot",
   "returns",
   "the",
   "index",
   "the",
   "next",
   "snapshot",
   "of",
   "the",
   "container",
   "with",
   "the",
   "given",
   "name",
   "and",
   "pattern",
   "should",
   "have",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "Cluster",
   ")",
   "ContainerNextSnapshot",
   "(",
   "project",
   "string",
   ",",
   "name",
   "string",
   ",",
   "pattern",
   "string",
   ")",
   "int",
   "{",
   "base",
   ":=",
   "name",
   "+",
   "shared",
   ".",
   "SnapshotDelimiter",
   "\n",
   "length",
   ":=",
   "len",
   "(",
   "base",
   ")",
   "\n",
   "q",
   ":=",
   "`\nSELECT containers.name\n  FROM containers\n  JOIN projects ON projects.id = containers.project_id\n WHERE projects.name=? AND containers.type=? AND SUBSTR(containers.name,1,?)=?`",
   "\n",
   "var",
   "numstr",
   "string",
   "\n",
   "inargs",
   ":=",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "{",
   "project",
   ",",
   "CTypeSnapshot",
   ",",
   "length",
   ",",
   "base",
   "}",
   "\n",
   "outfmt",
   ":=",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "{",
   "numstr",
   "}",
   "\n",
   "results",
   ",",
   "err",
   ":=",
   "queryScan",
   "(",
   "c",
   ".",
   "db",
   ",",
   "q",
   ",",
   "inargs",
   ",",
   "outfmt",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   "\n",
   "}",
   "\n",
   "<mask>",
   ":=",
   "0",
   "\n\n",
   "for",
   "_",
   ",",
   "r",
   ":=",
   "range",
   "results",
   "{",
   "snapOnlyName",
   ":=",
   "strings",
   ".",
   "SplitN",
   "(",
   "r",
   "[",
   "0",
   "]",
   ".",
   "(",
   "string",
   ")",
   ",",
   "shared",
   ".",
   "SnapshotDelimiter",
   ",",
   "2",
   ")",
   "[",
   "1",
   "]",
   "\n",
   "fields",
   ":=",
   "strings",
   ".",
   "SplitN",
   "(",
   "pattern",
   ",",
   "\"",
   "\"",
   ",",
   "2",
   ")",
   "\n\n",
   "var",
   "num",
   "int",
   "\n",
   "count",
   ",",
   "err",
   ":=",
   "fmt",
   ".",
   "Sscanf",
   "(",
   "snapOnlyName",
   ",",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "fields",
   "[",
   "0",
   "]",
   ",",
   "fields",
   "[",
   "1",
   "]",
   ")",
   ",",
   "&",
   "num",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "||",
   "count",
   "!=",
   "1",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "num",
   ">=",
   "max",
   "{",
   "max",
   "=",
   "num",
   "+",
   "1",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "max",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-146",
  "nl_tokens": [
   "Insert",
   "adds",
   "a",
   "node",
   "with",
   "the",
   "given",
   "interval",
   "into",
   "the",
   "tree",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "ivt",
   "*",
   "IntervalTree",
   ")",
   "Insert",
   "(",
   "ivl",
   "Interval",
   ",",
   "val",
   "interface",
   "{",
   "}",
   ")",
   "{",
   "var",
   "y",
   "*",
   "intervalNode",
   "\n",
   "z",
   ":=",
   "&",
   "intervalNode",
   "{",
   "iv",
   ":",
   "IntervalValue",
   "{",
   "ivl",
   ",",
   "val",
   "}",
   ",",
   "<mask>",
   ":",
   "ivl",
   ".",
   "End",
   ",",
   "c",
   ":",
   "red",
   "}",
   "\n",
   "x",
   ":=",
   "ivt",
   ".",
   "root",
   "\n",
   "for",
   "x",
   "!=",
   "nil",
   "{",
   "y",
   "=",
   "x",
   "\n",
   "if",
   "z",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "Begin",
   ".",
   "Compare",
   "(",
   "x",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "Begin",
   ")",
   "<",
   "0",
   "{",
   "x",
   "=",
   "x",
   ".",
   "left",
   "\n",
   "}",
   "else",
   "{",
   "x",
   "=",
   "x",
   ".",
   "right",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "z",
   ".",
   "parent",
   "=",
   "y",
   "\n",
   "if",
   "y",
   "==",
   "nil",
   "{",
   "ivt",
   ".",
   "root",
   "=",
   "z",
   "\n",
   "}",
   "else",
   "{",
   "if",
   "z",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "Begin",
   ".",
   "Compare",
   "(",
   "y",
   ".",
   "iv",
   ".",
   "Ivl",
   ".",
   "Begin",
   ")",
   "<",
   "0",
   "{",
   "y",
   ".",
   "left",
   "=",
   "z",
   "\n",
   "}",
   "else",
   "{",
   "y",
   ".",
   "right",
   "=",
   "z",
   "\n",
   "}",
   "\n",
   "y",
   ".",
   "updateMax",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "z",
   ".",
   "c",
   "=",
   "red",
   "\n",
   "ivt",
   ".",
   "insertFixup",
   "(",
   "z",
   ")",
   "\n",
   "ivt",
   ".",
   "count",
   "++",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-147",
  "nl_tokens": [
   "nextEnts",
   "returns",
   "all",
   "the",
   "available",
   "entries",
   "for",
   "execution",
   ".",
   "If",
   "applied",
   "is",
   "smaller",
   "than",
   "the",
   "index",
   "of",
   "snapshot",
   "it",
   "returns",
   "all",
   "committed",
   "entries",
   "after",
   "the",
   "index",
   "of",
   "snapshot",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "l",
   "*",
   "raftLog",
   ")",
   "nextEnts",
   "(",
   ")",
   "(",
   "ents",
   "[",
   "]",
   "pb",
   ".",
   "Entry",
   ")",
   "{",
   "off",
   ":=",
   "<mask>",
   "(",
   "l",
   ".",
   "applied",
   "+",
   "1",
   ",",
   "l",
   ".",
   "firstIndex",
   "(",
   ")",
   ")",
   "\n",
   "if",
   "l",
   ".",
   "committed",
   "+",
   "1",
   ">",
   "off",
   "{",
   "ents",
   ",",
   "err",
   ":=",
   "l",
   ".",
   "slice",
   "(",
   "off",
   ",",
   "l",
   ".",
   "committed",
   "+",
   "1",
   ",",
   "l",
   ".",
   "maxNextEntsSize",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "l",
   ".",
   "logger",
   ".",
   "Panicf",
   "(",
   "\"",
   "\"",
   ",",
   "err",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "ents",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-148",
  "nl_tokens": [
   "best",
   "-",
   "effort",
   "attempt",
   "to",
   "get",
   "an",
   "int",
   "from",
   "crypto",
   "/",
   "rand",
   ".",
   "if",
   "an",
   "error",
   "is",
   "returned",
   "it",
   "will",
   "fall",
   "back",
   "to",
   "math",
   "/",
   "rand",
   "."
  ],
  "pl_tokens": [
   "func",
   "randInt",
   "(",
   "<mask>",
   "int",
   ")",
   "int",
   "{",
   "i",
   ",",
   "err",
   ":=",
   "crypto",
   ".",
   "Int",
   "(",
   "crypto",
   ".",
   "Reader",
   ",",
   "big",
   ".",
   "NewInt",
   "(",
   "int64",
   "(",
   "max",
   ")",
   ")",
   ")",
   "\n",
   "if",
   "err",
   "==",
   "nil",
   "{",
   "return",
   "int",
   "(",
   "i",
   ".",
   "Int64",
   "(",
   ")",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "rand",
   ".",
   "Intn",
   "(",
   "max",
   ")",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-149",
  "nl_tokens": [
   "maybeDecrTo",
   "returns",
   "false",
   "if",
   "the",
   "given",
   "to",
   "index",
   "comes",
   "from",
   "an",
   "out",
   "of",
   "order",
   "message",
   ".",
   "Otherwise",
   "it",
   "decreases",
   "the",
   "progress",
   "next",
   "index",
   "to",
   "min",
   "(",
   "rejected",
   "last",
   ")",
   "and",
   "returns",
   "true",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "pr",
   "*",
   "Progress",
   ")",
   "maybeDecrTo",
   "(",
   "rejected",
   ",",
   "last",
   "uint64",
   ")",
   "bool",
   "{",
   "if",
   "pr",
   ".",
   "State",
   "==",
   "ProgressStateReplicate",
   "{",
   "// the rejection must be stale if the progress has matched and \"rejected\"",
   "// is smaller than \"match\".",
   "if",
   "rejected",
   "<=",
   "pr",
   ".",
   "Match",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n",
   "// directly decrease next to match + 1",
   "pr",
   ".",
   "Next",
   "=",
   "pr",
   ".",
   "Match",
   "+",
   "1",
   "\n",
   "return",
   "true",
   "\n",
   "}",
   "\n\n",
   "// the rejection must be stale if \"rejected\" does not match next - 1",
   "if",
   "pr",
   ".",
   "Next",
   "-",
   "1",
   "!=",
   "rejected",
   "{",
   "return",
   "false",
   "\n",
   "}",
   "\n\n",
   "if",
   "pr",
   ".",
   "Next",
   "=",
   "<mask>",
   "(",
   "rejected",
   ",",
   "last",
   "+",
   "1",
   ")",
   ";",
   "pr",
   ".",
   "Next",
   "<",
   "1",
   "{",
   "pr",
   ".",
   "Next",
   "=",
   "1",
   "\n",
   "}",
   "\n",
   "pr",
   ".",
   "resume",
   "(",
   ")",
   "\n",
   "return",
   "true",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-150",
  "nl_tokens": [
   "setNewLogs",
   "is",
   "used",
   "to",
   "setup",
   "the",
   "logs",
   "which",
   "should",
   "be",
   "appended",
   "for",
   "a",
   "request",
   "."
  ],
  "pl_tokens": [
   "func",
   "(",
   "r",
   "*",
   "Raft",
   ")",
   "setNewLogs",
   "(",
   "req",
   "*",
   "AppendEntriesRequest",
   ",",
   "nextIndex",
   ",",
   "lastIndex",
   "uint64",
   ")",
   "error",
   "{",
   "// Append up to MaxAppendEntries or up to the lastIndex",
   "req",
   ".",
   "Entries",
   "=",
   "make",
   "(",
   "[",
   "]",
   "*",
   "Log",
   ",",
   "0",
   ",",
   "r",
   ".",
   "conf",
   ".",
   "MaxAppendEntries",
   ")",
   "\n",
   "maxIndex",
   ":=",
   "<mask>",
   "(",
   "nextIndex",
   "+",
   "uint64",
   "(",
   "r",
   ".",
   "conf",
   ".",
   "MaxAppendEntries",
   ")",
   "-",
   "1",
   ",",
   "lastIndex",
   ")",
   "\n",
   "for",
   "i",
   ":=",
   "nextIndex",
   ";",
   "i",
   "<=",
   "maxIndex",
   ";",
   "i",
   "++",
   "{",
   "oldLog",
   ":=",
   "new",
   "(",
   "Log",
   ")",
   "\n",
   "if",
   "err",
   ":=",
   "r",
   ".",
   "logs",
   ".",
   "GetLog",
   "(",
   "i",
   ",",
   "oldLog",
   ")",
   ";",
   "err",
   "!=",
   "nil",
   "{",
   "r",
   ".",
   "logger",
   ".",
   "Error",
   "(",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ",",
   "i",
   ",",
   "err",
   ")",
   ")",
   "\n",
   "return",
   "err",
   "\n",
   "}",
   "\n",
   "req",
   ".",
   "Entries",
   "=",
   "append",
   "(",
   "req",
   ".",
   "Entries",
   ",",
   "oldLog",
   ")",
   "\n",
   "}",
   "\n",
   "return",
   "nil",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-151",
  "nl_tokens": [
   "successor",
   "is",
   "the",
   "next",
   "in",
   "-",
   "order",
   "node",
   "in",
   "the",
   "tree"
  ],
  "pl_tokens": [
   "func",
   "(",
   "x",
   "*",
   "intervalNode",
   ")",
   "successor",
   "(",
   ")",
   "*",
   "intervalNode",
   "{",
   "if",
   "x",
   ".",
   "right",
   "!=",
   "nil",
   "{",
   "return",
   "x",
   ".",
   "right",
   ".",
   "<mask>",
   "(",
   ")",
   "\n",
   "}",
   "\n",
   "y",
   ":=",
   "x",
   ".",
   "parent",
   "\n",
   "for",
   "y",
   "!=",
   "nil",
   "&&",
   "x",
   "==",
   "y",
   ".",
   "right",
   "{",
   "x",
   "=",
   "y",
   "\n",
   "y",
   "=",
   "y",
   ".",
   "parent",
   "\n",
   "}",
   "\n",
   "return",
   "y",
   "\n",
   "}"
  ]
 },
 {
  "idx": "maxmin-152",
  "nl_tokens": [
   "StorageVolumeNextSnapshot",
   "returns",
   "the",
   "index",
   "the",
   "next",
   "snapshot",
   "of",
   "the",
   "storage",
   "volume",
   "with",
   "the",
   "given",
   "name",
   "should",
   "have",
   ".",
   "Note",
   "the",
   "code",
   "below",
   "doesn",
   "t",
   "deal",
   "with",
   "snapshots",
   "of",
   "snapshots",
   ".",
   "To",
   "do",
   "that",
   "we",
   "ll",
   "need",
   "to",
   "weed",
   "out",
   "based",
   "on",
   "#",
   "slashes",
   "in",
   "names"
  ],
  "pl_tokens": [
   "func",
   "(",
   "c",
   "*",
   "Cluster",
   ")",
   "StorageVolumeNextSnapshot",
   "(",
   "name",
   "string",
   ",",
   "typ",
   "int",
   ")",
   "int",
   "{",
   "base",
   ":=",
   "name",
   "+",
   "shared",
   ".",
   "SnapshotDelimiter",
   "+",
   "\"",
   "\"",
   "\n",
   "length",
   ":=",
   "len",
   "(",
   "base",
   ")",
   "\n",
   "q",
   ":=",
   "fmt",
   ".",
   "Sprintf",
   "(",
   "\"",
   "\"",
   ")",
   "\n",
   "var",
   "numstr",
   "string",
   "\n",
   "inargs",
   ":=",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "{",
   "typ",
   ",",
   "true",
   ",",
   "length",
   ",",
   "base",
   "}",
   "\n",
   "outfmt",
   ":=",
   "[",
   "]",
   "interface",
   "{",
   "}",
   "{",
   "numstr",
   "}",
   "\n",
   "results",
   ",",
   "err",
   ":=",
   "queryScan",
   "(",
   "c",
   ".",
   "db",
   ",",
   "q",
   ",",
   "inargs",
   ",",
   "outfmt",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "{",
   "return",
   "0",
   "\n",
   "}",
   "\n",
   "<mask>",
   ":=",
   "0",
   "\n\n",
   "for",
   "_",
   ",",
   "r",
   ":=",
   "range",
   "results",
   "{",
   "numstr",
   "=",
   "r",
   "[",
   "0",
   "]",
   ".",
   "(",
   "string",
   ")",
   "\n",
   "if",
   "len",
   "(",
   "numstr",
   ")",
   "<=",
   "length",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "substr",
   ":=",
   "numstr",
   "[",
   "length",
   ":",
   "]",
   "\n",
   "var",
   "num",
   "int",
   "\n",
   "count",
   ",",
   "err",
   ":=",
   "fmt",
   ".",
   "Sscanf",
   "(",
   "substr",
   ",",
   "\"",
   "\"",
   ",",
   "&",
   "num",
   ")",
   "\n",
   "if",
   "err",
   "!=",
   "nil",
   "||",
   "count",
   "!=",
   "1",
   "{",
   "continue",
   "\n",
   "}",
   "\n",
   "if",
   "num",
   ">=",
   "max",
   "{",
   "max",
   "=",
   "num",
   "+",
   "1",
   "\n",
   "}",
   "\n",
   "}",
   "\n\n",
   "return",
   "max",
   "\n",
   "}"
  ]
 }
]